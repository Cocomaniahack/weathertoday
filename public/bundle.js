(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
var $ = require('jquery');
window.jQuery = $;
var config = require('./config')
var template = require('./template')
var data  = require('./city.js')
var Storage = require('./storage.js')
var weatherCity = require('./weather.js') 
var buttons = require('./public/button.js')
var footer = require('./footer');



$(function() {
  var availableTags = data   
  $(".autoc").autocomplete({
    maxResults: 10,
    minLength:3,
    source: availableTags
  });
});



$(document).ready(function(){
  buttons.update()
  buttons.change()
});





dataLocation()



$( "#target" ).on('submit', function( event ) {
  
    event.preventDefault(); 
    var dato = jQuery( "input:first" ).val()
    console.log('cant '+dato.length)


    if(dato.length < 3){


    }else{



        $('#spiner').removeClass('hide')
        var tipo = "2"
        Storage(dato,tipo)
        weatherCity(dato)
        jQuery( "input:first" ).val('')

        $('html, body').animate({
                scrollTop: $(".bd-footer").offset().top
             }, 2000);

    }

    
});




function dataLocation(){


   if(localStorage.key(0)){

     console.log('por localStorage')
     var latitude  = localStorage.getItem('latitude')
     var longitude = localStorage.getItem('longitude')
     var t = {coords: {'latitude': latitude, 'longitude': longitude  }}
     getCurrent(t)
    
  }else{
     console.log('por navigator')
     navigator.geolocation.getCurrentPosition(getCurrent, Error)

  }
}



function getCurrent(dataGeolocation, done){
  
  var API_KEY = config.aws.accessKey

  var API_WEATHER_URL = "http://api.openweathermap.org/data/2.5/weather?APPID="+API_KEY+"&";

  if(!localStorage.key(0)){
    
    tipo = '1'
    Storage(dataGeolocation, tipo)
  }


  var lat = dataGeolocation.coords.latitude
  var lon = dataGeolocation.coords.longitude

  $.getJSON(API_WEATHER_URL + "lat=" + lat + "&lon=" + lon,  function getCurrentWeather(response){
    // console.log(response)
     $('#spiner').addClass('hide')
     jQuery('#main-weather').html('<row>'+
                                  '<div class="col-xs-11 col-sm-11 col-md-11"><h2 style="padding-left: 15px;">'+response.sys.country+'. '+response.name+' </h2></div>'+
                                  '</row>'+
                                  '<div class="col-xs-1 col-sm-1 col-md-1" style="margin-top: 15px"><i class="fa fa-2x fa-refresh update-co" aria-hidden="true"></i></div>'+
                                  '<div id="'+response.id+'">'+template(response)+'</div>')
                                    
    
     tipo = '3'
    // buttons()
     Storage(null, tipo)
     myStopFunction()
    

  })

}

function error(err){

   console.log('Error '+err)

}

 var i = 0
 var myVar =  setInterval(function(){ 
       if(i ++ > 15 ){

        alert('An error ocurred, please try again later.')
        myStopFunction()
       }
     },1000)
   function myStopFunction() {
         clearInterval(myVar)
    }






},{"./city.js":3,"./config":4,"./footer":5,"./public/button.js":28,"./storage.js":29,"./template":30,"./weather.js":33,"jquery":26}],2:[function(require,module,exports){
"use strict"

module.exports = function bt(){


 $('.fare').on('click', function(){

              console.log('click a Fahrenheit')
               jQuery(this).addClass('point')
               $(this).prev().removeClass('point')
               $(this).closest('.ChangeTemp').next().addClass('hide')
               $(this).closest('.ChangeTemp').nextAll('.tempsF').removeClass('hide')
                 
              $(this).closest('.ChangeTemp').prev().find('.Fahrenheit').removeClass('hide')
               $(this).closest('.ChangeTemp').prev().find('.centígrados').addClass('hide')
                 
            })

 $('.Celci').on('click', function(){
             jQuery(this).addClass('point')
             $(this).next().removeClass('point')
             $(this).closest('.ChangeTemp').next().removeClass('hide')
             $(this).closest('.ChangeTemp').nextAll('.tempsF').addClass('hide')

             $(this).closest('.ChangeTemp').prev().find('.centígrados').removeClass('hide')
             $(this).closest('.ChangeTemp').prev().find('.Fahrenheit').addClass('hide')
   
          })
  


}
},{}],3:[function(require,module,exports){


var data = ["China","Guangzhou","Fuzhou","Beijing","Baotou","Hohhot","Guiyang","Yinchuan","Nanjing","Changzhou","Chuzhou","Hefei","Jinan","Qingdao","Harbin","Zhaodong","Taiyuan","Xi'an","Xianyang","Shenzhen","Nanning","Zhengzhou","Xinxiang","Luohe","Luoyang","Chaoyang","Xingyi","Foshan","Haikou","Chengdu","Dongguan","Mingzhou","Chongqing","Zhuhai","Kunming","Wuhan","Xiling","Huizhou","Jiangmen","Shantou","Changxiacun","Zhongshan","Lhasa","Nanchang","Tianjin","Shanghai","Hebei","Shijiazhuang","Quanzhou","Putian","Xiamen","Chengyang","Zhangzhou","Sanming","Nanping","Baoding","Langfang","Yantai","Binzhou","Lanzhou","Yueqing","Zhongxin","Zhoushan","Hangzhou","Ningbo","Wenzhou","Changchun","Fuyang","Jieshou","Anqing","Wuhu","Shishi","Shishi","Weitang","Shenyang","Changsha","Yongjiawan","Lengshuijiang","Shijiazhuang","Xuchang","Suzhou","Xuzhou","Taizhou","Nanyang","Xinhua","ÃœrÃ¼mqi","Yan'an Beilu","Baotao","Macao","Wuxi","Yangzhou","Baiyin","Tongren","Kunshan","Zhangjiagang","Jiangyin","Zhenjiang","Zhoukou","Anyang","Dalian","Tongcun","Shihezi","Xining","Zhangye","Qingyang","Wangsu","Anshun","Kaili","Bijie","Shuigang","Jianyuan","Jinlong","Jingdezhen","Yichang","Xiangfan","Jiayuan","Shashi","Yingjie","Huangshi","Jinhua","Zhengyuan","Langli","Hengyang","Jianning","Xiangtan","Rongxing","Xincao","Jinda","Nanlong","Xiangcheng","Nanma","Zhongxiang","Pudong","Shuitou","Zhenxing","Jinjiang","Longxun","Guanqiao","Jingfeng","Shijing","Tangbian","Jiangchuanlu","Jiaoyun","Guizhoumanzuxiang","Qingzhen","Changde","Xianning","Jiaozhou","Weifang","Tai'an","Luoxi","Guoji","Guangdong","Sijiqing","Huzhou","Panjin Shi","Daqing","Jilin City","Lianyungang","Yancheng","Yuehu","Kunshan","Taicang","Lianshui","Nantong","Jiaotong","Changshu City","Xingxiangcun","Jinsha","Jiangyan","Chaigoubu","Ma'anshan","Huainan","Haibei","Shenlong","Nangxian","Rongsheng","Changfeng","Chengqiao","Jiafu","Shenzhou","Shantou","Qingyuan","Gyari","Xinshijie","Zhaoqing","Zhanjiang","Kuicheng","Taoyuan","Jincheng","Caishen","Shiyan","Liaoyang","Xingtai","Wenchang","Wanning","Qionghai","Huilongba","Dingcheng","Baodian","Wuzhishan","Chengmai","Yinggen","Ledong","Lincheng","Baisha","Changjiang","Dongfang","Changjian","Jinmao","Yangpu","Baipo","Jiefang","Danzhou","Lingshui","Haidian","Sanya","Rongjiang","Longyan","Jinghe","Zhangjiakou","Renqiu","Yaocheng","Kaifeng","Hebi","Jiaozuo","Pingdingshan","Anshan","Dandong","Haitang","Tongchuan","Ankang","Guozhen","Shangluo","Xijing","Weinan","Yulin","Yining","Dingxi","Wuwei","Dawukou","Lishui","Quzhou","Hejiang","Handan","Qinhuangdao","Hengshui","Longxin","Wen'an","Yichun","Heihe","Jiaxing","Korla","Kuytun","Di'an","Yu'an","Mengzhou","Hulu","Yizhou","Shuliang","Shancheng","Fushun","Dashiqiao","Laonian","Shengli","Wenquan","Zhiye","Lingzhi","Zhongtang","Gucheng","Xinhua","Ninghe","Dangyang","Yizhong","Jizhou","Tianbao","Jinghai","Julong","Jiaqin","Jiayue","Dabaizhuang","Juchuan","Hexi","Jinnan","Hangu","Nankai","Hedong","Yanglou","Huawei","Hanting","Tianshi","Baiyu","Bohai","Rujia","Tongwang","Meijiang","Dagang","Baodi","Daqiuzhuang","Yuxi","Zicheng","Shaoxing","Zhoushan","Xiaoshan","Linhai","Cixi","Jinchuan","Zhaobaoshan","Tiangang","Beilun","Zhangqi","Zhenghai","Cicheng","Lishu","Chengbei","Heyi","Xikou","Jiangkou","Shunshui","Simen","Yuyao","Lanjiang","Jiangdong","Gaotang","Xiangshan","Shipu","Jinyi","Chengzhong","Yinzhou","Luoyang","Mapai","Cangnan","Jinxiangzhen","Yingjia","Pingyang","Rui'an","Tianfu","Shangtang","Yongjia","Tiancheng","Hongqiao","Furong","Wenxing","Mingxi","Jinshan","Changtu","Anzi","Xianren","Zhongxing","Guanli","Yucai","Xianjiang","Aojiang","Dongtou","Rongjiang","Jinmen","Qiantang","Baojiang","Huling","Liushi","Yuecheng","Hongyun","Longhua","Yajin","Simcun","Longgang","Yingdu","Wansong","Yuele","Nanjiang","Longhu","Ningyi","Fengling","Wuzhou","Xinchen","Jinghu","Fangzhuang","Yinfang","Cili","Angu","Feiyun","Wanquan","Kunyang","Shibei","Jiangnan","Yujing","Yishan","Xuefeng","Feilong","Shangrao","Xuexiao","Yuzhen","Huangbao","Longquan","Pizhou","Songyang","Qingtian","Chenguang","Kaiyuan","Dongsheng","Jinyun","Zhongshan","Miaogao","Yuanli","Shinian","Qingfeng Chengguanzhen","Liu`an","Yulong","Haixing","Sanjiaocheng","Pinghu","Jinling","Fengming","Tongxiang","Puyuan","Dingqiao","Yanjiang","Wutong","Pingchuan","Dushu","Nanxun","Wuxing","Yangzhou","Hongyuan","Anji","Shangying","Deqing","Digang","Sanguan","Yuantong","Changxin","Huating","Putuoshan","Jinyuan","Dinghai","Xiangnan","Putuo","Xintian","Donghuxu","Zhuji","Jingcheng","Jiangtian","Xingchang","Jindou","Xinchang","Baiyun","Qianqing","Tianchang","Tianchi","Luzhou","Qinjiang","Tianzhu","Chengguan","Jinhong","Huaqiao","Maotai","Hezhu","Dahai","Shanhu","Changle","Guoshang","Dongshen","Shangbu","Zhedong","Boxing","Tianyuan","Guodian","Linping","Meicheng","Jiyang","Tonglu","Fuchunjiang","Qiandaohu","Yuhang","Changsheng","Honglin","Xiaoheshan","Binjiang","Yijin","Xunxian","Qianshan","Zhongzhou","Chongxian","Gongchang","Huangyan","Jiaojiang","Wenling","Xindu","Sili","Luqiao","Baoshan","Yanjing","Jinqingzhen","Gamlung","Yiwu","Dongyang","Yongkang","Lanxi","Wuyi","Wanjia","Fotang","Yuhai","Yiting","Puyang","Longfeng","Yueliangwan","Renhe","Yangfen","Youjia","Hanshang","Jindu","Junping","Aoma","Yinliang","Lijing","Renhou","Wangshang","Pan'an","Longchuan","Hengzhou","Lianyuan","Jinlun","Qiaodou","Shizhu","Huajie","Xixi","Hengdian","Dongcheng","Dongdu","Fusheng","Yongjin","Youyi","Yuchi","Haiyang","Tashi","Jiya","Zhangqiu","Shangdong","Zoucheng","Jining","Linyi","Feixian","Yishui","Zaozhuang","Zibo","Laiwu","Jiyang","Yayu","Zhenzhuquan","Changzhi","Changping","Daxing","Fuling","Xiangyuan","Shiji","Changshan","Shangzhou","Kaihua","Jiangshan","Longzhou","Citai","Jinyang","Yanhai","Xintai","Yinjiang","Guxiang","Yindian","Yiwu","Qujiang","Juhua","Zhicheng","Ningde","Meizhou","Shaowu","Zhanghou","Nan'an Qu","Xuexi","Hanjiang","Huaihe","Bengbu","Dangshan","Shecheng","Huangshan","Huaibei","Suixi","Tongling","Xuancheng","Huoshan","Chizhou","Bozhou","Boshan","Weihai","Quanzhou","Qi'ao","Lingcheng","Xinhuang","Gaiyu","Hanzhong","Yan'an","Fugu","Longnan","Xiushui","Puyang","Xiaogan","Qiqihar","Lung","Sichuan","Leshan","Bazhou","Mianyang","Meishan","Suining","Youshi","Baoxing","Rongshan","Tangtou","Nanhai","Nanzhuang","Danzao","Chaozhou","Nanfang","Jinli","Heping","Lantang","Lianping","Puning","Puning","Jiexi","Huicheng","Fengshun","Pingyuan","Shaoguan","Jiangwan","Licheng","Xindi","Xiangxi","Luohu","Renmin","Dawang","Luofang","Liannan","Jieyang","Xunyi Chengguanzhen","Shunde","Yangjiang","Nanzhao","Chaohu","Zijin","Heyuan","Gaozhou","Maoming","Gaoji","Suqian","Sha'an","Xiaojiang","Ruili","Tangxia","Baixiang","Huangdu","Daishan","Daidong","Daju","Maoba","Qushan","Caiyuan","Zhang'ancun","Cezi","Zhanmao","Luomen","Luhua","Huanghua","Baixin","Ximeng","Suzhuang","Jiguang","Zhenhua","Jingning Chengguanzhen","Jinhe","Lake","Huafeng","Haijing","Ninghai","Xianrenqiao","Junpu","Nanxi","Dongli","Zhili","Yalan","Sanmen","Tiantai Chengguanzhen","Yuhuan","Qingma","Gucheng","Puqing","Shashan","Donghai","Xiasha","Beichan","Wanbao","Shangye","Penglai","Gaoting","Fudao","Daixi","Pengshan","Shilou","Xinjian","Panxi","Xiandu","Qingquan","Huimin","Zhapu","Maodun","Qiaoting","Ziyang","Qingshan","Guangming","Fangxian Chengguanzhen","Gushi","Huzhen","Shuhong","Wuyang","Hushan","Deyang","Neijiang","Nanchong","Yucheng","Dazhou","Xichang","Taoshan","Xiabancheng","Dazu","Gunan","Heliang","Futian","Liangping","Daotou","Wuxia","Wushan","Houxiangcheng","Xihu","Lushang","Xiaogang","Weibo","Daqiao","Yinxin","Kangda","Andong","Guancheng","Moushan","Qitai","Jinghua","Huayuan","Hongtang","Qiaoxia","Shangwu","Shengping","Jinhu","Shangwang","Taoshan","Baotian","Hai'an","Xinqiao","Yongqiang","Mayu","Wenhou","Tengjiao","Xiaozheng","Meiyu","Yingqian","Shangma","Qiaozhen","Hongshun","Ruifeng","Xianqiao","Dungdo","Gushan","Changqing","Oujiang","Baoyu","Guantian","Caozhai","Xiaoshun","Tongbai","Lijiang","Yuxi","Chengjian","Chuxiong","Lanping","Zhaotong","Gejiu","Yisa","Simao","Jingdong","Wenshang","Wenshan","Dali","Qujing","Xinning","Dujiacun","Yanta","Tianhai","Zhixing","Henghe","Ruixing","Meixi","Gongli","Tongyu","Sanjiang","Tingpang","Sanyou","Aizhou","Jundu","Dipu","Shuangtang","Taimen","Jiaotou","Xiazhi","Zhujiajian","Taohua","Liuheng","Mingdu","Shenjiamen","Longshan","Dengbu","Xiushan","Daizhong","Longteng","Beiyuan","Taili","Choucheng","Lucheng","Chengxiang","Dongying","Gangcun","Sailing","Shifan","Yaohua","Jingyuan","Fengtai","Gaocheng","Gu'an","Shuangshipu","Li'ao","Xi'ao","Tang Xian","Tara","Li'an","Hu'an","Datang","Tumu","Shuyi","Gaoxin","Boâ€™ao","Baocheng","Haifu","Xiuying","Xuanzhou","Gongjiang","Huayuji","Qu'an","Fuhao","Weiyang","Laohekou","Nanshan","Chen Xian","Siting","Wuhou","Jiâ€™an","Fuxin","Xiqu","Wangluo","Erqi","Donghong","Gaobeidian","Lianhua","Chenzhou","Dajie","Chenghua","Dongfeng","Zhu'ang","Maji","Songling","Chum","Cenyang","Hanshan","Xiaomi","Luohu","Hainan","Guangxi","Changle","Linfen","Yuanping","Jiazhuang","Heibei","Liaocheng","Huaihua","Rizhao","Fuzhou","Duyun","Tianshui","Guli","Jinhai","Chaoyang","Taixing","Fengxiang","Jinpan","Yizheng","Yunfu","Xinhui","Wenlan","Tieli","Taihe","Liuzhou","Hechi","Yunyang","Zhuxi Chengguanzhen","Heze","Shiqiaopu","Jiangbei","Shanzhuang","Danyang","Huai'an","Yantan","Guangchang","Xiguan","Xigu","Anying","Xiangtong","Guixi","Xidian","Pingliang","Pinghu","Changhe","Yangshan","Suji","Baizhang","Shuangxi","Yanming","Yiqiao","Xinxing","Dabao","Sanyuanpu","Gaobu","Linghu","Qingtong","Shuanglin","Dampu","Qi'an","Gouzhuang","Changsheng","Qianyu","Datong","Sandu","Anjiang","Huangjue","Name","Linqi","Zhanghe","Zheshang","Huadian","Kangcun","Zhangshan","Shouchang","Qiantan","Hongpan","Lin'an","Dingzhou","Jiuzong","Yuting","Guali","Jianci","Kaiyun","Chunhua","Hongwei","Shuguang","Diankou","Lidong","Fengqing","Fengqiao","Fengqi","Rongle","Huangzhai","Wuning","Yahao","Jifeng","Ancheng","Shangfang","Jiahu","Jinpu","Potang","Shangjiang","Xingqiao","Doujiang","Nyingchi County","Yangxunqiao","Tongmin","Lianghu","Sundun","Santiaolou","Guilin","Guigang","Qinzhou","Laibin","Shenwan","Zhenzhou","Zhongdian","Yidong","Minhang","Longmao","Linjiang","Taiping","Mingde","Xingchen","Jiading","Zhujiajiao","Zhima","Zhongnan","Tongji","Xinzha","Enshi","Taxi","Zhengda","Xuhui","Xiangru","Longjin","Changzhong","Ejia","Huadong","Donghe","Dazhong","Taipingyan","Jintan","Licheng","Miyun","Lingcheng","Jingmen","Kashgar","Tianzhen","Huquan","Wuling","Chengdong","Xinrong","Yungang","Pingwang","Niunaichang","Shouyang","Xiyang","Heshun","Liaoyang","Jicheng","Nandu","Jiexiu","Zhaoyu","Pingyao County","Mingxing","Lingshi","Linjiang","Gaoping","Bagong","Chongwen","Gongyi","Fangshan","Dongcun","Xingxian","Zhongyang","Jiaokou","Liulin","Linzhou","Fenyang","Fengcheng","Xiezhou","Hejin","Pinglu","Ruicheng","Xiedian","Wenxi","Yaofeng","Kouqian","Wutai","Yangquan","Xiaoqu","Yijing","Xinghua","Haozhuang","Loufan","Yangqu","Gujiao","Qingyuan","Luzhou","Laiyi","Jiamusi","Qinghai","Tongliao","Sanhe","Tangdukou","Wu'an","Xianlin","Jingzhong","Baishan","Qingnian","Yintian","Huangshi","Huludao","Fenggang","Sui'an","Putian","Shima","Jiangyou","Yangling","Xinjiang","Zhumadian","Meizhou","Pingxiang","Suzhou","Xucheng","Linbei","Jiedong","Hangong","Jiehe","Ansu","Huge","Gujiang","Lin'e","Mingzhu","Youjiang","Tianli","Baise City","Longlin","Jingxi","Napo","Tianyang","Tiandong","Tieshan","Beihai","Qianling","Guang'an","Yibin","Lincang","Zunyi","Zhongxiang","Yanjiao","Yanji","Qike","Nenjiang","Huanggang","Hupi","Xinyang","Minjiang","Sanmao","Yanchang","Jiahe Chengguanzhen","Baile","Xibu","Doumen","Huangze","Keqiao","Linnan","Xingwang","Liangzhu","Yunting","Meiyuan","Lishang","Shangsi","Lida","Jiangnan","Xingguang","Jingdu","Nanyuan","Shuozhou","Xieqiao","Chang'an","Xucun","Zhouwangmiao","Youchegang","Chengdong","Donglin","Weitang","Fengnan","Lize","Xitang","Xiadianmiao","Dashun","Ganyao","Fanjing","Huimin","Yaozhuang","Taozhuang","Yifu","Yuhui","Tianning","Yangmiao","Hongxi","Dayun","Dingzha","Sizhou","Yucheng","Gaozhao","Xinao","Lanhai","Jinde","Ruiting","Anke","Haizhou","Guangtai","Jielong","Hualong","Huayang","Xiashi","Ziyu","Jinlu","Tianhong","Mingjia","Jingtian","Yunling","Xiangsheng","Cengang","Dongchang","Yungcun","Zhongtian","Longhua","Jiadi","Haicheng","Fengshang","Huangxuan","Hexun","Baziqiang","Baiyi","Yuehua","Fengjiang","Zhiyuan","Jinma","Chengfeng","Anzhou","Shangzhang","Aishang","Huangjia","Oucheng","Wangfu","Pengyu","Zhengjiang","Guangtong","Dengzhou","Dehui","Yinhai","Libang","Anbang","Jinwo","Weidun","Shi'er","Lincheng","Yuanheng","Defeng","Jielong","Tianma","Guangyuan","Caiyuan","Suxi","Yuyuan","Yongchuan","Mingjing","Zhongqiao","Xiangyi","Shuangcheng","Deyuan","Maodian","Bangke","Jinding","Yifeng","Jianyang","Shengdu","Lingdong","Shu'an","Boli","Yutou","Xiakou","Qinghu","Tanshi","Fenglin","Siduxu","Dachen","Bao'an","Xiangjiang","Bole","Qingxin","Longtai","Cuntou","Majin","Xintangbian","Hecun","Kecheng","Jiangwang","Xiaosi","Qingshuiwan","Zhonggongmiao","Jinshadi","Chunjiang","Baidu","Fangqiao","Dongxin","Qijiashan","Yuanyang","Zhouxiang","Shengshan","Xingfeng","Jiuba","Lianshan","Xinzhou","Banxi","Dayan","Daxie","Xizhou","Dancheng","Shiqi","Kandun","Kuangyan","Lingxi","Baishi","Feihong","Yangda","Jiahao","Daxing","Huatan","Fuyang","Xushan","Kang Xian","Qiaoyuan","Zhongyin","Yuetai","Qingtian","Kuishan","Mudanjiang","XigazÃª","Shangnan","Chamdo","Nagqu","Dawa","Baoluo","Shanghu","Yanggu","Kumul","Turpan Diqu","Yili","Bole","Aksu","Hetian","Bamao","Jimo","Beijie","Jindi","Zhizhong","Zhongwei","Wuzhong","Guyuan","Chendu","Xiangfeng","Bailicun","Huazhou","Ruihu","Qiaolian","Huiyang","Hechi","Shennan","Shuangqiao","Shangqiu","Sanmenxia","Xiantao","Jingzhou","Ezhou","Jinzhou","Suihua","Danjiang","Santai","Taiping","Yongzhou","Taocheng","Sanpailou","Yangzhong","Yicheng","Fengxian","Yuhuayuan","Jing'an","Zhengdi","Haihong","Luwan","Huashan","Zhongtu","Dongxi","Dongcheng","Lidu","Shanrui","Yuanpu","Huajiashan","Tianyi","Tianchang","Beiying","Nanhan","Jinci","Chaicun","Huagong","Dahuaishu","Huozhou","Xincheng","Yicheng","Changning","Qingyang","Pucheng","Kouquan","Beixiao","Yuanqu","Yuncheng","Siyang","Benxi","Wuzhen","Tieling","Langzhong","Yuzi","Jishu","Nanda","Huamei","Yanta","Tangxi","Huaxing","Tancheng","Xiazhuang","Liu'an","Liucheng","Guigang","Bobai","Yongning","Hezhou","Hecheng","Zhongzhou","Jinyin","Niulanshan","Huairou","Qiandao","Huangyuan Chengguanzhen","Xishan","Beiyuan","Beixi","Xingcheng","Zhongyuan","Pingyi","Shijingxiang","Guili","Huai'an","Shenyan","Dianzi","Lintong","Hebei","Huangdao","Baotou","Hailar","Fendou","Edong","Xingye","Hezuo","Yingchuan","Zhangshu","Nanjin","Qiongshan","Jiaying","Mengzi","Panzhihua","Zigong","Danjiangkou","Anda","Hulan","Hekou","Xuanwu","Shengfang","Huabei","Huangzhou","Zhangjiagang","Wanxi","Cangzhou","Zhengding","Luocheng","Yunnan","Baliqiao","Jiaxin","Shangxi","Xiuyu","Chengxiang","Xianyou","Guyong","Qidu","Shuangcheng","Xiapu","Fuding","Ping'an","Jin Jiang","Luqiao","Anxi","Longmen","Hongshan","Taoxi","Changting","Lianjiang","Yanshi","Dayang","Dongxiao","Xinmin","Zhangjiajie","Side","Liaoyuan","Dongliu","Shifang","Caoxi","Xin'an","Longdong","Shangbao","Gaoqiao","Hongyangshu","Lugouqiao","Tianshan","Jinqiao","Yongjiu","Huaxia","Xingyuan","Kunlun","Shangzhi","Keshan","Tailai","Longjiang","Gannan","Hailin","Dongning","Muling","Linkou","Ning'an","Pengcheng","Tangyuan","Huanan","Daqing","Qinggang","Mishan","Huixin","Shuangyashan","Baoqing","Hegang","Mingshui","Beishan","Liuhe","Jinshi","Xinyi","Fengzhou","Chengnan","Renrong","Heyuan","Longgong","Shancheng","Buxin","Jingbei","Bibo","Jintian","Huali","Luoling","Cuiyuan","Beidou","Cuizhu","Cuibei","Shuitian","Shuiku","Sungang","Liyuan","Caopu","Yuanling","Hongling","Baihua","Huaxin","Guiyuan","Binhe","Nanhu","Xingang","Shangbu","Tongyuan","Fumin","Shixia","Xinsha","Shangsha","Zhongfu","Yitian","Fuqiang","Jinglong","Huaqiang","Meilian","Jinglian","Shiling","Meilin","Yaoluoping","Sanjiu","Zhuxiang","Zhulin","Zhuyuan","Yunfeng","Shizheng","Jinzhong","Shuiwu","Zongxoi","Dianzhong","Shizhong","Dezhou","Baiyashi","Minzhu","Xiping","Danfeng","Ganzhou","Yangcun","Minzu","Junlin","Xinguang","Jinxing","Ganjiang","Liudao","Shamen","Huanzhen","Shuanglong","Wenlin","Biyang","Nantang","Lecheng","Yandang","Xin'anjiang","Huanghu","Jiuguan","Deyue","Yingtai","Chengxi","Luobu","Houzhai","Eshan","Huayue","Xiyue","Nanmen","Fenshang","Jishou","Xiatangyunxiang","Yalongwan","Yangce","Longxing","Liujian","Tangchang","Gaiwei","Xinyou","Bantou","Daji","Duwei","Jiaowei","Chenyang","Bangtou","Fengshan","Baitang","Sanjiangkou","Lihou","Fengting","Fengcheng","Rongjin","Luoyuan","Minjie","Tangcheng","Jinying","Su'ao","Tancheng","Changzheng","Shule","Qianjiang","Xinzheng","Daye","Jiaoyuan","Jiangjin Qu","Du'an","Tengzhou","Karamay","Wuyishan","Shejiazhuang","Shaoguang","Jinbi","Shanwei","Jingshan","Zhancheng","Anbu","Huigang","Tianle","Xibei","Beilin","Lingnga","Jixi","Caijing","Boji","Baicheng","Wuhai","Niaojiang","Taishan","Yuzhong Chengguanzhen","Dachuan","Zhongfang","Nanning","Haocheng","Goushan","Lujiazhi","Fuchun","Jiangjia","Yangqitan","Mingzhou","Daoxu","Jielong","Qianjin","Changchao","Hengjie","Mayao","Sanzhang","Jinming","Lianshi","Sanlian","Hualin","Zhenxi","Yuxiang","Hechun","Ruiying","Xianchang","Zhongji","Fanzhong","Longxiang","Yanguan","Zhijiang","Yiyang","Huazhong","Yinshan","Cangshang","Banyou","Jindian","Mawei","Anqiu","Shouguang","Linqu","Kuiju","Dingtao","Xiaoxi","Luozhuang","Xuezhuang","Mengyin","Mengshan","Zhangzhuang","Yin'an","Bianzhuang","Zhangzhai","Jiangguantun","Linqing","Dong'e","Chiping","Nanguo","Baying","Linxia Chengguanzhen","Luorong","Liujiang","Daojiang","Liudong","Jinguang","Anhu","Lingang","Jiaoyu","Zuxi","Xiangsi","Jianzhong","Jinzao","Nan'an","Xizhang","Jondag","Xiaojiahe","Yandao","Chadianzi","Zhongyicun","Jialing","Jianxing","Xichong","Sanyi","Hongyan","Base","Yongxing","Nanhe","Naxi Yaozuxiang","Dongxing","Rongxian","Nanying","Huaying","Huagongchang","Gongjiao","Huanghou","Zhongjian","Xingxing","Shanhe","Liwu","Shanshui","Shizhu'an","Anguo","Yanjiao","Linze","Duoba","Yingcai","Hongchang","Jingjiang","Taikang","Zhaozhou","Lindian","Zhonglin","Pingyin","Nanxianglong","Chengxian Chengguanzhen","Yuhong","Yuhan","Xiayuan","Dongjiaying","Songyuan","Dasha","Guohe","Yuanchang","Hangbu","Zhangjiang","Longjian","Zaoyang","Shensha","Xijiao","Xijiao","Chuansha","Gongyuan","Fendou","Dongshi","Nongkeng","Huacheng","Qingzhou","Fangzi","Taishan","Haiyu","Shouchun","Wuhai","Chifeng","Hetao","Shekou","Qianhai","Lu'an","Yancheng","Jinghong","Ning'er","Zhuozhou","Luquan","Li'an","Suqian","Dabu","Luoyang","Feiyun"
,"Japan","Tokyo","Hiroshima","Saitama","Nihon'odori","Ibaraki","Urayasu","Suita","Funabashi","Nagareyama","Ichikawa","Isesaki","Koga","Ichihara","Koshigaya","Shibukawa","Aoicho","Yamakita","Gotemba","Nisshin","Nishinomiya","Den'en-chofu","Kawasaki","Toyama-shi","Moriguchi","Chita","Sano","Nagoya-shi","Kyoto","Hamamatsu","Shimotoda","HachiÅji","Tsuchiura","Wakamatsucho","Yachiyo","Tsukuba","Chiba","Yokohama","Yamanashi","Ashihara","Kawaguchi","Kasukabe","Shizuoka","Kawanishi","Itami","Kobe","Nara","Yao","Osaka","Handa","Yakuin-Horibata","Toyonaka","Honjocho","Kishiwada","Susono","Nagasaki","Setagaya-ku","Zushi","Sugito","Yabasehoncho","Yamaguchi","Kanazawa","Maruyama","Tahara","Obu","Nishio","Ichinomiya","Kasugai","Inazawa","Kariya","Toyohashi","Okazaki","Seto","Konan","Nasa","Odawara","Minamiashigara","Hiratsuka","Kuroiwa","Kagoshima","Yamashitacho","Fukuoka","Kasuga","Kitakyushu","Kurume","Amagasaki","Ochikawa","Kagawa","Fussa","Inzai","Sakai","Iwakura","Kamagaya-shi","Tokorozawa","Machida","Tomakomai","Shiogama","Shimizukoji","Hanawadamachi","Utsunomiya","Sendai","ÅŒtsu","Matsudo","Hino","Sagamihara-shi","Tokushima","Morowa","Sapporo","Numazu","Takajomachi","Mishima","Fujieda","Ashikaga","Matsuyama","Saijo","Okayama","Akita","Minami","Komatsubara","Kameyama","Taiji","Machi","Soka","Niiza","Kawagoe","Shichibancho","ÅŒita","Kumagaya","Ageo","Yorii","Kukichuo","Fujimino","Yashio-shi","Wakayama","Hita","Kashiwa","Fuchu-machi","Yasu-shi","Shiraoka","Hamura","Hitachi","Shinshuku","Shinsuka","Ogaki","Anjo","Bandaicho","Hanabatacho","Sakurakabu","Obihiro","Bakurocho","Machi","Shirayamamachi","Hakui","Shiojiri","Ueda, Nagano","Yokotemachi","Toyohira-ku","Kakegawa","Noda","Yotsukaido","Abiko","Tsurugashima","Gyoda","Yokosuka","Yamatomachi-mitsuai","Niigata","Machi","Chino","Yamagata-shi","Hanamaki","Hashimoto","Uchimaru","Gamagori","Mihama","Higashiosaka","Fujisawa","Koto","Kamirenjaku","Ishioka","Ryugasaki","Toride","Zama","Chigasaki","Kamakura","Kimitsu","Nerima-ku","Nobitome","Sumidacho","Otemachi","Isehara","Hadano","Komae-shi","Asaka","Ushiku","Kodaira","None-mura","Kunitachi","Kokubunji","Miyazaki-shi","Atsugi","Yugawara","Higashimurayama-shi","Kasama","Takahama","Kiyosu","Kanagawa","Sayama","Okegawa","Ebina","Tsubame","Higashiboridori","Ota","Takasaki","Naganohara","Shiki","Mizunami","Nago","Sakuracho","Iida","Moriya","Kami-nagarekawacho","Fukuyama","Aioi","Ashiya","Shibata","Fukayacho","Kanie","Yoshikawa","Tatebayashi","Nakagawa","Edogawa-ku","Toyokawa","Mizuko","Tajimi","Nabari","Miyakonojo","Shirokane","Shibadaimon","Shimizumachi","Fuji","Fujinomiya","Yaizu","Shimoda","Shimada","Fukuroi","Makinohara","Matsuyama","Koganei","Musashino","Fujimi","Wako","Miura","Ayase","Ishinomaki","Otawara","Takatsuki","Nishikicho","Tochigi","Hirakata","Kiryu","Nakatsugawa","Takayama","Beppu","Tendo","Noshiro","Sakado","Kazo","Kitahiroshima","Choshi","Iizuka","Suzuka","Hekinan","Usa","Okinawa","Urasoe","Naha","Chichibu","Asahi","Kita-sannomaru","Hirokawa","Ishigaki","Higashine","Tsuruoka","Asahikawa","Minatomachi","Sannohe","Tottori-shi","Higashiasahimachi","Iwata","Koriyama","Hanno","Takarazuka","Kuwana-shi","Kakogawa","Komaki","Mitake","Tondabayashi","Matsumoto","Kakamigahara","Onomichi","Kure","Maebaru","Tokai","Tosu","Kumamoto","Tobata","Saga-shi","Tamana","Iwamizawa","Narashino-shi","Nakanoshima","Himeji","Kashiwara","Sandacho","Uji","Ikeda","Sasayama","Koka","Hino","Izumi","Matsubara","Kashihara","Iwade","Neyagawa","Kadoma","Tsuruga","Kasumigaura","Nagaoka","Toyota","Fukui-shi","ItÅ","Obanazawa","Masaki","Iwaki","Higashiyama","Waseda","Takaoka","Namerikawa","Narita","Ishikawa","Annaka","Ureshino","Tsushima","Tokoname","Midori","Kitakami","Bibai","Kaigandori","Hitoyoshi","Yamaga","Saku","Minato","Masuda","Honjo","Yokkaichi","Ebisu","Tainoura","Mine","Hatsukaichi","Mino","Akashi","Kasai","Miyazu","Maizuru","Nishiwaki","Sumoto","Yawata","Miki","Ono","Toyooka","Maibara","Ikoma","Hyogo","Taga","Kainan","Kaizuka","Hannan","Sennan","Fukuchiyama","Tatsunocho-tominaga","Shuchi","Tama","Oyama","NikkÅ","Sakura","Hakodate","Kushiro","Katori-shi","Kasumicho","Aomori","Kurihashi","Mito-shi","Suginomecho","Naka","Niihama","Ube","Tagajo-shi","Kameoka","Morioka","Kuroishi","Kofu","Nagano-shi","Warabi-shi","Fukushima-shi","Hinode","Omihachiman","Hikone","Muko","Hachiman-cho","Koyama","Musa","Takanawa","Hasuda","Honden","Nomura","Hashimoto","Ohara","Date","Horyuji","Takamatsu","Anabuki","Hachinohe","Misawa","Suwa","Kashiwazaki","Daido","Koyasan","Iwakuni","Kanaya","Tsu","Matsusaka","Misato","Ginowan","Iwanuma","Izu","Kamo","Hirosaki","Nomimachi","Nita","Miyagi","Maebashi","Toyo","Nishi-Tokyo-shi","Yasugicho","Mobara","Tonami","Uozu","Kamigori","Nanao","Yamato-Takada","Osaka","Kan'onjicho","Kobe","Moriyama","Mino","Shiroi","Komoro","Aizu-Wakamatsu","Mibu","Chuo","Kanuma","Futtsu","Jogo","Natori-shi","Gifu","Sasaguri","Imari","Asahimachi","Karatsu","Takeo","Kashima","Shiroishi","Kitsuki","Ichinomotocho","Sawara","Isoya","Tsukubamirai","Ami","Shimonoseki","Kisarazu","Omiya-ku","Tone","Mitsucho-iwami","Hagi","Yonezawa","Nanae","Isahaya","Oizu","Tenri","Gojo","Gujo","Oyamato","Kashiba","Akasaka","Yoshino","Tono","Hatogaya-honcho","Daitocho","Ueno-ebisumachi","Kaizu","Yabu","Yatsushiro","Kokura","Hakata","Kyoritsu","Konosu","Okuura","Sanno","Suigetsu","Makuhari","Noguchi","Hanyu","Omagari","Kurogi","Sasebo","Uenohara","Yashima","Kyowa","Showa","Takedamachi","Sendai","Innoshima Hara-cho","Nakatsu","Nakada","Ichinomiya","Inagi-shi","Aikawa","Koga","Nose","Izumo","Gundo","Hidaka","Shoinmachi-koji","Nada","Nakamura","Akao","Hokuto-shi","Ueno","Ida","Nakano","Takashima","Tanushimarumachi-sugawara","Azumino","Kurashiki","Chiryu","Komatsu","Yamawaki","Otake","Kumano","Wajima","Tsubata","Hachimori","Honcho","Katta","Akeno","Chiran","Matsue-shi","Nagahama","Kosai","Yoshida-kasugacho","Shisui","Agano","Tomo","Tsudanuma","Kaita","Minamata","Hojo","Nakano","Kameoka","Miemachi","Shinmachi","Tobo","Ritto","Ikaruga","Omuta","Yachimata","Ebetsu","Kiyose","Imagami","Komatsu","Kinokawa","Tanabe","Susami","Kushimoto","Koza","Shingu","Sonobe","Kaseda-shirakame","Kokawa","Koyo","Raiba","Tachibana","Minoshima","Gobo","Arita","Minabe","Ise","Anan","Hommachi","Shimotsucho-kominami","Muroto-misakicho","Kochi-shi","Motomiya","Okaya","Inuyama","Inami","Takasagocho-takasemachi","Takaishi","Takashima","Kusatsu","Higashiomi-shi","Sakurai","Nishihara","Ginza","Kojima","Kocho","Roppongi","Kashiwagimachi","Hiranuma","Tajiri","Sarugakucho","Tamatsukuri","Yoshii","Komagome","Sakaidecho","Kokubu-matsuki","Yodogawa","Shimomeguro","Uwayama","Ichinogo","Kinoshita","Kita","Higashiiya-takano","Obayashi","Natsumi","Senju","Takata","Chiji","Daimon","Sumiyoshi","Edagawa","Toranomon","Gotanda","Higashiiya-wakabayashi","Nishi","Meguro","Honcho","Misakicho","Nakahata","Yamatomachi","Shobusawa","Imabari-shi","Ikejiri","Kiyokawa","Komagawa","Okubo","Suda","Omiya","Minato","Nakazawa","Tamagawa","Ichibanhoridoricho","Shibaura","Taniyama-chuo","Fukuda","Minamiaoyama","Yamada","Onna","Hiki","Hodogayacho","Kashima-shi","Minami","Echizen","Kaminoyama","Suzaka","Kodamacho-kodamaminami","Nakaichi","Omachi","Itoi","Ninomiya","Chikusei","Hinata","Gosen","Mooka","Akishima","Arida","Marugame","Nobeoka","Chitose","Ome","Higashiyamato","Akiruno-shi","Toyoake","Sanmu","Heiwajima","Mutsu","Iruma","Takasu","Kamitosa","Kii-nagashimaku-nagashima","Nakama","Kesennuma","Sumiyoshi","Bando","Imizucho","Usuki","Tagawa","Shobara","Yunoshima","Ishikari","Tomiya","Mizugama","Uruma","Kano","Tomioka","Inashiki","Yubari","Yomitan Son","Tobe","Taga","Kanzaki","Mihara","Yahagi","Satte","Hokota","Matsukawamachi","Nonoichi","Kaga","Goshogawara","Obama","Izumiotsu","Otaru","Keta","Tsurumi","Yokoo","Ina","Mitsuke","Nagawado","Akasaka","Miyama","Kurobeshin","Wakasa","Abira","Togane","Mizusawa","Yufutsu","Ichinoseki","Sanjo","Takikawa","Otsuki","Murakami","Sakata","Iwatsuki","Tomisato","Hiyoshi","Shizukuishi","Kudamatsu","Shitama","Uwajima","Kitanagoya","Kani","Haibara-akanedai","Kanzaki","Kikuchi","Nogata","Yukuhashi","Yahata","Sayo","Hayama","Rankoshi-cho","Izunokuni","Harigaya","Kitakata","Gannosu","Wadayama","Hofu","Ibara","Fukai","Narutocho-mitsuishi","Mihara","Yaita","Hidakacho-ebara","Takahashi","Otsuku-kibi","Oiwake","Ama-higashimachi","owariasahi","Inabe","Okawa","Ogori-shimogo","Itabashi","Goya","Kaminokawa","Miyoshi","Marunouchi","Kitamoto","Kahoku","Miyako","Settsu","Shingu","Ikuno","Ryuo","Sayama","Habikino","Hashima","Yonago","Hachimantai","Yuzawa","Yamanashi","Sado","Koriyama","Yamazakicho-nakabirose","Togitsu","Ojiya","Joetsu","Miyoshi","Fujiidera","Toki","Takemiya","Kitami","Kasaoka","Kazuno","Itako","Nasukarasuyama","Ninohe","Tsuyama","Sukagawa","Yurihonjo","Eniwa-shi","Nihommatsu","Meiji","Abashiri","Godo","Gushikawa","Shinjuku","Obari","Gotanda","Higashikawa","Isomura","Tamashima","Tamano","Soja","Wakicho","Niimi","Yakage","Ochiai","Kuse","Katsumada","Hayashino","Yuge","Hayashima","Mori","Mizushima-nishichidoricho","Katsuyama","Saidaiji-naka","Kamogatacho-kamogata","Toba","Minobu","Kitaozuma","Nagase","Murata","Tennojicho-kita","Omori","Yanocho-futatsugi","Yasuda","Sanuki","Ena","Minokamo","Kasamatsucho","Mihama","Taketoyo","Saikai","Umeda","Kamisu","Ogawa","Tateyama","Kyodo","Shiroishi","Mashiko","Matsuyama","Tsuchiara","Towada","Yakumo","Awara","Kikugawa","Atami","Katsuura","Toshima Mura","Yaese","Sagae","Fujioka","Ueki","Haijima","Budo","Mitsui","Ishikawa","Utazu","Rifu","Ichinomiyacho","Uki","Monzenmachi-igisu","Tadotsu","Tanaka","Muroran","Ishida","Otsukacho","Okuma","Yokogawa","Hayashi","Taiki","Omura","Mitsukaido","Minowa","Komagane","Nichinan","Nikaho","Senboku","Totsukacho","Nanto","Fukui","Kayano","Aisai","Miwa","Higashicho","Shioya","Echizen","Shijonawate","Higashi-takadama","Azuchi","Higashiura","Nakanoshima","Nakahai","Tamachi","Nara","Oshu","Naitobokujo","Sodegaura","Kitagata","Shimabara","Shinshiro","Haebaru","Kurayoshi","Nirasaki","Ikedacho-itano","Sukumo","Nodani","Wakkanai","Hakozaki","Hiji","Mochida","Nakanishi","Otani","Kose","Sugiyama","Tashiro","Fumoto","Yanagawa","Kurihara","Kokufu","Nishiko","Nakano-kami","Nagato","Tatsuno","Takamori","Hikari","Sabae","Omaezaki","Osaki","Himi","Kamikawa","Tokuyama","Kotoku","Aso","Senzoku","Higashi-iwashiro","Fushiki-minatomachi","Tsukayama","Kahoku","Inami","Temma","Tokiwamachi-tokiwa","Ariake","Yamano","Yamauchi","Matsuto","Shiretoko","Agena","Shimo-iino","Machi","Nakagomi","Murayama","Odaira","Komono","Fujita","Arai","Chatan","Shin-shigai","Oarai","Shin","Tsuru","Oshima","Aitsu","Jissen","Niitsu","Ogura","Shikamaku-miya","Hakone","Mima","Koori","Mineyama","Nishimachi","Kataoka","Kikyo","Koryocho-itazu","Seta","Kagoya","Sakurajima-koikecho","Murai","Iju","Nishime","Daisen","Sakaiminato","Shinagawa","Tashima","Yomogita","Ichimura","Fuchucho","Tamura","Takaiwa","Kure","Imabuku","Nyuzen","Kariya","Jumonji","Mitai","Ichi","Kasumigaseki","Shonaicho","Komatsushimacho","Susaki","Kawahara","Kurami","Tatsumi","Musashimurayama","Yoneyamacho-nishino","Anesaki","Nemuro","Kiyama","Yamazaki","Kamo","Kanda","Urayama","Hamada","Kakuda","Oiso","Akashi","Tokiwa","Tsukumiura","Kanayama","Ujiie","Hotei","Kochino","Nayoro","Suijo","Sone","Kamimura","Saiki","Yabuki","Machiya","Oguni","Sekicho-furumaya","Muikamachi","Hikawa","Ishii","Onojo","Tsuhako","Takase","Fukiage-fujimi","Oyabe","Shinjo","Toyoda","Ishiki","Yuki","Kugayama","Arakawa","Akasaki","Momoishi","Tomobe","Joshi","Kamaishi","Onuma","Yamadayu","Mimasaka","Shimotsuke","Konancho-fukawa","Kabe","Shirakawa-machi","Komaba","Hongo","Shimogo","Isawa","Seiro","Minamiuonuma","Kanada","Sumiyocho-kawauchi","Sogabe-minamijo","Fukuchi","Mutsumi","Fujisato","Miyata","Kusai","Senriyama","Kusunoki","Hama","Shima","Kokuryo","Naebocho","Kubo","Misakimachi-konami","Morodomitsu","Joso","Hosobara","Shizunai-misono","Geinocho-mukumoto","Yoshida","Isumi","Takinogawa","Oyama","Tsukawaki","Okawachi","Mombetsu","Yorishimacho","Minatomachi","Esashi","Honjo","Okuchi","Imaicho","Yano","Minatogawa","Subashiri","Kichijoji-honcho","Takicho-oda","Miyakojima","Odori","Nagashima","Kotohira","Daigo","Kanomata","Inage","Morohongo","Toge","Itoigawa","Maki","Yanagi","Kasai","Nishiyama","Youkaichi","Hatoyama","Nagao","Osawa","Kanegasaki","Yutaka","Mitsushimacho-osaki","Toyonomachi-toyono","Nakayama","Wakimachi","Oyama","Kitsuregawa","Ishige","Kaisei","Sakae","Satocho-sato","Kami-kawakami","Teine-ku","Onogawa","Futoo","Katsura","Shinkawa","Yokaichiba","Moji","Kamoi","Aboshiku-okinohama","Sango","Tawaramoto","Yoichi","Hamana","Fuefuki-shi","Kameda-honcho","Gotsucho","Ogi","Iiyama","Obuse","Ochiai","Yoshimi","Uonuma","Fushimi","Kitaibaraki","Onoda","Iwanai","Kutchan","Noboribetsu","Yanai","Iwakiri","Motegi","Nakijin","Ino","Itoman","Nakagusuku","Nagaoka","Takara","Hagi","Kamikita-kita","Aki","Nishikawa","Shiobaru","Kazuka","Toyota","Takajo","Ozu","Horinouchi","Yabase","Hirakawa","Kasumicho","Watari","Sakura","Asahi","Bakurocho","Kamibun","Shiba-Kaigandori","Tokamachi","Thailand","Bangkok","Chumphon","Kathu","Phang Khon","Sakon Nakhon","Mueang Nonthaburi","Kalasin","Chon Buri","Loei","Khon Kaen","Nong Bua Lamphu","Roi Et","Udon Thani","Kumphawapi","Kanchanaburi","Nong Khai","Ayutthaya","Chiang Mai","Songkhla","Chiang Rai","Surin","Thanyaburi","Wiphawadi","Phuket","Sing Buri","Satun","Prachin Buri","Ubon Ratchathani","Pattaya","Yala","Bang Na","Samut Songkhram","Phetchabun","Min Buri","Ratchaburi","Lampang","Narathiwat","New Sukhothai","Lopburi","Uttaradit","Maha Sarakham","Mae Hong Son","Suphan Buri","Chachoengsao","Samut Sakhon","Phrae","Din Daeng","Pathum Wan","Phayao","Trang","Mukdahan","Phetchaburi","Uthai Thani","Krabi","Phichit","Phitsanulok","Ban Pat Mon","Prachuap Khiri Khan","Ban Khlong Prasong","Yasothon","Ranong","Lamphun","Nong Bua","Amnat Charoen","Ban Phichit","Bang Khae","Thon Buri","Ban Tham","Sam Sen","Ang Thong","Mueang Samut Prakan","Sa Kaeo","Pathum Thani","Chanthaburi","Huai Khwang","Rayong","Sattahip","Phan","Si Racha","Phatthalung","Rawai","Buriram","Dusit","Khlong Luang","Trat","Ban Bueng","Sung Noen","Manorom","Ban Bang Plong","Tak","Ban Tha Duea","Amphawa","Ban Pong Lang","Phaya Thai","Si Sa Ket","Nakhon Ratchasima","Bangkok","Bang Phlat","Ban Bang Phli Nakhon","Salaya","Krathum Baen","Hua Hin","Ban Talat Rangsit","Ban Khlong Ngae","Nong Prue","Wang Thonglang","Samphanthawong","Bang Khun Thian","Chatuchak","Chaiyaphum","Nakhon Pathom","Nan","Bang Kruai","Sathon","Suan Luang","Ban Wang Yai","Ban Khlong Prawet","Khlong San","Watthana","Lat Krabang","Muak Lek","Kosum Phisai","Ban Phlam","Non Thai","Photharam","Thalang","Bang Kapi","Long","Ka Bang","Pattani","Nakhon Si Thammarat","Khlong Toei","Cha-am","Amphoe Aranyaprathet","Phang Nga","Ban Tha Ruea","Chiang Muan","Ban Ang Thong","Ban Khlong Takhian","Khan Na Yao","Bang Sue","Sam Khok","Don Mueang","Phachi","Ban Pratunam Tha Khai","Sena","Prakanong","Ban Tha Pai","Bang Lamung","Nakhon Sawan","San Sai","Kamphaeng Phet","Pak Kret","Hat Yai","Ban Nam Hak","Khlung","Makkasan","Bang Sao Thong","Ban Hua Thale","Klaeng","Chulabhorn","Ban Don Sak","Phanna Nikhom","Ban Na","Ban Ko Pao","Mae Sot"
,"United States","Mukilteo","Fairfield","Chicago","Hernando","Irving","Baltimore","Kingston","Burlington","Harrison","Newton Center","Littleton","Bloomington","San Ramon","Downers Grove","Circleville","Oxnard","Gulfport","Portland","Houston","Greenbank","Somerset","Sidman","Minneapolis","Manchester","Canton","The Bronx","San Francisco","Saluda","San Jose","Santa Clara","Sunnyvale","Washington","Harrisburg","Stafford","Newington","Vienna","Cambridge","Boston","South Harwich","Worcester","Tampa","Lake Wales","Saint Petersburg","Kyle","Pomona","Covina","Edmonds","Kirkland","White Plains","Waynesboro","Buffalo","New York","Ridgewood","Utica","Port Washington","Brecksville","Streetsboro","Hartford","Nashville","Chester","Richmond","Jacksonville","Kissimmee","Clinton","Denver","Fort Worth","Brandon","Dover","Union Township","Nazareth","Pine Brook","Edison","Redwood City","Arvada","Pineville","Ponte Vedra Beach","Sarasota","Jackson","Nacogdoches","Tomball","McKinney","Little Rock","Dallas","Halethorpe","Crofton","Northbrook","Palatine","New Hyde Park","Phoenix","Northville","St Louis","Lafayette","Castle Rock","Windsor","Laurel","Collegeville","Twinsburg","Getzville","Richfield","Rochester","Lorton","Manassas","Virginia Beach","Waldorf","Ashburn","Seattle","Woodbridge","Verona","Bakersfield","Scranton","Riverside","Gardena","Bakersfield","Fontana","Los Angeles","Sacramento","Bonham","Keller","Orlando","Largo","Austin","Atlanta","Salem","Stockbridge","Monroe Township","Lakewood","San Diego","Spring Valley","Reseda","Oak Brook","Novi","Miami","Fort Lauderdale","Littleton","Southern Pines","Grantville","Honesdale","Philadelphia","Coatesville","Kennesaw","Irvine","Newbury Park","Ontario","Manhattan Beach","San Mateo","Westlake Village","Covington","Wichita","Canton","Euless","New Orleans","Garland","Poughkeepsie","Mechanicsville","Sterling","Temple Hills","Glen Allen","Hopkins","Jersey City","Parsippany","Wanaque","Whippany","Bothell","Mill Valley","Oakland","Canonsburg","Naperville","Columbus","Monmouth Junction","King of Prussia","Tipton","Trenton","Upland","Santa Monica","Hacienda Heights","Lewis Center","Alexandria","Fairfax","Frederick","Dumfries","Charlotte","Bradenton","Winchester","Anniston","Round Rock","Humble","Katy","Golden","Colorado Springs","Merrick","Northfield","Ridgefield Park","North Palm Beach","Boca Raton","High Bridge","Piscataway","Hillsborough","Huntington Beach","Tempe","Yorba Linda","Duarte","Oceanside","Redding","Fountain Valley","Clinton","Durham","Marysville","Long Island City","Haverford","League City","Jackson","Berkley","Plano","Lexington","Atlanta","Brighton","Wakefield","East Falmouth","Louisa","Gaithersburg","Ashland","Columbia","Upper Marlboro","Oviedo","Birmingham","Tallahassee","Tustin","Suwanee","Pompano Beach","Grapevine","Pittsburgh","Butler","South Jordan","Elk Grove Village","Milwaukee","Bradford","Villa Park","Springfield Township","South Amboy","Signal Hill","Wilmington","Newport Beach","Las Vegas","Portsmouth","Midlothian","Rockville","Newport News","Edison","Paul Smiths","Copenhagen","North Richland Hills","Cedar Hill","Moorestown Township","Huntsville","Silver Spring","Fayetteville","Raleigh","Chesapeake","Arlington","Rougemont","Annandale","Norcross","Hendersonville","Dalton","Brooklyn","Elmhurst","Terre Haute","Ingleside","Detroit","Baton Rouge","West Hollywood","New Albany","Louisville","Destrehan","Normal","Ludington","Zolfo Springs","Zephyrhills","Bowling Green","Coppell","Chestnut Hill","Dedham","Westborough","Andover","Jasper","Allentown","Greensburg","South Burlington","Warrendale","Reston","New Kensington","Pitcairn","Hanover","Duncansville","Englewood","Boulder","Broomfield","Cheyenne","Modesto","American Fork","Cocoa Beach","Lake Worth","Brookline","New Gloucester","Lawrence","Whitman","North Attleboro","Lake Orion","Livonia","Bloomfield Hills","Toledo","Mesa","Grand Canyon","Vista","Escondido","Ramona","San Lorenzo","Renton","Vashon","Redmond","Auburn","Fenton","New Port Richey","Winter Haven","Pauma Valley","Cleveland","Rocky River","Folsom","Yerington","Reno","Franklin","Chantilly","Orangevale","Chalfont","Columbus","Woodstock","Columbus","Stamford","Raritan","Buffalo Grove","Des Plaines","Baytown","Cincinnati","Rosemead","Pasadena","Sun City","Lawndale","Saint Paul","Onalaska","Herriman","Hollywood","Cocoa","Myakka City","Rowlett","Cleveland","Haysville","Montgomery","Milford","Bethlehem","Centreville","Butler","Amarillo","Bedford","Castro Valley","Palo Alto","Rosedale","Hagerstown","Avenel","Palm Beach Gardens","Babson Park","Mission Viejo","Cupertino","Joliet","Adams Run","Baldwin Park","Long Beach","Sylmar","Tulsa","Nutley","Seagoville","Astoria","North Bergen","Duluth","Kemah","Quakertown","Royersford","Bensalem","Mountain View","Rockford","Troy","Annapolis","Hyattsville","Anza","Roanoke","Somerville","Lexington","Tyler","London","Ladonia","Vernon","Tappahannock","Suffolk","Providence Forge","Ashville","Groveport","Mansfield","Alvarado","San Antonio","Portland","Westminster","Verona","Elma","Henderson","Goldsboro","Dickson","Bennettsville","Waynesboro","Pembroke","Shelby","Wilmer","Quitman","Register","Lawrenceville","Muskegon","West Mifflin","North Rose","Webster","Cedar Springs","Arlington Heights","Elgin","West Lafayette","Justin","Horn Lake","Sedalia","Roscommon","Mt. Dora","Albuquerque","Sierra Vista","Hamden","Hackensack","Sheridan","Mosinee","Lafayette","Peoria","Farmington Hills","Kingsbury","Muncie","Charlestown","Aurora","New Richmond","Stout","Marshall","Aurora","Lyons","Elizabeth","Canton","Akron","Alliance","Freeport","Lincoln","Montpelier","Rozet","Leeds","Union Lake","Dundee","Capac","Massillon","Missouri City","Buda","Meridian","Richmond Hill","Interlachen","Cranston","Pennsville Township","Glendale","Placitas","Tucson","Las Cruces","El Paso","Thoreau","Tacoma","Olympia","Camdenton","Kansas City","Fredericktown","Independence","Greenwich","Oklahoma City","House Springs","Barnhart","Belleville","Catawissa","Woodstock","Fresno","Pahrump","Grass Valley","Cobb","East Haddam","Radford","Cleveland","Perth Amboy","Irvington","Vesuvius","Amherst","Dayton","Spencerville","Manchester","Brunswick","West Union","Lima","Madison","Lexington","Rochelle","Aniwa","Rushmore","Genoa","Greenville","Monticello","Aberdeen","River Falls","Eagle River","Morrill","Vancouver","Fort Gibson","Salem","Wellford","Anderson","Greenville","Clifton","Institute","Jefferson City","Yuma","Madison","Matawan","Orange","Livingston","Scottsdale","Beverly Hills","Palm Desert","Torrance","El Segundo","Rio Rico","Rancho Cucamonga","Chula Vista","Fallbrook","Costa Mesa","St. Augustine","Hopewell","Edgewater","Morristown","New Rochelle","Garden City","Centereach","Encino","Alton","Long Pond","East Elmhurst","Emeryville","Pennington","Montoursville","East Brunswick","Waltham","Coleville","Mammoth Lakes","Shrewsbury","Eatontown","Flushing","Princeton","Apex","Santa Ana","Norristown","Morrisville","Leesburg","Wilson","Franklin","West Palm Beach","Opa-locka","Naples","Nolensville","Antioch","Saint Clair Shores","Lafayette","Maryville","Falls Church","Cathedral City","Warrenville","Longmont","Kinston","Milpitas","Winnemucca","Berkeley","San Leandro","Somerville","Kingman","Desert Hot Springs","Coachella","Crete","Yulee","Palm Bay","Clermont","Lyman","Mountain View","White Cloud","Hallettsville","Yoakum","Pocono Summit","York","Newtown","Wilmington","Drexel Hill","Sherwood","DuPont","Westfield","Wendell","Byers","Nixon","Odessa","Lexington","Foster","California","Foster City","Belle Chasse","Metairie","Cordova","Herndon","Woods Cross","Brigham City","Orem","Flowood","Jamaica","Newhall","Southington","Seneca","Chino Valley","Prescott Valley","Prescott","Paulden","Cornville","Idaho Falls","Provo","Burbank","Thousand Oaks","Syracuse","Minoa","Lady Lake","Winona","Red Wing","Utica","Spring Grove","Lake City","Eyota","Plainview","Bloomfield","Brenham","Portland","Mathis","Robstown","Taft","Sandia","Odem","Skidmore","El Campo","Charlottesville","Poway","San Marcos","Schaumburg","Williamsport","Elmont","Bethel","Reading","Greenbrae","Salisbury","Strasburg","Bennett","Deer Trail","Ft. Pierce","Lake Elsinore","Wildomar","Murrieta","Marina del Rey","Mims","Dunnellon","Tavares","Leesburg","Melbourne","Altamonte Springs","Hialeah","Haines City","Stone Mountain","Blountstown","Apalachicola","Wewahitchka","Panacea","Bristol","Port Saint Joe","Perry","North Miami Beach","Miami Beach","Queen Creek","Gilbert","Laveen","Clarksville","New Philadelphia","Uniontown","Fort Morgan","Durango","Oldsmar","Clarendon","Canadian","Morse","Evanston","Burgettstown","Wellsburg","Dry Run","Midlothian","Yukon","Newalla","Drumright","Perry","Tuttle","Guthrie","Flagstaff","Blue Earth","New Prague","Bricelyn","Wells","Easton","Minnesota Lake","Winnebago","Sugar Land","Duncan","West Chester","Bloomington","Sonora","Wallace","Pleasantville","Weston","Seymour","Essex Junction","Northfield Falls","Somerset","Colts Neck","McLean","Westminster","Fort Collins","Bullhead City","Topock","North Brunswick","Palisades Park","Paoli","Orleans","Mitchell","Prince George","Washougal","Mount Juliet","El Monte","North Wales","Spring","Narberth","Pearland","Overland Park","Tipton","Gravois Mills","California","Shawnee","Kansas City","Martindale","Doylestown","Harrington","Newark","Hazel Park","Norwalk","Fort Myers","Dundee","South Royalton","Knoxville","Mansfield","Drums","Socorro","Marion","Darby","State College","New Castle","Compton","Russellville","Lemont Furnace","Rocky Hill","Louisville","Artesia","Nellysford","Buffalo","Hiawatha","Elwood","Sabetha","Seneca","Horton","Ocala","Sugar Grove","West Jefferson","Todd","Banner Elk","Crumpler","Vilas","Fleetwood","Sparta","Lansing","Piney Creek","Zionville","Riverton","Augusta","Stockton","Russell","Great Bend","Agra","Norton","Hays","Lenora","Versailles","Tinley Park","Lone Pine","Studio City","Carlsbad","Buford","Parker","Jamaica","Newfane","Middle Village","Claremont","Hogansburg","Lynchburg","Jackson","Cape Girardeau","Whitewater","Rush Center","Quinter","Ellis","Ness City","Ogallah","Shawnee","Animas","Townshend","Brattleboro","West Dummerston","South Newfane","Putney","Rensselaer","Lewiston","North Tonawanda","Wellsboro","Lock Haven","Bethania","Venice","Johnson City","Montpelier","Clifton Park","Langeloth","Gibsonia","Bethel Park","Monroeville","Homestead","Clairton","Clarence","Karthaus","Drifting","Frenchville","Houtzdale","Morrisdale","Grassflat","Bridgeton","Westbury","Everett","Groveland","Three Rivers","Scotts Valley","Mount Laurel","Glendale","Lakewood","Coral Gables","Hollister","Glen Burnie","Montebello","La Puente","Los Alamitos","Genoa","Montevideo","Hoboken","Casselberry","Maitland","Auburn Hills","Sandusky","Grand Rapids","Kankakee","Crystal Lake","Libertyville","Sikeston","Oran","Ridgeland","Ellisville","Long Beach","Saltillo","Biloxi","Yazoo City","Ocean Springs","La Porte","Kountze","Franklin","Berwick","Jeanerette","Saraland","Lafayette","Mobile","Picayune","Batavia","Bedford","Frostburg","Salem","Coraopolis","Chapel Hill","Fountain Inn","Depere","Brookfield","Lake Forest","Harwood Heights","Indianapolis","Frisco","Bismarck","Vicksburg","Cadillac","Kalamazoo","Newaygo","Traverse City","Aurora","Peoria","Darien","Iowa City","Napa","Brisbane","Taylor","Warren","Oxford","Saginaw","Southfield","Livermore","Danville","Toluca","Rutland","Wayne","Easton","Melville","Williston","Bala-Cynwyd","East Lansing","Maumee","Mahwah","Rowland Heights","Carson","Scotch Plains","Lexington","West Jefferson","Oakland","Truckee","Shingletown","Woodland","Tracy","Oxon Hill","Beachwood","Elizabeth City","Lanham","Harrisonburg","Frazier Park","Lewisville","Deerfield","Winnfield","Millry","Ponca City","Broken Arrow","Chetopa","Jenks","McPherson","Aberdeen","Severna Park","Hanover","Rohnert Park","Claysville","Clarksburg","Bloomingdale","Broussard","Waller","Lake Jackson","Smyrna","Grand Prairie","Richardson","Arlington","Gainesville","Langhorne","Walterboro","Huntsville","Sylacauga","Pike Road","Boligee","Temple","Georgetown","Pottsboro","Fairview Heights","Denison","Celina","Galveston","Alva","Skiatook","Collinsville","Yale","Woodward","Kaufman","Waikoloa","Hickory","Concord","Bristol","Gaffney","Florence","Columbus","Streamwood","Hinsdale","Woodland Hills","Oak Park","Greensburg","Shreveport","Sorrento","Marrero","Oak Ridge","Louisville","Westwego","New Iberia","Itta Bena","Pearl","Starkville","Vicksburg","Tuscaloosa","Northport","Grayson","Warner Robins","Sparks","Paramus","Weare","Sonoma","Bentonville","Midland","Pleasanton","Charleston","Tupelo","Lucedale","De Kalb","Daly City","Pleasanton","Bandera","McAllen","Downey","Junction City","Concord","Laredo","Tylertown","Bozeman","Palmdale","Winterville","Hoosick Falls","Fremont","Auburn","Knoxville","Abbeville","Marietta","Marbury","Campbell","Lutz","Delray Beach","Gainesville","Clementon","Titusville","Savannah","Summerfield","Hesperia","Irons","Union City","Bridgeport","Eatonton","Key Largo","Palatka","DeLand","Ormond Beach","Brownwood","Newberry","Bonita Springs","Corona","West Hills","Chatsworth","La Canada Flintridge","San Pedro","Buena Park","Van Nuys","Valencia","Buellton","Diamond Bar","Memphis","Laurel","Tutwiler","Philipp","Ennis","Danbury","Norwalk","Shrewsbury","Pacific","Jonesboro","Mandeville","Chandler","Panorama City","South El Monte","Milford","Cheshire","East Hartford","Meriden","Palm Springs","Orange","Fullerton","San Jacinto","Northridge","Poplar Bluff","Pearl River","Eldon","Linn Creek","Edwardsville","North Sioux City","Lake Saint Louis","Quincy","Joplin","Hayti","Fort Smith","Monroe","North Little Rock","Bellevue","Springfield","Fair Grove","Columbus","Wood River","Maryland Heights","Caseyville","Glen Allan","Pine Bluffs","Salt Lake City","Winchester","Peyton","Platteville","Bosque Farms","Santa Fe","Santa Rosa","Beaverton","Gillette","Aspen","Loveland","Pasadena","Needham Heights","Norwood","Londonderry","Watertown","Oconomowoc","Gurnee","Kokomo","Bargersville","Middletown","Anchorage","Akhiok","Mountain Village","Valdez","Sitka","Juneau","Kake","Fairbanks","Stockton","Ketchikan","Carol Stream","Catoosa","Wilburton","Hayward","San Luis Obispo","Petaluma","Ross","San Bernardino","Chino","Seal Beach","Jupiter","Alhambra","Culver City","Azusa","Canoga Park","Clanton","Corsicana","Longview","Little Elm","Lake Charles","Houma","Odessa","Victoria","Kodak","Alpharetta","La Quinta","Macon","Montgomery","North Hollywood","Topeka","El Macero","North Las Vegas","Castaic","Brea","Forest Park","Madera","Richmond","Tucker","Wakefield","Saint Francisville","Zephyr Cove","Waco","Flower Mound","Abilene","Dulles","Parlin","Ronkonkoma","Belton","Seabrook","Fairfield","Magnolia","Lake Zurich","Manteno","Carrollton","Port Chester","O'Fallon","Moberly","Florissant","Portageville","Weaverville","Douglas City","Chicago Heights","Rochester","Port Orange","Hamel","Shenandoah","Bayonne","Woonsocket","West Warwick","Standish","South Weymouth","Roslindale","Osceola","Bridgewater","Oshkosh","Grafton","Hartland","Franksville","Riverside","Lake Mary","Midland","Framingham","Hartsville","Beaumont","Dublin","Pelham","Decatur","Rolling Meadows","La Grange","Glen Ellyn","Bolingbrook","Elmwood Park","Crest Hill","Westmont","Albany","Schiller Park","Woodridge","Round Lake","Ukiah","Royal","Barrington","Rutherfordton","Charleston","Columbia","Garner","La Plata","Wilmington","Leland","Clarksville","Burke","Henderson","Lubbock","Bourbonnais","Bellingham","Diamond Springs","Lapwai","Pierce","Missoula","Casper","Lakewood","Cottage Grove","Racine","Plainsboro","Yakima","Albany","Pryor","Oxford","Bowling Green","Milton-Freewater","Rantoul","Marcus Hook","Fishers","Champaign","Axis","Holliston","Allston","Locust Grove","Galax","Wetumka","Liberal","Stigler","Stillwater","Cushing","Chavies","Barboursville","Lancaster","Brownsville","Pharr","Schertz","Mercer Island","Grand Forks","Orchard Park","Anaheim","Simi Valley","Lynwood","East Meadow","Lisbon","Kenosha","Hilliard","Saint Catharine","Belpre","Springfield","Frankfort","Mendenhall","Waveland","Bay Shore","Charleston","Key Biscayne","Plantation","Cibolo","Waukesha","Redondo Beach","Social Circle","Seekonk","Chipley","Greer","Hattiesburg","North Charleston","Donalds","West Columbia","Loris","Saint Matthews","Brierfield","Valdosta","Fletcher","McComb","Vina","Ely","Rancho Cordova","Warrior","Inglewood","Lenexa","Neligh","Omaha","Dothan","Brookfield","Sturgeon","Venice","Mira Loma","West Covina","Arcadia","Bel Air","Ellicott City","Pensacola","Santa Barbara","New Haven","Santa Rosa","New Lenox","Washington","Paradise Valley","City of Saint Peters","Schulter","Seneca","Wood Dale","Veedersburg","Guin","Calera","Homestead","West Chicago","Mundelein","Lumberton","Goshen","Princeton","Stonewall","Quitman","Crowley","Alexandria","Old Hickory","Lewisburg","Decatur","La Vergne","Hermitage","Madisonville","Manchester","Glasgow","Inyokern","Shingle Springs","Highlands","Painted Post","Palm Coast","Hobart","Mount Kisco","Dickinson","Plainfield","Mandan","Arcola","Sugar Grove","Germantown","Saint Michael","Peabody","Warwick","Saugus","Blytheville","Bremen","Manchester","Marlborough","Dayton","Farmington","Mount Vernon","Kilgore","Arkansas City","Durant","Duncan","Kirksville","Vallejo","Antioch","Jacksonville","Havana","Virginia","Secaucus","Keams Canyon","Polacca","Second Mesa","Hampden","Newark","Colonial Heights","Dowell","Bowie","Wilton","East Granby","Dyersburg","Ann Arbor","Lawrenceburg","West Monroe","Wyandotte","South Pasadena","Dearborn","Perrysburg","New Hudson","Owingsville","West Hartland","Willimantic","Middletown","Seminole","Middletown","Prospect Heights","South Webster","Gallipolis","Rahway","Eau Claire","Rochester","Williamsburg","Waynesburg","Stanford","Xenia","San Bruno","Nanuet","Cypress","Stafford","Centreville","Boyers","Paducah","Fort Stewart","Jacksonville Beach","Roanoke","Bristol","Walpole","Portland","Rockland","Wiscasset","Mio","Taft","Lyman","Fort Mill","Tonganoxie","St. Joseph","Lee's Summit","Pleasant Hill","Blue Springs","Clarendon Hills","Bridgeview","Sealy","Porter","New Caney","Rattan","Edmond","Caledonia","West Fargo","Adrian","Lyons","Foothill Ranch","Port Carbon","Pottsville","Gladstone","Hasbrouck Heights","Garfield","Caldwell","Hammond","Oak Creek","Hauppauge","Fort Valley","Sharpsburg","Miamisburg","Catron","Dexter","Bloomfield","El Dorado","Fredericksburg","Greenbelt","Woodmere","Lynn","Quincy","Arlington","Fremont","Westford","Jeffersonville","Radcliff","Danville","Fairborn","Egg Harbor","Linden","Newark","Matamoras","Madison","DuBois","Notre Dame","Buchanan","Sycamore","Mount Prospect","Russell Springs","Mount Washington","Homer","Ruston","Saint George","Alden","Ridgefield","Camillus","Montrose","Holland","Bonita","Easley","Rome","Fort Wayne","Appleton","Green Bay","Brooklyn","Colgate","Beaver Dam","Fayette","Plain","Los Banos","Santa Clarita","Aliso Viejo","Perris","Locust Grove","Hillside","Saint Charles","Canton","Grenloch","Weyers Cave","Seeley Lake","Belleville","Spokane","Harrison","Springfield","Rockford","Lake Bluff","Parker City","Bitely","Janesville","Madison","Guilford","Bridgeport","Boonton","Westlake","Corcoran","Round Mountain","South Lake Tahoe","Bandon","Oakdale","Union Springs","East Rutherford","East Syracuse","Elk River","Chebanse","Tuscola","Noblesville","University Park","Martinsville","Canal Winchester","Mason","Novato","East Chicago","Highland Park","Weehawken","Bethesda","Benton Harbor","Royal Oak","Lansing","Franklin","Saukville","Fond du Lac","West Bend","Allen Park","Madison Heights","Ajo","Eloy","Rancho Palos Verdes","Tiburon","Orinda","Watsonville","Seymour","Columbia","Valley Park","St. Charles","Hershey","Newton","Neptune City","Asbury Park","Avon","Stony Brook","Sweetwater","Burleson","Middlefield","Newnan","Covington","Douglasville","Duncans Mills","Pulaski","Saratoga","Sussex","Flippin","Panama City","Ridgeville","Laguna Niguel","Rancho Santa Fe","Ventura","Temecula","Loma Linda","Wenonah","Fishkill","Totowa","Green River","Rawlins","Rock Springs","Carmichael","McHenry","Wixom","Georgetown","Lihue","Coalinga","Kingsburg","Jolon","McDonough","Dublin","Conneaut","Winder","Rocky Mount","Berea","Nottingham","Bloomingdale","Graniteville","Barnwell","Greendale","Menomonee Falls","Burlington","Michigan City","Lindale","Princeton","Hurst","Carmel","Florence","Belleville","Piqua","Muir","Montrose","Norco","Bell","Owings","Oxford","Enterprise","Union Springs","Moultrie","Sea Island","Conway","Imperial","Springfield","Germantown","Harlan","Ruther Glen","Yorktown","Franklin","Canton","Sandston","Cary","Orange","Bell","San Dimas","Saint Clairsville","Oakland Gardens","Camp Verde","Laurinburg","LaFollette","South Bend","Sumner","Ravenna","Greensboro","Orland Park","Morris","Zeeland","Sevierville","Orange","Liverpool","Paris","Lancaster","Bartlesville","Owasso","Fredonia","Deer Park","Ballinger","Bastrop","Greenville","Staunton","Suisun","Richland","Laurel","Bainbridge","Horseheads","West Haven","Addison","Helmetta","Mendham","Ottawa","Olathe","Savannah","Billerica","Plainville","Dundas","Lexington","Plymouth","Bensenville","Warsaw","Walkerton","Champlin","Rosemount","Davis","Plymouth","Danville","Hollis","Norwich","Vacaville","Waterford","Horsham","Ambler","Bartlett","Itasca","Duxbury","Haverhill","Springfield","Woodville","Gloster","Eunice","Lordsburg","Hobbs","La Junta","Jefferson","Grant","Cabot","Spring Hill","Port Saint Lucie","Hilton Head Island","Ellenville","Woodbridge","Fairfield","Avon","Vail","Eureka","Medford","Tarzana","Carpinteria","Lehighton","Bella Vista","Independence","Rockwall","Big Spring","La Marque","Troy","Pleasant Hill","Dublin","Hull","Madison","Decatur","Brighton","South Sioux City","Sioux City","Hinton","Westfield","Flowery Branch","Royston","Glen Lyon","Kingston","Hubbard","Medina","Beckley","Greensboro","Center","Corpus Christi","San Marcos","Eagle Pass","Three Rivers","Simpsonville","Melfa","Fishersville","Brookeland","Calabasas","Maywood","Montvale","Conshohocken","Mountain Home","Sedona","Dinuba","Pacific Grove","Evansville","Henderson","Oxford","Randolph Township","Rockaway","Moosic","Warren","Erie","North East","Mayville","Ripley","Rifle","Laramie","Glenwood Springs","Sheridan","Hawkins","Jewett","Wylie","The Colony","Marysville","Carthage","Conroe","Texas City","Niles","Blue Island","Florien","Riverview","Raymond","New Cuyama","Collierville","Broadview Heights","East Liverpool","Cleburne","Lynnwood","Oak Harbor","Solana Beach","Marysville","Cedar Hill","Lizella","Kennewick","Providence","Orleans","Fairfield","Belmont","Bloomingdale","Solon","Independence","Strongsville","Schererville","Saint John","Rising Sun","Townsend","Lake Lynn","Cambridge","Seaford","Luzerne","Mishawaka","Owatonna","Haskins","Albion","Port Huron","Memphis","Addyston","Culpeper","Elkwood","Chillicothe","Salinas","Boulder Creek","Norman","Williams","Westfield","Martinsville","Sherman","Ector","Lilburn","Whittier","Canyon Country","Arab","Cullman","Skokie","Ballwin","Godfrey","Corning","Romeoville","Wheeling","Iron Mountain","McMillan","Thiensville","Summerville","Wallace","Broseley","O'Fallon","Rowesville","Acworth","Navarre","Pitkin","Richland","Hebron","Elburn","Placentia","Burlingame","Sausalito","Menlo Park","Geyserville","Healdsburg","Eddy","Kentwood","Cantonment","Atwater","Homerville","La Habra","Newark","Milford","Paris","Jackson","Manteca","Lahaina","Marina","Castroville","Sunol","King City","Greenfield","Teague","Mohave Valley","Warren","Iuka","Winnsboro","Caddo Mills","Forney","Denton","Grove City","Steubenville","Seaside","Monterey","Morgan Hill","Golden Valley","Tolleson","Narragansett","Dacula","Tyrone","Springville","Pasco","Athens","Braselton","Lithia Springs","Commerce","Dawsonville","Vale","Waynesville","Cleveland","Fincastle","Six Mile","Ypsilanti","Flint","Saline","Highland","La Crescenta","Lemoore","Clovis","Mount Pleasant","Prague","Waxahachie","Roseville","Vandalia","Leipsic","Jacobsburg","Clarence","Painesville","San Elizario","Union City","Malibu","Des Moines","Los Gatos","Idalou","Southlake","Longwood","Quincy","Beatrice","Spartanburg","Corolla","Clayton","Alcoa","Granada Hills","Santa Fe Springs","Heber","East Saint Louis","Chesterfield","Hartford","Taylor","Batesville","Ankeny","Marianna","Wichita Falls","Mesquite","Gardner","Leawood","Belton","Paola","Cole Camp","Newtown Square","Chino Hills","Sherman Oaks","Moreno Valley","Temple City","Edinburgh","Urbana","Camby","Bellaire","Chester Springs","Adairsville","Cumming","Winchester","Rosenberg","East Bernard","Plaquemine","Dodge","Columbus","Huntersville","Asheville","Mebane","Gwynn Oak","Church Hill","Suitland","Yorkville","Waukegan","Elkhart","Riverdale","Belmont","Stow","Mentor","Canal Fulton","Winnebago","New London","Springfield","Pickerington","Cynthiana","Merchantville","Huntley","Huntingdon Valley","Herculaneum","Garden Grove","Sandwich","Hanford","Martinez","Beaver Falls","Cameron","Mechanicsburg","Lansdale","Mechanicsville","Chevy Chase","Clarkston","Juneau","Plymouth","Stuart","Key West","Burgaw","Afton","Bedford","Franklin Park","Maple Grove","Whitestone","Woburn","Johnston","Ellenboro","Morganton","Mitchell","Clearwater","La Mirada","Ames","Zionsville","Westland","Salyersville","Woodsfield","Clarington","Uhrichsville","Meadville","Pinole","Avon","Mooresville","Los Altos","Goliad","Red Oak","Palos Heights","Midlothian","Colton","Gustine","Alexander City","Columbia","Shelbyville","Lebanon","Burnet","Cedar Park","Bogalusa","Fair Oaks","Quincy","Gastonia","Gilberts","Republic","Porterville","Middletown","Antelope","Placerville","Camino","Marengo","West Dundee","Willowbrook","Webster","Bay City","Brookshire","Salem","West Hartford","Sumter","North Augusta","Ridgeway","Aiken","Lugoff","Rockwell City","Gans","Sallisaw","Vian","Palmyra","Greencastle","Lake Forest","Lebec","Lakeside","Oneida","Helenwood","Carlyle","Spring Creek","Blythe","Los Fresnos","New Bedford","Laguna Beach","Santee","Woodside","Katonah","Putnam","Marne","Smiths Creek","Stevensville","Broadview","McCamey","Sebree","Murfreesboro","Shelbyville","Stanton","Lamesa","Green Cove Springs","Okatie","Corning","Warsaw","Norfolk","Dakota City","Wethersfield","Scarborough","Dodgewood","Glastonbury","Altadena","Rixeyville","Von Ormy","Pawhuska","Newkirk","Springfield","New Liberty","Owenton","Romulus","La Grange","Myrtle Beach","Somerset","Cloverdale","Deer Park","Veradale","Eugene","Woodland","Philadelphia","Honey Creek","Rockford","Afton","Grand Junction","Carthage","Grady","Muldrow","Conway","Newark","Waupaca","Crawfordsville","Shelbyville","Princeton","Farmington","Hollow Rock","Nebo","Harrah","Jasper","Ninnekah","Columbiana","Trafford","Dora","Mount Olive","Boaz","Fountain","Riesel","Quitman","Mineola","Weatherford","Wortham","Pontiac","River Rouge","Oak Park","Roseville","Grosse Pointe","Holly","Burton","Zanesville","Niles","Hillsboro","Potsdam","Masury","Newark Valley","Villa Rica","Henrietta","Queens Village","Levittown","Yorkville","Saint Albans","Berwyn","Manville","East Palestine","Lebanon","East Hampton","Stonington","Gloucester","Mooresboro","Lawndale","Fort Bragg","Snow Camp","Pelion","Prospect","Stewart","Hohenwald","Hampton","Millen","Riceville","Newport","Mullins","Marion","Charleston","East Palatka","Hartselle","Magnolia","Blythewood","Iva","Union","Cameron","Old Town","Brooksville","Eufaula","Jackson","Selma","Waterbury","Geneva","Warner Springs","Surgoinsville","Fred","Morrow","Valparaiso","Tulare","Mission","Gladstone","Darien","Waynesboro","Kane'ohe","Chattanooga","Bonfield","Equality","Seminole","Blue Bell","Utica","Leander","Lake in the Hills","Maywood","Lombard","Brunswick","Granbury","Olivehurst","Greater Capitol Heights","Currie","Collinsville","Death Valley Junction","Cache","Bowling Green","Bishop","West Point","Kingsville","Hudsonville","Hermosa Beach","Jackson","Newton","Bamberg","Morganfield","Gulf Breeze","Schoolcraft","Muskogee","Tremont","Liberty","Vinton","Scott","Pass Christian","Hammond","Kent","Sebring","Colfax","Georgetown","North Reading","Belmont","Harrodsburg","La Grange","Mount Vernon","Santa Paula","Hawthorne","Empire","Forest Home","Sayre","Chesterfield","Norfolk","San Rafael","Opelika","Bayside","Harlingen","Alexandria","Wharton","Evans","Wadley","Battle Creek","Independence","Gautier","Slidell","Curtis Bay","Braintree","Telford","Berwyn","Blackwood","Emmaus","Patterson","Beattyville","West Des Moines","Marble Hill","Byhalia","Paragould","Honolulu","Turtle Lake","New Britain","Metuchen","Amesbury","Bow Center","Festus","Granite City","Trenton","Rolla","Arnold","Bourbon","Paris","Salisbury","Manchester","El Cajon","Warroad","Plainfield","Fernandina Beach","Plant City","Hinesville","Oregon","Hockley","Dowagiac","Berrien Springs","Lisle","Bradley","Edwardsburg","Hoffman Estates","Enid","Royse City","Pekin","Ottawa","Spring Valley","Cabery","Cicero","Cary","Surry","Pipe Creek","Cherry Hill","New Brunswick","Issaquah","Albany","Victor","Tanner","East Greenbush","Ashkum","Maple Hill","Graham","Murphy","Christiana","Franklin","Summertown","Ashland City","Murray","Spring Hill","Smithville","Bethpage","Hillsboro","Indiantown","Okeechobee","Lakeland","Napoleonville","Natchez","Poplarville","Donaldsonville","Johnstown","Sterling Heights","Lancaster","Sardis","Monaca","Blackwater","Oak Grove","Louisburg","Spring Hill","Emporia","Millbrae","Jennings","Buna","Purcellville","Crothersville","Philo","Arcadia","Buckingham","Monticello","Parkersburg","Ashland","Carlisle","Findlay","Lignum","Searcy","White Hall","Bauxite","Dry Prong","Coushatta","Sterlington","Huttig","Marion","Mena","Roselle","Boise","Henderson","Quincy","Dundalk","Ocean City","Owings Mills","Barrington","Lowell","Northborough","Pflugerville","Harker Heights","East Alton","Sunflower","Galesville","Chesterton","Staten Island","Englewood","Madison","Shelton","Wallingford","Chester","South Windsor","Colchester","Groton","Webster","Friant","Excelsior Springs","Bristow","Lawrence","Clackamas","Federal Way","Gettysburg","Cranbury","Litchfield","Sylvania","Moro","Shorewood","Greenwood","Highland","Boyce","Pomfret","Carrollton","Delmont","Allen","Lillington","Clinton","Wewoka","Watertown","Windsor","Lancaster","Bay Village","Hartville","Coopersville","Laddonia","Maricopa","Linden","Winsted","Aromas","Harvest","Kathleen","Coffeen","Elgin","Kaweah","Salisbury","Tyler","Thomson","Cudahy","Brentwood","Rincon","Weldon","Philpot","Danville","Eureka","Sutter Creek","Elmsford","Powder Springs","Davidson","Barbourville","Pelham","Malden","Dana Point","Monroe","San Carlos","Liberty","Brentwood","Angie","Holt","Franklin","Cordele","Inwood","Friendswood","Crystal City","Sheridan","Childress","Bessemer","Deatsville","Little Rock Air Force Base","Arkadelphia","Guymon","Ada","Clinton","Pauls Valley","Walkertown","Boone","Dansville","Union City","Moulton","Orange","Silsbee","Cypress","Saint Joseph","Benicia","Brewton","Lovelady","Belding","Delafield","Slinger","Staatsburg","Old Greenwich","Akron","White Cloud","Grand Blanc","Bethel","Greenwood","Boyle","Raleigh","Jonesboro","Chaparral","Roswell","Zuni","Alpine","Beeville","Marfa","Hobe Sound","Wadesboro","Jackson","Ethel","Uvalde","New Braunfels","Sparta","Cockeysville","Roby","Glen Carbon","Atwood","Richmond","Highland","Holt","Maumelle","Lynn Haven","Prattville","Beltsville","Glencoe","Stuart","Okmulgee","Bidwell","New Berlin","Kelseyville","Farmington","Brackettville","Monroe","Penfield","Davenport","Villa Park","Theodore","Richmond","Williston","Nuevo","Whitley City","Corbin","Hamburg","Fordyce","Crossett","Arbuckle","Lathrop","Goddard","Fisk","Seville","Carson City","Chico","Dearborn Heights","Milford","Mount Clemens","Montgomery","Fort Davis","Magee","Madison","Santa Maria","Vails Gate","Bronxville","Newburgh","Elizabeth","Kendall Park","Hope","Damariscotta","South Bristol","Alna","Lincolnville","Belfast","Pearsall","Great Lakes","Park Ridge","Yates City","Hamilton","Edinburg","Dagsboro","Matthews","Kernersville","High Point","Arden","Burlington","Elon","Huntington Park","Pine Plains","Avalon","Cedarburg","Ironwood","Pleasant Prairie","Blue Hill","Grand Island","East Aurora","Irmo","Utica","Tiffin","Beverly","West Sacramento","Tahoe City","Soda Springs","Williams","Girdwood","Wilmette","Berwick","Parlier","Dudley","Havelock","Sneads Ferry","Moncks Corner","Jenkinsville","Greenwood","Trenton","Deerfield Beach","Earth City","Hazlehurst","Westminster","Wildorado","Sonora","Ripon","Oakton","Greenway Downs","Gary","Hopwood","Johnstown","Hermitage","Rillton","Maysville","Mystic","Newtown","Portland","Clawson","Port Isabel","Millican","Benton Ridge","Naubinway","Cedar Rapids","Machesney Park","East Troy","Whitewater","Levittown","East Boothbay","Natick","Bridgewater","Nashua","Jackson Township","Iselin","Walnut Creek","Pittsburg","Alameda","Okemah","Gardiner","Revere","Vineland","Sanborn","Clinton","Byron Center","Comstock Park","Sturgis","Alto","Superior","Rogersville","Friendsville","Powell","Waleska","Statesville","Shepherdstown","Graceville","Creola","Trinity","Town Creek","McVeytown","Newville","Mount Joy","New Enterprise","Imler","Santa Cruz","West Wareham","Bedford","Lewisville","Smithville","Pocahontas","Cleveland","Toone","Millington","Dresden","Patterson","Lake Geneva","Melrose Park","Madison","Merrillville","Mingo Junction","Toronto","Freeland","Vero Beach","Melbourne Beach","Boynton Beach","Amite","Clinton","Thibodaux","Delhi","Draper","Clearfield","Norwalk","Mason City","Plattsburgh","Colchester","Saratoga Springs","Kingston","Cumberland City","Smyrna","Hopkinsville","Winchester","Lexington Park","Germantown","Thurmont","Takoma Park","Lovettsville","Towson","Absecon","Port Charlotte","Estero","North Port","Calistoga","Erin","Roanoke","Henry","Rutherford","Cherokee","Alamo","Schurz","Lodi","El Dorado Hills","Visalia","Momence","Roanoke","River Forest","Port Jefferson Station","Medford","Central Islip","Bay City","Keego Harbor","Garden City","Acushnet","Riverside","Newport","Alice","Manor","Glen Cove","Oakley","Williamsburg","Farmville","Camarillo","Agoura Hills","Dalton","Stevens Point","Waterford","Roseville","Denham Springs","Glenmora","North Olmsted","Kalispell","Darlington","Johnsonville","Elgin","Russellville","Frankfort","Port Lavaca","Lake City","Cantrall","Baldwin","South Lyon","Salina","Brewster","South Orange","Saint Helena","Bristol","Hartford","Thompsonville","Lemon Grove","Berlin Center","Abbeville","Port Gibson","Lumberton","Oak Grove","Hampton","Princeton","Grants Pass","Dime Box","Big Rock","Portage","Watseka","Bellwood","Washington Court House","Sedalia","Manhattan","Boonville","Bird City","Buckner","Owens Cross Roads","Plymouth","Alexandria","South Gate","Kemp","Emory","Pittsburg","Perryville","New Madrid","Town of Boxborough","Franklin","East New Market","Stevensville","Seymour","Crown Point","Zion","La Grange Park","Barberton","Kilmarnock","Ozark","Rogers","Lamar","Fayetteville","Republic","Kimberling City","Fayette","Carterville","Red Bank","Lebanon","Farmingdale","Wakefield","Ellsworth","Milford","Crescent Valley","Rutherford","Marlton","Atco","Lemont","Glenwood","Dale","Richmond","Covington","Shadyside","Mineral Wells","Rosemont","La Porte","Chalmette","DeRidder","Presto","Altoona","Moundsville","Wheeling","Follansbee","Teaneck","New Carlisle","New Haven","Hillsdale","Oktaha","Wagoner","Syracuse","Little Falls","Lockhart","Dripping Springs","Minnie","West Liberty","Sandy Hook","Wellington","Eolia","Printer","Jenkins","La Jolla","Fargo","Sterling","Clinton","Needville","Marietta","Louisa","Pikeville","Macomb","Niles","Chadds Ford","Midway","Sweetwater","Ashland","Thomas","Belhaven","Youngstown","Newport","Fisherville","Cumberland","Sandy City","Glenview","Ecru","Sidell","Ridge Farm","Basking Ridge","Mableton","Montevallo","Harpersville","Hamilton","Calexico","Fillmore","Encinitas","Cedar Creek","New Albany","Demorest","Cedartown","Loganville","Junction City","Trenton","Cameron","Eagle Lake","Monkton","Hampstead","Easton","Parkville","Grayslake","Holcombe","Austin","Huffman","Jasper","Atchison","Evergreen Park","Westfield Center","Columbiana","Newcomerstown","Highland Park","Orrville","Austell","Millboro","Vernon Hills","Forrest City","Beebe","Olive Branch","Trenton","Cuyahoga Falls","Albert City","Metamora","Erlanger","Pigeon Forge","Newport","South Deerfield","North Windham","Essex","Wolcott","Woodville","Sandy","Aliquippa","Cromwell","Uncasville","Windsor Locks","Nampa","Clover","Chatham","Black Mountain","Richmond","Owensboro","Hartford","Loomis","Bardstown","Taylorsville","Higginsville","Van Buren","McAlester","Atascadero","Holly Springs","Columbia","Orangeburg","Kings Park","Waterloo","Sullivan","Vandalia","Iuka","West Orange","Williamsville","Diamond","Sterrett","Almont","Riverdale","Clarksburg","Haltom City","Comanche","Apollo Beach","Anguilla","Stanton","Glassboro","Mount Holly","Washington","College Park","Rapidan","Lincolnshire","Williamsport","Colusa","Incline Village","Yreka","Mount Shasta","Tifton","Dunlap","Milton","Ripley","Baker","East Orange","Berlin","Clarks Summit","Keystone Heights","Temperance","Charter Township of Clinton","Lexington","Woodhaven","Accokeek","Rhoadesville","Maple Heights","Raymore","Kosciusko","McCool","Mountain Pine","French Village","Bernie","Cape Coral","Fort Myers Beach","Youngtown","Glasford","Roswell","Madison","Cottondale","Glendale Heights","Springfield Township","Fogelsville","Malvern","Schwenksville","Wheaton","Lomita","Magna","Zapata","Dumas","El Reno","Piedmont","Neffs","Coshocton","Middlesboro","Dublin","Winston-Salem","Tazewell","Booneville","Ravenswood","Satellite Beach","Deltona","Tehachapi","Acton","Sun Valley","Monrovia","Portola Valley","Bristol","Magnolia","Sulphur","Bloomingdale","Bedford","San Juan Bautista","Aptos","Reynoldsville","Camp Hill","New Bloomfield","Temple","Fayetteville","Laguna Hills","Terrell","Long Lane","Hillsboro","South Beloit","Noble","Algonquin","Pampa","Turpin","Geneva","Collingswood","Orange Park","Dandridge","Newman","Stevinson","West New York","Enfield","Branford","Naugatuck","Hopewell Junction","Saint Johnsbury","Gales Ferry","Copperopolis","Cotati","Carterville","Branson","Logan","Chugwater","Hanover Park","Haddonfield","Rockledge","Graham","Fairview","Silvis","Taylors","Pittsboro","Royal","Tillar","Farmerville","Boerne","Kingsland","Saint Simons Island","La Grange","Pewaukee","Sandpoint","Meridian","Clinton","Ruskin","Suwannee","Trussville","Lawrenceburg","Glenshaw","Harrison","West Babylon","Imperial","Rancho Mirage","Kimberly","Manitowoc","Munster","Manistee","Winnetka","Crossville","Moundville","Albertville","Midway","Wetumpka","Washington","Topanga","Berlin","Dunkirk","Lecompte","Vacherie","Brawley","Port Washington","Danville","Hammonton","Burlington","Salem","Commack","Shepherdsville","Rock Hill","Milan","Blacklick","Bayport","Vernon","Rockport","Jellico","Pine Knot","Alsip","Hernando","Arlington","Nevada City","Titusville","Hamburg","Cookeville","Plains","Seagraves","Denver City","Maxwell","Hot Springs National Park","Dermott","Dumas","Pine Bluff","Ashdown","De Queen","McGehee","Arkansas City","Harvey","Moss Point","Flomaton","Seguin","Chatom","Ludowici","Powderly","Sumner","Hoschton","Clinton","Fayetteville","Haslet","Flanders","La Mesa","Crow Agency","Oregon City","Platte City","Carlsbad","Kendallville","Marion","Live Oak","Pico Rivera","Pinehill","Vina","Salina","Quinlan","Wills Point","Larned","Ridgecrest","Rocklin","Turlock","Gustine","Converse","Alvin","Benton","Ellinwood","Harbor City","Banning","Cabazon","New London","Wathena","Chillicothe","Lockwood","Billings","Mount Vernon","Sandwich","Union","Nobleboro","Winnetka","Lincoln","Urbandale","Wickliffe","Clarkston","Waupun","Park Forest","Neenah","Lansing","Middlebury","Woodbury","Trumbull","Port Washington","Pinehurst","Northampton","Snyder","Tewksbury","North Andover","Plainville","Upland","Inez","Moline","Niota","Canton","Wilton","Archer","Homewood","Mooresville","Fort Lee","Jericho","Wabash","Dry Ridge","Pecos","Newton Lower Falls","Boxford","Morrisville","Mattapan","Attleboro","Eads","Whitehouse","Big Sandy","Salem","Redlands","Bossier City","Cottontown","Mendota","Clayton","Paris","Hoopeston","Toledo","West Union","Ashmore","Holden","Eclectic","Gadsden","Anna","Stratford","Menasha","Newton Highlands","Cuero","Fairmont","DeSoto","Sanger","Whitney","Lindon","Monroe","Southport","Springville","Bostic","Stanley","Church Hill","Fairmont","Kerrville","Oroville","Goodwater","West Louisville","New Haven","Sellersburg","Marion","Elizabethtown","Columbia City","Newington","Bryans Road","Hempstead","Benkelman","Newton","Valhermoso Springs","Shelby","Elkview","Leesville","Deming","Batesville","Opolis","Hinckley","Hebron","Somerset","Rodeo","Alpine","Torrington","Allendale","Cheraw","Westbrook","Hampton","Cotulla","Jourdanton","Sabinal","Natchitoches","Pleasant Hill","Campti","Converse","Pelican","Marthaville","Calumet City","Wisconsin Dells","Daphne","Lake Village","Redfield","Fruitland","Ogden","Watertown","Grove","Playa del Rey","South Portland","Gainesville","Moodus","Heber Springs","Cape May","Silverdale","Mountain Home","Atlantic Beach","Callahan","Loxahatchee Groves","South Ozone Park","Corning","Lake Crystal","Sioux Falls","Seward","Milford","Bunceton","New Baltimore","Whitehouse","Brownsville","Ramsey","Attalla","Bristol","Wilbraham","Mansfield Center","Tucumcari","Edison","Hogansville","Kingston","Milledgeville","Chelsea","Bloomington","Plainville","Cartersville","Mary Esther","Sherwood","Winfield","Chase","Alpine","Chaska","Jean","Mineral Wells","Springtown","Aledo","Lake Oswego","Pacifica","San Angelo","East Peoria","Qulin","Kahoka","Hondo","Benton","Tullahoma","Grand Rivers","Clark","Hendersonville","Prairieville","San Juan Capistrano","Senoia","Cadiz","Jerusalem","Cramerton","Southmayd","Esparto","Amargosa Valley","Tybo","Howard City","Gaylord","Dudley","Park City","Plymouth Meeting","Chester","Pearcy","Scott","Mansfield","Mer Rouge","Mound Bayou","Camden","Savannah","Houston","Taylor","Forest Park","Helena","Athens","Centreville","Patton","Yucca Valley","Eaton Rapids","Cropseyville","Lexington","West","Rosser","Clifton","Mart","Henderson","Culleoka","Westminster","Laughlin","West Plains","La Vernia","Wallis","Fulshear","Winona","Center","Hannibal","Monroe City","New London","Jonesboro","Monterey Park","Presidio","Bogota","Strunk","Benham","Lostant","Granby","Kearney","Cleveland","Lincoln","Hummelstown","Carrollton","Destin","Brandenburg","Woodstock","Yanceyville","Holdenville","Erwin","Stanford","Interlochen","Merritt Island","Valrico","Brandon","Venus","Star City","Waterproof","New Buffalo","Lewiston","Petoskey","Olivet","Millersburg","Walled Lake","Opelousas","New Milford","Agawam","Lamar","Yountville","Auburn","Elmore","Brookline","Talladega","Weslaco","Pontotoc","Sanford","Marquette","Central City","Effingham","Smithton","Prairie Village","Morristown","Bean Station","White Pine","Talbott","Browns Summit","Walnut Grove","West Memphis","Logansport","Mountain Lakes","Matteson","Albany","Anderson","Savoy","Fowler","Arcata","Eureka","Gonzales","Fairhope","Rehoboth Beach","Warrington","Los Molinos","Imperial Beach","Crestwood","Ellsworth","Wyandotte","Fenton","Central Village","Poteet","Marathon","Brighton","Hamilton","Sulligent","Dallas","Onaway","Atoka","Rogers","Whitmore Lake","San Juan","Grenada","Ruleville","Terry","Grand Bay","Macon","Steens","Clemson","Forkland","Logan","Marion Junction","Bowie","Paso Robles","Waters","Granger","Robards","Williamsville","Rankin","Middleville","Elko","Creedmoor","Winston","Catheys Valley","Kennett","Devine","Waterford","Lakewood","Elyria","Valley Center","Westchester","Harvard","Spring Grove","San Simeon","Hemet","Conyers","Cedar City","Waxhaw","Luxora","Descanso","Perkinston","Delcambre","Raceland","North Haven","North Dartmouth","Griffin","Simonton","Montara","Chowchilla","Hickory Hills","California City","Highland","High Ridge","Alton","Hercules","Burlington","Windsor","Fort Stockton","Travelers Rest","Braidwood","Beaumont","Port Hueneme","Sweeny","Carrizo Springs","East Hanover","Poplar Grove","Fairfax","Middleburg","Chesapeake Beach","Clarksdale","Rockwood","Hitchcock","Camp H M Smith","Grand Terrace","East Sparta","Union City","Summerdale","Fort Polk","South Boardman","Bristol","Elwood","Wautoma","Seatonville","Alvaton","Huntsville","South Pittsburg","Greene","Mequon","Hampshire","Carpentersville","Miami","Stamford","Jerome","Anson","Cisco","Geismar","Hudson","Clare","Rialto","Cerritos","Mojave","Florence","Warrensburg","Hillsborough","Carbondale","Campbell","Bay Minette","Miramar Beach","New Roads","Bellville","Bedford","Washington","Tallassee","Equality","Heidelberg","Oak Forest","Northfield","Hutto","Burbank","Hillsdale","Nunica","Milan","College Station","Big Rapids","Frankfort","Logansport","Lockport","Keasbey","Ada","Snellville","Hahira","Sebastopol","Malaga","Calvert","Olmito","Port Arthur","Pinckneyville","Lake Ozark","Aberdeen","Troy","Elgin","Mission Hills","Oglesby","Hamtramck","Magnolia","McKeesport","Armonk","Bloomfield","Passaic","Marion","Council Grove","Dane","Glencoe","Hallwood","Hesperia","Del Mar","Millsap","Three Rivers","Armington","Union Hill","Adamsville","Greensboro","Churchville","Gloucester","Lompoc","Bellflower","Salida","Stephenville","Azle","Springdale","Siloam Springs","Leavenworth","Parsons","Lacombe","Fox River Grove","Hope","Delhi","McKenzie","Melissa","Charleston","De Forest","Paintsville","Bodega Bay","Lowell","Godley","Rainbow","Delta","Macedonia","Seward","Oxford","Corona","South Wilmington","Smithland","Morgantown","Pittsview","Kingstree","Loretto","Duncanville","Pomfret Center","Brooklyn","La Palma","Hidalgo","Daytona Beach","Carteret","Northvale","Gilroy","Hughson","Portsmouth","Middletown","Mulberry","Colleyville","Spicewood","Tuskegee","Tavernier","Marion","Stanton","Brownsburg","Pembroke","Westminster","Cross Plains","Kiel","Colorado City","Tolar","Billings","Yonkers","Leeds","Citrus Heights","Mauckport","Nicholasville","Covington","Greenville","Fraser","Calhoun","Pioneer","Orangeburg","Addison","Union Grove","Redwood Valley","New Paltz","Gardiner","Pala","Clark Fork","Fort Belvoir","Morrill","Grandview","Stilwell","Fort Scott","Oxford","Bonsall","Redford","La Verne","Pacoima","Woodway","Clio","Bradley Beach","West Simsbury","La Pryor","Millbrook","Whitinsville","Glenmont","Chagrin Falls","East Walpole","Honea Path","Hensley","Centerville","Wayland","Brookfield","Sunland","Ottumwa","Lake Dallas","Rayville","Gilbert","Walnut Ridge","Lancaster","Ionia","Stevenson Ranch","Clayton","Toomsuba","Grove City","Johnston","Easton","Acampo","Winters","Fairdale","Prosper","Dillon","Jamaica Plain","Brook Park","Capitola","Troy","Wareham","Bono","Franklinton","Wellston","Corvallis","Dayton","Souderton","Paterson","New Cumberland","Garrison","Slater","Elk Grove","Conover","Potomac","Calumet","Montgomeryville","Middletown","Fort Washington","Devon","Ridley Park","Warminster","Brockton","Pottstown","Villanova","Phoenixville","Glen Mills","West Chester","Gilbertsville","Broomall","Hatboro","Perkasie","Furlong","Downingtown","Barto","Exton","West Grove","Upper Darby","Ocean View","Pennsauken Township","Wallington","South Plainfield","Woodbury","Marmora","Atlantic Highlands","Riverside","Camden","Hillside","Toms River","Princeton Junction","Cranford","Friendship","Ridgely","Salisbury","Abingdon","New Windsor","Burtonsville","Steamboat Springs","Monument","Berthoud","Erie","Brighton","Carbondale","Dacono","Wellington","Fort Bragg","Soquel","Glade Spring","Caryville","Oak Grove","Harrisburg","Happy Valley","Kelso","McMinnville","Camas","Battle Ground","Coloma","Avilla","Chatham","Cerro Gordo","Winfield","Maple Park","Lincolnwood","Pendleton","Justice","Lake Villa","Harvey","Export","Morgantown","New Middletown","Jeannette","Windber","Tarentum","Mars","Irwin","Belle Vernon","Prosperity","Bridgeville","Wilmerding","Latrobe","North Versailles","Meyersdale","Boydton","Axton","Huntington","Scottsville","Fort Lee","Bentonville","Sabot","Rockville","Pulaski","Palmyra","Blacksburg","Kent","Puyallup","Marysville","Poulsbo","Enumclaw","Snohomish","Minnetonka","Andover","Greeneville","Eden Prairie","Madison","Sherman","Canton","Marianna","Dover","Suncook","Wayland","Old Saybrook","Concord","Epping","Hingham","Canaan","Medford","Hooksett","Hudson","Bellingham","Shelburne","Randolph","Lakeville","Middlebury","South Easton","Hopedale","North Berwick","Newtonville","Middlefield","Derry","White River Junction","Stratham","Hampstead","Salem","Derby","Cobalt","Haydenville","East Weymouth","Mason","Williamston","Charlotte","Dimondale","Laingsburg","Bath","Pleasant Lake","Saranac","Marshall","Fowlerville","Lake Odessa","Perry","Hastings","Homer","Horton","Grass Lake","Union City","Avon Lake","O'Neals","North Fork","Auberry","Prather","Tollhouse","Mission","Kittery","Hemingford","Alliance","Chadron","Scottsville","Monticello","Lebanon","Central City","Oakland","Waipahu","Jessup","Middle River","Parkton","Riverdale Hills","Georgetown","Millersville","Odenton","Bristow","Fort George Meade","Severn","Ceres","Altaville","Willows","Murphys","Farmington","Springville","Taylorsville","Kaysville","Channelview","Lyndhurst","Riverton","Maplewood","Bound Brook","Tenafly","Bellmawr","Bedminster","Long Branch","Orange","Somerdale","Freehold Borough","Hackettstown","Plainfield","Saddle Brook","Lenni","Chester","Manahawkin","Maple Shade","Williamstown","Alloway","Millville","Vauxhall","Danvers","West Springfield","Lunenburg","Ashburnham","Shirley","Dover","Chester","South Yarmouth","Gardner","Newburyport","Medfield","Ayer","Durham","Conway","Baldwinville","Hanover","Centerbrook","Peterborough","Hyannis","Poughquag","North Billerica","Lebanon","Stoneham","Amherst","Mendon","Concord","Medway","Sudbury","Yarmouth Port","Greenfield","Wellesley","Danville","Nantucket","Rainbow City","Carlisle","East Earl","Beaver Springs","Reedsville","Pittston","Millersburg","Stillwater","Cottage Grove","Anoka","Inver Grove Heights","Monticello","Jensen Beach","Winter Park","Commerce City","Shenandoah","Amelia Court House","Crozet","Gordonsville","Bluefield","Waynesboro","Bridgewater","Petersburg","Newberry","Jasper","Schenectady","Peachtree City","Bishop","Jacksboro","Belknap","Metropolis","Harriman","Gallatin","Abingdon","North Fort Myers","Gainesville","Elkton","Martinsburg","Finksburg","Prince Frederick","Essex","Joppa","Sykesville","Olney","Mount Airy","Swedesboro","Sewell","Egg Harbor City","Millburn","Yaphank","Mays Landing","Selinsgrove","Strasburg","Quarryville","Leola","Bellefonte","Lititz","Chambersburg","Bainbridge","Saint Clair","Walnut","Medford","Novelty","Lenoir","Cambria Heights","Burnsville","Rienzi","Romeo","Adrian","Plantsville","Burlington","Oak Lawn","Muscle Shoals","Tuscumbia","Valley Village","Glenpool","Jonesboro","Wasco","Arvin","Half Moon Bay","Yuba City","Vidor","Cedar Hill","Highland","Lyons","Paradise","Fulton","Hazelwood","Freeport","Marlin","San Marino","Euclid","San Pablo","Pinckney","El Centro","Jacumba Hot Springs","Bremen","Wilmington","Hereford","Terra Bella","Dixon","Ansonia","Wendell","Mt. Pleasant","Johns Island","Hazlehurst","Scott City","Hutchinson","Rockville","Havana","Herington","Fairfield","Fort Payne","Fort Knox","Peoria Heights","Lawton","Minooka","Rock Island","Kennedale","Baldwyn","Verona","Rockingham","Lumberton","Vandalia","Dyer","Newberry","Struthers","Orland","Dayton","North Lima","Sylvester","Huntland","Silver Springs","Hazel Green","Toney","Hazel Crest","De Soto","Dodge City","McCalla","Arroyo Grande","Los Osos","Templeton","South Milwaukee","Kingston","Ellenwood","Cayce","Commerce","Durant","Sturtevant","Grant","Minden","Keene","Medway","Earle","Lockport","Eufaula","Warren","Claxton","Maywood","South Elgin","Leslie","Selma","Bay Saint Louis","Edgewater","New Smyrna Beach","Tawas City","Burton","Newton","Bethany","Lexington","Harlem","Warrenton","Ojai","Fort Gratiot Township","Tallulah","Washington","Homer Glen","Sturgis","Dawson Springs","Rancho Santa Margarita","Dayville","Simsbury","Wauconda","Phenix City","Wyoming","West Lafayette","Thornville","Goose Creek","Wake Forest","Bainbridge","Waycross","Monticello","Helotes","Ferndale","Denver","Lincolnton","South Houston","Zachary","Greenwell Springs","Chippewa Falls","Utica","Smartt","Ardmore","Weatherford","Rosamond","Penney Farms","Westerville","Hamlin","Eastman","Camden","Hixson","Van Alstyne","Sanford","Kenmore","Mesquite","Binghamton","Owego","Oregon","McKee","Tyner","Annville","Forsyth","Feasterville-Trevose","Pikesville","Forest City","New Milford","Union Dale","Pleasant Mount","Factoryville","Thompson","Waymart","Kingsley","Prompton","Wasilla","Palmer","Dodd City","Ivanhoe","Ravenna","Telephone","Honey Grove","Goleta","Yucaipa","Moorpark","Menifee","Pacific Palisades","North Hills","Tujunga","Sierra Madre","Monticello","Morton","Pocatello","Aberdeen","Machias","East Machias","Princeton","Addison","Steuben","Chardon","Florence","Signal Mountain","Ringgold","Ooltewah","Harrison","Montclair","Pittsford","Plainview","Sloughhouse","Newcastle","Penryn","Pleasant Grove","Saint Ansgar","Riceville","Greene","Nora Springs","Plymouth","Floyd","Rudd","Frenchburg","Elkfork","Salt Lick","Campton","South River","Colonia","Bayville","Beachwood","Browns Mills","Paulsboro","Sicklerville","Barnegat","Forked River","Long Valley","Island Heights","Somers Point","Montclair","Fanwood","Brigantine","Ventnor City","Tuckerton","Waretown","Atlantic City","Leonardo","Mickleton","Manchester Township","Little Silver","Deal","Holmdel","Lincroft","Fair Haven","West Long Branch","New Egypt","Wrightstown","Newfield","Elmer","Franklinville","Skillman","Linwood","North Arlington","Lanoka Harbor","Glendora","Gloucester City","Vincentown","Flemington","Oceanport","Rumson","Hightstown","Spotswood","Three Oaks","Antioch","Channahon","Andrews","Oswego","Plano","Bridgman","Griffith","Dolton","Monticello","Monon","Berkeley","Huntertown","Ellettsville","Spencer","Chicago Ridge","Princeton","LaSalle","Lake Station","Peru","Thornton","Flossmoor","Worth","Palos Hills","Grain Valley","Odessa","Sibley","North Highlands","Sanger","West Jordan","Midvale","Hyrum","Smithfield","Layton","Willard","Oakdale","Beaver","Wellsville","Edinburg","Lisbon","East Freetown","Assonet","Fall River","Arlington","Milton","Milton","Holyoke","South Hadley","Groveland","Pawling","Old Lyme","Cotuit","Marstons Mills","Bellows Falls","Charlestown","Alstead","North Branford","Holmes","Taunton","Swansea","East Berlin","East Canaan","Ivoryton","Durham","Fremont","Exeter","Armagh","Ligonier","Alverda","Hooversville","Listie","Gifford","Smethport","Kane","Indiana","Barnesville","Vandergrift","Apollo","Brilliant","Richmond","East Pittsburgh","Youngwood","New Stanton","Hunker","Bovard","Ruffs Dale","Madison","New Alexandria","Herminie","West Newton","Crabtree","Ambridge","Baden","Conway","Sewickley","Freedom","Carnegie","Cairnbrook","Oil City","Brookville","Clarion","Maidsville","South Park Township","Wexford","Allison Park","Springdale","Natrona Heights","McKees Rocks","Duquesne","Seneca","Stoystown","Berlin","Shanksville","New Eagle","Connellsville","Donora","Fairmont","Mannington","Bridgeport","Tiltonsville","Martins Ferry","Friedens","New Paris","Elizabeth","Monongahela","Monessen","Charleroi","Bairdford","Punxsutawney","Oakmont","Dillonvale","Discovery Bay","El Cerrito","Clayton","Moraga","San Anselmo","Guerneville","Corte Madera","Lagunitas","Ben Lomond","El Sobrante","Pollock Pines","North Aurora","Saint Joseph","Middletown","Morrison","Evergreen","Indian Hills","Dillon","Manitou Springs","Wheat Ridge","Silverthorne","Breckenridge","Granby","Greeley","Parachute","Fraser","Pueblo","Snowmass","Conifer","Snowmass Village","Basalt","Cedar Ridge","Rio Linda","Mather Field","Elverta","Galt","Magalia","Mi-Wuk Village","Millville","Corinne","Garland","Riverside","Tremonton","Pleasant Grove","Tooele","Roy","Twin Lake","Spring Lake","Willis","Mt. Morris","Washington","Inkster","Swartz Creek","South Haven","Saugatuck","Howell","Eastpointe","Tecumseh","Paw Paw","Waterford","Flushing","Jonesville","Dexter","West Bloomfield","Birmingham","Lawton","Portage","St. Helena","Hampton","DeWitt","Genesee","Clio","Okemos","Hartland","Davisburg","Peru","Ladd","Utica","Osceola","Whiting","DeMotte","Hebron","Wheatfield","Westville","Morton Grove","McCordsville","Sawyer","Beecher","Country Club Hills","Monee","Cedar Lake","River Grove","Reynolds","Western Springs","Lawrenceburg","West Harrison","DeKalb","Fountaintown","Oakwood","Mokena","Saint Anne","Steger","Macomb","Wadsworth","North Bend","Preston","Snoqualmie","Gig Harbor","Woodinville","Lake Stevens","Sammamish","Everett","Shelton","Rochester","Lacey","Chehalis","Bremerton","Kingston","Spanaway","Bainbridge Island","Buckley","Black Diamond","Maple Valley","Anacortes","Lakewood","Centralia","South Prairie","Seahurst","Darrington","Aberdeen","Ferndale","Sedro-Woolley","Mountlake Terrace","Granite Falls","Bonney Lake","Blaine","Graham","Burlington","Ravensdale","Yelm","Tenino","Lynden","University Place","Camano","Fox Island","Sumner","Fall City","Mount Vernon","Roy","Olalla","Colbert","Fairchild Air Force Base","Springfield","Forest Grove","Gresham","Tualatin","Wilsonville","Keizer","West Linn","Brush Prairie","Longview","Ridgefield","North Plains","Cornelius","Fairview","Boring","Yamhill","Newberg","Lebanon","Sweet Home","Lafayette","Damascus","Ariel","Gladstone","Kalama","Scappoose","Saint Helens","Hoquiam","Montesano","Westport","Oakville","Monroe","South Bend","McCleary","Elma","Rough and Ready","Penn Valley","Clarklake","Brooklyn","Hephzibah","Wildwood","Fombell","Metz","Santa Ynez","Alamo","Carmel","Ithaca","Deer Park","San Fernando","Idyllwild","Elizabethtown","Southport","Whiteville","Gloversville","Adams","Cohoes","Troy","North Adams","Gansevoort","North Conway","Lewiston","Lisbon","Lisbon Falls","Coronado","Makawao","Wahiawa","Versailles","London","Hudson","Corydon","Galloway","Van Wert","Marengo","Malta","Little Hocking","Waterford","Killeen","Liberty Hill","Commerce","Loveland","Peebles","Wimberley","Union City","South Charleston","Middletown","Greenville","Germantown","Castleton-on-Hudson","Valatie","Kinderhook","Ticonderoga","Queensbury","Northville","Delmar","Eaton","North Royalton","Willoughby","Lindale","Lithonia","Hiram","Pendergrass","Twentynine Palms","Indio","Greenwich","Campbell Hall","Poestenkill","Auburn","Lake Lure","Forest City","Liberty","Bullard","Flint","Groesbeck","Mexia","Statesboro","Crockett","Central","Pendleton","Laurens","Caribou","Bangor","Biddeford","Old Town","Fort Kent","Saint Agatha","Waverly","New Lexington","Logan","Napoleon","Bryan","Sunbury","Andrews","Aubrey","Colfax","Anna","Fort Sill Indian School Reservation (historical)","Many","San Augustine","Electra","Big Lake","Breckenridge","Brady","Iowa Park","Burkburnett","Ville Platte","Charleston","De Witt","Detroit","Clarksville","Blossom","Healdton","Wilson","Heavener","Ingram","Junction","Kermit","Lampasas","Monahans","Nashville","Rockdale","Rusk","Cottonport","Bunkie","Argenta","Buckhannon","Maryville","Crane","Kellogg","Foresthill","Stuttgart","Pleasant City","Carlisle","Hazen","Ringling","Post Falls","Mount Ida","Osawatomie","Wellington","Russellville","Osburn","Anadarko","Urbana","Springboro","East Bridgewater","Stoughton","West Bridgewater","Hanson","Scituate","Fitchburg","Townsend","Leominster","Amherst","Weymouth","North Weymouth","Hull","Fair Haven","Somersworth","Terryville","Ipswich","Byfield","Rowley","Monson","Palmer","Needham","Newton Upper Falls","Plaistow","Sandown","Foxborough","Mansfield","Sharon","Reading","Falmouth","Hampton","Newfields","Berwick","Shelburne Falls","Deerfield","Brandon","Killington","Pawlet","Castleton","West Pawlet","Wells","Rutland","Middleton","Marblehead","Topsfield","Ware","Warren","Gilbertville","Voluntown","Westerly","Ledyard Center","Cohasset","Fairhaven","South Dartmouth","Rockland","Middleboro","Westwood","Bolton","Newmarket","Nottingham","Wellesley Hills","Unionville","Rehoboth","North Dighton","Linthicum Heights","Arnold","Brooklyn","Pasadena","Lothian","Mabelvale","Alexander","Ward","Harrisonville","Nevada","Queen City","West Point","Ozark","Andalusia","Jack","Elba","Bryant","Cherokee Village","Hardy","Hazlet","Caldwell","Smithtown","Belmar","Beacon","Manhasset","Englishtown","Huntington Station","Great Neck","East Northport","Florham Park","Huntington","Southold","Carle Place","Bohemia","Oceanside","Valhalla","Peekskill","Nyack","Closter","Watchung","South Salem","Lodi","Oak Ridge","Oradell","Uniondale","Rockville Centre","Salem","Fort Mitchell","Warren","Barrington","Bristol","Tarrytown","Ossining","Crompond","Wayne","Monsey","Scarsdale","Croton-on-Hudson","Thornwood","Howell","Easton","Farmingdale","North Babylon","Lindenhurst","Kents Hill","North Bridgton","Augusta","Yarmouth","Westbrook","Falmouth","Fairfield","South Sanford","Skowhegan","New Sharon","South Casco","Keene","Dublin","Corning","Clay","Norwood","Cortland","Rome","Ilion","West Henrietta","Palmyra","Albion","Rhinebeck","Slate Hill","Stone Ridge","Englewood Cliffs","New Windsor","Latham","Vestal","Endicott","Macedon","Oneida","East Rochester","Corfu","Lee","South Glens Falls","Pittsfield","Ballston Spa","Johnsonville","Waterford","Oneonta","Dundee","Athens","Elmira","Hall","Oswego","Cicero","Canton","New Hartford","Ruidoso","Holloman Air Force Base","Alamogordo","Carrizozo","Washington","Jackson","Youngsville","Fuquay-Varina","Holly Springs","Knightdale","Selma","Bahama","Hillsborough","Louisburg","Hope Mills","Raeford","Pinehurst","Kings Mountain","Mount Holly","Indian Trail","Bluffton","Stedman","Lakeview","Ventress","Jarreau","Seabrook","Charlestown","Auburn","Waban","Eliot","Carlisle","Hansville","Winthrop","Wrentham","Springfield Gardens","College Point","Bellerose","Jackson Heights","Elmhurst","Fresh Meadows","Lanett","Panama City Beach","Marshall","Paramount","Mission Hills","Joshua Tree","'Ewa Beach","Pahoa","'Aiea","Kapaau","Kapolei","New Canaan","New Milford","Hawthorne","Northport","Selden","Middlesex","Mineola","Babylon","Tuckahoe","Wharton","Lake Hopatcong","Succasunna","Brentwood","Dobbs Ferry","Westport","Litchfield","Thomaston","Cornwall Bridge","Westwood","Midland Park","Waldwick","Emerson","Washington Township","Glen Rock","Saddle River","East Setauket","Farmingville","Copiague","Mamaroneck","Eastchester","Towaco","Coram","Hartsdale","Jefferson Valley","Rocky Point","Sound Beach","Ridge","Sag Harbor","Water Mill","Southampton","Sagaponack","Bridgehampton","Manorville","Center Moriches","Shirley","East Moriches","Eastport","Yorktown Heights","Bedford Hills","Shrub Oak","Mohegan Lake","Bedford","Spring Valley","New City","Larchmont","Rye","Amityville","Lincolndale","Putnam Valley","North Salem","Mahopac","Cross River","East Islip","Islandia","Haledon","Franklin Lakes","Pompton Lakes","Ledgewood","Hopatcong","Monroe","Harriman","Wyandanch","Montville","Lake Hiawatha","Marlboro","Patchogue","Lake Grove","Roslyn","Holtsville","Oakdale","Islip","Hawthorne","Holbrook","West Islip","Bellmore","Hempstead","Glenwood Landing","Denville","Mount Arlington","Budd Lake","West Milford","Hewitt","Westtown","Johnson","Lincoln Park","Mattituck","Freeport","Island Park","Long Beach","Atlantic Beach","Dumont","Zellwood","Eustis","Pierson","Astor","Apopka","Astatula","Citra","Schulenburg","La Grange","Springhill","Leland","Hardy","Bedford","Wirtz","Gladehill","Moneta","Christiansburg","Forest","Rustburg","Appomattox","Rock View","Bradshaw","Welch","Oceana","Elbert","Roderfield","Pineville","War","Northfork","Avondale","Gary","Edinburg","Charlotte Court House","Williamsport","Clear Spring","Big Pool","Coudersport","Palestine","Friday Harbor","Susanville","Burney","Wabasha","Elgin","Saint Joseph","Rice","Holdingford","Saint Cloud","Cold Spring","Becker","La Luz","Estes Park","Hurricane","Pell City","Lincoln","Vincent","Odenville","Ivins","LaVerkin","Dover","Highlands","Ailey","Vidalia","Aliceville","Oakhurst","Mabank","Trinidad","Marble Falls","McCloud","Othello","Chandler","Coeur d'Alene","Fairfield","Dunsmuir","Marshall","Chaffee","Canalou","Advance","Matthews","Gillett","Cecil","Iron River","Lomira","Butternut","Pelican Lake","Crandon","Fall Creek","Oconto Falls","Greenwood","Franklin","Red Cloud","Central City","Schuyler","Columbus","Paxton","Albion","Alma","Burlington","Colstrip","Forsyth","Pagosa Springs","Bayfield","Black Hawk","Saguache","Port Allegany","Emporium","Genesee","Harrison Valley","Roulette","Saint Marys","Johnsonburg","Bryson City","Robbinsville","Wana","Canton","Haleyville","Baileyton","Rogersville","Huntsburg","Rock Creek","Thompson","Trout Run","Jal","Forest Lake","Rockville","Woodland Park","Johnstown","Rapid City","Wyoming","Holland","Northwood","Rossford","Woodville","Swanton","Oak Harbor","Beardstown","Manito","Rushville","Bath","Versailles","Sherman","Jerseyville","Pleasant Plains","Alexander","Pittsfield","Petersburg","Bluffs","Easton","Chandlerville","White Hall","Carrollton","Elsah","Arenzville","Sea Ranch","Gualala","Cazadero","Evington","Rural Retreat","Lynch Station","Moses Lake","Milliken","Severance","Laporte","Hazleton","New Berlin","Mohnton","Birdsboro","Andover","Palmerton","Litchfield Park","Surprise","New River","Avondale","Bowling Green","Bluffton","Minster","Ottawa","Fostoria","Aurora","Crewe","Wytheville","Concrete","Port Ludlow","Duvall","Carnation","Port Hadlock","Coupeville","Otis","Baldwinsville","West Monroe","Constantia","Watertown","Camden","Blossvale","Lowville","Weedsport","Jordan","Fulton","Massena","Herkimer","Boonville","Hamilton","Little Falls","Lake Placid","Elbridge","Homer","Pitcher","Chazy","Champlain","Ellenburg Center","Rouses Point","Ogdensburg","Canastota","Saranac Lake","Sackets Harbor","Sylvan Beach","Malone","Tupper Lake","Glenfield","Vernon","Hebron","Oak Bluffs","Longmeadow","Carver","East Haven","North Carver","Hopkinton","Berkley","East Wareham","Mattapoisett","Hudson","Milford","Weston","Babson Park","Hyde Park","Brimfield","Goffstown","Turners Falls","Avon","Newton","Walpole","Norfolk","Canton","Windham","South Dennis","Harwich","Brewster","Manchester Center","Swampscott","Lynnfield","Chelsea","Melrose","Nahant","Dracut","North Hampton","Orleans","Clinton","South Hamilton","Chichester","Lee","South Berwick","Wilmington","Chelmsford","North Chelmsford","Jaffrey","Jericho","Blackstone","Dover","Ashland","Millis","Tolland","Ellington","Abington","Lincoln","Maynard","Merrimack","Contoocook","Collinsville","Marion","Candia","East Candia","Acton","Norton","Somerset","Pawtucket","Loudon","Atkinson","Kingston","Holden","Methuen","Templeton","Saint Albans","Sterling","West Rutland","Devens","Athol","Winchendon","Newton","Tyngsboro","Southwick","Holbrook","Raynham","Rockport","Morrisville","West Roxbury","New London","Harvard","Newport","Marlborough","Bolton","Amston","Sour Lake","Weimar","Angleton","Sarepta","Laurel","Hardin","Stromsburg","Genoa","Fullerton","Osceola","Bellwood","Palmetto","Palm Harbor","Tarpon Springs","Lecanto","Holiday","Inverness","Port Richey","Wesley Chapel","Winter Park","Windermere","Seminole","Homosassa","Parrish","Land O' Lakes","Cherryville","Midland","Norwood","Albemarle","Mount Gilead","New Bern","Niagara Falls","Lockport","Crosby","Splendora","Sagle","Ball Ground","Dalzell","Manning","Georgetown","Red Springs","Parkton","Dunn","Zebulon","Boonsboro","Knoxville","Funkstown","Colt","Hallsville","Tahlequah","Stony Point","Dunellen","Morganville","Chester","Riverhead","Massapequa Park","Roosevelt","Syosset","Bergenfield","Warren Township","Suffern","Valley Cottage","Elmwood Park","Ozone Park","Howard Beach","Rockaway Park","Forest Hills","Rego Park","Far Rockaway","Springfield","Bennington","Shaftsbury","Rollinsford","Lancaster","Centerville","Barnstable","Erving","West Yarmouth","Hardwick","Johnson","Henniker","Swanton","Wellfleet","Provincetown","North Truro","North Pembroke","Montgomery Center","Newport Center","Richford","Rutland","Sun City Center","Glens Falls","Hadley","Cobleskill","Lake George","Averill Park","Hudson Falls","New Albany","Davenport","Dade City","Mount Vernon","Marion","Plymouth","Cherryfield","Rumney","Alfred","Kennebunkport","Kennebunk","Lorain","Greenville","Vermilion","Waynesburg","Mantua","Shelby","Jamestown","Walton","Norwich","Dansville","Bath","Kapa'a","Wai'anae","Hilo","Hudson","Midland City","Fort Rucker","Bucyrus","Cambridge","London","Safety Harbor","Dunedin","Grovetown","Gurley","Valley","Watervliet","Rexford","Berlin","Waterville","Fly Creek","Edmeston","Aurora","Chittenango","Phoenix","Woodstock","Stillwater","Wynantskill","Fort Ann","Middle Grove","Fort Edward","Lenox","Brewer","Littleton","Cleveland","Pine Bush","Fairport","Cassadaga","Farmington","Williamson","Hornell","Johnson City","Rumford","Gray","Casco","Moody","Buxton","Fairburn","Lula","Riverdale","Union City","Auburn","Conley","Clarkston","Avondale Estates","Emerson","Rex","Bethlehem","Pine Lake","Watkinsville","Brownsville","Vincennes","Litchfield","Sparta","Mount Vernon","Ripley","Mayfield","Calvert City","Fulton","Olney","Grayville","Norris City","Fairfield","Mount Carmel","Brazil","Farmersville","Carlinville","Owaneco","Hillsboro","Westville","Willow Hill","Pineville","Kettle Island","Nineveh","McLeansboro","Sesser","Girard","Pana","Anna","Greenville","Piggott","Virden","Macon","Bethany","Malden","Saint Francis","Clarkton","Carmi","Dale","Taylorville","Mount Pleasant","Ashland","Wellington","West Salem","Sullivan","Girard","Hartstown","Conneaut Lake","Linesville","Kenova","Chicora","Port Deposit","Cochranville","Canfield","North Jackson","Catlettsburg","Greenup","Oxford","Salem","North East","South Point","Karns City","Conowingo","Harmony","Zelienople","Evans City","Stewartstown","Macfarlan","Harrisville","Cranberry Township","Valencia","Ellwood City","New Springfield","McDonald","Campbell","Sarver","Delta","Nottingham","New Brighton","Slippery Rock","West Sunbury","Hamlin","Mercer","Dalton","Marshallville","Litchfield","Valley City","Street","New Freedom","Tionesta","Guys Mills","Scottdale","Daisytown","California","Coal Center","Perryopolis","Saxonburg","Dunbar","Pullman","Sunnyside","Whitehall Township","Phillipsburg","Stewartsville","Center Valley","Lewisburg","Milford","Hawley","Dingmans Ferry","Aquashicola","Jim Thorpe","New Ringgold","Albrightsville","Blakeslee","Kunkletown","Nesquehoning","Lansford","Coaldale","Manheim","Ephrata","Reinholds","Denver","Akron","Temple","New Tripoli","Orefield","Kempton","Hellertown","Macungie","East Greenville","Liberty","Saugerties","Goshen","Rosedale","Monticello","Cuddebackville","Gorham","Spencerport","Bergen","Clinton","Central Square","Newcastle","Buckfield","Rockport","Moultonborough","Rushford","Dallastown","Riverton","Hobart","Elkins Park","Randallstown","Livingston","Punta Gorda","Dixon","North Grafton","Mapleton","Angwin","Hurleyville","Red Hook","Marlboro","Swanzey","Jefferson","Kilkenny Township","Seneca Falls","Batavia","Sherburne","Coxsackie","Catskill","Hudson","Leeds","Ravena","Greenville","Stuyvesant","Earlton","Windham","Westerlo","East Durham","Athens","Climax","Claverack","Great Barrington","Purling","Cornwallville","Preston Hollow","Cairo","Round Top","Freehold","Copake","Kaukauna","Maineville","Tipp City","Arcanum","Troy","Jeffersonville","Marysville","Tallmadge","Mansfield","Plain City","Heath","Wadsworth","Fort Thomas","Seville","Carthage","Richlands","Jacksonville","Reynoldsburg","Cortland","West Milton","Glenford","Saint Ann","Maryville","Bethalto","Glencoe","Eureka","Allenton","Grover","Villa Ridge","Gray Summit","West Boylston","Spencer","Chicopee","Cleveland","Elizabethton","Jasper","Saint Cloud","Orange City","Indialantic","Ocoee","Winter Garden","Winter Springs","Manvel","Williston","Watertown","Aberdeen","Moorhead","Casselton","North Branch","Baltic","New Rockford","Page","Grafton","Yankton","Vermillion","Devils Lake","Spearfish","Lead","Sturgis","Cooperstown","Mobridge","Mitchell","Minot","Belfield","Wahpeton","Fairmount","Breckenridge","Colbert","Cartwright","Coalgate","Tupelo","Bokchito","Achille","Kingston","Tishomingo","Ravia","Mead","Lake Arthur","Kinder","Westlake","Oberlin","Elton","Gueydan","Welsh","DeQuincy","Tazewell","Harrogate","Cumberland Gap","New Tazewell","Airville","Jarrettsville","Forest Hill","Fawn Grove","Fallston","Darlington","Pylesville","Proctorville","Chesapeake","Crown City","Whiteford","Felton","West Hamlin","Milton","Pennsboro","West Union","Harts","Big Creek","Ranger","Salt Rock","Jackson Center","Portersville","New Castle","Stanwood","La Conner","Port Angeles","Port Orchard","Seabeck","Allyn","Belfair","Bow","Sandy","Brightwood","Keyport","Sequim","Port Townsend","Blandon","Fleetwood","Kutztown","Coplay","New Columbia","Milton","Watsontown","Morgantown","Honey Brook","Elverson","Sparta","Newton","McAdoo","Tresckow","Lafayette","Walnutport","Slatington","Alburtis","Sugarloaf Township","Stockholm","Sussex","Hamburg","Stanhope","Mertztown","Hamburg","Duncannon","Branchville","Augusta","Tobyhanna","Gouldsboro","Greentown","Newfoundland","South Sterling","Canadensis","Coopersburg","Troy","Stroudsburg","Saylorsburg","East Stroudsburg","Effort","Tannersville","Wilkes Barre","Breinigsville","Ottsville","Zionsville","Holcomb","Lewiston","Aransas Pass","Elk City","McCall","Show Low","Bisbee","Texarkana","Filer","Rupert","Heyburn","Twin Falls","Texarkana","Ingleside","Clarkston","Eagle","Cottonwood","Winslow","Gooding","Altus","Page","Jacksonville","Borger","Brookhaven","Globe","Blackfoot","Pascagoula","Chanute","American Falls","Safford","Burley","Buhl","Rigby","Taylor","McNary","Holbrook","Garden City","Pinetop-Lakeside","Dewey","Vaughan","Star","Hugo","South Saint Paul","Hudson","Hastings","Burnsville","Middleton","Alexandria","Weaver","Boulder City","Lake Havasu City","Fountain Hills","Parker","Payson","Peculiar","Garden City","Pine","Wilmington","Cleves","Galveston","Newton Falls","Bristolville","Lake City","Pataskala","Mechanicsburg","Sheboygan","Suamico","Englewood","Galion","Overpeck","Batavia","China Grove","New Carlisle","Gibsonburg","New Lebanon","Rittman","Basehor","Linwood","Eudora","Dinwiddie","Warrenton","Hanover","Powhatan","Draper","Bealeton","Catlett","Bluefield","Broadway","Stephens City","Middleburg","Bassett","Hamilton","Round Hill","Maidens","Sandy Hook","Madison Heights","Stuarts Draft","Aldie","Poca","Winfield","Front Royal","Sperryville","Grottoes","Madison","Collinsville","Falling Waters","Hedgesville","Kearneysville","Bunker Hill","Montgomery Village","Shenandoah Junction","Ranson","Charles Town","Harpers Ferry","Brunswick","New Market","Lusby","Berkeley Springs","Windsor Mill","District Heights","Ft. Washington","Maysville","Jeffersonton","Amissville","Daleville","Cloverdale","Troutville","Sutherland","Cross Junction","Berryville","Media","Crum Lynne","Kennett Square","Avondale","Sharon Hill","Prospect Park","Norwood","Clifton Heights","Wallingford","Holmes","Lafayette","Hallandale","Satsuma","Hanover","Harwich Port","Dennis","Dennis Port","West Newbury","Three Rivers","Bondsville","Osterville","Florence","Canterbury","Indian Orchard","Hampton Falls","Winchester","Plymouth","Canaan","Quechee","Waterbury Center","East Montpelier","Waterbury","Worcester","Hinesburg","Ferrisburgh","Live Oak","City of Saint Marys","Ponte Vedra","Macclenny","Glen Saint Mary","Pinellas Park","Carmel Valley","Camp Meeker","Occidental","Dayton","Disputanta","Ridgeway","Harrison City","Mount Jewett","Grafton","Petersburg","New Waterford","Murrysville","NuMine","Kittanning","Rural Valley","Turtle Creek","Blairsville","Ebensburg","Elmora","Tyrone","Flushing","Adena","Rayland","Jennerstown","Glen Easton","Clinton","Bayport","Lakeland","Shakopee","Zimmerman","Newport","Darlington","McDonald","Crescent Hills","Trafford","Hawaiian Gardens","Littlerock","Moonachie","Richfield","Stoneville","Eden","Mount Airy","East Bend","Wallburg","Reidsville","Supply","Hubert","Carrboro","West End","Linden","Willow Springs","Saint Robert","Fort Leonard Wood","Waynesville","Clever","Willow Springs","Wooster","Apple Creek","Creston","Brewster","Navarre","Shreve","N. Lawrence","Mineral City","Smithville","Mount Eaton","Montpelier","Millbury","Athens","White Plains","Liberty","Lockbourne","Asheboro","Rural Hall","Clemmons","Torrington","Wheatland","Decatur","Jacksboro","Bridgeport","Graford","Alvord","Bryson","Chelan","Lakebay","Stevenson","Carson","Randle","Morton","Longbranch","South Beach","Everson","Cle Elum","Hamilton","Depoe Bay","Arverne","Springfield","Enola","Center Ridge","Beverly Hills","Harrisville","Clintonville","New Wilmington","Shiloh","Harmonsburg","Wattsburg","Saegertown","Prospect","Petrolia","Sterling","Cumberland","East Freedom","Hollsopple","Boswell","Vanderbilt","Uniontown","Brownsville","Masontown","Carmichaels","Fayette City","Nemacolin","Fredericktown","Marianna","Crucible","Clarksville","Ellsworth","Creighton","Warrenville","Bradford","Lewis Run","Chester","Grasonville","Sudlersville","Chestertown","Salamanca","Delaware","Orient","Powell","Plymouth","Delphos","Monroe","Granville","Paulding","Baldwin Place","Pound Ridge","Westminster","Walpole","Hyde Park","North Stonington","Hinsdale","Salisbury","Dorset","Rye","Ghent","Germantown","Chatham","Mellenville","Hannacroix","Bearsville","Coeymans Hollow","Pfafftown","Pinnacle","Whitsett","Tobaccoville","Dobson","Trinity","Jonesville","Thomasville","Hopkins","Bessemer City","Smithfield","Summerfield","Advance","Gibsonville","Cedar Falls","Brockport","Scottsville","Conesus","Ballston Lake","Porter Corners","Johnstown","Amsterdam","Boones Mill","Penhook","Lebanon","Castlewood","Honaker","Dante","Blackstone","Lewisburg","Wyoming","Ravencliff","Hensley","Elkhorn","Glen Fork","Bud","Clear Fork","Pageton","Saulsville","New Hartford","Bethlehem","Auburn","North Brookfield","Sandy Hook","Southbury","New Fairfield","Brookfield","Coventry","Washington","New Preston","Barkhamsted","Harwinton","Kent","Sherman","Uxbridge","Sturbridge","Southbridge","Dudley","Ludlow","Belchertown","East Longmeadow","Gatlinburg","Madisonville","Piney Flats","Kingsport","Blountville","Loudon","Louisville","Tunnel Hill","Resaca","Joelton","Adams","Humboldt","Mount Pleasant","Milan","Jefferson City","Thousand Palms","Brownstown","Stevens","Cresco","Douglassville","Mountain Top","Tunkhannock","Noxen","Le Raysville","Saint Peters","Colonial Beach","King George","Bloomsburg","Montross","California","Hollywood","Leonardtown","Diggs","Heathsville","Weems","Lancaster","Dutton","Bohannon","Hartfield","Topping","Wake","Smithsburg","Keedysville","Canyon Lake","Gonzales","Del Rio","Bertram","Hadley","Acme","Bruin","Emlenton","Fenelton","Colora","Alverton","Jamestown","Kinsman","Sandy Lake","Stoneboro","Roscoe","Cabot","Cooperstown","Cochranton","Franklin","Finleyville","Spencer","Lowellville","Lorena","Hewitt","Argyle","Duncanville","Gardendale","June Lake","Needles","Hicksville","Irvington","Allendale","Purchase","Lawrence","Richland Center","Roscoe","Sun Prairie","Fort Atkinson","Ripon","Horicon","Sturgeon Bay","Fox Lake","Duluth","Superior","Melrose","Connelly Springs","Valdese","Drexel","Belton","Piedmont","Hampstead","Roan Mountain","Woodruff","Inman","Boiling Springs","Chesnee","Dayton","Evensville","Trezevant","Huntingdon","Bluff City","Lenoir City","Bristol","McMinnville","Paris","Chatsworth","Summerville","Trion","Newbern","Folsom","Ponchatoula","Tickfaw","Springfield","Russellville","Sparta","Monroe","Altamont","Selmer","Bells","Trenton","Ider","Whitwell","Bell Buckle","Franklin","Oakwood","Kill Devil Hills","Walland","Stewartville","Northfield","Pine Island","Albert Lea","Lakeville","Faribault","Mondovi","Fairfax","Mankato","Byron","Brownsdale","Beloit","Palmyra","Genoa City","Fontana","Darien","Waterloo","Clinton","New Holstein","Stoughton","Lodi","Baraboo","Deerfield","Oregon","Rhinelander","Lake Mills","Evansville","Edgerton","Elkhorn","Delavan","Bulverde","McConnelsville","Coolville","Jackson","Wellston","West Point","Port Jervis","Cottekill","Warrenton","Pikeville","Brookville","Seymour","Kailua","Kahului","Lebanon","Chesterland","Ashtabula","Millersburg","Loudonville","Bellville","Girard","Fairview","Portsmouth","San Benito","La Blanca","Denton","Kansasville","Pleasant Valley","North Myrtle Beach","Little River","Pawleys Island","Redford","Bushnell","Belleview","Ocklawaha","Fairplay","Sabillasville","Sharpsburg","Columbia","Millstadt","Dupo","Mt. Vernon","Centralia","Nashville","Addieville","Salem","Warrenton","Troy","Moscow Mills","Wright City","Foristell","Winfield","Morehead City","Rowland","Wrightsville Beach","Sidney","Bethel","Bellevue","Beach City","North Ridgeville","Aynor","Chapin","Groves","Floresville","Hidalgo","Scottville","Benzonia","Sherwood","Claremont","Taylorsville","Joanna","Teachey","Weaverville","Marshall","Wilkesboro","Hildebran","Beech Bluff","Medon","Crump","Parsons","Morris Chapel","Counce","Hays","North Wilkesboro","Canton","Maggie Valley","West Chazy","Keeseville","Cohutta","Rocky Face","Nipomo","Oceano","Grover Beach","Red Bluff","Pismo Beach","Morro Bay","Hilmar","Fernley","Minden","Windham","Chaplin","Mansfield Depot","Easthampton","Eastford","Storrs","Canterbury","Ashford","Fairview","Estill Springs","Leicester","Oxford","Brookfield","Sutton","Millers Creek","Startex","Cowpens","Moore","Peru","Middleton","Sauk City","Wisconsin Rapids","Portage","Randolph","Birchwood","Southampton","Ishpeming","Gwinn","Negaunee","Champion","Palmer","Skandia","Mount Olive","Lineville","Chelsea","Gardendale","Reedsburg","Verona","Mount Horeb","La Crosse","Saint Croix Falls","Osceola","Barnardsville","Columbia","Hampton","Twin Lakes","Walworth","McFarland","St. Genevieve","Wheeler","Manteo","Roebuck","Rockmart","Joppa","Pinson","Guntersville","Moulton","Thomaston","Monroe","Tarawa Terrace I","Williamston","Pelzer","Candler","Leicester","Locust Fork","Roxana","Saint Jacob","Elkmont","Arley","Coker","Pickens","Cordova","Jacksons Gap","Carriere","Alexandria","Morrisonville","Hadley","Farmington","Tracy","Sartell","Little Falls","Waite Park","Long Prairie","Fergus Falls","Buffalo","Wadena","Willmar","Delano","Adelanto","Dayton","Victorville","Grayling","Mount Pleasant","Linden","Davison","Essexville","Otisville","Oscoda","Frankenmuth","Birch Run","Newport","La Salle","New Boston","Kalkaska","Sault Ste. Marie","Greenville","Grandville","Rogers City","Alpena","Chesaning","Owosso","Gowen","Stanton","Shelbyville","Caledonia","Harrison","Kingston","Cheboygan","Vassar","Lapeer","Elk Rapids","Saint Ignace","Pierson","Reed City","Saint Louis","Millington","Auburn","Ithaca","Merrill","Gladwin","Rose City","Ortonville","Durand","Imlay City","Shepherd","East Dublin","Fort Benning","Sherrills Ford","Buffalo","Moody","Long Beach","Ocean Park","Sauk Rapids","Pennock","Cokato","Big Lake","Jefferson","Menominee","Altoona","Cambridge","Clyde","Granite Falls","Marion","Charlton","Pepperell","Hollis","Groton","Brookline","North Haverhill","Barre","Lyndonville","Lyme","Phelan","Lucerne Valley","Tahoe Valley","Roaring River","Moravian Falls","Elkin","Ronda","Mountain City","Wentzville","Joshua","East Prairie","Sheboygan Falls","Columbus","Two Rivers","Algoma","Rice Lake","Dodgeville","Mineral Point","Ashland","Lone Rock","Black Earth","Prairie du Sac","Minocqua","Wausau","Schofield","Hubertus","Hartford","Hubbardston","Paxton","Jefferson","Cadyville","Elizabethtown","Fiskdale","Douglas","Saltillo","Adamsville","Saint James","Nesconset","Moriches","Westhampton Beach","Hampton Bays","Oakland","Ringwood","Pompton Plains","Warwick","Florida","Glen Head","Greenlawn","Far Hills","Morris Plains","Riverside","Massapequa","Locust Valley","Highland Mills","West Haverstraw","Garnerville","Oyster Bay","South Hackensack","Malverne","Dover Plains","Verbank","Millbrook","Old Bridge","Miller Place","Wantagh","Cedar Knolls","Mastic","Mastic Beach","Oakville","Goshen","Baldwin","Valley Stream","Williston Park","Kenvil","Whitehouse","Netcong","Lynbrook","Fair Lawn","Sayreville","Cliffwood","Keansburg","Keyport","East Hampton","Montauk","Mine Hill","Milltown","Park Ridge","Ramsey","Centerport","Maspeth","Cresskill","Roslyn Heights","West Hempstead","Woodbury","Seaford","East Rockaway","Hillsdale","West Nyack","Liberty Corner","Manasquan","South Jamesport","Landing","Shoreham","Islip Terrace","Sayville","Brick Township","Port Monmouth","Bethpage","Roselle","Calverton","Franklin Square","Amagansett","Cedarhurst","Wappingers Falls","Stanfordville","Clinton Corners","Congers","West Sayville","Wingdale","Middle Island","Mount Sinai","Lagrangeville","Martinsville","Bellport","Brookhaven","Pelham","Cedar Grove","Oakhurst","Amenia","Millerton","Sloatsburg","Cream Ridge","Stormville","Canton","Trenton","Wayne","Harrison","Little Neck","Fairview","Little Ferry","Ridgefield","West Shokan","Kew Gardens","Alabaster","Vinemont","Glenwood","Paynesville","Loves Park","Brodhead","Milton","Ridgeway","Cadott","Williams Bay","Mazomanie","Princeton","Saint Cloud","Berlin","Maiden","Terrell","Hiddenite","Glendale","Mauldin","Morgan City","Gibson","West McLean","Palmerdale","Fayette","Lexington","Fultondale","Hanceville","Dadeville","Altoona","Scottsboro","Pleasant Grove","Blountsville","Carbon Hill","Parrish","Marietta","Bogart","Dayton","Rothschild","King","Holmen","Marshfield","Arcadia","Indian Wells","Elmhurst","Floral Park","Newport","Beaufort","Naples","Diana","San Gabriel","Stateline","Running Springs","Big Bear Lake","Kings Beach","Sun Valley","Copperas Cove","Bryan","Hughes","Paige","Widener","Oreana","Mamou","Hillsboro","Hematite","Osage Beach","Madison","Little Chute","Oconto","Galena","Kenton","Ada","North Lewisburg","Sharon","Lakeview","Muskego","Blanchester","Saint Paris","Bloomingburg","Sabina","Union City","Amelia","West Alexandria","Louisville","Centenary","Murrells Inlet","Pamplico","Baraga","Manistique","Escanaba","Gladstone","Houghton","Kingsford","Rapid River","Waunakee","Belmont","Waterford","Amory","Millport","Malakoff","Cashiers","Wyoming","Newark","Auburn","Fort Drum","Keuka Park","Canandaigua","Silver Lake","Geneseo","Heuvelton","Brushton","Moravia","North Chili","Romulus","Beans Purchase","Berne","Sidney","Waverly Hall","Irene","Kitty Hawk","Clermont","Saint Albans","Cowiche","Walla Walla","West Richland","Florence","Klamath Falls","Ashland","White Salmon","Roseburg","Sullivan","Pevely","Ashland","Robertsville","Saint James","Norwell","North Eastham","Hartland","Marshfield","Lakeville","Jewett City","East Providence","Stow","Mont Vernon","Killingworth","Haddam","North Easton","Cavour","Milbank","East Grand Forks","Beulah","Langdon","Tioga","Rugby","Saint John","Pierre","Harrisburg","Ely","Jonestown","Gering","Oshkosh","Scottsbluff","Hebbronville","Worden","Story","Sundance","Swainsboro","Toccoa","Gordo","Reform","Cozad","Thermal","Calipatria","Julian","Borrego Springs","Bountiful","North Platte","Shepherd","Pittsboro","Wauseon","Yellow Springs","Rockford","Salem","Denmark","Menominee","Hortonville","Falls City","Ulysses","Sharon Springs","Leoti","Satanta","Sublette","Deerfield","Lakin","Holcomb","Hugoton","Johnson","Syracuse","Cornelius","Kirwin","Liebenthal","La Crosse","Hoxie","Osborne","Plainville","Roseau","Thief River Falls","DeFuniak Springs","Greenville","Port Neches","Norwood","Demarest","Woodcliff Lake","Bloomingdale","Pequannock","Frenchtown","Elysburg","Columbia","Glenmoore","Sunbury","Kintnersville","Wellsville","Barnesville","Mount Carmel","Coryell's Ferry","Adamstown","Mount Pocono","Vernon","Bath","Wind Gap","Catasauqua","Upper Black Eddy","Erwinna","Springtown","Milford","Bloomsbury","Bangor","Mount Bethel","Marshalls Creek","Monroeton","Schnecksville","Laceyville","Wyalusing","York Haven","Dillsburg","Valley Green","Lewisberry","Dover","Palm","Trexlertown","Huron","Hazen","Cambridge","Fort Pierre","Volga","Ripley","Sorrento","Altoona","Quinnesec","Stanwood","Sand Lake","Whitehall","Grand Haven","Sanford","Freeland","Columbiaville","Au Gres","Fowler","Cass City","Gaines","Coleman","Goodrich","Prudenville","Plainwell","Otsego","Dorr","Harbor Springs","Manton","Bellaire","Montague","Martin","Shelby","Allegan","Allendale","Orange Grove","Rochester","Strafford","Belmont","Alton","Deerfield","Tilton","Sanbornton","Wolfeboro","Bristol","New Hampton","Northwood","Gilmanton","Epsom","Laconia","Center Harbor","Springvale","Meredith","Wolfeboro Falls","Shapleigh","Gilford","Alton Bay","Farmington","McColl","Louisville","Carthage","Morton","West","Forest","Ludlow","Pittsboro","Booneville","Burnt Hills","Verona","Ontario","Holley","Pine City","Stacy","Lindstrom","Corunna","Caro","Coldwater","Hamilton","Bridgeport","Flat Rock","Erie","Dryden","Vernon","Ossineke","Orleans","Beulah","East Tawas","Standish","Bethel","Bell Island Hot Springs","Eagle River","Barrow","Angoon","Fort Greely","Seward","Togiak","Stebbins","Homer","North Pole","Ambler","Fairbanks North Star Borough","Dillingham","Deltana","Kodiak","Koyuk","Soldotna","Kenai","Blairstown","Franklin","Sciota","Farmersville","Sunnyvale","Blue Ridge","McCaysville","Ellijay","Copperhill","Mineral Bluff","Renfrew","Allenport","Mineral Ridge","Wampum","West Pittsburg","Koppel","Tarrs","Richmond","Shawano","Marathon","Cabot","Williamstown","Blowing Rock","New Baden","Chincoteague Island","Cape Charles","Crisfield","Angier","Siler City","Mascoutah","Defiance","Hudson","Enoree","Spencer","Ogema","Neillsville","Pine Mountain","Holly Pond","Kimberly","Piedmont","Brookwood","Marshall","Bridge City","Nederland","Camden","Circle Pines","Montrose","Hanover","Riverton","Athens","White Haven","Hunlock Creek","Nanticoke","Shickshinny","Shavertown","Orangeville","Hardyville","Dunnsville","Guntown","Haynesville","Maysville","Augusta","Dover","Brooksville","Germantown","Carlstadt","Chatham","Cullowhee","East Flat Rock","Franklin","Sylva","Jefferson","Flat Rock","Diller","Dorchester","Friend","Hebron","Fairbury","Endicott","Wilber","Bruning","Utica","Blue Springs","Hickman","Martell","Sterling","Adams","Wymore","Filley","Plymouth","Odell","Glenwood","Sweet Valley","West Olive","Saint Johns","Carleton","Rapid City","Grawn","Williamsburg","Fruitport","Oshtemo","Barbeau","Charlevoix","Bear Lake","Kewadin","Reading","Colon","Grosse Ile","Melvin","Pinconning","Sheridan","Ida","Tekonsha","Luling","North Smithfield","North Kingstown","East Greenwich","San Clemente","Asbury","Spivey","Derby","Kingman","Sedgwick","Hiwasse","Eureka Springs","Harrison","North Providence","Greene","Burrton","Frontenac","Valley Center","South Hutchinson","Coffeyville","Garden City","Crestview","Concordia","Pratt","Augusta","Moran","Hahnville","Benson","Coventry","Chickasha","Eglin","Chepachet","Harrisville","North Scituate","Foster","Rumford","Central Falls","Saunderstown","Pride","Anthony","Buckeye","Goodyear","Casa Grande","Sahuarita","Cashion","Wickenburg","El Mirage","Sun City","Bennington","Elkhorn","Council Bluffs","Bellevue","Gretna","Bonaire","Centerville","Kenner","Olmsted Falls","Vinton","Addis","White Castle","Port Allen","Brusly","Sun City West","Lindsborg","El Dorado","Maize","Silver Lake","Newton","Caney","Berryton","Gas City","Lufkin","Bloomfield","Hardeeville","Mullica Hill","Columbia","Middlebourne","Poolville","West Helena","Clinton","Bay Springs","Gretna","Pearce","Scottown","Okanogan","Sheldon","Sneads","Halifax","Holton","Luverne","Jenkinsburg","Flora Vista","Farmington","Prospect","South Glastonbury","Bethany","Oakdale","Niantic","Quaker Hill","Broad Brook","Taftville","Falls Village","Grosvenor Dale","Moosup","Redding Ridge","Beacon Falls","Andover","Versailles","Woodbridge","Somers","Plainfield","Deep River","Sterling","Bridgewater","Winchester Center","Higganum","South Woodstock","Danielson","Redding","Contact","Glendora","Belle","Lonedell","Custer","Walhalla","Branch Township","Thomas","Watonga","Fredericksburg","Manhattan","Elwood","Gardner","Mount Rainier","Cornish","Syracuse","Lehi","Apple Valley","Helendale","Glenrock","Yuma","Knights Landing","Pilot Hill","Ione","Bath","Washington","Blue Ridge","Mead","Henderson","San Carlos","Ellsworth","El Paso","Forrest","Goodland","Colby","Oakley","Dighton","Detroit Lakes","Ferris","Nevada","Crandall","Scurry","San Ysidro","Attleboro Falls","Georgetown","West Newton","Hatfield","Glenside","Ardmore","Fresno","Bellaire","Glasco","Bonner Springs","De Soto","Upper Sandusky","Pleasant Ridge","North Salt Lake","Payson","Leesburg","Kensington","Waterford","Colton","Dufur","The Dalles","Elmendorf","Adkins","White Hall","Hunt Valley","Fairfax Station","St. Rose","Pendleton","Gladwyne","Voorhees Township","Atherton","Shobonier","Underwood","North Chicago","Bacliff","Wilmer","Lavon","Dubuque","Altoona","Coralville","Lone Tree","Chappaqua","Savage","Jordan","Elko","Danville","Ranger","Fairmount","Sugar Valley","Statham","Pope Valley","Rutherford","Lakeport","Garrison","Timpson","Tenaha","Gary","Cassopolis","Willow Springs","International Falls","Westfield","Artesia","Breese","Red Bud","Saint Libory","Farina","Mulberry Grove","Celeste","Martinsville","Corrigan","Winterthur","Great Falls","Derwood","Mercedes","La Feria","Rio Hondo","Donna","Laguna Woods","McClelland","Neola","Brightwaters","Belen","Brentwood","Hewlett","Morse","Rayne","Stonewall","Rosedale","Hagerstown","Economy","Lebanon","Daleville","Yorktown","Culver","Bremen","Churubusco","Claypool","Dresher","Gibson City","Lutherville-Timonium","Wattsville","Onancock","Capeville","Upperco","Tasley","Exmore","Spencerville","Chinle","Pinon","Fort Defiance","Tuba City","Wyckoff","Janesville","Hayes","Bolivia","Port Reading","Alma","Teutopolis","Grafton","Lebanon","Byron","Grand River","Jefferson","Clayton","Dahlonega","Blairsville","Cornelia","Crawford","Alto","Lake City","Lonoke","Perryville","Vilonia","Crocker","Lindsay","Dawson","Normangee","Groveton","Andrews","Saronville","Nebraska City","Santa Claus","Lancaster","Nokomis","Purcell","Grand Tower","Hastings","Doniphan","Sparkman","Sheridan","Grapevine","Fairdealing","Delta","Jefferson","Vanceburg","Flemingsburg","Argillite","America","Quantico","Cisco","Millington","Port Jefferson","Blue Point","Allentown","Wading River","Lavallette","Quogue","Ardsley","Pine Beach","Pomona","Haverstraw","Inwood","Roseland","Sea Cliff","Albertson","Highland Park","Highland Lakes","River Edge","Kenilworth","Glen Oaks","Cos Cob","Old Bethpage","Old Westbury","Point Pleasant Beach","Glen Ridge","Beverly","Aroostook Band of Micmac Trust Land","Comptche","Twain Harte","Mendocino","Point Arena","Harper Woods","Newburgh","Southgate","Covington","Latonia","Rosharon","Midway","Merced","Lindsay","Riverbank","Delhi","Linden","Exeter","Ballico","Lockeford","Woodlake","Dos Palos","Atwater","Leesburg","Ivanhoe","French Camp","Farmersville","Richton Park","White Bluff","Neptune Beach","Highlands","Goldenrod","Clearwater Beach","Southampton","Willingboro","Havertown","Lansdowne","Westville","Bryn Mawr","Milaca","Stone Park","Winton","Livingston","Kearny","Belleville","San Luis Rey Heights","Willis","Davidsonville","Burley","Union Grove","Somerville","Oneonta","Santa Clara","Cortez","Elkhart","Canyon","Littlefield","Clyde","Browning","Lake Peekskill","Pocono Pines","Scotrun","Shamokin Dam","Northumberland","Winfield","Middleburg","Coal Township","Shamokin","Kulpmont","Locust Gap","Ashland","Trevorton","Paxinos","Wilburton","Marion Heights","Montrose","Flagler Beach","Raymondville","Falfurrias","Charlotte","George West","Rio Grande City","Oilton","Dilley","Burneyville","Davis","Wynnewood","Marietta","Overbrook","Thackerville","Cheney","Hearne","Pine Grove","Kirkwood","New Holland","Atglen","Tower City","Parkesburg","Bird in Hand","Halifax","Valley View","Elizabethville","Middletown","Gap","Pequea","Holtwood","Williamstown","Drumore","Peach Bottom","New Providence","Christiana","Gratz","Leesport","Intercourse","Shoemakersville","Lykens","Friendsville","Towanda","Meshoppen","Dushore","Rome","Taylor","Wapwallopen","Montrose","Waverly","Benton","Dallas","Huntington Mills","Hop Bottom","Susquehanna","Hallstead","Stillwater","Harveys Lake","Nicholson","Falls","Conyngham","Paradise","Pen Argyl","Mohrsville","Kinzers","Blue Ball","Terre Hill","Canby","Fountain","Cannon Falls","Finlayson","Chisago City","Moose Lake","Sturgeon Lake","Center City","Willow River","Taylors Falls","McGregor","Bethel","Scandia","Askov","Decatur","Lawrence","Centreville","Jeddo","Hudson","Rives Junction","Rutledge","Washburn","Thorn Hill","Metamora","Yale","Potterville","Goodells","Bannister","Ashley","Maple Rapids","Alma","Elwell","Avoca","Lexington","Parma","Ovid","White Lake","Maybee","Grand Ledge","Posen","North Branch","Hillman","Decker","Mattawan","Pullman","Grand Junction","Gregory","Bancroft","Weidman","Six Lakes","Vestaburg","Barryton","East Wenatchee","Ephrata","Silvana","Clinton","Lyman","Brewster","Sumas","Benton City","Santee","Elloree","Hemingway","Yemassee","Lake City","Edisto Island","Conklin","Hart","Gobles","New Era","Fennville","Union","Marcellus","Vandalia","Covert","Middleton","Quincy","Alger","Attica","Monroeville","Frisco City","Camden","Magnolia","Ethelsville","Atmore","Repton","Kennedy","Ravenna","Mendon","Holstein","Fort Dodge","Denison","Britton","Clinton","White Pigeon","Markleeville","Gardnerville","Hayden","Priest River","Greenacres","Orofino","Pullman","Moscow","Genesee","Palouse","Weippe","Potlatch","Newport","Spirit Lake","Rosalia","Rathdrum","Ponderay","Fairfield","Oakesdale","Garfield","Tekoa","Viola","Parma","Wilder","Coos Bay","La Grande","Joseph","Enterprise","Wallowa","Crescent City","North Bend","Brookings","Coquille","Lakeside","Myrtle Point","Port Orford","Ferndale","Silverton","Gaston","Mill City","Dayton","Banks","Dundee","Amity","Aumsville","Ganado","Alpine","Eagar","Apache Junction","Pinedale","Snowflake","Whiteriver","Concho","Nutrioso","Saint Johns","Fort Apache","Chester","Klamath","Canby","Castle Rock","Clatskanie","Troutdale","Vernonia","Welches","Industry","Pontiac","Danvers","Clinton","Saybrook","Cissna Park","Bement","Moweaqua","Mahomet","Tremont","Assumption","Bushnell","Malta","Kewanee","Harmon","Monroe Center","Du Bois","Woodlawn","Bartelso","Irvington","Waltonville","Richview","Pocahontas","Ashley","Hoffman","Ina","Hoyleton","Armstrong","Gifford","Lovington","Mansfield","Fisher","Eureka","Newman","Collison","Roanoke","Tolono","Pawnee","Omaha","Eldorado","New Burnside","Herrin","Marion","Zeigler","Brookport","Mulkeytown","Roseville","Knoxville","Abingdon","Kirkwood","Carman","Carthage","Monmouth","Oakdale","West Frankfort","Harrisburg","Carrier Mills","Shawneetown","Marissa","Energy","Ewing","Benton","Murphysboro","Creal Springs","Ullin","Makanda","Raleigh","Simpson","Christopher","Villa Ridge","Buckner","Ellis Grove","Thompsonville","Royalton","Percy","Galatia","Ava","Steeleville","Willisville","De Soto","Cypress","Pittsburg","Evansville","Vienna","Lucasville","Sardinia","Pomeroy","Piketon","Middleport","Albany","Nelsonville","Ostrander","Beverly","Guysville","Langsville","Baltimore","Vinton","New Marshfield","Sugar Grove","Portland","Rockbridge","Otway","Laurelville","Amesville","Waldo","Chauncey","Somerville","Georgetown","Seaman","Winchester","Bremen","Williamsport","Midland","McArthur","Zaleski","Beaver","Oak Hill","Greenfield","Cardington","Amanda","Mount Orab","Wharton","Russellville","Ashley","Leesburg","Hamersville","Richwood","Lowell","Byesville","Cheshire","Prospect","New Vienna","Senecaville","Winesburg","Norwalk","Powder Springs","Stockbridge","Henderson","Lyons","Emmett","West Portsmouth","Lambertville","Mears","Fremont","Oberlin","Garrettsville","Polk","Columbia Station","Wakeman","East Claridon","Sugarcreek","Felicity","Clarksville","Genoa","New London","Willard","Port Clinton","Dover","Farmer City","Freeport","Byron","Belvidere","Rockton","Kingston","Stillman Valley","Cortland","Hinckley","Elizabeth","Durand","La Moille","Serena","Somonauk","Goodfield","Wonder Lake","Waterman","Minonk","Earlville","Sparland","Princeville","Dunlap","Granville","Wyoming","Cedar Point","Toulon","Henry","Chillicothe","Minier","Atlanta","Chenoa","Fairbury","McLean","Chatsworth","Elkhart","Wapella","Gridley","Colfax","Clayton","New Canton","Heyworth","Streator","Piper City","Hudson","Robinson","Paxton","Williamsfield","Chester","Sailor Springs","Johnston City","Louisville","Jonesboro","Goreville","Flora","Du Quoin","Cobden","Dongola","Kempton","Flanagan","Cullom","Saunemin","Rossville","Winnebago","Mount Pulaski","Chestnut","Leland","Tiskilwa","Brimfield","Cove","Dallas","Elgin","Union","Lostine","Columbia City","Willamina","Carlton","Hermiston","Leavenworth","Gold Bar","Maple Falls","Washingtonville","Narrowsburg","Glen Spey","Bloomingburg","Wurtsboro","Eldred","Otisville","Cochecton","Barryville","New Berlin","East Pharsalia","Willet","West Edmeston","Masonville","Unadilla","Waterville","Brookfield","Hubbardsville","Chenango Forks","McDonough","Franklin","North Brookfield","New Woodstock","Earlville","Sidney Center","Hemlock","Mount Morris","Perry","Springwater","Linwood","Le Roy","Livonia","Honeoye Falls","Nunda","Jasper","Northrup's of West Bloomfield Mobile Home Park","Port Leyden","Woodgate","Remsen","Hilton","East Branch","Port Crane","Roscoe","Lisle","Dryden","Cincinnatus","Downsville","South Plymouth","Lac du Flambeau","New Richmond","Spring Green","Star Prairie","Arkdale","Pardeeville","Lake Delton","Johnson Creek","Belleville","Westfield","Mauston","Hazelhurst","Merrill","Abbotsford","Hatley","Mayville","Adams","Friendship","Rock Springs","Random Lake","Campbellsport","Clyman","Cascade","Neosho","Kewaskum","Elkhart Lake","Waldo","Mount Calvary","Fredonia","Stratford","Tomahawk","Owen","Woodruff","Athens","Fayette","Celina","Helena","Antwerp","McComb","Fort Recovery","North Fairfield","Hicksville","Scott","Put-in-Bay","Strasburg","Minerva","Bloomville","Clyde","Payne","Huron","Weston","Pioneer","Carrollton","Greenwich","Lodi","Edon","Dundee","Burbank","Bolivar","Malvern","New Washington","New Plymouth","Wallace","Bonners Ferry","Athol","Oldtown","Moyie Springs","Mullan","Bayview","Blanchard","Pageland","Flag Pond","Stem","Butner","Hayesville","Warne","Whittier","Scotts Mills","Berlin Heights","Haviland","Hanoverton","Collins","Monroeville","Baltic","Grand Rapids","Pemberville","Nooksack","Colby","Nebo","Burnsville","Old Fort","Mars Hill","Bakersville","Hot Springs","Glenwood","Andrews","Marble","Brasstown","Young Harris","Topton","Dillsboro","Tuckasegee","Sapphire","Del Valle","Lancaster","Egypt","Anthony","Iota","Hungerford","Franklin","Conklin","Ladera Ranch","Liverpool","Richmond Hill","Pooler","McSherrystown","Marysville","Landisville","Philipsburg","Boyertown","Centerville","Lewiston","Jackson","Palm City","Palm Beach","Oakland","Wrightsville","Summerville","Bridgeton","Wyncote","Florence","South Bound Brook","Penns Park","Toughkenamon","Northfield","Lumberton","DeWitt","South Boston","Washington","Wallkill","Rock Tavern","Granville","Williamstown","Lubec","Hampden","Poland","Cape Elizabeth","Waterville Valley","East Amherst","Clayton","Ellenburg Depot","Oriskany","Skaneateles Falls","Wellsville","Grand Isle","Cumberland Center","Saco","Bridgton","York Corner","Cornish","Mountainville","North Branch","Riderwood","Tracys Landing","Myersville","Sunderland","Solomons","Walnut","Malden","Hopedale","Alexandria","Elizabethtown","Archbald","Robesonia","New Oxford","Holden","Florence","Goodlettsville","Hillsville","Isle of Palms","Spring Grove","Fayetteville","Osceola Mills","Islamorada","Jesup","Midway","Corinth","Ocean City","West Berlin","New Providence","Adair","Kirtland","Heber","Middletown","Folsom","Oreland","Lewistown","Newmanstown","Bentleyville","Enola","Vevay","Island Lake","Jenison","Marine City","Huntington Woods","Highland","Wildwood","Pitman","Asbury","Edgewood","Marriottsville","Dayton","Marietta","East Petersburg","Columbus","Worcester","Cheltenham","Gibbsboro","Eagle","Trinidad","Captiva","New Ulm","Auburn","Chase City","Sherborn","Upton","Damascus","American Canyon","South Holland","Kenilworth","New Castle","Alpine","El Dorado","East Calais","New Castle","Greenland","Centerville","Moore Haven","Bartow","Gallup","Mound","Wayzata","Long Lake","Maple Plain","Bondurant","Sparks","Naylor","Geneseo","Galva","Cambridge","Port Byron","Carrollton","Brunswick","Caruthersville","Delavan","Dawson","Cataula","Waterloo","Traer","Aplington","Eldora","La Porte City","Millsboro","Lewes","Fortson","Silver Bay","Two Harbors","Cassville","Goodman","Dawson","Lacon","North Webster","Chanhassen","Belle Plaine","Saint Peter","Loami","Thomasville","Burlington","Galena","Marshalltown","Grinnell","Worthington","Fulda","Lena","Darlington","Pearl City","Cuba City","Pecatonica","Chadwick","Lanark","Warren","Hazel Green","Shannon","Milledgeville","Davis","Hanover","Willacoochee","Doerun","Mount Carroll","Benton","Irvington","Prior Lake","Atkinson","Marion","Excelsior","Iron Junction","Chisholm","Virginia","Carl Junction","Sarcoxie","Santa Rosa Beach","Angola","Tama","Manchester","Parkersburg","Granite Falls","Cloquet","Bettendorf","Kernville","Bodfish","Wofford Heights","Adel","Clinton","Darwin","Hutchinson","Butler","Marceline","Norborne","Dixons Mills","Hayfield","Cuba","Vinton","Newton","Brookings","Hermann","Lillian","Robertsdale","Effingham","Chatfield","Saint Charles","Gaylord","Hector","Nevada","Burlington","Danville","Nappanee","Ardmore","Boone","Leitchfield","Smiths Grove","Lake Wilson","Luverne","Livingston","Midland","Manson","Coon Valley","Spirit Lake","Lake Park","Morrison","De Witt","Golden City","Fairfield","Prophetstown","Camanche","Grimes","Maquoketa","Cairo","Savanna","Fulton","Viroqua","Westby","New Lisbon","Gulf Shores","Americus","Nogales","McDaniels","Archie","Albia","Oskaloosa","Burkesville","Albany","Marseilles","Baldwin City","Mattoon","West Branch","Belle Plaine","Towanda","Eldridge","Edenton","Knox","Birmingham","LeClaire","Albion","Hanna City","Egan","Hampton","Creston","Prairie du Chien","Atlantic","Glenwood","Camden","Ventura","East Moline","Durant","Grabill","Preston","Orange Beach","Centerville","Bloomfield","Wiggins","Decatur","Winsted","Franklin","Colona","Fairfax","Hennepin","Carroll","Charleston","Moyock","Milan","Andalusia","Alpha","Waconia","Lanesboro","Galesburg","Arlington","Ivanhoe","Bonifay","Avon","Farmington","Silverhill","North Liberty","Frankford","Hiawatha","Williamsburg","Ocean View","Bishopville","Conway","Forsyth","Kirbyville","Marshfield","Seymour","Nixa","Mantorville","Stanford","Solon","Morris","Belgrade","Appleton","Odessa","Kensington","Wheaton","Spring Branch","Salado","Bethel Springs","Mathiston","Hickory Valley","DeBary","De Leon Springs","Cape Canaveral","Gotha","Oakland","Sebastian","Whitestown","Sinton","Gregory","Bishop","Medina","Mercer","Waldo","Long Island","Luray","Smith Center","Phillipsburg","Kensington","Scandia","Hoisington","Helen","Athens","Lake Park","Horse Cave","Seffner","Plover","Clarksville","York","Williamston","Roanoke Rapids","Smithfield","Great Falls","Babb","Ellensburg","Atlantic Beach","Kuttawa","Southaven","Clinton","Rocky Mount","Niceville","CaÃ±on City","Rio Rancho","Mansura","Forsyth","Claremont","Salida","South Padre Island","Sulphur Springs","Yutan","Geneva","Nicholson","Lexington","Cleveland","Carnesville","Purdy","Stockton","Bolivar","Union Star","Altamont","Gallatin","Bellflower","Holliday","Curryville","Silex","Sandoval County","Savanna","De Kalb","Comer","Tiger","Danielsville","Baldwin","Mount Airy","Perry","Homerville","Fitzgerald","Marshallville","Nacoochee","Eastanollee","Lavonia","Clarkesville","Sinclairville","Blakely","Leary","Marcellus","Dillard","Hull","Chickamauga","LaFayette","Vega","Panama","Berryville","Alpena","Huntsville","Green Forest","Foss","Wayne","Hammon","Wilmore","Peru","Firth","Unadilla","Oglethorpe","Montezuma","Wray","Morgan","Uvalda","Lakeland","Buena Vista","Rebecca","Hodgenville","Campbellsville","Cecilia","Greensburg","Clarkson","Princeton","Corydon","Versailles","Leavenworth","North Vernon","Winchester","Elizabeth","Brownstown","Owensville","Oakland City","Milltown","Westport","Shoals","Henryville","Francisco","Worthington","Depauw","Saint Anthony","Georgetown","Dubois","Lewisburg","Greensburg","Osgood","Farmersville","Phillipsburg","Casstown","Connersville","Lanesville","College Corner","Crandall","Freetown","Lynn","Salem","Milan","Loogootee","New Salisbury","Patoka","Memphis","Springport","Butlerville","Ohio City","Crane","Scottsburg","Batesville","Etna Green","Mentone","Middlebury","Bourbon","Rolling Prairie","Forreston","Kirkland","Creston","Cherry Valley","Leaf River","Capron","Mount Morris","West Salem","Palestine","Lawrenceville","Albion","Casey","Clay City","Oblong","Wayne City","Greenup","Sainte Marie","Bridgeport","Noble","Carlock","Roodhouse","New Athens","Shirley","Franklin","Homer","Kouts","Union Mills","La Crosse","Hanna","West Terre Haute","Akron","Wheatland","Farmersburg","Hartford City","Sullivan","Prairieton","Cory","Lewis","Marshall","Center Point","New Goshen","Chrisman","Clay City","Bronson","Eau Claire","Constantine","Oostburg","Brillion","Oakfield","Chilton","Theresa","Belgium","Antigo","Wyocena","Montello","Conover","Wenatchee","Entiat","Laurel","Butler","Liberty","Huntington","Williamsburg","Laconia","Pleasant Lake","Zanesville","Rushville","Mooreland","Lost Creek","Parsons","Flemington","Marlinton","Valley Head","Delbarton","Oak Hill","Chapmanville","Lesage","Tornado","Eleanor","Belle","White Sulphur Springs","East Lynn","Fort Gay","Ronceverte","Danville","Ona","Hurricane","Prichard","Meadow Bridge","Richwood","Dunbar","Pleasant Hill","Odell","Le Roy","Wenona","Mount Sterling","Onamia","Isle","Mora","Brainerd","Needmore","Breezewood","Roaring Branch","Munith","Onondaga","Jermyn","Wyoming","Ulster","Lake Winola","Sugar Run","Houghton Lake","Atlanta","Richmond","Brown City","Harbor Beach","Carson City","Tivoli","Hyde Park","Martin","Palmersville","Sharon","Villa Grove","Seymour","Thomasboro","Sidney","Ancona","Blanding","Moab","Monticello","Almond","Boardman","Kailua","Barstow","Beaumont","Tompkinsville","Edmonton","Providence","Sterling","La Harpe","Olpe","Matfield Green","Cassoday","Marquette","Armona","Kewaunee","Pound","Pearson","Gleason","Birnamwood","Lena","Greenleaf","Luxemburg","Marion","Leopolis","Coleman","Casco","Crivitz","Wallace","Westwood","Rio Vista","Greenville","Janesville","Milford","Herlong","Crescent Mills","Cascade","Wheelersburg","The Plains","Blue Creek","Morrow","Summerfield","Greenfield","Apalachin","Plymouth","Ringtown","Jasonville","Wanatah","Fountain City","Losantville","Thorntown","Monroeville","Cutler","North Manchester","Carbon","Dennison","Bicknell","Point Pleasant","Scott Depot","Culloden","Nellis","Hanover","Crum","Lynco","Fraziers Bottom","Gilbert","Verdunville","Princeton","Jane Lew","Madison","Alderson","Proctor","Green Bank","Webster Springs","Rock","Philippi","Junior","Center Point","Elkins","Bruceton Mills","Frankford","Nitro","Sandyville","Hico","Craigsville","Mount Hope","Walton","Crawley","Reedy","North Matewan","Gap Mills","Mount Gay","Weston","Shinnston","Saint Albans","Berwind","Cedar Bluff","Bomont","Gay","Spencer","LeRoy","Spurlockville","Paw Paw","Watson","Altamont","Dallas City","Winchester","Greenfield","Griggsville","Maroa","Strawn","Herrick","Patoka","Warfordsburg","Greencastle","Springville","Zion Grove","Covington","Middlesex","Whitney Point","Etna","Sandy Creek","North Creek","Altmar","Lake Pleasant","Adams","Pulaski","Lacona","Indian Lake","Saint Johnsville","Williamstown","Brant Lake","Old Forge","Tribes Hill","Almond","Fillmore","Hunt","Honeoye","Dalton","Walden","York","Lima","Ava","Berkshire","Heber","Overgaard","Window Rock","Manson","Cashmere","Jackson","Hollywood","Saint Germain","Barneveld","Westboro","Arena","Grand Marsh","Ringle","Sister Bay","Eagle","Perrinton","Riga","Loyal","Irma","Three Lakes","Glenville","Le Roy","Clarks Grove","Adams","Kenyon","Blooming Prairie","Pease","Clear Lake","Watervliet","Saint Clair","McDavid","Thomaston","Catherine","Century","Peterman","Mount Gilead","Amsterdam","Bowerston","Scio","Homeworth","Carey","Stryker","Jewett","Dexter City","Carbon Hill","Commercial Point","Wilton","Isleton","Caldwell","Rutland","Chippewa Lake","Farmland","Kansas","Clarks Hill","Plymouth","Marengo","Birdseye","Red Jacket","Matewan","Evans","Mount Nebo","Alkol","Kenna","Clendenin","Kincaid","Logan","Powellton","Union","Pecks Mill","Belington","Bridgeport","Gosport","Rensselaer","Cambridge City","Pershing","Grant Park","Clifton","Rochester","Vernon","Coal City","Meridianville","Petal","Byram","Laplace","Grand Junction","Los Lunas","White Sands","Ranchos de Taos","Bloomfield","Solvang","Forestville","Felton","Otis Orchards","Tell City","Carthage","Lafayette","Osseo","Lincoln Park","Pittsford","Harpswell","Orrs Island","Freeport","Bath","West Durham","Elkton","Highland Springs","Moseley","The Plains","Edwards","Mead","Rainier","Plympton","Halifax","Bryantville","Pembroke","Manchester-by-the-Sea","Granby","Pownal","Northampton","Chatham","South Londonderry","Lake Elmo","Belle Glade","Summerland Key","Dania Beach","Chittenden","Poultney","Underhill","Richmond","Montague","Bernardston","Northfield","South Lancaster","Portsmouth","North Hero","Beaufort","Ladson","Clewiston","Greenfield","Kentfield","Palos Park","Lakeside","Mount Zion","Jonesborough","Unicoi","Big Stone Gap","Corryton","Maynardville","Chilhowie","Saltville","Marion","Luttrell","Bulls Gap","Hampton","Pennington Gap","Chuckey","Limestone","Wise","Atkins","Pound","Coeburn","Heiskell","Norton","East Stone Gap","Appalachia","Strawberry Plains","Pocasset","Morton","Shiloh","Port Republic","Bordentown","Penns Grove","National Park","Harleysville","Rockford","Dryden","Jonesville","Meadowview","Damascus","Duff","Oakdale","Woodlawn","Fries","Austinville","Sharpsville","Attica","Dayton","Kimmell","Bluffton","Albany","Saint Paul Park","Madelia","Columbia","Hughesville","Muncy","Montgomery","Shippensburg","Myerstown","Annville","Wiconisco","Berrysburg","Afton","Cosby","Lake City","Norris","Briceville","Andersonville","Whitesburg","Greenback","Clintwood","Midway","Dungannon","Clinchco","Mosheim","Mohawk","Pahokee","Mazon","Markham","Fortville","Larkspur","Evans","Minersville","Old Forge","Dickson City","Campbelltown","Palmyra","Manchester","Newport","Red Lion","Lenhartsville","Huntingdon","Mount Union","Shrewsbury","Glen Rock","Jamison","Richboro","Palmyra","Berlin","Rexmont","Bernville","Bridgeville","Saint James City","Okahumpka","Weirsdale","Lehigh Acres","Immokalee","Marco Island","LaBelle","South Bay","Silver Creek","Byron","Madison","Crawfordville","Fall Branch","Mascot","Marion","Brunswick","Topsham","Leeds","Divernon","Beech Grove","Hartsville","Greentown","Rock Falls","Grayland","Milton","Taylorsville","Valley Springs","Reedley","Mendota","San Joaquin","Kerman","Clute","Edgartown","West Dennis","Sagamore Beach","Buzzards Bay","Williamsburg","New Ipswich","Feeding Hills","Englewood","Rotonda","Fort Meade","Frostproof","South Fork","Accident","Venetia","Leechburg","Spring Church","Hawthorn","Peckville","Womelsdorf","Schuylkill Haven","Port Matilda","Jessup","Olyphant","Dauphin","Mill Hall","Jersey Shore","Marion","Duryea","Lemoyne","Dunstable","Merrimac","East Sandwich","Forestdale","East Taunton","Mashpee","Rochester","West Harwich","Burlington","Bloomfield","Peotone","Paoli","Califon","Oxford","Woodbine","Salem","Cape May Court House","Villas","Port Murray","Mount Royal","Gibbstown","Audubon","Oaklyn","Runnemede","Clarksboro","Pemberton","Belford","Beach Haven","Monmouth Beach","Fords","Woodstown","Dividing Creek","Thorofare","Roebling","Bernardsville","Woodbury Heights","Mantua","Belle Mead","Roselle Park","Palmetto","Larkspur","Hooper","Carmel","Somers","Wilton","West Townsend","Cataumet","Litchfield","Head of Westport","North Franklin","Franklin","Suquamish","Orting","Sultan","Eastlake","New Castle","Kersey","Green Mountain Falls","Galena Park","Santa Fe","Cedar","Fox Lake","Bedford Park","Creve Coeur","Vallecito","Sheridan","Knightsen","Fulton","Penngrove","Hathorne","Windsor","Sunapee","Essex","Northford","Auburndale","Irasburg","Weatogue","Woolwich","Chester","Greenville","Centerville","Polo","Rochester","Linton","Fairmount","Gillsville","Talmo","Havre de Grace","Ijamsville","Taneytown","Bladensburg","Mayo","Brandywine","Emmitsburg","Riverdale","Triangle","Jobstown","Mount Ephraim","Whitehouse Station","Ewan","Lambertville","Landisville","Cookstown","Stratford","Annandale","Port Norris","Fort Lupton","Woodacre","Salem","Saratoga Springs","East Berkshire","New Boston","Francestown","Kingston","Plainfield","Enfield","Ludlow","South Hero","Philomath","Sanibel","Bokeelia","Alva","Walkersville","Smyrna","Indian Head","Adamstown","Wyoming","Middletown","Reisterstown","Huntingtown","Catonsville","Phoenix","Point of Rocks","Lincoln","Jenkintown","Claymont","Croydon","Wynnewood","Landenberg","Glenolden","Mont Clare","Hockessin","Folcroft","Essington","Brookhaven","Spring Mills","Ronks","Loganton","Lowell","Buena","Quakertown","Lascassas","New Market","Jacksonville","Davisboro","Beaverdam","Bastrop","Wallingford","Crownsville","Glenwood","Teterboro","Cicero","Jamestown","Garrett","Windfall","Stayton","Minotola","Aston Arms","Edgemont","Oaks","Winona Lake","Boyds","Ridgway","Lawrence","Weirton","Marblemount","New Lothrop","Delton","San Geronimo","Sunderland","Linden","Hampton","Garnet Valley","Dublin","Highspire","Eighty Four","Shelocta","Patterson","East Berlin","Fruitland","Taholah","Burr Hill","Centre","Belcamp","Kents Store","Elkridge","Pittstown","Willow Street","Fort Campbell North","Cresson","Woodberry Forest","Federalsburg","Suffield","Rockwood","Saint Leonard","Valleyford","Caledonia","Abington Township","West Falmouth","Granite Bay","Spotsylvania","Goldvein","Pebble Beach","Bumpass","Carson","Haymarket","Strasburg","Hurlock","Whites Creek","Thompson's Station","Ringoes","Berkeley Heights","Mineral","Argyle","Fairfield","Butler","Pomfret","Woodbine","Cedar Crest","White House","Orwigsburg","Greenwood","Haddon Heights","Norma","Mountainside","Gambrills","Claridge","Avalon","Glen Arm","Lyles","Tigard","Bennington","Baxter","Primus","Ireland","Holland","Bolt","Myrtle Creek","Emmett","Kimball","Emporia","Yale","Petersburg","Randolph","Willow Grove","Livingston","Dahlgren","Swanton","Clifton","Defiance","Midland","Tamaqua","Harlem","Aurora","Huntington","Home","Clearwater","Wales","Ephraim","Eureka","Fairview","Mona","Santaquin","Garberville","Fallon","Willow Creek","Cambridge Springs","Merrifield","Washington","Soulsbyville","Jamestown","Sequoia","Hyampom","Freeport","Timberlake","Ferdinand","Hamburg","Clive","Prescott","Lafferty","New Knoxville","Linden","Lonsdale","New Concord","Russellville","Sawyer","Redmond","North Newton","Pierce City","Santa Anna","Caldwell","De Leon","Round Mountain","Dalhart","Stockdale","Buchanan Dam","Krum","Poth","Point Comfort","Mustang","Muleshoe","Clovis","Dublin","Hartwell","Grant","Arnaudville","Aguanga","Sterling Forest","Astoria","Anamosa","Tuxedo Park","Arrington","Watkins Glen","Summit","Colliers","Monrovia","Sandersville","Tonawanda","Freeport","Ford City","Sanbornville","Sabattus","Presque Isle","Tonawanda","Fairfax","Noonan","Ray","Crosby","Alamo","Epping","Flaxton","Columbus","Powers Lake","Chattaroy","Liberty Lake","Foxburg","Brockway","Strattanville","Knox","New Bethlehem","Rimersburg","Shippenville","Cheswick","Homer City","Derry","Dugger","Carlisle","Shelburn","Pimento","Clinton","Soap Lake","Greenville","Lakewood","Mountain","Gainesboro","Byrdstown","Livingston","Jamestown","Grimsley","Hilham","Bend","Fulton","Brookeville","Sauquoit","Elk","Nikiski","Max Meadows","Summersville","Central Valley","Wells","Buffalo","Helena","Thomaston","Ellendale","Auburn","Westview","Roundhill","Magnolia","Buffalo","Upton","Cave City","Ferguson","Sonora","Jones","Raymond","Auburn","Manchester","Rector","French Lick","Beaver Dam","Nashville","Vergennes","Tilton","Cherokee","Cathlamet","Rainier","Osakis","Clarissa","Perham","Bigfork","Omak","Oroville","Tonasket","Twisp","Winthrop","Walnut Grove","Ryde","Tipton","Sand Creek","Blissfield","East Windsor Hill","Woodward","Valley View","Lexington","Wakarusa","Wellington","Chesterfield","Wellton","La Vista","Hurley","Fairfax","Auburndale","Carroll","Calhan","Canon City","Kamiah","Kearney","Oak Creek","Yampa","Hayden","Denver","Mount Vernon","Avon","Bird Island","Flensburg","Litchfield","Foley","Belgrade","Red Lodge","Lolo","Butte","Victor","Potomac","Anaconda","Hamilton","Stevensville","Whitehall","Conrad","Corvallis","Dillon","McCammon","Wilson","Evanston","Jackson","Riverton","Wright","Veneta","Cottage Grove","Holts Summit","Teton Village","Castroville","Gila Bend","Coolidge","Albertville","Carlisle","Douglas","Rose Hill","Ranger","Yadkinville","Muenster","Saint Pauls","Magnolia","Troy","Keokuk","Wellington","Halsey","Kemmerer","Autryville","Whitefish","Brownell","Carbondale","Atwood","Merino","Sterling","Great Mills","Beggs","Stanardsville","Buena Vista","Maxton","Petrolia","Byers","Fiddletown","Baxter Springs","Floyd","Etna","Happy Camp","Fort Jones","New Richmond","Mossyrock","West Point","Pine Grove","Tornillo","Evant","Goldthwaite","Menard","Ozona","Tarboro","Utopia","Rocksprings","Camp Wood","Bangs","Meadow","Robert Lee","Mannford","Hancock","Davis","Mount Wilson","Delano","National City","Forest","Earlimart","Verdi","Willits","Big Sur","Brookfield","Tumwater","Ault","Rockville","O'Neill","Atkinson","Inman","Clear Lake","Rogue River","Pleasant Hill","Gold Hill","Jacksonville","College Place","Seaside","Corrales","Silver City","Tahuya","Wright","Rollingbay","Moriarty","Soda Springs","Cut Bank","East Helena","Donald","Cascade Locks","Glorieta","Las Vegas","Kuna","Lusk","Rexburg","Pacific","Muscatine","Hastings","Eagle Grove","Cass Lake","Cottonwood","Lennox","Deer Island","San Luis","Franktown","Isanti","Brewster","Romney","Quemado","Bagley","Cave Creek","Stone Lake","McDermitt","Cattaraugus","Papillion","Hibbing","Augusta","Cerrillos","Grand Island","Dillard","Frisco","Independence","Zarephath","Springdale","Crested Butte","Tubac","Hawthorne","Seligman","Tipton","Pewee Valley","Elgin","Craig","San Fidel","Wappapello","Van Buren","Oakland","Fort Irwin","Forest City","Gardiner","Aberdeen Proving Ground","Carefree","Saint Michael","La Fox","Doswell","Antioch","Bushton","Holyrood","Miltonvale","Moundridge","Goessel","Little River","Inman","Dorrance","Lyons","Clyde","Minneapolis","Hesston","Wolfe City","Park Hills","Luling","Holderness","Akron","Ben Wheeler","Van","Grand Saline","Alba","Del Rio","Rudolph","Nekoosa","Short Hills","Wellsville","Mendon","Clarkston","Bear River City","Preston","Honeyville","Hyde Park","Dayton","Weston","Paradise","Mantua","Spanish Fork","Morgan","Grantsville","Stockton","Marsing","Eden","Huntsville","Eagle Mountain","Wallsburg","Howe","Weston","Whitesboro","Gunter","Whiteland","Christmas","Palisade","Gunnison","Farmingdale","Nederland","Frederick","Munroe Falls","Mount Olive","Jefferson","Whatley","Lithia","Clifton Forge","Covington","Crimora","Sutton","Talkeetna","Whiting","Onawa","Ida Grove","Missouri Valley","Sloan","Mapleton","Coon Rapids","Sergeant Bluff","Orange City","Windsor","Grandview","Gatesville","Amana","Saint George","Wamego","Saint Marys","Belvue","Denison","Rochelle Park","Nicasio","Waynesboro","Linden","Decaturville","Lebanon Junction","Eden Valley","Glencoe","Milan","Grand Rapids","Ogilvie","Hinckley","Aitkin","Saint Francis","Howard Lake","Pierz","Bellwood","Central Point","Azalea","Pu'unene","Madras","Redmond","Prineville","Eagle Point","Phoenix","Owensville","New Haven","Cave Creek","Folly Beach","Belmont","Prosperity","Aztec","Telluride","Norwood","Mancos","Ruidoso Downs","Winooski","Stowe","Wilmington","Thompson","Rootstown","Bakewell","Tulare County","Clayton","Moriah","Redwood","Alexandria Bay","Dexter","Castorland","Evans Mills","Hammond","Brier Hill","Earlsboro","Vici","Taloga","Binger","Crowley","Huger","Ossian","Craigville","Climax","Fort Totten","Fessenden","Wimbledon","Ypsilanti","Gackle","Saint Michael","Cold Brook","Crown Point","Claryville","Coeymans","Addison","Woodhull","Whitesville","Troupsburg","Rexville","West Liberty","Humansville","Cerro Gordo","Fountain","Stratford","Chaffee","Irving","Delevan","Cato","Cuba","Pima County","Alberton","Turner","Crystal","Wheeler","Sumner","Edmore","Vergennes","Palmer Lake","Princess Anne","Jefferson","Stockton","Warwick","Denton","Greensboro","Worton","Belmont","Crossville","Elizabethtown","Rosiclare","Golconda","Magnolia Springs","Spanish Fort","Kihei","Cambridge","Lyndon Center","West Burke","Brooks","McClellan Park Census Designated Place","Palos Verdes Peninsula","Sunset Beach","Rhome","Daisetta","Hull","Burton","Mont Belvieu","New Waverly","Steele","Linton","Hazelton","Lehr","Zeeland","Wilton","Wing","Diablo","Clayton","Amery","Bloomer","Osseo","Somerset","Baldwin","Strum","Eleva","Whitehall","Clear Lake","Durand","Phillips","New Auburn","Luck","La Pointe","Hixton","Grantsburg","Rosholt","Amherst","Siren","Webster","Independence","Chetek","Park Falls","Alma Center","Hammond","Balsam Lake","Tomah","Clark","Hendricks","Webster","Hazel","Wagner","Lake Andes","Keystone","Chamberlain","Tyndall","Viborg","Warner","Bradford","North Sutton","Virgin","Enterprise","Nunn","Carr","Joes","Idalia","Vona","Kirk","Hugo","Karval","Flagler","Eads","Roggen","Keenesburg","Madison","Wilton","Farmington","Millinocket","East Millinocket","Camilla","Colquitt","Benton","Garden Plain","Mulvane","Halstead","Valparaiso","Rotan","Clyde","Van Horn","Merkel","Albany","Orono","Calais","Blue Hill","Groveland","Fort Walton Beach","Wildwood","Crystal River","McGregor","Crittenden","Manvel","Blue Mountain","Water Valley","Onalaska","Jetersville","Sandborn","Granville","Cottageville","Rock Island","Bethune","Mount Croghan","Swansea","Ware Shoals","Franklin Springs","McCormick","Colchester","Winfield","Round O","Chester","Gilbert","Wagener","Starr","Parkers Lake","Great Falls","Winnsboro","Abbeville","Ruffin","Stearns","Smoaks","Calhoun Falls","Pilot Mountain","Wartburg","Saint Amant","Trenton","Webster","Irvington","Ekron","Guston","Harned","Rhodelia","Hardinsburg","Freeville","Earleville","Queen Anne","Kennedyville","Florence","Stanfield","Arizona City","Valley Farms","Ward","Cave City","Tupelo","Newark","Salem","Judsonia","Ravenden","Twin Peaks","Marshall","Cliffside Park","Wolcott","Zumbrota","Roberts","Jamesville","Croton","Fredonia","Ashville","Denair","Weimar","Hebron","Glen Ullin","McClusky","Flasher","Solen","Goodrich","Fort Yates","New Salem","Saint Anthony","Golden Valley","Groton","Faulkton","Frederick","Tombstone","Huachuca City","Brownfield","Floydada","Marana","Pima","Elgin","Willcox","Mountain City","Levelland","Livermore","Bode","Belle Plaine","Severy","Burden","Cedar Vale","Leon","Dexter","Howard","Moline","Longton","Argonia","Conway Springs","Norwich","Milton","Milan","Haviland","Greensburg","Eastland","Lexington","Pilot Point","Neosho","Olney","Coatesville","Redwood Falls","Morton","Vesta","Walnut Grove","Wabasso","Belview","Lamberton","Wood Lake","Morgan","Combined Locks","Glasco","Kauneonga Lake","Callicoon","Ho'olehua","Ka'a'awa","Hana","Keauhou","Honoka'a","Wailuku","Kaunakakai","Kalaheo","Kea'au","Blackshear","Jamestown","Granby","Moroni","Salina","Fountain Green","Mount Pleasant","Spring City","Loretto","Bluemont","Alexander","Leicester","Churchville","Hopewell","Gouverneur","Waterville","Marquand","Winslow Township","Edinboro","Corry","Waterford","Wingate","Valders","Troy","Fostoria","Munger","Dassel","Oak Park","Sauk Centre","Sugar Grove","Luray","Point Harbor","Roxboro","Orrstown","Fort Loudon","Saint Thomas","State Line","Spring Run","Kettle Falls","Bloomingdale","Hemlock","Lennon","Farber","Centertown","Bonnots Mill","Winona","Saint Clair","Allenton","Center Line","Casco","Columbus","Progreso","Alamo","Plattsmouth","Woodville","Miles City","Lewistown","Sidney","Glendive","Houlton","Monticello","Oakfield","Patten","Brookton","Howland","Perry","Abita Springs","Ironton","Merrifield","Outing","Staples","Nisswa","Pillager","Randall","Cushing","Algonac","Croswell","Dexter","Lake Arthur","Akron","Clifford","Peck","Pigeon","Marlette","Sebewaing","Minden City","Kinde","Otter Lake","Unionville","Clarksville","Las Animas","Dresser","Bixby","Bear Creek","Coffee Springs","Ariton","Newville","Avon","Markesan","Amherst","Valley","Beasley","Diboll","Wells","Pollok","Fruita","Silt","Delta","Paonia","Crawford","Cedaredge","Hotchkiss","Olathe","Alma","Florissant","Broadlands","Elmore","Cedarville","Coin","Auxvasse","Tarkio","Oregon","Lewistown","Maywood","La Belle","Rock Port","Rhineland","Williamstown","Taylor","Bethel","Polo","Forksville","Martins Creek","Warner","Canadian","Wynona","Gore","Keota","McCurtain","Kinta","Quinton","Porum","Deerfield","Newport","Bryn Athyn","West Brookfield","Underwood","Ashby","Erhard","Mariposa","Coarsegold","Eastsound","Lachine","Elkton","Linwood","Hubbard Lake","Presque Isle","Tatamy","Woodlyn","Royalton","Seadrift","Placedo","Shiner","Neodesha","Andover","Brazoria","Harrisburg","Elk River","Craigmont","Vienna","Alum Creek","Glenville","Dahlgren","Mill Shoals","Pearl City, Manana","Llano","Saint Maries","Medical Lake","Penn Yan","Lovington","Portales","Texico","Dozier","Brundidge","Ramer","Glenwood","Opp","Bonnieville","Hardyville","Munfordville","Cub Run","Summer Shade","Canmer","Knob Lick","Center","Sublimity","Lyons","Scio","Colfax","Shirley","Stokesdale","Robinsonville","Boomer","Hebron","Lexington","Holdrege","Broken Bow","Baker City","Pipestone","Cherokee","Estherville","Charles City","Idaho Springs","Iowa Falls","Deer Lodge","Oelwein","Raton","Hampton","Independence","Valentine","Colfax","Hartsville","Troutman","Providence","West Wendover","Pittsfield","Norway","Hollis Center","Horner","Perryton","Briscoe","Shamrock","Lefors","Skellytown","Riva","Longs","Galivants Ferry","Fosters","Goochland","Carlton","Malott","Riverside","Frankston","Edgefield","Dillon Beach","Ocean Shores","Warden","Naselle","Prescott","Dayton","Burbank","Ritzville","Grand Coulee","Nordland","Arapahoe","Bertrand","Eustis","Cambridge","Ogallala","Brule","Elwood","Loomis","Bar Harbor","Swannanoa","Enka","Hadlyme","East Marion","Canton","Cherryvale","Whitewater","Sapulpa","Sperry","Nichols","Los Altos Hills","Moss Landing","Oak View","Alpaugh","Lake Isabella","Weldon","Mifflinburg","Montandon","Millmont","Belleair Beach","Drummonds","Munford","Atoka","Mason","Crossville","Bryant","Dutton","Newport","Rainsville","Fyffe","Old Kotzebue","Flat Rock","Hollywood","Henagar","Reynolds","Talbotton","Butler","Cameron","Laotto","Fremont","Parker","Storm Lake","Wakonda","Tea","Belle Fourche","Blackhawk","Canon","Martin","Rockport","Napier","Canvas","Iaeger","Red House","Fort Ashby","Great Cacapon","Morehead","Pioneertown","Grundy","Mount Sterling","Delphi","Poneto","Warren","Wilkinson","Markleville","Francesville","Swayzee","Odon","Topeka","Ligonier","Wolcottville","Lagrange","Sweetser","Denver","Cloverdale","Atlanta","Bowling Green","Old Pekin","Montgomery","Leo","New Lisbon","Rome City","Brownsville","Buffalo","Star City","Winamac","Republic","Selah","Glendo","Fremont","Plainview","Wolfforth","Walters","Tahoka","Slaton","Prosser","Camden","Freedom","Greene","Interlaken","Waverly","Trumansburg","Center Tuftonboro","Metlakatla","Tok","Thorne Bay","Klawock","Craig","Haines","Petersburg","Northway","Chicken","Skaguay","Iliff","Lyman","Bayard","Bridgeport","Havre","Big Timber","Inverness","Turner","Sadieville","McLoud","Wheatland","Whitethorn","Redway","Carlotta","Fortuna","Riverdale","McKinleyville","Meridian","Philo","Stockton","Knoxville","Silver Creek","Glenn Dale","Lake Arrowhead","Alviso","Winthrop Harbor","Iron Ridge","Eastlake","Edwards","Polk City","Monett","Stahlstown","Everson","Melcroft","Indian Head","Normalville","Point","Princeville","Shafter","Firebaugh","Pixley","Concord","Remington","Montvale","Eagle Rock","Hot Springs","Verona","Goshen","Fort Defiance","Ridgeland","Guilderland","Sudan","Crosbyton","Ransom Canyon","New Deal","Bixby","Sand Springs","Mounds","Claremore","Webster","Warwick","Stilwell","Medicine Lodge","New London","West Swanzey","Belvidere Center","Tunbridge","Newport","West Lebanon","Wolcott","Passumpsic","Brownsville","Sharon","Barton","Rindge","Hancock","Sheldon","North Bennington","Moretown","Antrim","East Middlebury","Jay","Milford","Franconia","Bath","Fitzwilliam","Orford","Old Orchard Beach","Newbury","Phippsburg","Union","Woodsville","Parsonsfield","Richmond","Georgetown","Frankfort","Hiram","Jonesport","Tiverton","Jeffersonville","Ripton","Brookfield","Vernon","Eden","Randolph","Florence","East Burke","Ossipee","Woodstock","Greenfield","Cavendish","West Newbury","Salisbury","Charleston","Pittsfield","Deer Isle","East Blue Hill","Harrison","Lancaster","Ervings Location","Machiasport","Aurora","Milan","North Haven","Milo","Madawaska","Trumann","Tyronza","Wynne","Harrisburg","Manila","Walhalla","Kingsland","Hico","Madisonville","Bellvue","Eaton","La Salle","Hudson","Red Lake Falls","Erskine","Winger","Gatzke","Mentor","Lengby","Grygla","Beltrami","Bemidji","Crookston","Saint Hilaire","Goodridge","Plummer","Brooks","Oklee","Gonvick","Clearbrook","Shevlin","Gully","Trail","Doniphan","Maurepas","Hillsboro","East Norwich","Millington","Hope Hull","Ferriday","Saint Joseph","Columbia","Jonesville","Vidalia","Athens","Sicily Island","Ringgold","Sikes","Aurora","Gunnison","Curtice","Graytown","Bloomdale","Walbridge","Cygnet","Cooperstown","Hancock","Middleburgh","Stamford","Pattersonville","Howes Cave","Cleveland","Newton","Reedsville","Greenbrier","Plumerville","Morrilton","Marshall","Bee Branch","Shirley","La Cygne","Udall","Jamestown","Kingfisher","Blanchard","Hennessey","Longdale","Hollis","Apache","Putnam","Shattuck","Okeene","Mooreland","Cheyenne","Seiling","Geary","Baker","Reserve","Paulina","Laquey","Pomona","Wall","Hot Springs","Philip","Winner","Custer","Mission","Manderson","Reliance","Faith","Freeman","Pine Ridge","Kyle","Martin","Plankinton","Gilman","Industry","New Ulm","Carmine","Ledbetter","Carrollton","Valley","Dowelltown","Woodbury","Milton","Watertown","Liberty","Gordonsville","Hickman","Altoona","Lebo","Westphalia","LeRoy","Waverly","Washington","New Church","Cleveland","Waseca","Mapleton","Parowan","Carrington","Cando","Willapa","Lake Providence","Okolona","McHenry","Etta","Mooreville","Hickory Flat","Blue Springs","Belden","Foxworth","Greenwood Springs","Sallis","Rolling Fork","Sarah","Senatobia","Schlater","Indianola","Pope","Como","Kilmichael","Benoit","Duck Hill","Richton","Purvis","Buckatunna","Sumrall","Collins","Brooklyn","Vance","Diamondhead","Oak Island","Princeton","Morriston","Hawthorne","Mount Hermon","Youngsville","Waverly","Tybee Island","Lynch","Cerulean","Greenville","Bush","Braithwaite","Arabi","Concord","Iron Station","Fairview","Benton","Ashland","Van Vleet","Dennis","Scottdale","Brooks","Morris","Pegram","Bon Aqua","Dallas","York","Meansville","Williamson","Waco","Zirconia","Westville","Leesville","Rossville","Semmes","Montrose","Juliette","Pearl River","Holden","Slaughter","Robert","Rosepine","Plains","Orrville","Violet","Newborn","Dolomite","Ohatchee","Moscow","Somerville","Nesbit","Grayson","Wade","Pauline","Campobello","Gray","Aquilla","Virgie","Crystal City","Ottoville","Lincolnville Center","Santa Cruz","Los Alamos","Espanola","Medanales","Waitsfield","Franklin","Bristol","Huntington","Fairfield","Browning","Big Sky","Glasgow","Wolf Point","Eureka","Trego","Fortine","Malta","Fishtail","White Sulphur Springs","Geraldine","Moore","Rayville","Fullerton","Cayuga","Lisbon","LaMoure","Wishek","Forman","Lidgerwood","Milnor","Oakes","Gwinner","Ashley","Forbes","Havana","Kulm","Edgeley","Dresden","North Baltimore","Dousman","Mukwonago","Hales Corners","Marinette","Miamiville","South Vienna","Wales","North Prairie","Cedar Grove","Floral City","Irvine","Geneva","Hartford","Bradenton Beach","Avon","Warsaw","Wayland","Naples","Atlanta","Dale","Pavilion","Portage","Lakeside","Superior","Wauchula","Fruitland Park","Poplar Branch","Kenly","Spring Lake","Hamilton","Columbia","Farmville","Howe","Alum Bank","Vienna","Snow Hill","Blanch","Wapato","Goldendale","Tillamook","Roseboro","Salem","Holly Hill","Nashville","Bayboro","Lapel","Freeport","Erwin","Henrico","Pinetown","Buffalo Lake","South Whitley","Norlina","Bad Axe","Somerset","Springport","Trabuco Canyon","New Haven","Williamstown","Mokelumne Hill","Niland","Salton City","Winterhaven","Somerton","Roll","Franklin Park","Greenvale","Goldens Bridge","Big Bear","Eltopia","Halstad","Fisher","Hillsboro","Chokio","Shelly","Oak Ridge","Ellsworth","Girvin","King City","Hugo","Idabel","Gruver","Carrier","Henryetta","Hillister","Chandler","Bellevue","Findlay","Rockport","Lake Tomahawk","Elcho","Lake Lillian","Custer","Watertown","Saint Bonifacius","Mackinaw","Sibley","Meadview","Narvon","Springerville","Houlka","Akutan","Kotlik","Kiana","Noorvik","Eielson Air Force Base","Woodburn","Weiser","West Liberty","Cable","Bellefontaine","Newcastle","Minco","Luther","Crescent","Hugheston","New Martinsville","Sistersville","Hooker","Tyrone","Booker","Beaver","Spearman","Boise City","Forgan","Woodstock","Richfield","Mifflintown","Millerstown","Mount Pleasant Mills","McClure","Thompsontown","Pleasant View","Burns","Kingston Springs","Delco","Caledonia","Taylorsville","Brighton","Norco","Raymond","Lynchburg","Calhoun","Denton","Gaston","Boutte","Madisonville","Duson","Culloden","Fults","Modoc","Valmeyer","Summerton","Fort Bridger","Bostwick","Bowdoinham","Chartley","Ascutney","North Springfield","Orange","North San Juan","Evansdale","Lander","Tumacacori","Tijeras","Pine Grove","Rimrock","Barnesville","Medina","Ignacio","Hubbard","Hailey","Carlsborg","Firestone","West Burlington","Tesuque","Grants","Royal","Sidney","Edgewood","Eagle Nest","Kimberly","Clarendon","Tiona","Sheffield","Ludlow","West Sand Lake","South Paris","Manlius","Rogers","Thorndale","Buckholts","Moody","Gause","Sterling","Fairview","West Branch","San Martin","Ocean Grove","Wamsutter","Mountain View","West Point","Malin","Haslett","Tignall","Exeter","Lake City","Chimacum","Townsend","Ashton","Dickinson","Albion","Lincoln","Concordville","Alden","Bevington","Giddings","Kevil","Little Valley","Southborough","Coal Valley","Guernsey","Moran","Colville","Columbus","Angel Fire","Ocate","Saint Charles","Perry","Tunica","Howard","Sparta","Santa Teresa","Sanders","Riley","Victor","Jackson","Cimarron","Milan","Piedmont","Manquin","Melvindale","Tonopah","Bernalillo","Douglas","West Yellowstone","Keller","Vermillion","Adel","Mimbres","Panaca","Packwood","Clyo","Gaston","Greenview","Grove Hill","Arlington","Butler","Oakwood","Volcano","Mitchell","Gerlach","New Hope","Overton","Mount Enterprise","Warsaw","Archbold","Spring Hope","Cumberland","Prinsburg","Roaring Spring","Pioneer","Buckingham","Gibbon","Burwell","Arcadia","Scotia","Ravenna","Lakewood","Hill City","Ransom","Ord","Laguna","Vinita","Elk Park","Rotterdam Junction","Coleman","Corona del Mar","Augusta","Washington","Lyons","New Paris","North Bangor","Saint Regis Falls","Trafalgar","Blair","Ganado","Boardman","Valle","Center Barnstead","Barnstead","Lebanon","Milton","Smyer","Lincolnton","Saint Paul","Maury City","Crystal Springs","Tennessee Ridge","Richland","Nashville","Chamberino","Rothsay","New York Mills","Pelican Rapids","Locust","Stanfield","Arapahoe","Oriental","Bladenboro","Rocky Point","Swansboro","Chadbourn","Pink Hill","Grantsboro","Warsaw","West Mansfield","Jamestown","Sophia","Aberdeen","Confluence","Hainesport","Brightwood","Pleasantville","Avella","Gum Spring","Garyville","Warsaw","Faber","Port Trevorton","Mount Holly","Nephi","Coldspring","Grand Lake","Burnham","Bremo Bluff","Belzoni","Malvern","Unity","West Groton","Loveville","West Middlesex","Leonia","Kellerton","Luxor","New Johnsonville","Venus","Cambridge","Youngstown","Center Point","Voorheesville","Polk City","Cardale","Sybertsville","Baldwin","Fryburg","Friars Point","Glenville","Charles City","Aquasco","Berlin","Clyde Park","Gallatin Gateway","Emigrant","West Tisbury","Vansant","Poquoson","Woodland","Ruckersville","Elsa","Crestline","Biggs","Pennsburg","Broad Run","Kingwood","Fairless Hills","Lincoln","Stirling","Mappsville","Roseland","Edgewater","Pineville","Buttonwillow","Richlands","Bucklin","Washington Crossing","Cumberland","Alton","Kenbridge","Spout Spring","Lawrenceville","Halifax","Enfield","Oakwood","Canton","Buffalo","Calumet","Frederick","Custer City","Waynoka","Ringwood","Nash","Comanche","Halls","Tiptonville","Kenton","Obion","Mound City","Luray","Macon","Forest City","Green Castle","Green City","Ethel","Hale","New Cambria","Excello","Callao","Huntsville","Bosworth","Shiloh","Wilsonville","Maylene","Smiths","Kremmling","Point Reyes Station","Wentworth","Toronto","Lake Benton","Bradley","Clear Lake","Chester","Castlewood","Estelline","Mililani Town","Koloa","Ha'iku","Pikeville","Spring City","Mayer","Palmer","Collegedale","Cloudcroft","New Lebanon","Dyer","Blenheim","Lovejoy","Lattimore","Mount Olive","Lanai","Sparkill","Hamilton","Sharon","Norfolk","Kittery Point","Norwich","Greenbush","North Chatham","East Orleans","Wysox","New Albany","Lyle","Connell","Sunnyside","Plummer","Worley","Tensed","Stratford","Doland","Redfield","Cresbard","Cuthbert","Buena Vista","Barren Springs","Willis","Meadows of Dan","Pilot","Lewisburg","Adairville","Dunmor","Westmoreland","Dunnville","Vine Grove","Red Boiling Springs","Hardin","Alexandria","Independence","Okeana","Union","Walton","Williamstown","Fort Mitchell","Sunman","Steelville","Davisville","Linn","Cuba","Viburnum","Dunkerton","Crawfordsville","Bellevue","Dumont","Allison","Mediapolis","Sioux Center","Scranton","Lansing","Wapello","Woodward","Fontanelle","Moville","Atkins","McGregor","Wallingford","Dysart","Clarence","Elkader","Odebolt","Readlyn","Schaller","Decorah","Martelle","Dexter","Mount Sterling","Rockford","Postville","Spencer","Lawton","Audubon","Walcott","Goodhue","Sleepy Eye","Hanska","Springfield","Exeland","Hager City","Mazeppa","Welch","Radisson","Oronoco","Stewart","Tate","Ducktown","Alplaus","Mocksville","Harmony","Hamptonville","Efland","Hot Springs Village","Altamont","Golden Eagle","Milton","Barry","Killdeer","New England","Mott","Scranton","Rhame","Hettinger","Bigfoot","Eustace","Hickman","Anderson","Tehama","Pipersville","Hackberry","Limestone","Hazard","Beulaville","Nome","Chugiak","Kongiganak","New Salem","Powellsville","Zullinger","Ash Hill","Courtland","Nicollet","Mogadore","Evansville","Culver","Summerville","North Waterboro","Islesford","Northeast Harbor","Mars Hill","Phelps","Combs","Waco","Clay City","Fayetteville","Chappell Hill","Somerville","Medina","Hammondsport","Rush","Marion","Walworth","Hamlin","Smithville","Glen Gardner","University Park","Cynthiana","Fishel","Holualoa","Navasota","Quitman","Athens","Gladewater","Jacksonville","Aurora","Helena","Daingerfield","Blue Lake","Magnolia","New Haven","Fairmont","Foley","Loxley","Pelham","Buchanan","San Andreas","La Grange","Cayucos","Clearlake Oaks","Springville","Piercy","Smith River","Colbert","Julian","Coward","Unionville","Deckerville","Sandusky","Snover","Fairgrove","Carsonville","Deford","Gagetown","Applegate","Rockport","Falls of Rough","Loretto","Rineyville","Alpha","Lookout Mountain","Soddy-Daisy","Rossville","Graysville","Sale Creek","Gypsum","Armada","Hanalei","Hakalau","La'ie","Coupland","Inez","Chewelah","Shaw Island","Vulcan","Alpha","Powers","Beach","Enderlin","Northwood","Stanley","Portal","Lebanon","Buckland","Wapakoneta","Avery","Kalona","Blackwell","Mayer","Mechanicville","Slingerlands","Plains","Bailey","Ashburn","Randleman","Orangeville","Helper","Price","Wellington","East Carbon City","Huntington","Haynesville","Potosi","Choudrant","Jena","Keithville","Center","Port Aransas","Elm Grove","Lamar","Wiley","Smithville","Wray","Black River Falls","Platteville","Pottsville","Genoa","Galena","Deville","Wedowee","Dardanelle","Gould","Wilmar","Mountain View","Hodges","Carrollton","Lincoln","Westby","Sun River","Joplin","Hays","Absarokee","Choteau","Dupuyer","Shelby","Valier","Culbertson","Box Elder","Kevin","Columbus Grove","Fort Jennings","Garden Prairie","Orfordville","Vincent","Columbia Cross Roads","Lawrenceville","Mainesburg","Prattsburgh","Gillett","Millerton","Burdett","Lodi","Platte","Summit","Lester","Beresford","Scotland","Alcester","Rock Valley","Lake Preston","Valley Springs","North Lemmon","Salem","Emery","Stewardson","Bulpitt","Shelbyville","Beecher City","Nokomis","Kincaid","Blue Mound","Irving","Taylor Springs","Dow","Grafton","Verona","Seven Mile","Darien","Townsend","Forest","Dolores","De Beque","Hesperus","Strafford","Mills","Saratoga","Hiawassee","Suches","Morganton","Farmington","Rosburg","Centerview","Parkston","Morristown","Ipswich","Stickney","Doon","Pickstown","Unionville","Eagleville","Chapel Hill","Gill","Cripple Creek","Captain Cook","Columbia Falls","Bigfork","Libby","Strong","Shelby","Jonestown","Edcouch","Hydro","West Columbia","Humboldt","Union","Bushland","Wink","Hindsville","Elkins","Garfield","Cedar Glen","Wrightwood","Clearfield","Juniata","Minden","Kenesaw","Giltner","Axtell","Glenvil","Douglas","Rosemary Beach","Awendaw","Sebring","Adak","Phelps","Clifton Springs","Ovid","Belvidere","Wenham","Caledonia","Warrenton","Urbanna","Mount Angel","Maypearl","China Springs","Declo","Downey","Bancroft","Grace","Montpelier","Paris","Morning View","Knightstown","Greenwich","Selkirk","Humphrey","Medina","Cleveland","Valley City","Grace City","Langley","Point Roberts","Freeland","Shiocton","Clintonville","Weyauwega","Monroe","Van Dyne","Rosendale","Brandon","Wahoo","Kimball","Monteagle","Coalmont","Sewanee","Garysburg","Greenbackville","Laurel Springs","Unorganized Territory of Camp Lejeune","Guadalupe","Port Edwards","Arpin","Laneville","Oakhurst","Rye","Outlook","Plentywood","Poplar","Saint Marie","Medicine Lake","Nashua","Gate City","Chelan Falls","Alpha","Danbury","Laurens","Alta","Blencoe","Le Mars","Hawarden","Salix","Soldier","Jefferson","Annandale","Cologne","Inverness","Ackerman","Roxie","Meadville","Bude","Hermanville","Pinola","Pattison","Summit","Ixonia","Fellsmere","Talent","South Canaan","Lake Ariel","East Waterboro","Waterboro","Sipsey","Paradise","Newark","Portland","Steele","Marion","Brooklet","Granger","Madrid","Neoga","Freeburg","Hebron","Bryant Pond","Sumner","Groveton","Bethel","Thorndike","Vassalboro","Readfield","South China","Turner","Ocean Park","Walker","Brittany","Oxford","Saint Charles","Kent City","Montrose","Oxford","Milner","Poynette","Deerwood","Benson","Montgomery","Saint James","Grafton","Northbridge","Boylston","North Oxford","Rochdale","Barre","Cloverdale","Lakeview","Reedsport","Waterford","Escalon","Toppenish","Sunrise Beach","Whiteman Air Force Base","Linden","La Crescent","Carolina Beach","Hamilton","Chauvin","Livingston","Albany","Keno","Dryden","Medford","Curtiss","Manawa","Edgar","Landrum","Duncan","Clifton","Boling","Van Vleck","Pleasant Garden","Salem","Centerburg","Little River-Academy","Trumbull","Palmer","Clarks","Minturn","Mountain Iron","Hovland","Oakham","Alma","Mulberry","Tucker","Onalaska","Henrietta","Doyline","Kamas","Garden City","Coalville","Laketown","Henefer","Cokeville","Randolph","Oakley","Endeavor","Smithfield","Lyndhurst","Kenansville","Coats","Ivanhoe","Godwin","Council","Sharon","Comfort","Zephyr","Early","Lohn","Paint Rock","Wilseyville","Saint Marys","Cecil","Lorenzo","Abernathy","Ralls","Shallowater","Sun Valley","Goodview","Hopedale","Rowley","Elmira","Ubly","Mancelona","Caseville","Port Austin","Mantachie","Fulton","Golden","Whitefield","Crowder","Checotah","Webbers Falls","Town of East Lyme","Oneco","Andover","Alvordton","Reno","Killbuck","Cloverdale","Mendon","New Straitsville","Abilene","Elmdale","Cambria","Santa Margarita","Avila Beach","Pentress","Fairview","Mountville","Oley","Kirbyville","Richland","Leonard","McIntosh","Farwell","Doylestown","Opdyke","Broughton","Enfield","Sisters","Muldoon","Kensington","Le Sueur","West Corinth","North Pomfret","Grafton","Cuttingsville","Danby","West Topsham","Middletown Springs","Bradford","Belmont","Mount Holly","Strafford","Bridgewater Corners","Lynchburg","Leakesville","Neely","Pequot Lakes","Clearwater","Pleasant Plain","Goshen","Marblehill","Union City","New Castle","Clifton","Collinwood","Granton","Necedah","Cory","Lyndeborough","Port Byron","Montezuma","Savannah","Lancaster","Cypress Inn","Gilbertown","Cordova","Atqasuk","Buckland","Shungnak","Kipnuk","Toksook Bay","Chefornak","Akiachak","Unalakleet","Sutton","Dutch Harbor","Unalaska","Gervais","Colfax","Edwards Air Force Base","Golden","Sutter","La Prairie","Warsaw","Payson","Palmyra","Canton","Timewell","Plainville","Paloma","Liberty","Burt","Alba","Glen Arbor","Frankfort","Camden","Hamburg","Tygh Valley","Arlington","Hood River","Battle Lake","Dalton","Vining","Anchor Point","Crooks","Alexandria","Garretson","Worthing","Park River","Bathgate","Lakota","Neche","Pembina","Cavalier","Edmore","Fairdale","Mayville","Edinburg","Rolla","Kramer","Mexico","Orrington","Surry","Sullivan","Midvale","Cambridge","Council","Challis","Salmon","Hamer","Terreton","Bluford","Dix","WaKeeney","Hillsboro","Peabody","Edson","Saint Francis","Pawcatuck","Braddock","Goshen","Indian Rocks Beach","Garfield","Brandon","Graceville","Madison","Palacios","Blessing","Edna","Creede","Evans","Gary","Fort Calhoun","Wayne","Pender","Laurel","Tekamah","Bassett","Walthill","Carroll","Albany","Keyser","Franklin","Staunton","Worden","Hamel","Livingston","Sorento","Dorsey","Mosca","Crestone","Washington","Liberty","Freedom","Brooks","Palermo","Morrill","Odin","Jetmore","Florala","Laurel Hill","Norman","Weiner","Hymera","Lizton","Glen Ellen","Stonyford","Hawaiian Ocean View","Toccoa Falls","South Pekin","East Galesburg","Montrose","Hudson","Levant","Kenduskeag","Carmel","Plymouth","West Enfield","Portland","Urbana","Lagro","Maxwell","Hyannis","Brewster","Curtis","Brady","Mullen","Whitman","Anselmo","Wallace","Merna","Olton","Morton","Fayetteville","Davis Junction","Steward","Esmond","New Kent","Cochiti Lake","Mesilla","Peralta","Green Valley","Monroe","Richfield","Coleraine","Esko","Springfield","Airway Heights","Fort Madison","Eveleth","Geneva","Dover","Thonotosassa","Universal City","Hermitage","Smackover","Banks","Evergreen","Yorkshire","Snyder","Geronimo","Faxon","Rural Ridge","Russellton","Patterson","Johnson City","Carney","Daggett","Perronville","Foster City","Marenisco","Drummond","Toivola","Rebersburg","Centre Hall","Nashville","Sun City","Isabel","Sawyer","Wilmore","Mullinville","Coldwater","Green River","Cleveland","Elmo","Sunnyside","Sandia Park","Webb","Sanborn","Tulia","Silverton","Claude","Gail","Post","Molalla","Sharon Center","Sunset","Taft","Tigerville","Zebulon","Denmark","Vanleer","Middleton","Richfield","Black Canyon City","Dexter","Hoodsport","Medford","Dundas","Sutherlin","De Soto","Warren","Estacada","Pleasant Unity","Mammoth","Albers","West Alton","Gorham","Smithton","Bonnie","Haxtun","Rosebud","North Tazewell","Kula","Clontarf","Rangely","Peshtigo","Ironton","Honaunau","Rivesville","Na'alehu","Oracle","Louisville","Wibaux","Dimmitt","Lamar","Union","Maben","Stephenson","Coloma","Boyne City","Darlington","Falconer","Leola","Shirleysburg","Orlinda","Ozan","Bivins","Rockfield","Salix","Badger","Clarksville","Terril","North English","Milford","Sioux Rapids","Marathon","Springville","Walford","Indianola","Bryant","Villisca","Elkhart","Elk Horn","Radcliffe","Pacific Junction","Robins","Bronson","Hornick","Baxter","Columbus Junction","Mount Pleasant","Sully","Oakville","Ainsworth","Lake View","Emerson","Imogene","Walnut","Ringsted","Riverside","Stuart","Calamus","Clare","Gowrie","Reinbeck","Woden","Hopkins","Sibley","Long Grove","Mechanicsville","Panora","Dolliver","Yale","Harlan","Monona","Stratford","Guthrie Center","Elgin","Nazan Village","Levelock","New Stuyahok","Tuntutuliak","Mekoryuk","Goodnews Bay","Russian Mission","Nondalton","Kalskag","Alakanuk","Pedro Bay","Hooper Bay","Naknek","Kwethluk","Chevak","Pilot Station","Manokotak","Scammon Bay","Ardmore","Evergreen","Rising Fawn","Penrose","Brevard","Rosman","Sneedville","Arthur","Witt","Edinburg","Strasburg","Oakland","Stonington","Lerna","Afton","Silver Lake","Warm Springs","Powell Butte","Galena","Sand Point","Teller","Sulphur","Payette","Casanova","DeWitt","Harvard","Sutton","Eagle","Puryear","Bardwell","Arlington","Wickliffe","Clinton","La Center","Barlow","Weeping Water","Murray","Cook","Murdock","Hickman","Shickley","Tribune","Bates City","Antlers","Quapaw","City of Picher (historical)","Saint John","Elm City","Holland","Chico","Lebanon","Biscoe","Deep Run","Grandview","Camden","Holmesville","La Crosse","North Garden","Stuart","Monroe","Barboursville","Holt","Richards","Benson","Starke","Shipshewana","Avon Park","Lone Jack","Pantego","Fischer","Sachse","Bantam","Modena","Shelter Island","Orient","Tappan","Greenwood Lake","Cold Spring","Wood-Ridge","Greenport","Shelter Island Heights","Perrineville","Clarksburg","Harrington Park","Thiells","Aquebogue","Briarcliff Manor","White Marsh","Rome","Walker","Llano","Somis","Lenore","Culdesac","Bumpus Mills","Juliaetta","Peck","Cottonwood","Lake Shasta","Le Grand","Lake","Molt","Park City","Hereford","Hudson","Waverly","Kelley","Kennebec","Jordan Valley","Georgetown","Tabernash","Rush Hill","Hay Springs","Bowling Green","Alachua","Creswell","Blanchard","Remus","Penrose","Kykotsmovi Village","Bear","Rociada","Powell","Orchard","Meadow Grove","Clearwater","Watts","Akron","Winston","Madison","Tilden","Delmar","Pirtleville","Vernal","Greensboro","Richeyville","Waynesburg","Holbrook","Mount Morris","Bobtown","Garards Fort","Rockwell","Kannapolis","Turbotville","Adrian","Ringgold","Mayport","East Brady","Randolph","Clymer","Celoron","Frewsburg","Gerry","Bemus Point","Madison","Geneva","New Boston","Simms","Hughes Springs","Redwater","Eastview","Elk Horn","Summersville","Burnside","Science Hill","Eubank","Brodhead","Flat Lick","Bonnyman","East Bernstadt","Plummers Landing","Tollesboro","Grayson","Winterville","Menlo","Granite Quarry","Ray City","Olive Hill","Tiline","South Shore","Milford","Cross Plains","Montague","Baird","Hemphill","Palmyra","Elkhart","Centerville","Lyerly","Talking Rock","Good Hope","Nashville","High Springs","Barnesville","Millsboro","Landis","Gordon","Cochran","Haddock","Irwinton","Cameron","Marshville","Peachland","Nucla","Pine City","Grangeville","Stites","New Laguna","Penasco","El Prado","Hatch","Deadwood","Scenery Hill","Paxton","Wing","Marienthal","East Chatham","Westfield","Limington","Mattawamkeag","West Baldwin","Fryeburg","Danville","Cornell","Ransom","Waitsburg","Carbonado","Flintstone","Fort Oglethorpe","Etowah","Robbins","Posen","Umatilla","Yalaha","Hebron","Snow Hill","Felton","Hartly","Unionville","Colver","Negley","Sycamore","Northern Cambria","Everett","Nanty Glo","Spreckels","Cowansville","Portage","Hyndman","Dravosburg","Keswick","Rohrersville","Hometown","McRae","Lookout Mountain","La Center","Newman Lake","Elmira","Greenock","Friendsville","Washingtonville","Glassport","Medinah","Beech Island","Lotus","West Newton","New Palestine","Fairland","Ray Center","El Granada","Woodbridge","Nine Mile Falls","Plumville","Carrolltown","Lansing","Blairs","Arnold","Hathaway Pines","Derby Center","Heath Springs","Kershaw","Van Wyck","Catawba","Kaiser","Terrebonne","Spavinaw","Jay","Broken Bow","Bethel","Annabella","Elsinore","Dugway","Elberta","Centerfield","Wendover","Valliant","Springer","Calera","Kansas","Ona","Calabash","Shallotte","Sunset Beach","Ocean Isle Beach","Ash","Woodville","Centuria","Milltown","Glenwood City","Logan","McAlister","Des Moines","Branson","Clayton","Farwell","Woodland","Clarksville","Mulliken","Ochelata","Talala","Noel","Miller","South West City","Orlando","Whitewright","Mescalero","Tularosa","Low Moor","Caldwell","Cheney","Attica","Vail","Munising","Ontonagon","Paradise","Celina","Latham","Elk Falls","Rosalia","Piedmont","Boonville","Myton","Roosevelt","Fort Duchesne","Meeker","Duchesne","Topton","Bechtelsville","Banquete","Terlton","Clay Center","Milford","Cody","Frannie","Ten Sleep","Greybull","Basin","Lovell","Richland","Dubois","John Day","Ione","Fish Haven","Arbon","Holland Patent","Gilmer","Harleton","Avinger","Ore City","Winnsboro","Orwell","Benson","Macomb","Gray","Worland","Newcastle","Ashland","Midwest","Thermopolis","Albin","Busby","Grady","Lapine","Highland Home","Ragland","Knightsville","Laverne","Buchanan","Golden","Campbell","Scroggins","Mount Vernon","Craig","Bogard","Hurdland","La Plata","Gorin","Edina","Clearmont","Ellington","Wheatland","Weaubleau","Skidmore","Portland","Kennard","Arlington","Sanderson","Fleming","Mineral Springs","Bradley","Foreman","Tatum","Halltown","Freeman","Rantoul","Ash Grove","Lewisville","Chelsea","Grundy Center","Gladbrook","Malcom","Garwin","Wellsburg","Montour","New Sharon","Edgewood","Central City","Masonville","Greeley","Hopkinton","Arlington","Walker","Ryan","Dundee","Lamont","Sheldahl","Monroe","Washington","Cresco","Lime Springs","New Hampton","Lawler","Peel","Spring Arbor","Gilcrest","Alamosa","Walsenburg","Evansville","Nelson","Villard","Marietta","Bellingham","Holloway","Monette","Marked Tree","Brookland","Waterloo","Gray Court","Powhatan Point","Eagle Springs","Harrah","Zillah","Mabton","Murchison","Overton","North Bonneville","Felda","Henry","Fork Union","Dry Fork","Arvonia","Ferrum","Claudville","Monticello","Mercersburg","Hustontown","Blairs Mills","Landisburg","Loysville","Newburg","Shade Gap","Three Springs","Biglerville","Aspers","Littlestown","Milroy","Mount Holly Springs","Boiling Springs","Gardners","Ickesburg","Ayden","Kentland","Trade","Hesston","Caryville","Shalimar","Watauga","Wolcott","Cromwell","North Judson","Earl Park","Leesburg","Grovertown","Corunna","Kewanna","Walstonburg","Scotland Neck","Grand Ronde","Sheridan","Critz","Stanley","Burkeville","Bland","Victoria","Parrottsville","Telford","Shady Cove","Lincoln City","Quilcene","Lake Placid","Mayodan","Morocco","Berne","Vass","Estill","Bailey","Macclesfield","Four Oaks","Windsor","Chocowinity","Arcadia","Orrtanna","Lemasters","Iredell","Alma","Ozawkie","Eskridge","Fort Riley-Camp Whiteside","Lyndon","Vassar","Osage City","Loose Creek","Wellington","Middleport","Attica","Whitesboro","Preble","Angola","Derby","West Falls","Warners","Nedrow","Mexico","Hartwick","Montour Falls","Angelica","Campbell","Olean","Machias","Ogunquit","Cape Neddick","York Beach","Bolivar","Depew","Dunkirk","Gasport","Waterloo","Arcade","Springville","Lake View","Eden","Boston","Corinth","Lake Luzerne","Canajoharie","Chestertown","Pottersville","Schuylerville","Skaneateles","Brewerton","Fayetteville","Cazenovia","Tully","LaFayette","Montgomery","Fort Montgomery","Highland Falls","Palmyra","Kingfield","Kerhonkson","Woodridge","Shandaken","Woodbourne","Mount Upton","Candor","Livermore Falls","Campton Upper Village","Smithfield","Castile","Cowlesville","Blodgett Mills","Winthrop","Belgrade","Mount Vernon","Conway","Madison","Des Allemands","Paradis","Lafitte","Ama","Higley","Manville","Little Compton","West Suffield","Stafford Springs","West Kingston","Newport Coast","Silverado","Capistrano Beach","Jamul","Lincoln","Slatersville","Pascoag","West Greenwich","Greenville","Mapleville","Oakland","Jamestown","Marion","Quinton","West Point","Lanexa","Lutcher","Gramercy","Achilles","Kiefer","Charlestown","Meraux","Gold Canyon","Treynor","Prospect","Batesburg","Latta","Townville","Haughton","Little Rock","Effingham","Timmonsville","Edwards","Mize","Lake","Collinsville","Kokomo","Iroquois","Bellevue","Thornton","Commerce","Waterford Works","Kingsville","Gunpowder","West River","Libertytown","White Plains","Woodsboro","Sparrows Point","Manchester","Perry Hall","Gerrardstown","Sparks","Selbyville","Fenwick Island","Freeland","North Beach","Placida","Lawnside","Castalian Springs","Port Tobacco","Eight Mile","Cedarville","Crosswicks","Magnolia","Montclair","Mantoloking","Rio Grande","Delmont","Lakehurst","Barrington","Stockton","Titusville","Pedricktown","West Creek","Sewaren","Tennent","Ocean Gate","Margate City","Longport","Monroeville","Newport","Leesburg","Riverview","Oakland Estates Mobile Home Park","Jerome","Bangor","Douglas","Michigan Center","Cement City","East China Township","Garwood","Cape May Point","Great Meadows","South Seaville","Rising Sun","Elberton","Dearing","Appling","Blythe","Rockvale","Waverly","Decherd","Andrews Air Force Base","Cheltenham","Delmar","Nokesville","Bel Alton","Lisbon","Ellabell","Crescent","Springfield","Guyton","Ledbetter","Cross Plains","West Paducah","Chapmansboro","Lynchburg","Greenbrier","Charlotte","Dixon Springs","Cunningham","Benton","Sullivan's Island","Savage","Baldwin","Longboat Key","Boca Grande","Zieglersville","Ringgold","Blue Ridge","McGaheysville","Raphine","Amo","Aroma Park","Headland","Youngstown","Inglis","Vonore","Oldfort","Ocoee","Apison","Delano","Englewood","Rock Spring","South Rockwood","Scotts","Demopolis","Sheffield","Montverde","The Villages","Mount Vernon","Hindman","Hallie","Kite","Carrie","Dema","Pine Top","Wayland","Soldiers Grove","Nelson","Amherst Junction","Humbird","Blair","Frederic","Ettrick","Trempealeau","Bruce","Ladysmith","Saint Henry","Oakwood","Kalida","Kenedy","Mackinac Island","Curtis","Grenville","Trementina","Louin","Soso","Pelahatchie","Pittsburg","Climax","Haysi","Wetmore","Soldier","Netawaka","Fairview","Corning","Holton","Cuba","Narka","Mahaska","Barnes","Haddam","Havensville","Mayetta","Valley Falls","Brent","Duanesburg","Cumby","Big Sandy","Cooper","Hoboken","Garland","Monson","Medora","Eldred","Hillview","New Berlin","Allen","Porcupine","Edgemont","New Underwood","Kadoka","Gregory","Windsor","Great Bend","Brackney","Harpursville","Kirkwood","Montezuma","Ashland","Cimarron","Spearville","Ford","Copeland","L'Anse","Chassell","Crystal Falls","Petersburg","Morenci","Lone Oak","Corinth","Bridgewater","Killen","Leetonia","Russiaville","Green Lane","Richlandtown","Flourtown","Sellersville","Red Hill","Buckingham Township","Swarthmore","Point Pleasant","Odessa","Merion","Clayton","Union Bridge","Silverdale","Mexico","Oswego","Concordia","Weleetka","Danbury","Meade","Choctaw","Erie","Dunn Loring","Meriden","Carbondale","Kechi","Yates Center","Iola","Piqua","Pea Ridge","Auburn","Rose Hill","Buffalo","Ketchum","Bent Mountain","Toano","Hope","Rio Verde","East Hartland","Ashaway","Low and Burbanks Grant","Pine River","New London","Spicer","Park Rapids","Canyonville","Cedar Bluff","Nauvoo","Lewis","Waverly","South Barre","Carrollton","Millbury","Kiln","Church Point","Mishicot","Junction City","Windsor","Pacolet","Gates","Nags Head","Moxee City","Nehalem","Rockaway Beach","Pacific City","Keyes","Riddle","Oakland","Glen Rose","Berlin","Montegut","Bourg","Egg Harbor","Cumberland","Washburn","Hayward","Glidden","Docena","Horton","Holly Ridge","Linville","Arcadia","Williams","Toledo","Yatesville","White City","Peshastin","Granger","Moreland","Wild Rose","Newsoms","Bonne Terre","Walsh","Weed","Walhonding","Red Rock","West Union","Rogersville","Moreauville","Loachapoka","Greenville","Saint George","Tougaloo","Buchanan","New Hebron","Monticello","Marks","Calhoun City","Flora","Sumner","Wesson","Coffeeville","Bentonia","Abbeville","Mills River","Auxier","Andersonville","Spruce Pine","Swiftwater","Allamuchy","Spring City","Riegelsville","Yantis","Eagle Butte","Lantry","Richmond","Sherrill","Holy Cross","Peosta","Epworth","Dyersville","Farley","Cascade","Guttenberg","Strawberry Point","Earlville","Motley","Crosby","Trenton","Windom","Leonard","Sylvania","Sardis","Newington","Kingsville","Jasper","Valley Springs","Ponca","Everton","Compton","Western Grove","Vendor","Deer","Lathrop","Garden Grove","Mercer","Graham","Princeton","Bethany","Leon","Van Wert","Blockton","Accord","Rosendale","Shelley","San Rafael","Alamo","Biola","Bethel Island","Tunas","Falkville","Daviston","Centralia","Gold Beach","Gasquet","Parker","Arlington","Scotland","East Brookfield","Montreal","Labadieville","Aragon","Cherry Valley","Jackson","Roach","Northport","Wellston","Spruce","Hopkins","Lake","Dixie","Whitmire","Blacksburg","Gothenburg","Laceys Spring","Danville","Matthews","New Glarus","Balaton","Spooner","Cameron","Sheldon","Neshkoro","Tahoe Vista","Dannemora","Colebrook","Dulac","Green Lake","Scott City","Ethridge","Millville","Hardwick","Cold Spring Harbor","Point Lookout","Sugar Loaf","Plattekill","Verplanck","Bayville","Mill Neck","Hastings-on-Hudson","Brielle","Millwood","Alpine","Seaside Park","Seaside Heights","East Quogue","Haskell","Peconic","Cutchogue","Clintondale","Jamesport","Blauvelt","Molino","Decatur","Baxley","Gibson","Clarks Hill","Carencro","Ghent","Salvisa","Ruffin","Kure Beach","Citronelle","Bridgeport","Sunset","La Fayette","Almo","Rydal","Wrightsville","Eminence","Convent","Thomasville","San Mateo","Blackville","Sparta","Wrens","Troy","Seven Springs","Middlesex","Sardis","Spencer","McConnells","Midville","Prestonsburg","Boaz","Hawesville","Maurice","Breaux Bridge","Patterson","Milton","Erath","Holland","Milldale","Hope Valley","Bradford","Healy","Eagle Lake","Tatum","Hagerman","Mahaffey","Gaines","Drummond","Cable","Iron River","Mason","Westmoreland","Marysville","Summerfield","Palmer","Vermillion","Oketo","Centralia","Onaga","Axtell","Blue Rapids","Randolph","Beattie","Linn","Frankfort","Laporte","Walker","Solway","Kelliher","Blackduck","Tenstrike","Redby","Northome","Benedict","Alex","McQueeney","Smiley","Nixon","Yorktown","Athol","Chouteau","Inola","Austerlitz","Hillsdale","Craryville","Copake Falls","Randolph","Holden","Warren","Bridgeport","West Point","Clayton","Gordonville","Willisburg","Markham","Keymar","Ripley","Maribel","Corning","Dalzell","Houlton","Yoncalla","Monmouth","Independence","McCook","Oxford","Bartley","Indianola","Edgar","Cotton Valley","Leakey","Medina","Mason","Hunt","Deer Park","Prairie Grove","Lincoln","Summers","Evansville","Franklin","Ontario","White Deer","Panhandle","Fritch","Sunray","Miami","Happy","Darrouzett","Quail","Davenport","Sparks","Carney","Meeker","Stroud","Lone Grove","Duke","Granite","Wright City","Merrimac","Quebeck","Doyle","Morrison","Miller","Timber Lake","Iroquois","Culbertson","Elsie","Palisade","Trenton","Dixon","Eatonville","Napavine","Salome","Quartzsite","Kendrick","Amboy","Salisbury","Morrice","Deposit","Woodbine","Smithville","Graton","Shasta","Sigourney","Pella","White Oak","Oberlin","Wakefield","Gypsum","Chapman","Chinese Camp","Moore","Saint Anthony","Firth","Ashton","Tetonia","Pingree","Driggs","Arco","Menan","Sugar City","Teton","Basalt","Saint Libory","Wood River","Loup City","Goshen","Vardaman","Dornsife","Cochrane","Andover","Grantham","Wenden","Romney","West Point","Fayetteville","Arcadia","Eldridge","Augusta","Monticello","Beaumont","Toledo","Smilax","Tellico Plains","Bonneau","Potosi","Dickeyville","Sherwood","Fair Bluff","Hyden","Wadesville","Hillsboro","Stetson","Idaville","Saint Clair","Kasota","Madison Lake","Peck","Oxford","Harper","Fort Loramie","Mount Victory","New Bremen","Elgin","Carson","Washburn","McLaughlin","Underwood","Bullhead","Campbellsburg","Hardinsburg","Nowata","Buffalo","Urbana","Bronaugh","Lenapah","Pescadero","Glenwood","Memphis","Trimble","Hamburg","Northboro","Worthington","Dawn","Amazonia","Aurora","Lincoln","Delaplaine","Bull Shoals","Melbourne","Perry","Marthasville","Springfield","Westcliffe","Reeds Spring","Caulfield","Pilot Knob","Hollister","Vernon","Mansfield","Booneville","Magazine","Paris","Lowry City","Bald Knob","Winslow","Collins","Lawson","Lafayette","Norwalk","Eagle","Oakwood","Hominy","Cresson","Colerain","Victoria","Oldwick","Sims","Magnolia","Saluda","Albertson","Star","Houston","Deshler","Sunset","North Liberty","Fenwick","Rodney","Walkerville","Dorris","Tulelake","Gazelle","Warrensville","Middle Haddam","Lowell","Fruitland","Winters","Christoval","Mereta","Waldoboro","West Rockport","Islesboro","Edgecomb","Jefferson","Warm Springs","Armuchee","Murrayville","King","Columbus","Tryon","Waverly","South Haven","Centerville","Boynton","Cortland","Windsor","Molena","Saltsburg","Broaddus","Hartley","Newton","Oakboro","Howard","David City","Elsie","Bolivar","Foxhome","Kent","Campbell","Hankinson","Abercrombie","Colfax","Wyndmere","Hawley","Mooreton","Hancock","Westport","Brookston","Maple Lake","Home","Dixmont","Jemez Pueblo","Rule","Crowell","Chillicothe","Seymour","Knox City","Aspermont","Rochester","Quanah","Haskell","Fowler","Plains","Bucklin","Oxford","Island Falls","West Danville","Jefferson City","Pinesdale","Casnovia","East Leroy","Burlington","Harold","New Haven","Charlotte","Shoreham","Graniteville","Warren","State Center","Mulino","Beaver Creek","Houston","Raymondville","Indian River","Big Bay","Texline","Kenmare","Parshall","Max","Plaza","Watford City","Alexander","Halfway","Etna","Buffalo Valley","Clarkrange","Moss","Reeds","Knott","Menlo","Harrington","Winlock","Toutle","Forks","Algona","Whittemore","Jeremiah","Whitesburg","Thornton","Winthrop","Holland","Kaplan","Falls Mills","Santo","Waldport","Yachats","Lipan","Falmouth","Oregonia","Williamsburg","Trenton","North Bend","Mount Saint Joseph","Bovina","Memphis","Oxford","Fairbank","Swisher","Morning Sun","Steamboat Rock","Dayton","Red Oak","Lowden","Pounding Mill","Washington","Merryville","Hessmer","Marksville","New Virginia","Ocheyedan","Protivin","Roland","Agency","Greenfield","Nichols","Montezuma","Deep River","Osceola","Newell","Marengo","Emmetsburg","New Vienna","Persia","Moravia","New London","Rembrandt","Diagonal","Toledo","Paullina","Primghar","Zearing","Maxwell","Story City","Janesville","Prescott","Logan","Portsmouth","Panama","Dunlap","Woodbine","Pisgah","Barnes City","Clarinda","Lake City","Tipton","Elma","Arcadia","Exira","Avoca","Bayard","Manning","Ralston","Conroy","Pomeroy","Pocahontas","Armstrong","Glidden","Ute","Halbur","Sumner","Fredericksburg","Maynard","Hazleton","Leighton","Goodland","Waynesville","Liberty Center","Lewiston Woodville","Lucama","Montpelier","Yankeetown","Appleton City","Littleton","Creston","Shady Valley","Falkland","Lake Waccamaw","Webster","Westphalia","Potwin","Preston","Gore","Greens Farms","Smithville","Oskaloosa","Glade Valley","Hill City","Dell Rapids","Corsica","Trent","Rosebud","Marion","Hartford","Montrose","Lower Brule","Armour","Dallas","Herrick","Springfield","Burke","Humboldt","Harrison","Menno","Witten","Bridgewater","Mayesville","Salters","Raymond","Roca","Alvo","Greenwood","Elmwood","Ashland","Syracuse","Hooper","Nickerson","Sidney","Silver City","Oakland","Malvern","Snelling","Oneida","Bellbrook","De Graff","Burlington","Maxbass","Sterling","Napoleon","Strasburg","Tappen","Driscoll","Franklinville","Crows Landing","Venedocia","Waynesfield","Van Buren","Quincy","Kent","Moro","Condon","Markleysburg","Addison","Farmington","Ohiopyle","McHenry","Ridgeville","Modoc","Geneva","Hoagland","Montpelier","Badger","Argyle","Karlstad","Greenbush","Williams","Wannaska","Stephen","Kennedy","Angle Inlet","Kempner","Webb City","Nash","Winside","Thatcher","Iraan","Weatherly","Crockett","Bolinas","Browns Valley","Elmira","Remsenburg","Palisades","Wainscott","Pine Island","Sea Girt","Wassaic","Westhampton","Hillburn","Salt Point","Northfield","Piermont","West Cornwall","Morris","Great River","Newfoundland","Lake Katrine","Normandy Beach","Montague","Lakeside","Allenhurst","Purdys","Reeseville","Elm Grove","Saint James","Trenary","Trufant","Rison","Blenker","Poseyville","Roachdale","Ladoga","Stilesville","Toxey","Stonewall","Herndon","Dalmatia","Norridgewock","Iola","Needham","Niota","Vernon Center","Oriskany Falls","Salem","Swans Island","Clayton","Lobelville","Williston","Vanlue","Athens","Blanchardville","Backus","Hartland","Wilmot","East Andover","Meriden","Nevis","Stratton","New Vineyard","New Portland","Oakland","Phillips","Anson","Attapulgus","Hickory Corners","Leesburg","Saint Stephen","Sardis","Sugar Tree","Scotts Hill","Darden","Somerset","Alvada","Mount Blanchard","New Ross","Fillmore","Scandinavia","Austin","Roxbury","Philadelphia","New Durham","Etna","Dexter","Saint Albans","Corinna","Newport","Canaan","South Wayne","Argyle","Cambridge","Jonesboro","Kellyville","Chaumont","Bruceton","Fletcher","Neeses","Myrtle","Hosford","Lewisport","Iron City","North","Dorchester","Stetsonville","Withee","Hilbert","Forest Junction","Bloomington","Fennimore","Cassville","Waldron","Flat Rock","Cinebar","Eckert","Wingate","Laura","Ludlow Falls","New Paris","Dunkirk","Ecorse","Hughesville","Churchville","Sandy Spring","Sea Isle City","Gillette","Hancock","Lakeside","Polson","Byron","New Harmony","Manhattan","Ronan","South Fork","Log Lane Village","Brush","Leadville","Clancy","Clinton","Del Norte","Knippa","Ida","Merrillan","Marlow","Fort Cobb","New Franklin","Marionville","Willard","Pangburn","Mayflower","San Felipe","Boyd","Fountain City","Bay City","Ingraham","Mount Erie","Amboy","Converse","Bunker Hill","Young America","Summitville","Waterloo","Frankton","Sterling","Preemption","New Windsor","Viola","Sciota","Good Hope","Woodhull","Gilmanton Ironworks","Farnham","Merry Point","Christchurch","Callao","Cobbs Creek","Deltaville","Mathews","Milton Mills","Jewell","Wilson","Hunter","Belleville","Park","Geneseo","Sylvan Grove","Conger","Elmore","Delavan","Granada","Sisseton","Browns Valley","Houston","Addison","Monrovia","Newberry","Fairfield","Boulder","Florence","Basin","Kendalia","Levan","Pinson","Bowersville","Rickreall","Ponder","Crawford","Red Rock","Bruceville","Runnells","Clifton","Ridgway","Fairplay","Eucha","Agra","Waurika","Nashoba","Haworth","Fowler","Brookston","Jemison","Roann","Cross Lake","Langley","Denniston","Staffordsville","Wittensville","Banner","Ivel","Tutor Key","Oil Springs","Flatgap","Falcon","Hazel Green","Martin","Ezel","Crane Hill","Vancleave","Hayden","Rush City","Fort Richardson","Oriska","Sykeston","Chaseley","Woodworth","Streeter","Minnewaukan","Harvey","Warwick","Esmond","Maddock","Sheyenne","Tolna","Hampden","Starkweather","Leeds","Wolford","Stanley","Glen Flora","Mountain Grove","Plattsburg","El Dorado Springs","Winfield","Berry","Arrington","Stephentown","North Sandwich","Hallowell","Cape Vincent","Shokan","Spencertown","Bunker Hill","Berea","Bremen","Olaton","Ridott","Avalon","Franklin Grove","Amboy","Ohio","Satartia","Florence","Saucier","Warrensburg","Trevett","Sodus","Free Soil","Sheldon","Norway","Bark River","Bessemer","Boyne Falls","Bethesda","Columbia","Holtville","Oak Park","Beatty","Gridley","Greenwood","Varnville","Frederica","Elizabethtown","Taylorsville","Cortaro","Grand Island","Markle","Pittsford","Sopchoppy","Tuckahoe","Cedar Brook","Oceanville","Colmar","Ridge","Port Republic","Poolesville","Dickerson","Newburg","Parsonsburg","Parker Ford","West Friendship","Sacaton","Hartwood","Rhodhiss","Hereford","Baptistown","Blossburg","Wernersville","Bowmansville","Summit Hill","Bowmanstown","Freeburg","Beavertown","Lakeville","Lackawaxen","Tafton","Greeley","Germansville","Danielsville","Guilford","Bucksport","Brooklin","Westfield","Rockwood","Boothbay Harbor","Vinalhaven","Monroe","Burnham","Enosburg Falls","Fairlee","Temple","Stevenson","Lisbon","Troy","North Walpole","Craftsbury","East Hardwick","Drayden","Altavista","Belt","Big Sandy","Ennis","Fort Benton","Chinook","Chester","Wisdom","Scobey","Denton","Fortuna","Harlowton","Divide","Stanford","Talcott","Logandale","Milford","Evart","Byron","Cumming","Ridge Spring","Kasson","Dodge Center","Stratford","Halma","Hallock","Lancaster","Lake Bronson","Warren","Newfolden","Parker","Moss Beach","Bayside","Jackson","Allen","Bartlett","Butte","Coleridge","Craig","Decatur","Concord","Linwood","Hubbard","Long Pine","Newcastle","Maskell","Hartington","Prague","Spencer","Ulysses","Malmo","Morse Bluff","Cedar Bluffs","Stuart","Weston","Thompson","Leland","Britt","Buffalo Center","Scarville","Joice","Garner","Kellogg","Huxley","Duncombe","Klemme","Lynnville","Beacon","Menlo","Wheatland","Shell Rock","Jefferson","Ada","Audubon","Hitterdal","Lake Park","Glyndon","Perley","Felton","Frazee","Niagara","Florence","Ogdensburg","Abrams","Bear Creek","Little Suamico","Bovey","Brook Park","Levering","Stanchfield","Gilbert","Anacoco","Natalia","Benedict","Lorraine","Reevesville","Georgetown","Dayton","Otter","Ismay","Yucca","Happy Jack","Lund","Roy-Winifred Junction","Dell","Kooskia","Reardan","Maplesville","Pisgah Forest","Bushkill","Zionhill","Shohola","Lyons","Beach Lake","Beaver Meadows","Mehoopany","Taos Ski Valley","Walton","Bluewater","Torreon","Lowry","Coggon","Shenandoah","Huntsville","Millersport","Edison","Hamlet","Lakemore","Lambsburg","Fredericktown","Cope","Williston","Chesterhill","Maria Stein","South Solon","Riegelwood","Butler","La Rue","Crooksville","Stockport","Emerald Isle","Grammer","Rosedale","Pembroke","Washington","Fall Creek","Tangent","Rancocas","Silver Lake","Mount Berry","Fairview Village","Osprey","Pocomoke City","Southview","Skippack","Gordonville","Pine Forge","Frederick","Perkiomenville","Grafton","Chesapeake City","East Hampstead","Daleville","Kilauea","Hau'ula","New Market","Lakefield","Hardwick","Edgerton","Bigelow","Chandler","Otho","Comfrey","Marathon","Morrisville","Plymouth","Brooktondale","Truxton","Maysel","Crawford","Walkersville","Grantsville","Folsom","Cameron","Leon","Worthington","Hundred","Hoyt Lakes","Canyon","Brookston","Littlefork","Floodwood","Warba","Lakeville","Slaty Fork","Durbin","Bartow","Hillsboro","Arbovale","Treadwell","South New Berlin","Morris","Fort Plain","Fultonville","Caroga Lake","Dolgeville","Fonda","Kent","Eglon","Dryfork","Masontown","Independence","Hambleton","Donnelly","Horseshoe Bend","Montgomery","New Germany","South Otselic","Danforth","Cheriton","Hyde","Rossiter","Temple","Barnard","West Wardsboro","Barnet","Unionville","Partlow","White Post","Thornton","Chelsea","South Woodstock","Springfield","East Dover","Ashland","South Strafford","Rochester","West Dover","Berkshire","West Stockbridge","Roma","Nolanville","Garciasville","Westville","Highwood","Depew","Mount Hermon","Hidden Valley Lake","Goshen","Kimper","Shelbiana","Elkton","South Fulton","McHenry","Gilbertsville","Chula","Burlison","Hurtsboro","Waverly","Bryceville","Pomona Park","Henning","Oakland","Lake Cormorant","Coldwater","Dana","Perryville","Livermore","Rumsey","Stockton","Autaugaville","Jersey","Cascilla","Oil City","Ralph","Fair Play","Walls","Leighton","Eva","Saint Martinville","Smithfield","Campbellsburg","Cadiz","Fredonia","Cordova","D'Iberville","Lafayette","French Camp","Gallion","Seminary","Saint James","Buhler","Huddleston","Barling","Fort McDowell","Thayer","Sedan","Colwich","Livonia","Fordoche","Maringouin","Lottie","Waddell","Tecumseh","Melville","Andale","Gloucester Point","Greenwood","Coweta","Centerton","Hackett","Gentry","Arkoma","Lowell","Lavaca","Gravette","Farmington","West Fork","Roland","Tontitown","Duplessis","Buras","Wood River Junction","Carolina","Saint Gabriel","Arapaho","Kinsley","Altamont","West Granby","Summerland","Nescopeck","Ashton","Wellington","Luckey","Drexel","Pickton","Mount Carmel","Correctionville","Kingsley","Bishopville","Woodford","Readyville","Lexa","England","Proctor","Oliver Springs","Louisiana","Bismarck","Onarga","Oologah","Fresno","Elsberry","Gates Mills","Morgantown","Verdugo City","Morrison","Midway","Midfield","Midkiff","Edgewood","Shepherd","Coyle","Bullock","Butler","Ramseur","Clarksburg","Plymouth","Intercession City","Howie In The Hills","Dillwyn","Fieldale","Zanesfield","Manti","New Almaden","West Point","Tabor","Columbia","Milo","Eddyville","Lacona","Blakesburg","Mount Ayr","Tingley","Afton","Orient","Redfield","Gravity","Bagley","Salem","Winfield","Montrose","Donnellson","Houghton","Packwood","Conesville","Richland","Atalissa","Moscow","Baldwin","Riverton","Bedford","Sun","Elm Creek","Hartville","Litchfield","Imperial","Cisco","Prescott","Morley","North Grosvenor Dale","Keene","South Ryegate","Lynn","Graysville","Roseland","Rothbury","Wilson","Melrose","Dollar Bay","Lake Linden","South Range","Atlantic Mine","Hubbell","Five Points","Empire","Childersburg","Ashville","Scott Air Force Base","Olivette","Woodland Mills","Atwood","Thornburg","Wallace","Laurel Hill","Gibson","Bennington","Lincoln","Greenleaf","Tescott","New Cambria","Leonardville","Manchaca","Bunn","Eastpoint","Gold Hill","Donalsonville","Helena","Kersey","Wilcox","Knox Dale","Ocilla","Ochlocknee","Boston","Hawkinsville","Hartsfield","Norman Park","Pleasant Hill","Enigma","Whigham","Sycamore","Polkton","Morven","Pinebluff","Perry","Avoca","Pleasant Dale","Homer","Harviell","Neelyville","Grandin","Coxs Creek","Hustonville","Livingston","Garrard","Nancy","Halfway","Rochelle","Waldo","Wellborn","Brooker","Union","Waco","Exeter","Brooks","Burns Flat","Pierpont","Austinburg","Lockesburg","Norman","Murfreesboro","Hatfield","Abbeville","Dry Branch","West Green","Alapaha","Soperton","Kimbolton","Raywick","Alto","Capitan","Nogal","Streetman","Trinity","Poteau","Pavo","Tecumseh","Morris","Mauk","Haskell","Panama","Jeffersonville","Coolidge","Amity","Cove","Kirby","Prentiss","Hooks","Ewing","Evarts","Orlando","Millwood","Bronston","Clearfield","Hillsboro","Brownsville","Gravel Switch","Manchester","Woodland","Brave","Graysville","Mayo","Fort White","Branford","Bedias","Mount Olivet","Yatesboro","Dayton","Penfield","Worthington","Chautauqua","Clay Center","Truth or Consequences","Turnerville","Milan","Bronwood","Barney","Carlton","Nezperce","Blue River","Renville","Sula","Piedmont","Webster City","Earlham","Fairacres","Wesley","Cottondale","Jay","Oxford","Kingsbury","Bear Creek","Danville","Earlysville","San Antonio","Edgerton","Trail","Beaver","Lakeville","Lucas","Whitakers","Stantonsburg","Bunnlevel","Franklinton","Pinetops","Vernon Hill","Cranfills Gap","Russellville","Hurdle Mills","Engelhard","Goldston","Lake Panasoffkee","Plantersville","Elliottsburg","Underwood","Cascade","Ararat","Grifton","Glenmont","Botkins","Belle Center","Milford Center","Windham","Silver Springs","Experiment","South Hill","Hegins","Abbottstown","Lemont","Cornwall","Luthersburg","Stump Creek","Brockport","Bradenville","Burnside","Brackenridge","Summerhill","Rector","Vintondale","Starford","Sutersville","Hickory","Triadelphia","Manor","Bethany","New Cumberland","Chester","Pulaski","Grantsville","Barton","Westmoreland City","Stephenson","Millwood","Timberville","Hinton","Providence","Bainbridge","South Lebanon","Oak Ridge","Wilberforce","Farrell","Sharpsville","Haw River","Thurston","Waverly","Chestnut Mountain","Micro","Tamassee","Newland","Sullivan","Hustisford","Kawkawlin","Stevenson","Seal Rock","Irrigon","Hertford","East Carondelet","Stover","Ironton","Frankford","Cave Spring","Winneconne","Lime Ridge","Auburndale","Vesper","Omro","Hermansville","Sarona","Barronett","Bangor","Wanchese","Woodlawn","Roxbury","South Kent","Colfax","Unity","Keshena","Arcadia","Paris","Mayville","Coral","Barron","White Swan","Sugarloaf","Coyote","Tres Pinos","West Salem","Bells","Collinsville","Wimauma","Ellenton","Laurel","Eagle Lake","Mecca","Morongo Valley","Millville","Mentone","Calimesa","Yermo","Pinon Hills","Winchester","Forest Falls","Imperial","Port Republic","Boissevain","Mount Crawford","Cabin John","Mount Wolf","Bear Lake","Gallitzin","Dysart","Marienville","Olanta","Youngsville","Miles","Clint","Mertzon","McKean Township","Columbus","Homeland","Catharpin","Jenner","Eldorado","Churchton","Lake Alfred","New London","Deale","Newfane","Hookstown","Slovan","Harwick","Savoy","Lee Center","Durhamville","Raymond","Gretna","Hurt","Alburg","Lowell","Tamworth","Effingham","South Pomfret","Town of Mount Desert","Bradford","Starksboro","Otis","Shutesbury","Randolph Center","Harrisville","Sullivan","Proctor","West Chesterfield","Newbury","Catawissa","Midland","Hastings","Julian","Milesburg","Cherry Tree","Millheim","Tidioute","Pine Grove Mills","New Braintree","Dighton","Sadler","Lake Hughes","Highland","Hydes","Brandy Station","Danbury","Bethlehem","North Woodstock","West Cornwall","Ulysses","Hollidaysburg","West Decatur","Curwensville","Sugar Grove","Petersburg","Robertsdale","Lucinda","Wallaceton","Londonderry","East Fairfield","Concord","Sheldon Springs","Grand Isle","Etna","Lincoln","Narrows","Neshanic Station","Frackville","Whitefield","West Paris","Mount Gretna","North Falmouth","Harbeson","Milton","Greenwood","Mechanicsville","Maxatawny","Nassawadox","Painter","Onley","Accomac","Eastville","Wachapreague","Black River","Bridgeport","Lonaconing","Oldtown","Lytle Creek","Nanjemoy","Alturas","Prospect Harbor","Stoddard","Westmoreland","Old Chatham","Canaan","Moscow","Pittsfield","Hancock","Plainfield","Gill","Marshfield","Moscow","Auburn","Lattimer","Shawnee on Delaware","Muse","Hibbs","Rochester","Humarock","Rockland","Gowanda","Holland","West Valley","Allegany","Spring Lake","Otego","Big Flats","Coopers Plains","Hatfield","East Kingston","Sutter","Empire","Loyalhanna","Strongstown","Marion Center","Shippingport","Avonmore","Parker","Ellendale","Woodside","Eden","Rhodesdale","Mardela Springs","Viola","Melrose","Ravenel","Penn Laird","Forbes Road","Schellsburg","Gray","Smoke Run","Madera","Richland","York Springs","Allenspark","Three Forks","Joseph","Bellemont","Darby","Cook","Idledale","Frenchtown","Elbert","La Pine","Umatilla","Unionville","Bally","Gradyville","Depue","Wheeler","Joppa","East Dennis","Granville","Madbury","Ashby","Mashantucket","South Wellfleet","Town of Bozrah","Port Henry","Tariffville","Rawlings","Pittsfield","Atlantic","York Harbor","Hartford","Tenants Harbor","Windham Center","Brooksville","Petersham","Equinunk","Girardville","Rimforest","Harwood","Arkville","Waccabuc","Gibsonton","Burt","Parksley","Harborton","Spartansburg","Keysville","Stony Creek","Clarksville","Dolphin","White Stone","Goode","Waterford Flat","Peaks Island","Natural Bridge","Hebron","Spofford","Tyaskin","Cecilton","Butte des Morts","Pickett","Eldorado","Bowman","Eutawville","North Kingsville","Galien","Baroda","Burbank","Heron Lake","Round Lake","Bingham Lake","Winthrop","Cloverport","Garfield","Roseville","Slaughters","Bloomfield","Crofton","Creighton","Ponca","Scribner","Wisner","Bancroft","Wausa","Dodge","Herman","Stratton","Grant","Amherst","Rushville","Gordon","Ewing","Kilgore","Johnstown","Crookston","Cody","Merriman","Lebanon","Arnold","Callaway","Wilcox","Stapleton","Tryon","Wolbach","Chapman","Snyder","North Bend","Belgrade","Spalding","Saint Edward","Petersburg","New Philadelphia","Carnegie","Tryon","Paoli","Hendrix","Bartow","Twin City","Metter","Nahunta","Chester","Hortense","Schoharie","Fultonham","West Coxsackie","Newport","Poland","Hampden Sydney","Morenci","Saint Joe","Hamler","Malinta","Continental","Mark Center","Custar","Sherwood","Canton","Greenwood","Lovell","Minot","West Minot","Andover","Doss","Mountain Home","Otterbein","Beryl","Beaver","Panguitch","Alton","Hildale","Cannonville","Duck Creek Village","Oronogo","Stella","Bretton Woods","Belmont","Lolita","Whitingham","Nashua","Garden City","Sealevel","Dulce","Latexo","Eunice","Copeville","Odessa","Corbett","Eagle Creek","Kiowa","Hygiene","Fairfield","Halliday","Ludlow","Amidon","Regent","Richardton","Millfield","Glouster","Deaver","Meeteetse","Cowley","Manderson","Rochelle","Annandale-on-Hudson","Oakley","Paul","Hazelton","Bulger","East Butler","Elizabeth","Leeper","Pleasantville","Elco","Smithton","Petroleum","Smithville","Cairo","Branchland","Sayre","Flinton","Reamstown","Warriors Mark","Glen Hope","Etoile","Huntington","Alto","Tilden","Port Mansfield","Hawley","Boody","Warrensburg","Dawson","Kenney","Green Mountain","Hamlin","Jackson","Mount Savage","Barclay","Metaline Falls","Cusick","Section","Wiggins","Pisgah","Pembroke","Oakley","Ridgeway","Gilman City","Galt","Corydon","New Hampton","Lamoni","Barnard","Newtown","Conception Junction","Albany","Hatfield","Chula","Allerton","Martinsville","Murray","Jamesport","Lorimor","Parnell","Ravenwood","Humeston","Gentry","Meadville","Linneus","North Powder","Poyntelle","South Gibson","Shoshoni","Volborg","Broadus","Lame Deer","Hysham","Rosebud","Arvada","Upton","Clearmont","Moorcroft","Kaycee","Hulett","Dubois","Baggs","Crowheart","Fort Washakie","Burns","Central City","Walton","Hinsdale","Marcy","Lindley","Cayuta","Livingston Manor","Stamford","West Winfield","Saint Michaels","Rock Hall","Millington","Perryville","Port Penn","Cordova","Delaware City","Lyndonville","Southport","Bradley","Mechanic Falls","Winterport","Hull","Rock Rapids","Boyden","Big Pine","Pinehurst","Kingston","Lexington","Panama","Meadow Vista","Woodworth","Quaker City","Spiro","Guilford","Burlington","Petersburg","Clayton","Terrace Park","Owensville","Moscow","Tilden","Ridgely","Gideon","Hornbeak","Brownsboro","Bristol","Shabbona","Lee","Saulsbury","Afton","Newry","Orland","Dover-Foxcroft","Greenville","Harborside","Sebec","Greenbush","Eddington","Sangerville","White Water","Feura Bush","Sloansville","Sedgwick","Gouldsboro","Whiting","Wayne","East Wakefield","Indianola","East McKeesport","Pearisburg","Craigsville","Breezy Point","Charlemont","Marlborough","Whitefield","Dixfield","Sligo","Lilly","Clinton","Pembroke","Southwest Harbor","Danforth","Thetford Center","Medway","Eastport","Winter Harbor","Seal Cove","Shirley Mills","Lempster","East Thetford","Goshen","Birmingham","Princeton","Wheatland","Sturgeon","Laurys Station","Stockertown","Brandamore","Middleport","Windsor","Chesterfield","Huntington","Ashfield","Becket","Blandford","Dalton","Leverett","Aylett","King William","Moon","Irvington","Kingston","Goldsboro","Bivalve","Queenstown","Sharptown","Valley","South Wales","Wilson","Plumsteadville","Spring House","Derby Line","Readsboro","Westfield","Gilman","Sugar Hill","Cambridgeport","Harborcreek","Vineyard Haven","Fountainville","Windsor","Fredericksburg","Denmark","Hancock","Cape Porpoise","West Alexander","Penn Run","Houston","Bessemer","Cecil","Torrance","Center Rutland","Chelsea","Quitman","Farmdale","Boyd","Burlington Flats","Pompey","Crescent City","Careywood","Wellpinit","Boyce","Saint Paul","Elba","Jamestown","Tiro","Loda","Lynnville","De Valls Bluff","Niangua","Elkland","West Concord","Lower Lake","Arcadia","Alcalde","Elderton","Buchanan","Gaston","Mount Hope","Maiden Rock","Emerado","Gibbon","Waialua","Hanover","Bowdon","Bowman","Dewy Rose","Farmington","Pineville","Center Point","Clayton","Hosston","Greenwood","Eros","Stonewall","Mooringsport","Calhoun","Downsville","Epps","Keatchie","Echo","New Hill","Little Mountain","Wingo","Satsuma","Shady Dale","Rutledge","Whitesburg","Redan","Luthersville","Elora","Cowan","Kelso","Kilbourne","Dubach","Mulga","Bogue Chitto","Darrow","Bankston","Jonesville","Dorchester","Pinedale","Foster","Skamokawa","Yacolt","Fordland","Cabool","Cambria","Fall River","Jim Falls","Pulaski","Solon Springs","Macomb","Squires","Bruner","Ava","Vanzant","Blue Eye","Horseshoe Bend","Jerico Springs","Gower","Tennille","Dixie","Humphrey","Little America","Nazareth","Harper","Rio Vista","Gerald","Berger","Stanton","East Meredith","Newfield","Brookville","Dateland","Bliss","Rocky Ford","Fowler","Swink","Drummond","Manzanola","Rockvale","Black Eagle","Martindale","Archer City","Hopkinton","North Granby","Cement","Pocola","Mountainburg","Bartlett","French Settlement","Towanda","Douglass","Afton","Ketchum","Langley","Delanson","Central Bridge","Harrington","Waterport","Byron","Piffard","Youngstown","Ransomville","Jefferson","Canisteo","Whitehall","Hanapepe","Kekaha","Kealakekua","Waimanalo","Pa'auilo","Pukalani","Kurtistown","'Ele'ele","Kahuku","Anahola","Raven","Smock","Forestville","Tangerine","Liberty","Omega","Eastaboga","Ekalaka","Baker","Roundup","Lambert","Melstone","East Fairview","Circle","Roy","Custer","Winnett","Savage","Deanville","McCoy","Lower Salem","Valles Mines","Morrisonville","Maunaloa","Ninole","Hale'iwa","Spring Valley","Westland","Summit","Fowler","Millersville","Cosmopolis","The Rock","Spiceland","Hope","Woodburn","Saratoga","Mount Jackson","Buena Vista","Rockton","North Apollo","Yukon","Gastonville","Tuolumne","North Salem","Defiance","Thomasville","New Berlinville","Lumberville","Melrose","Raymond","Center Hill","Esmont","Prospect","Lafayette","Howard","Harrod","Butler","Cummings","Simpsonville","Manchaug","Blaine","Shacklefords","Steamburg","Yulan","Sparrow Bush","Westbrookville","Augusta","Delray","Paw Paw","Slanesville","Petersburg","High View","Rio","Spencer","Lockwood","Van Etten","Himrod","Erin","Harford","Trout Creek","Richford","Chemung","Willseyville","Smithville Flats","Leonardsville","Glendale","Selma","Cave Junction","Days Creek","New Boston","Aledo","Joy","Stamford","Ophiem","Fenton","Oquawka","Cordova","Osco","Hillsdale","Erie","Sherrard","Orion","Dolan Springs","Lynd","Le Center","Cosmos","Elysian","Arlington","Jasper","Henderson","Porter","Minneota","Hanley Falls","Harshaw","Rib Lake","Latimer","Gresham","West Leyden","Forestport","Hampton","Edgewood","Brownstown","Kinmundy","Shumway","Ramsey","Sandoval","Saint Elmo","Tower Hill","Saint Peter","Ivydale","Oakvale","Premier","Clay","Birch River","Homedale","Stanley","Garden Valley","White Bird","Fieldon","Hardin","Hettick","Athens","Newton","Spanishburg","Seaton","Mason City","Randolph","North Henderson","Hamilton","Stronghurst","Cameron","Reynolds","Nauvoo","Quakake","Granville Summit","Capon Bridge","Maysville","Moorefield","Concord","Upper Jay","Hamburg","Batchtown","Loretto","Kandiyohi","Atwater","Vernon","Fillmore","Oak City","Shanks","Saint Marys","Rushville","Kayenta","Oxford","Alturas","Oak Run","Palo Cedro","Millville","Banks","Lynn Center","Slayton","Wilmont","La Sal","Troy","Bullville","Monterey","Lumberport","Brohard","Letart","Charter Oak","New Meadows","Pollock","Erieville","Gilbertsville","Burton","Many Farms","Saint Michaels","Kerrick","Baxter","Ogden","Ava","Crab Orchard","Pleasant Hill","Rosedale","Belmond","Orleans","Green Isle","Excel","Odin","Mountain Lake","Carlin","Hinton","Sheep Springs","Woodruff","Kimball","Tampico","Blue Mountain Lake","Carson","Sac City","Griswold","Arispe","Thornton","Dimock","Benld","Gillespie","Bella Vista","Whitmore","Cassel","Sprakers","Waterville","Wells","Kelayres","Portal","Speculator","Cuba","Navajo","Shiprock","Lindsay","Tsaile","New Hampton","Tishomingo","Cromwell","Alborn","Pierson","Brunsville","Ashton","George","Battle Creek","Welcome","Truman","Trimont","Butterfield","Littleton","Greenview","Maybrook","Gainesville","Westley","Argonne","Rupert","Cowen","Camp Creek","Procious","Grassy Meadows","Perdido","Wanamingo","Humboldt","DeRuyter","Smyrna","Georgetown","Eaton","Plymouth","Constableville","Battle Ground","Guinda","Lehigh","Silver Springs","Teec Nos Pos","Mendon","Blacksville","Adrian","Avoca","Sheffield","Leigh","Newman Grove","Wallback","Diana","Duck","Brooten","Piasa","Kampsville","New Creek","Alden","Kiester","Lyle","Ellendale","Hollandale","Swaledale","Rowan","Collinston","Rodman","Long Lake","Broadalbin","Belleville","Martville","Red Creek","Davy","Erbacon","Bramwell","Jacobson","Meadowlands","Fairfield","Big Falls","Bloomery","Yellow Spring","Springfield","Wardensville","Hanover","Fountain Run","Fort Sumner","Nara Visa","San Jose","San Jon","Corona","Roy","Ribera","Serafina","Yellville","Omaha","Lead Hill","Belfast","Canehill","Morrow","Castleberry","Roseland","Campbell","Inland","Guide Rock","Hildreth","Champion","Donegal","Fifty Lakes","Emily","Glenbrook","Genoa","Phoenicia","Olivebridge","Alfred","Cameron Mills","Maryland","Oakfield","Tioga","Elkland","Osceola","Nassau","Schroon Lake","Limerick","Fort Fairfield","Chocorua","East Berne","Diamond Point","Bolton Landing","Collins","North Collins","Clarence","Peru","Memphis","Arimo","Shinglehouse","Hardin","Collegeport","Mattawa","Orondo","DeMossville","Newtonsville","Camp Dennison","Bellevue","Melbourne","Kings Mills","San Saba","Mullin","Clarion","Lily Dale","Portland","Crawford","Ruth","Lamont","Big Bend","Parma","Bragg City","Steele","Hancocks Bridge","Charlotte Hall","Elk Mills","Saint Marks","New Troy","Mascotte","Waskom","Brunswick","Rosemont","McKenna","Gilsum","Lahaska","Marsteller","Lanse","Falls Creek","Sandy Ridge","Fairhope","Bolivar","Clymer","Green Village","Three Bridges","Cooksville","Albion","New Vernon","Avon-by-the-Sea","Chester","Mill River","Sheffield","Cummington","Carthage","Franklinville","Westernport","Ammon","McGraw","New York Mills","Richfield Springs","Noxapater","Apple River","Scales Mound","Gratiot","Boonville","Crownpoint","Mount Sterling","Medicine Park","West Glover","Reedville","Claflin","Cedarville","Margaretville","Fleischmanns","Roxbury","Goldfield","Farmington","Glenn","Crestline","Braham","Bloomington Springs","Argos","Pierron","Kyles Ford","Duffield","Wauneta","Holliday","Randlett","Oklaunion","Munday","Mapleton","Congerville","Bradford","Triumph","Nerstrand","Williamsville","McDowell","Deerfield","Big Lake","Rawson","Monroe","Minford","Waldron","Londonderry","Kingston","Johnston","Kempton","Ripplemead","Grove Oak","Roberta","Box Springs","Clio","Knoxville","Doyle","Twin Valley","Eagle Bend","Henning","Ponsford","Akeley","Vergas","Waubun","Longville","Marcell","Menahga","Ulen","Dent","Ottertail","Bertha","Cotton","Parkers Prairie","Turners Station","Bedford","Austin","Floyds Knobs","Clermont","New Castle","Borden","Alexandria","Greenville","Fort Branch","Tuscarawas","Dennison","Beloit","Saint Matthews","Haubstadt","West Point","Buckner","Lynnville","Malabar","Grant","Millwood","Pickens","Chunky","Edneyville","Bagdad","Wisner","Black Creek","Freeburn","Stony Point","Jacks Creek","Gadsden","Elkton","Pierre Part","Riddleton","Florahome","Steinhatchee","Remlap","Springfield","Guthrie","Hanson","Sacramento","Centertown","Crab Orchard","Nettleton","Pembroke Pines","Gray","Webb","Orchard Hill","Cedar Grove","Mayo","Norris","McLeansville","Loranger","Natalbany","Cedar Key","Evangeline","Chiefland","Hagan","College Grove","Preston","Hastings","Brownsboro","Primm Springs","Crofton","Woodburn","Denmark","Springville","Enterprise","Bagdad","Wadmalaw Island","Cleveland","Micanopy","Lake Junaluska","Bonlee","Ransom","Raccoon","Sharon","Arnoldsville","Grover","Otis","Clarks","Edgard","Tallapoosa","Seale","Ellerslie","Wellborn","Winona","Jarrell","New Llano","Mason","Gauley Bridge","Stone","Seth","Sophia","Pratt","Williamson","Beauty","Dewar","Grimesland","Robersonville","Kaleva","Harrietta","Table Grove","Gilson","Lomax","Smithshire","Blandinsville","Tennessee","La Harpe","Oneida","Rio","Robbins","New London","Staley","Glenburn","Bottineau","Velva","Sawyer","Granville","Towner","Butte","Lansford","Newburg","Deering","Vienna","Litchfield Plains","Springfield","Naples","Brownfield","East Stoneham","Smyrna Mills","Tonto Basin","Brodheadsville","Lawton","Ferron","Clawson","Sobieski","Sitka","Martha","Hagerhill","Grethel","Betsy Layne","Walhalla","Milton","Belcourt","Emery","Hanksville","Castle Dale","Chilo","Camden","Green Springs","Ellerbe","Dillsboro","Almena","Dallas","Anthon","Mass City","Trout Creek","Shingleton","Westfield","Orient","Sinclair","Bath","Viola","Turbeville","Scranton","Gable","Alcolu","Horse Shoe","Castle Hayne","Lake Toxaway","Yuma","Plantersville","Jewell","Egan","Eupora","Cross City","Hickory","Osyka","Fayette","Mantee","Buckhead","Big Pine Key","Woodleaf","Mount Ulla","Alexis","Casar","Spindale","Mount Vernon","Finchville","Bronson","Williamsport","Shannon","Redwood","Gore Springs","Vandiver","Quinton","Sumiton","Red Banks","Ridgecrest","Pelham","Flintville","Lydia","Estherwood","Baxter","Whitesville","Stapleton","Gibsland","Carlisle","Valley Head","Lakemont","Fouke","Webberville","Atkins","Lemoyne","Clinton","Chireno","Salineville","Lake Village","Lewistown","Foley","Bolckow","Caruthers","Terlingua","New Holland","Yosemite Valley","Reese","Hurley","City of Angels","Woodland","Ellendale","Coahoma","Gloster","Guys","Michie","Sagamore","Hill","Plymouth","Woods Hole","Glover","Perkinsville","East Barre","East Randolph","Bowdoin Center","Wilder","Newbury Old Town","Cascade","Carver","Keezletown","Cusseta","Garvin","Galliano","Golden Meadow","Ridgway","Waverly","Trevor","Saint Joe","Leslie","Bassfield","Pawnee City","Porter","Gresham","Brownville","Milan","Beaver Crossing","Lake Butler","Conneautville","Wallingford","Wickes","Morgan","Nocona","Walnut Springs","Covington","Zavalla","Bronson","Colmesneil","White Springs","Dill City","Anahuac","Allenwood","Picture Rocks","Hastings","Bee Spring","Carlton","Folkston","Glennville","Reidsville","Saint George","Bennet","Broadway","Crandall","Townville","Ambrose","Reddick","Burr","Dunbar","Fairfield","Johnson","Crete","Dwight","Collins","Odum","Caneyville","Russell","Quincy","Garrison","McAlpin","Oran","Delhi","Worthington","Douglass","Wheeler","Coffey","McFall","Pattonsburg","Washington","Blandburg","Amsterdam","Tustin","Andreas","Mahanoy City","Gordon","Damascus","Bartonsville","Richfield","Malta","Vale","Bellevue","Mendon","Plymouth","Ehrenberg","Palo Verde","Cibola","Ogdensburg","Haworth","Allenwood","Pittsville","Milladore","Browntown","Albany","Kerkhoven","Sunburg","Murdock","Grover Hill","Saint Paul","Mount Hope","Nineveh","Hackensack","Miranda","Upperville","Garden City","Willow Lake","Elkton","Hayti","Bryant","White","Gary","Lake Norden","Florence","LaBolt","Revillo","Brandt","Aurora","Poland","Quincy","Volga","Kiowa","La Joya","Fairburn","Isabel","Beulah","Shawnee","Guffey","Boulevard","Boyd","Esperance","Riverside","Jumping Branch","Virgilina","Saint Paul","Galway","River Pines","Pinecrest","Mountain Ranch","Lucas","Winston","Fentress","Ramah","Scipio Center","Marble Rock","Rippey","Buxton","Moro","Wanette","Orange Springs","Princeton","Leopold","Hughesville","Lakewood","Glenallen","De Kalb Junction","Simon","Westford","Sandstone","Abiquiu","Timbo","Hydesville","Rosebud","Milam","Bardwell","Elysian Fields","Kinston","Le Roy","Leland","Cumberland Furnace","Ceresco","Harrisville","Gallipolis Ferry","Mount Vision","Cataldo","Bliss","Downieville","Harper","Schenevus","Reedsville","Grand Marais","Ninety Six","Clopton","Madill","Gracemont","Glennville","Winterset","Thornton","Drain","Cherry Valley","Pendleton","Zalma","Clark","Griffithsville","Sod","Amherstdale","Peach Creek","Lenore","Kermit","Belfry","Rich Creek","East Bank","Julian","Kegley","Peterstown","Wyco","Wayne","Lester","Arnett","Naoma","Crab Orchard","Salesville","Buffalo","Rainelle","Holden","Wheelwright","Accoville","Lovely","Stollings","Newbury Center","Hiram","Dixie","Boomer","Dry Creek","Piney View","Montgomery","Everetts","Harper","Samoa","Rio Dell","Ingalls","Crystal Springs","Steele City","Auburn","Spraggs","Rices Landing","Closplint","Middleburg","Flatwoods","Ravenna","Burkeville","Double Springs","Newton","Ozark","Dover","Colcord","New Blaine","Chancellor","Osceola","Sparta","Lake City","Cadet","Eminence","Warrens","Ontario","Ash Flat","Walnut Shade","Everton","Luna Pier","East Jordan","Carp Lake","Harrisville","Saint Helen","Conway","Onekama","South Roxana","Milligan","Wildwood","Plattenville","Jay","Branch","Catawba","Summerfield","Beckemeyer","Fidelity","Germantown","Beaverton","Arcadia","Leadwood","Knob Noster","Breckenridge","Rosebush","Lake Nebagamon","Highland","Alanson","Avon","Buxton","Rodanthe","Sycamore","Kellyton","Notasulga","Keene Valley","Malaga","Carrsville","Bay City","Winchester","Onsted","Truro","Gladys","Sykesville","Rockland","Lederach","Hydeville","Laytonville","Bolton","Barnum","Pengilly","Kearny","Dorena","Crescent","Blue Grass","Nyssa","Ramona","De Smet","Caputa","Walnut Cove","Aulander","Ahoskie","Murfreesboro","Gratis","Brodnax","Simpsonville","Upper Falls","Ware Neck","King and Queen Court House","Clover","Sumerduck","Center Sandwich","Putnam Station","Otto","Westernville","Stony Creek","Shermans Dale","Methow","Springdale","Paris","Drewryville","Spring Grove","Capron","Clements","Ivor","Blair","Rolesville","Cornersville","Smyrna","Union Mills","Sylvania","Bremen","Lumpkin","White","Metcalf","Cornell","Bethel","Brogue","Mechanicsburg","Portola","Guatay","Santa Ysabel","Lamy","Claypool","Schodack Landing","Mount Cory","Frazeysburg","Mauriceville","Rogers","Utica","Whittemore","Greeley","Alden","Cairo","Lewis","Exeter","Wellsville","Buncombe","Bakersfield","Ozark","Driftwood","Winslow","Berry","Carthage","Brooklyn","Cassatt","Charlotteville","Simsboro","Nickerson","Valier","Ridgedale","Mound City","Stafford","Bynum","Inchelium","Saginaw","Marine on Saint Croix","Waldorf","Stringer","Milroy","Durango","Alexandria","Troup","Mesick","Foster","Loon Lake","Hattieville","Wister","Birchwood","Gadsden","Hopland","Castalia","Belle Valley","Stone Creek","Wiergate","Kilbourne","Aviston","Sharon Springs","Houghton","Redfield","Sand Lake","Barton","Slocomb","Poulan","Battleboro","Milano","Baker","Windsor","Fremont","Rosewood","Florence","Cana","West Manchester","Husum","Russells Point","Chilhowee","Ponce de Leon","Bethel","Mouth of Wilson","Calhoun","Schuyler","Scotland","Martinsburg","Cocolamus","Kerens","Hobbsville","Shannon","Union Hall","Overbrook","Patrick Springs","Florence","Weber City","Harveyville","Pomona","Hoyt","Partridge","Kincaid","Shoshone","Harrells","White Oak","Tar Heel","Kelly","Evergreen","Jacksonville","Cairo","De Witt","Keytesville","Atlanta","Drift","Lowmansville","Waneta","Gunlock","Georgetown","Ahwahnee","Lakeville","Mosier","Haines","Webster","Penn","McVille","Tower City","Hope","Walshville","New Harmony","High Falls","Salisbury Mills","Neversink","South Fallsburg","Pine Hill","Walker Valley","Groveland","Browder","Drakesboro","Eastham","North Clarendon","Somerset Center","Monte Rio","Baltic","Whately","West Chatham","Onset","Soledad","Viper","Happy","Rousseau","Frazer","Opheim","Hobson","Froid","Rudyard","Moccasin","Nye","Sheridan","Twin Bridges","Homestead","Highwood","Antelope","New Bavaria","Holgate","West Unity","Pierce","Loa","Wells","Grouse Creek","Peridot","Bylas","Birchleaf","Sanborn","Aurelia","Robinson","Everest","Denton","Lancaster","Whiting","West Park","Humboldt","Lebanon","Buckeystown","Everglades City","Ruby","Hilliard","Joiner","Marydel","Isleta","Harris","Shady Side","Galesville","Stone Harbor","Pottersville","West Barnstable","North Hatfield","Benwood","Glendale","Bunola","Meadow Lands","Cuddy Hill","Mount Sidney","Townsend","Boston","Roland","Dallas","Hostetter","Forest Knolls","Easton","Preston City","Houston","Guy","Pattison","Morristown","New Market","Westpoint","Leoma","Five Points","Harlan","Loyall","Vivian","Kitts Hill","Gadsden","Livermore","Strong","Boothbay","Mapleton","Washburn","Center Conway","Lincoln","Windsor","Cumberland Foreside","Diamond","Sheffield Lake","Catlin","Somerset","Warren","Woodsboro","Ocotillo","Durham","Maud","Allenton","Stinnett","Freedom","Stanberry","Leonard","Wheatland","Alvin","Garden Valley","Dutch Flat","Vermontville","Crane","Access","Niobe","Nester","Spain","Darmstadt","Italia","Blue","Box Elder","Babbitt","Wessington Springs","Sabin","Leonard","Kindred","Amenia","Huron","Blanco","Bergheim","Waelder","Harwood","Enon","Transfer","Lyon","Midway City","Riverside","Valley Mills","Dragoon","Saint David","McNeal","Merton","Maurice","Ellsworth","Little Rock","Ireton","Glens Fork","Burlington","Ballantine","Shell","Joliet","Phillips","Marquette","Hampton","Alda","Huntingburg","Grandview","Dale","Gentryville","Riverton","South Willington","Quinebaug","Mansfield","Cottage Hills","Climax Springs","Saluda","Midway Park","Isle of Wight","Montezuma","Oakfield","Empire","Willsboro","Fayville","New Memphis","Merrill","Suttons Bay","Honor","Kingsley","Brimley","Proctor","Senath","Arbyrd","Eagle Bridge","Patrick","McBee","Jefferson","Ruby","Bloomburg","Genoa","McClure","Bluejacket","Big Cabin","Henderson","Friona","Windthorst","Newcastle","Woodson","Loving","Marengo","Grand View","Clam Lake","Brule","Southfields","Essex Fells","Croton Falls","Roosevelt","Chili","Elnora","Bonduel","Bainbridge","Norway","Decatur","Cyril","Kings Bay Base","Asotin","Telogia","Stoutland","Collins","Saint Nazianz","Wittenberg","Tigerton","Tom Bean","Gwynedd","Goshen","Monterey","Plainfield","Glen Campbell","Russell","Patton","New Derry","Coburn","New Florence","Belle Haven","Milton","Kiamesha Lake","Tillson","Locke","Groton","Wampsville","Colden","Portville","Thaxton","South Egremont","East Otis","Worthington Center","Appleton","McAlisterville","Henryville","Modena","Amawalk","Sipesville","Tire Hill","Austin","Oliveburg","Boalsburg","Pungoteague","Block Island","Mifflinville","Fort Hall","Macksburg","Clearlake","Gleason","Cobb","Princeton","Hubbard","Bancroft","Waukon","Alexis","New Market","Neponset","Hartford","West Blocton","Batchelor","Cheneyville","Cat Spring","Belle Rose","Donner","Bayfield","Wakefield","Marion","Cedar","Central Lake","Pellston","Pentwater","East Lake","Au Train","Rubicon","Carrollton","Fife Lake","Lake Ann","Montgomery City","Moline","Rollingstone","Kelso","Tuscumbia","Painesdale","Malone","Finger","Prairie Farm","Marine","Ewen","Wakefield","Watersmeet","Waverly","Fish Creek","Baileys Harbor","Richburg","Dalton","Gurley","Endicott","Morristown","Farwell","Ainsworth","Fonda","Randolph","Arenas Valley","Wittmann","Waukee","Prairie City","Goodland","Beaver Bay","Biwabik","Omaha","Mount Tremper","Germanton","Atlantic","McCool Junction","South Bend","Rising City","Tecumseh","Ithaca","Emmet","Brooklyn","Grand Junction","Shellman","Winnie","Cannon","Rush","Jasper","Lowell","Velarde","Dixon","Fairmont","Glendale","Emerson","Jeff","Heidrick","Partridge","Keavy","Karnack","Linden","Avery","Annona","Pattonville","Maud","Joaquin","Canute","Mountain View","Dierks","Roosevelt","Morrisville","Brighton","Fair Play","Delight","Silva","Ellsinore","Rose Bud","Houston","Prattsville","Peach Orchard","Adona","Combs","Bigelow","Perry","Blooming Grove","North Zulch","Bent","Laurelton","Grampian","Distant","Weedville","Fairmont City","Kennedy","Coalport","Corsica","Driftwood","Cranesville","Wellman","Amherst","Whiteface","Cameron","Howe","Saint Elizabeth","Iberia","Barnsdall","Kennerdell","Elmore City","Jameson","Dearborn","Loop","Ropesville","Pettigrew","Saint Louisville","Elko","Gordon","Big Creek","Paint Lick","Trosper","Ary","Throckmorton","Clatonia","Louisville","Pleasant Hope","Hallam","Denton","Truchas","Cordell","Corn","Glenwood","Sandy Ridge","Risingsun","Bradner","Willshire","Russia","Lake Monroe","Jeffersonville","Rockhouse","Eastern","Stanton","Hamer","Harrison","Oakdale","Colfax","Ball","Pollock","Castor","Decatur","Georgetown","Calypso","Pomaria","Reidville","Willard","Shubuta","Spearsville","Sibley","Harrisonburg","Grambling","Hodge","Bolingbroke","Unadilla","Red Bay","Courtland","Spruce Pine","Munford","Cleveland","Mooresburg","Philadelphia","Nunnelly","Wartrace","Lowndesboro","Cecil","Titus","Fulton","Pearlington","Calvert","Chunchula","Leroy","Manitou","Eddyville","Mortons Gap","Eddyville","Symsonia","Saint Charles","Dukedom","Dixon","Stapleton","Bailey","Little Rock","Lauderdale","Washington","Centreville","Silver Creek","Braxton","Potts Camp","Liberty","Jayess","Bellefontaine","Brooksville","Sturgis","Alamance","Society Hill","Caledonia","Sarahsville","Midvale","New Franken","Peapack","Linden","Seven Valleys","Jamestown","Cross","Saxon","Suring","Indianola","Hingham","Lodge Grass","Geneva","Waterville","Grand Meadow","Good Thunder","Wrenshall","Maupin","Dakota","Edwall","Davenport","Viola","La Farge","McFarland","Paia","Caney","Milburn","Coleman","Caddo","Moores Hill","Danville","Plainview","Ola","Havana","Gravelly","Harvey","Williamsport","East Point","West Van Lear","Meally","Van Lear","Roslyn","Britton","Langford","Pierpont","Spencer","Seaford","Pine Valley","Carter Lake","Cave Springs","East Irvine","Waterloo","Cashion","Westover","Madison","Union","Goshen","Burket","Rio Nido","Oregon House","Palermo","Wyanet","Fairmount","Milton","Dublin","Niantic","Coatsburg","Salisbury","Vallonia","Medora","Sulphur Springs","Sergeantsville","Olympia Fields","Stinesville","Fair Haven","Sells","Gwynedd Valley","Pomeroy","Selma","Eaton","Bendersville","Conestoga","Ramey","Schaefferstown","Manns Choice","Yorkville","Industry","Manorville","Newell","Leetsdale","Laughlintown","Saint Boniface","Steilacoom","Glens","Cold Springs","Lowber","Belvidere","Avenal","Port Hope","Troy","Deming","Tumtum","Elliston","Walnut","Linkwood","Henderson","Marydel","Kirklin","Centrahoma","Kohler","Paradise Valley","Powell","Coulterville","Saint Mary","Anthony","Bay Port","Orosi","Spring Valley","Inverness","Lytle","Bruni","Gonzales","Freer","Shelbyville","Altenburg","Georgetown","Chandler","Boswell","Bloomsdale","Versailles","Okay","Wayne","Waveland","Louise","Atascosa","Port Bolivar","Orange Cove","Grantville","Village Mills","McEwen","Richgrove","Hines","Ferrysburg","Green Valley","Iowa","Basile","Olla","Shongaloo","Bland","Norwood","Kissee Mills","Williamsburg","Marshall","Jewell","Clarksdale","Jaroso","Nabb","Huson","Wilsall","Statenville","Buffalo","Patriot","Purdon","San Luis","Berea","Mount Storm","Newberry Springs","Hornbeck","Eutaw","Wingina","West Finley","Marionville","Willis Wharf","Greenbush","Buskirk","Wyoming","Glendale","Loch Sheldrake","Junction City","Everly","Fairfield Bay","Cleveland","Choctaw","Lake Buena Vista","Taos","Anthony","Cranks","Battle Mountain","Tuckerman","Konawa","Lockney","Dover","Cutler","Oilton","Wallins Creek","Maysville","Karnes City","Huron","Tahoma","Cheshire","Collinsville","Air Force Academy","Beechmont","Nageezi","Linville","Rocky Gap","Morral","Rushville","Pleasantville","Nashotah","Lyons","Farragut","Douglassville","Universal City","Dixonville","Madison","Weir","Reading","Hankamer","Alpha","Etna","Georgetown","Acme","Stratford","Gaylordsville","Island","Oakland","Montgomery","Lake Helen","Arrowsmith","Smarr","Burns","Vienna","Glencoe","Alhambra","Nortonville","Allison","Ethel","Refugio","Covington","Montezuma","Higden","Woodbury","Horseshoe Bay","Rosedale","Pittsville","Trappe","Tilghman","North Amherst","Russell","Rowe","Bausman","Parish","Mohawk","Eden","Rowena","Pamplin","Granville","Trumbauersville","Mount Victoria","Monument Beach","Snow Shoe","Estell Manor","Dorothy","Sanford","Adah","Fairchance","New Salem","Spring Creek","Swartswood","Blooming Glen","Kimberton","Ingomar","Glenelg","Los Alamos","Strathmore","Middle Granville","South Cairo","Riner","Spinnerstown","Port Royal","Waterville","Harpers Ferry","Caledonia","Rushford","Brownsville","Houston","Bloomfield","Lindsay","Terry","Vida","Buckley","Roberts","Milford","Rankin","East Lynn","Campus","Potomac","Santa Fe","Brinkley","Spencerville","Seeley","Woodstock","Highlandville","Lansing","Fairland","San Diego","Eastover","North Adams","Talco","Richland","Climax","Sumner","Arlington","Stockton","Shaw","North Carrollton","Lamar","Hollandale","Lena","Polkville","Henrietta","Donie","Maryneal","Newhall","Proctor","Gorman","Hartley","Sutherland","Marcus","Ringwood","White Lake","Brookdale","Green Sea","Edwardsport","Saint Francisville","Clyde","Deansboro","Ludlow","Edelstein","Shellsburg","North Falmouth","Richland","Lisbon","Dwight","Calhoun","Perkins","Campo","Grandfalls","Jasper","Runge","Waukomis","Austin","Eudora","West Lebanon","Dewey","Butler","Laton","York","Port Barre","Leonville","Applegate","Port Sanilac","India","Welcome","Highwood","Perryman","Pennsylvania Furnace","Withams","Horntown","Galena","Ulster Park","Normantown","Institute","Switzer","Munich","Prairie View","University","Cornish Flat","Upton","Italy","Salkum","Chancellor","Westford","Jamestown","Larimore","Pomona","Leonidas","Lamont","Lakeside","Quantico","Deal Island","Baudette","Palisade","New Richland","Cochiti Pueblo","Bloomington","Monterey","Seagrove","Bennett","Purlear","Ferguson","Traphill","Manzanita","Thurmond","Reserve","Hanover","Bracey","Gruetli-Laager","Palmer","Spencer","Beechgrove","Likely","Donnelsville","Riverside County","Gambier","Washington Grove","Richmond","Lester Prairie","Saint Leo","Toronto","Alta Vista","Garnett","Zurich","Lecompton","Ellaville","Linwood","Kirkville","Fabius","Planada","Pratts","Blachly","Hines","Pilot Rock","Coulee Dam","Franklin","Stockton Springs","Harmony","Rock Hill","Spring Glen","Rawlings","Swoope","Renovo","Melba","New Plymouth","Grand View","Black Creek","Athelstane","Brussels","Fort McCoy","Eden","Oak Hill","Timberon","Rosenhayn","State University","Rodeo","Selawik","Coffman Cove","Noatak","Onyx","Point Hope","Saint Bonaventure","Wentworth","Altha","Upatoi","Belleville","Atlasburg","Eton","Newton Grove","Trenton","Buies Creek","Boiling Springs","Collegeville","East Liberty","Castle Point","Perry Point","Mountain Home","Oelrichs","Beaver","Tieton","Plato","Turkey Creek","San Antonio","Krebs","Watkins","Lone Wolf","Tonkawa","Goodwell","Texhoma","Hartshorne","Whiting","Prairie","Chattahoochee","Welcome","Templeton","Jefferson","Harriet","Mount Vernon","Ojo Caliente","North Bloomfield","Kaw City","Paden","Orwell","Damascus","Newhope","Eolia","Penitas","Cusseta","Martin","Red Oak","Sulphur Bluff","Rolfe","Dennison","Mill Spring","Adell","Leeton","Cruger","Marietta","Igo","Woodlawn","Thrall","Christine","Philo","Lansing","Racine","Alford","Still Pond","Cawood","Hobart","Bismarck","Waynetown","Twining","Slater","Boiceville","Lagrange","Amherst","Geff","Cisne","Lefor","Welch","Palmyra","Birdsnest","Echo","Courtland","Osborn","Horse Branch","Rosine","Sonoita","Sublette","Wheatland","Dazey","Buffalo","McBain","Juno Beach","Wrightstown","Beaufort","Village","Riverton","Circleville","Arcadia","Olancha","Squaw Lake","Mesa","Madrid","Morristown","Prudhoe Bay","Siemens","Greenwood","Reydon","Loco","Copan","Bunch","Santa Clara","Heflin","Beloit","Perry","Williamsburg","Fish Camp","Metamora","Straughn","Orland","Eckerty","Cannelton","North Salem","Hillsboro","Hartford","Manning","Norwich","Lowman","Big Piney","Escalante","Klamath River","Macdoel","Hat Creek","Fawnskin","Skykomish","Newtown","Claremont","Hinckley","Circleville","Candor","Mt Pleasant","Badin","Cactus","Broxton","Griffithville","Elephant Butte","Okolona","Tomkins Cove","Flatwoods","Monterey","Johannesburg","Axtell","West Middleton","Whittington","Birch Tree","Babcock","Oak City","Lovilia","Mangum","Boscobel","Alexander","Drakes Branch","Bernard","Indianola","Chariton","Point of Rocks","Encampment","Hanna","Dutch John","Robertson","Manila","La Barge","Rock River","Elroy","Lyndon Station","Alderpoint","Union","Laurel","Liscomb","Lenox","Keystone","Van Horne","Saint Marys","Victor","Oak Hill","Arabi","Toomsboro","Fleming","Sale City","Upper Saddle River","Royal City","Adams Center","Munnsville","Damon","Old Ocean","Axtell","Columbus","Glasgow","Fenwick","Dingess","Lindside","Farmington","Levels","Moatsville","Prewitt","Steep Falls","Albion","Dennysville","Lee","Castine","Kirkwood","Adams","Pennellville","Hannibal","San Bernardino County","Adolphus","Busy","Vicco","Elkhorn City","Pollard","Poyen","Viola","Battle Creek","Bluff","Hilltop","Hutchins","Fordsville","Pawnee","Park Hill","Rockport","Lenox","Tennessee Colony","Prospect","Grapeland","Ionia","Reading","Storden","Plum City","Slagle","Salyer","Gainestown","Greenville","Cohocton","Junction City","Whipple","Acworth","Pewamo","Lovingston","Raymond","Lowndes","Essex","Coulterville","Summerfield","Faulkner","Douglas","Hallieford","Lottsburg","Tangier","Burgess","Meadow Valley","Chualar","Lowell","Los Olivos","Port Salerno","Williston","Monponsett","Bradford","Danube","West Union","Bethany Beach","San Jose","Hartsburg","Westgate","Muscoda","Alsey","Scranton","McLain","Elmwood","Saint David","Bellflower","Melvin","Norwood Young America","Keewatin","Spring Valley","Windsor Heights","Roper","Milford","Downs","Dallas Center","Schneider","London Mills","Currituck","South Mills","Martinsville","Nashwauk","Braceville","Northwood","Pierceton","Keota","Fackler","Aurora","Hokah","Carrabelle","Lohman","Grandy","Coinjock","Big Rock","Fremont","Stoddard","Ackley","Jesup","Gretna","East Dubuque","Alba","Pesotum","Millville","Bureau","Altona","Sheffield","Manly","Trivoli","Lakota","Charlotte","Henderson","Thomson","Melcher-Dallas","Pleasantville","Gilbertville","Andover","Lyndon","Preston","Hurst","Elkville","Mounds","Manlius","Osage","Center Junction","Woodland","Rich Square","Merry Hill","Gilman","Whaleyville","Mitchellville","Spring Park","Warren Center","Valley Forge","Chester Heights","Flintstone","Trona","Blue Jay","Fairton","Cornwall-on-Hudson","Mattawana","Windsor","Bradley Junction","Coal City","Shady Spring","Daniels","White Oak","Bradley","Helen","Rhodell","Josephine","Mount Carbon","Bickmore","Kimberly","Dawes","Whitesville","Miami","Deep Water","Cabin Creek","Racine","Smithers","Drybranch","Ridgeview","Winifrede","Debord","Man","Huddy","Thelma","Yolyn","Whitman","Chattaroy","Tomahawk","Ghent","Quinwood","Paden City","Washington","Belmont","Fleming","Newport","Davisville","Enterprise","Syracuse","Beverly","Leslie","Ashcamp","Lick Creek","Mouthcard","Eldred","Astoria","Riggins","Croghan","Raquette Lake","Thendara","Aurora","Arnoldsburg","Friendly","Millstone","Cottageville","Elvaston","Bruno","Shafer","Tower","Winton","Soudan","Embarrass","Knife River","Shipman","New Douglas","Clarksburg","Greeley","Little Meadows","Ansted","Mannsville","Brantingham","Piseco","Turin","Sinks Grove","Crane Lake","Kerby","Rio","Arco","White Mountain Lake","Mount Zion","Jacksonburg","Big Springs","Uriah","Franklin","Ionia","Deloit","Au Sable Forks","Tilleda","Leavittsburg","Southington","Maurertown","Marbury","Nicoma Park","Jasper","Ely","Sutherland Springs","Flovilla","Boron","Arendtsville","Courtland","Nashport","Gates","Lena","Littlefield","Niwot","Rye","Solebury","Deepwater","Addison","Marshfield Hills","Rheems","Chinchilla","Big Cove Tannery","Beech Creek","Mill Creek","Mifflin","Free Union","Secor","Holly Springs","Bunnell","Glidden","Lott","Barry","Richland","Leona","Iola","Chilton","Blackwell","Evans","Frost","Hubbard","Marquez","Pennington","Beckville","Guy","Woodlake","Kopperl","Utica","Bearden","White Plains","Story","Gillham","Oden","Monticello","Bagwell","Marietta","Harrisville","Fairfax","Stephens","Cambridge","Dows","Denmark","Union Point","Middletown","Whiteside","El Paso","Verona","Hodgen","Ratliff City","Greenland","Lilesville","Rhine","Naylor","Hillsboro","Horatio","Caddo Gap","Tierra Amarilla","Lore City","Kingsville","Faith","Peninsula","Springboro","Fredonia","Midway","Elizaville","Lost Creek","Chama","Embudo","Coyote","Jemez Springs","Otoe","Nemaha","Verdon","Ceresco","Cumberland","Margaret","Bridgewater","Grandfield","Seneca","Hinkley","Kaumakani","Violet Hill","Plain Dealing","Taneyville","Washington","Dunbarton Center","Polk","Errol","Westfield","State Road","Siloam","Lowgap","Ararat","Hedrick","Ollie","Eldon","Delta","What Cheer","Milton","Batavia","Derby","Russell","Mystic","Letts","Brighton","Hillsboro","Sabula","Woodburn","Colesburg","Alburnett","Elliott","Dougherty","Meriden","Dixon","Ogden","Somers","Pilot Mound","Aredale","Yarmouth","Wall Lake","Breda","Wyoming","Hawkeye","Calumet","Hospers","Keosauqua","Wellman","Defiance","Farragut","Woolstock","Clearfield","Gassville","Lakeview","Poplar Grove","Goldonna","Lamar","Rockaway Beach","Hoxie","Waverly","Sidon","Kenney","Petersburg","Broadway","Ho-Ho-Kus","Pierce","Plainview","Brunswick","Stanton","New Effington","Claire City","Wilmot","Veblen","Peever","Corona","Canyon City","Coldwater","Foreston","Sidney","Lakeview","Clarkia","Burton","Pomerene","Garrett","Duke Center","Schenley","Olanta","Pinewood","Canyon","Elkton","Scottsburg","Bluebell","Wynot","Ashley","Edgerton","Convoy","Lyons","Tremont","Bruce","Big Creek","Randolph","Westphalia","Bowman","Glenbeulah","Potter","Payneville","Muldraugh","Frankewing","Silas","Fruitdale","State Line","Herald","Wilson","Elk Mound","Downsville","Wanakena","Star Lake","Winthrop","West Stockholm","Dickinson Center","Rensselaer Falls","Brasher Falls","Ridgeland","Sand Creek","Bryant","Krakow","Lummi Island","Nemo","Brandon","Richmond","Ash Fork","Glasgow","Labadie","Warren","Bringhurst","Weeksbury","Stanville","McConnellsburg","Blue Ridge Summit","Washington Boro","Summit Station","Blanchard","North Point","Saxton","Hopewell","Mesilla Park","Port Elizabeth","McElhattan","North Bend","Muir","Smoketown","Bart Township","Bethel","Shartlesville","East Prospect","Loganville","Manomet","North Troy","Bailey Island","Sunshine","Grosse Tete","Erwinville","Cecilia","Kanopolis","Haven","Mount Hope","Saint Paul","Shawsville","Sulphur Springs","Burgin","Elmwood","Thorp","Shell Lake","Hale","Mecosta","Empire","Brant","Merritt","Arcola","Riverside","Fairchild","Conrath","Wind Ridge","Reklaw","La Crosse","Hampton","Worthington Springs","Fairfield","Parkman","West Farmington","Cushing","Williamsburg","Caliente","Emerson","Taylor","Hondo","Nortonville","McClellandtown","Republic","Jacobs Creek","East Millsboro","Ridgeley","Albright","Williamsburg","Sanders","Sims","Harpster","Gay","Isabella","Attica","Fingerville","Metropolitan","Bill","Medaryville","Moncure","Simpson","Edgerton","Ceres","Maury","Sharpsburg","Kipling","Poynor","Waverly","Howardsville","Saint Thomas","Urich","Walnut Bottom","Cashtown","Fannettsburg","San Pierre","Eugene","Wendel","Moscow","Guilford","Greenwood","Bowler","Justice","Matoaka","Purgitsville","Burlington","Old Fields","Hudson","Redkey","Scipio","Monroe City","Hazleton","Arlington","Chloride","Mayfield","Lorraine","Rowlesburg","Fielding","Meadow","Grand Ridge","Hardy","Genoa","Newcomb","Olmstedville","Meridian","Eagleville","McArthur","Montgomery Creek","Bieber","Round Mountain","Fall River Mills","Adin","O'Brien","McMechen","Tunnelton","Burnsville","Helvetia","Sugar Grove","Terra Alta","Anmoore","Beech Bottom","Carolina","Bigbend","Orma","Dunmore","Mill Creek","Huttonsville","Valley Bend","Monterville","Danese","Coal Mountain","Cyclone","Wharncliffe","Falling Rock","Forest Hill","Turtle Creek","Hernshaw","Lookout","Scarbro","Midway","Mount Lookout","Mallory","Palestine","Glen Daniel","Bim","Jeffrey","Lavalette","Hewett","Princewick","Wharton","Bob White","Glenwood","Millwood","Henderson","Dunlow","Itmann","Morristown","Hamilton","Lucerne","Bippus","Wawaka","Uniondale","Gassaway","Hepzibah","Glengary","Adrian","Sylvester","Wallace","Elmer","Savoy","Peggs","Chester","Kennan","Bonnerdale","Scottsburg","Creola","Pahala","Chandlersville","Juda","Foster","Ranchita","Fruitvale","Sherrodsville","Arp","San Miguel","Makinen","Side Lake","Indian Mound","Riverdale","Mellen","Des Arc","Patton","Reydell","Edwards","Honeydew","Lakehead","Potter Valley","Rembert","Ranburne","Tangipahoa","Fluker","Empire","Pineola","Cade","Centerville","Oak Hill","Totz","Garrett","Hardy","Dwale","Canada","Robinson Creek","Mount Eden","Pleasureville","Westport","Waddy","Wilson","Jekyll Island","Woodbine","Rockholds","Gaylesville","Epworth","Alma","Derma","Oakman","Natural Bridge","Lynn","McClellanville","Hoskinston","Essie","Wooton","Yeaddiss","Gays Creek","Bledsoe","Cherry Log","Matinicus","Edwards","Hermon","Russell","Kieler","Saint Hedwig","Staples","Briggs","Denver","Heath","Dawson","Hulbert","Hartville","Boggstown","Kilkenny","Boyceville","Saint Onge","Black Rock","Drasco","Beldenville","Frohna","Bradford","Trinidad","Shipman","Bernice","Saint Stephens","Lyons","New Harbor","North Anson","Elba","Goldsmith","Tuscola","Buffalo Gap","Boyd","Taunton","Olivia","Clarkfield","Cottonwood","Freeport","Windom","Fairview","Okarche","Leedey","Ames","Aline","Forestville","Ephraim","Ten Mile","Vida","Sherrill","Amberg","Hartman","Coal Hill","Oxford","Calico Rock","Taylor","Wilton","Gotham","Strawberry","Hallsville","Scranton","Somers","Monte Vista","Redwood","Toms Brook","New Market","Sand Fork","Camden","Lupton City","Chataignier","Charenton","Savonburg","Baldwin","Osteen","Pennville","Mico","Cogswell","Cloud","Peak","Ketchum","Park","Seal","Ford","Aventura","Bismarck","Newport","Valentines","Sheridan","Mutual","Rickman","Christmas Valley","Albany","Fertile","Datil","Magdalena","Gila","Freeburg","Grass Valley","Des Arc","Taylor","Belfry","Langston","West Briar","Altura","Lewiston","Conrad","Agate","Arriba","Lopez","Wayne","Middle Bass","Andover","Alfred Station","Vanderbilt","White Heath","Dewey","Vermont","Naples","Warsaw","Estancia","Vaughn","Algodones","Pablo","Sperry","Simms","Sand Coulee","Brady","Geyser","Villanueva","Cheyney","Alfred","Camden Point","Puerto Rico","Local","University","Remote","Gainesville","Channing","Caspian","Bingen","Remer","Bena","Stockton","Lost City","Brandywine","Fisher","Mathias","Baker","Rice","Rhodes","Moorhead","Wylliesburg","Pitman","Wilmot","Albion","Lewiston","Milford","Umpire","Fitzhugh","Arthur City","Medford","Helena","Carmen","City of Industry","Post Mills","McDonald","Rocky","La Crosse","Dendron","Grinnell","Westbrook","Shawboro","Ennice","Logan","Hume","Council Hill","Dustin","Wainwright","Divide","Woodruff","Varna","Washburn","Dana","Buda","Canal Point","Saltillo","Bath","Cedar Grove","Yoder","Poston","Kingdom City","Williamsburg","Tebbetts","Steedman","Fairfax","Yoder","Keystone","Saint Louis Park","Middle River","Wye Mills","Frankfort","Normal","Santa Ana Heights","Murphy","Strawn","Athena","Calpine","Brownsville","Esbon","Downs","Penokee","Tonica","Lithopolis","Marylhurst","Bly","Burns","Goff","Cherokee","Rushville","Easton","Shady Point","Galva","Assaria","Collinston","Bonita","Jones","Pecos","East Corinth","Brownville","Hershey","Simmesport","Lewellen","Hickory","Karnak","Chana","Holcomb","Rock","Copper Harbor","Chester","Upper Abbot","Donaldson","Bogata","Mora","Cleveland","Blackstock","Chambers","Lackey","Leburn","Lutsen","Tofte","Deer Lodge","Hope","Fairview","Freedom","Riviera","Sarita","Hinton","La Honda","Grover","Briggsdale","New Raymer","Orchard","Tipton","Lucas","Brookville","Pembine","Hewitt","Salemburg","Upsala","Peetz","Kettleman City","Omega","Solsberry","Galesburg","Grey Eagle","Burtrum","Brilliant","Cedar Valley","Mason","Malad City","Callaway","Coulee City","Stratford","Odessa","Wonewoc","Granger","Redmon","Petersburg","Garner","Redfox","Bulan","Mousie","Alton","Gas","Girard","Colony","Oneco","Peach Springs","Stark","Fosston","Keswick","Fenton","Irwin","Remsen","Cumberland","Ruthven","Churdan","Templeton","Bonaparte","Graettinger","Palo","Shelby","Hancock","Urbana","Falkner","Ewing","Philadelphia","Emden","Baring","Brashear","Wyaconda","Greentop","Laona","Stoneville","Holly Grove","Stephensport","Arnett","Peace Dale","Kanab","Nova","Angora","Mackinaw City","Claremont","Parkersburg","Alma","Admire","Allen","Madison","Athens","Crawford","Allardt","Long Branch","Hartford","Neosho Rapids","Port Royal","New Point","Pelham","Occoquan","Superior","Otisco","Hoskins","Powhatan","Charlotte","Melrose","Weyerhaeuser","Heppner","Calmar","Shelton","Wilbur","Hartline","Tracy City","Starbuck","Andes","Wykoff","Pioche","Alamo","Hiko","Caliente","Seabrook","Delmar","Mylo","Hannah","Hazel","Fancy Farm","Fossil","Danbury","Haigler","Dittmer","Wilton Manors","Sunrise","Weston","Miramar","Content","Marlboro","Pleasant Shade","San Manuel","Bowlus","Holyoke","Julesburg","Paoli","Ouray","New Concord","Winchester","Josephine","Modale","Green","Mermentau","La Fontaine","Bovina Center","Ronald","Roslyn","Uniontown","Colton","Amelia","Arivaca","Maple City","Clarkson","New Brockton","Fort Deposit","Paeonian Springs","Valparaiso","Westville","Arapahoe","Nielsville","Climax","Gays Mills","Adger","Montreat","Burdett","Schoenchen","Allen","Immaculata","Woodstock","Basye","Clear Brook","Flatwoods","Elk Garden","Tracyton","Robbins","Sunbright","Jacksonboro","Pall Mall","Petros","Grassy Creek","Modoc","Morgan","Bridger","Spring Lake Park","Sweet Water","Pine Hill","La Belle","Oxford","McNabb","Warsaw","Stanfield","Diamondville","Fountain","Van Meter","Harmony","Ridgeway","Mabel","Weskan","Orderville","Jacksonville","Rio Grande","Melvin","Cohasset","Deer River","Monterey County","Stratford","Squaw Valley","Mankato","Glen Elder","Formoso","Ovid","Inkom","Dakota","Ossian","Clermont","Peterson","Fort Atkinson","Canton","Tioga","Fulton","Colorado City","White City","Lost Springs","Burdick","Hope","Dwight","Woodbine","Lincolnville","Ramona","Wilsey","Lake Mills","Cullen","Mayfield","Hardtner","Pond Creek","South Haven","Jet","Bluff City","Braman","Goltry","Manchester","Geuda Springs","Swan","Lehman","Cherry Point Marine Base Mobile Home Park","Clifford","Pollocksville","New Weston","Sargent","Milroy","Cannel City","Saline","New Florence","Wellsville","Pelkie","Skanee","Wauregan","Kinnear","Hudson","Farson","Sugartown","South Williamson","Center Point","Fort Gaines","Okoboji","Brian Head","Limon","Kinderhook","Chambersburg","Ursa","Camp Point","Loraine","Augusta","Melbourne","Garnavillo","Miles","Zwingle","Tripoli","West Bend","Havelock","Ottosen","Gillett Grove","Essex","Edgemoor","Due West","Troy","Point Lay","Kaktovik","Wainwright","Rinard","Xenia","Bone Gap","Young","Rex","Ansley","North Loup","Forreston","Pleasant View","Monroe","Alsea","Blodgett","Stonefort","Cave-in-Rock","Elfrida","Cochise","San Simon","White Bear Lake","Blum","Racine","Verndale","Lucan","Canaan","Dupont","Cross Plains","Commiskey","Deputy","Dunlap","Del Rey","La Jara","Fort Garland","Beulah","Bowie","Douglas","Rush Valley","Hermosa","Woonsocket","Kimball","Tabor","Brooklandville","Elbow Lake","Barrett","Hoffman","Farwell","Wendell","Clinton","Miltona","Talmoon","Congress","Kirkland","Licking","Swisshome","North Greece","Argusville","Standard","Lilliwaup","Union","Clark","Anderson","Kiowa","Sharon","Burlington","Zenda","Penelope","Blain","Moscow","Kendall","Rolla","Prescott","Sherrill","Summerdale","Dublin","Riverdale","Lake Harmony","Oxford","Bronte","Milwaukie","Waucoma","Shannon City","Kensett","Lost Nation","Ellsworth","Dunnell","Paton","Burt","Quimby","Blairsburg","Wiota","Palmer","Cylinder","Rockford","Fernwood","Goodland","Fair Oaks","Brook","Valera","Shedd","Brownsville","Tamms","Cairo","Boelus","Black River","Mikado","Manassas Park","Green Pond","Pearblossom","Westtown","Lake Hamilton","Trenton","Flandreau","Fruitland","Coden","Vader","Jonesburg","Greenfield","Gardner","La Veta","Vershire","Laurens","Keene","Jonesville","Worthville","Royal Center","Plum Branch","Allons","Coalfield","Elmwood","Islandton","Lodge","Flemington","Aldrich","Stotts City","Liberal","Walnut Grove","Stark City","New Galilee","Monroe","Schleswig","Gilbert","Tiffin","Corwith","Adair","Burnettsville","Grapeview","Higdon","Geraldine","Estillfork","Aguila","Bagdad","Grant City","Breckenridge","Burlington Junction","Rich Hill","Massena","Anita","Olin","Moorland","Volga","Onslow","Quasqueton","Ledyard","Hamlin","Plainfield","Stacyville","Ladora","Norway","Leonore","Baring","Alpine","Thayne","Bedford","Auburn","Chaseburg","Hustler","La Valle","Camp Douglas","Blue River","Hillsboro","Cazenovia","Hancock","Cameron","Creole","Osage","Hewitt","Ogema","Unionville","Homewood","Galva","South English","Searsboro","Rutland","Gilmore City","New Providence","Earling","Winthrop","Grand Mound","San Gregorio","Fabens","Church Rock","Lovelock","Montfort","Merit","Avalon","Cedar Lake","West Mineral","Weir","Pleasanton","Arma","Arcadia","McCune","Pointblank","Claysburg","Smithfield","Uledi","Vestaburg","Newell","Grindstone","Chestnut Ridge","Limestone","Clearville","Saint John","Jarvisburg","Kelford","Prairie View","Gilboa","Ferndale","Independence","Bazine","Selden","Almena","Natural Bridge Station","Swartz","Chaplin","Ulm","Emory","Early","Berry Creek","Gerber","Richvale","Oacoma","Pukwana","White Lake","Selby","Harrold","Gettysburg","Hoven","Highmore","Wessington","Holabird","Agar","Akaska","Colton","Ozone","Skyforest","Silverstreet","Piney Woods","Normandy","Mohawk","Kirksey","Comstock","Center Cross","Waverly","Benavides","Blackstone","Newell","Lemmon","Prairie City","Bison","Schaghticoke","Valley Falls","Rives","Minto","Oslo","Euclid","Toddville","Hayfork","Wilderville","Ostrander","New Albin","Moapa","Rowland","Bucyrus","Tannersville","Radnor","Sedalia","Mondamin","Watson","Nilwood","Coolin","Nabesna","Greenwood Village","Russell","Ruthton","Woodstock","Swanville","Garden City","Ackerly","Olmsted","Olive Branch","Elmer City","Underwood","Rose Creek","Dakota City","Renwick","Twelve Mile","Hamlet","Anderson","Kennard","Merlin","Hardin","Cunningham","Bern","Steinauer","Fredonia","Mollusk","Tivoli","Markham","Glendale","Reddick","Rose Hill","Ewing","West Chester","Bapchule","Summit Lake","Gheens","Cut Off","Larose","Jackpot","Rockland","Turner","Epes","Geigertown","Bluff Dale","Brashear","Glenwood","Shandon","Silver Grove","Sparta","Miamitown","Collinsville","Reelsville","Mulberry","Southside","West Springfield","Flat Rock","Silver Bay","South Tamworth","Center Ossipee","South Freeport","Big Stone City","Forest River","Winston","Hayneville","Letohatchee","Georgiana","Revere","Nuremberg","Garber","Drummond","Dacoma","Meno","Wakita","Olney Springs","Wahkon","Bradyville","Hamden","Frankfort","McDermott","Effie","Mahnomen","Vilas","Holly","Hasty","Ordway","Pritchett","Two Buttes","Cheyenne Wells","Annawan","Mineral","Canutillo","Tovey","Hindsboro","Mount Auburn","Windsor","Jewett","Dieterich","Cowden","Clark Mills","Bloomingdale","Argyle","Ellicottville","Westmoreland","Comstock","Albion","Beaman","Farnhamville","Stanhope","Emmons","Wayland","Westside","Greenville","Truro","Lone Rock","Rose Hill","Casey","Titonka","Oxford Junction","La Motte","Pulaski","Kiron","Garrison","Elberon","Minburn","Bernard","Colo","Sherburn","Brayton","Rockwell","Kanawha","Homestead","Bristow","Knapp","Verdigre","Niobrara","Deshler","Byron","Sutherland","Gypsy","Mad River","Asherton","March Air Force Base","Tall Timbers","Lincoln","Samson","Royal Palm Beach","Conway","Lyons","Lancing","Bell City","Nicholville","Waldron","Veyo","Pine Valley","Gunlock","Central","Higgins","Malone","Hart","Rising Star","Follett","Groom","Imperial","McLean","Orchard","Abbott","Stinson Beach","Lynch","Naper","Springview","Millersview","Cherokee","Wellsley","Colman","Beaver Creek","Canton","Mission Hill","Comstock","Panola","Dowling","Thurston","Osmond","Adrian","Waynesville","Plainfield","Elberta","Montgomery","Brocton","Amity","Cokeburg","Ramah","Americus","Cedar Point","Two Rivers","Cooper Landing","King Cove","Massey","Claremont","Coal City","High Island","Kismet","Middle Point","McCutchenville","Stewart","Sycamore","Lorman","Cleghorn","Mount Union","Hanlontown","Kimballton","Westboro","Arbela","Alma","Mooresville","Rockville","De Kalb","Stewartsville","Amity","Harmans","Sweet","Big Horn","May Creek","Copper Center","Pearson","Oakfield","Pine Mountain Club","King Salmon","Akiak","Jamestown","Grelton","Clarksburg","South Salem","Donovan","Moose","Naco","Emerson","Clifton","Olsburg","Delphos","Aurora","Morganville","Green","Delano","Talihina","Tabor City","Jud","Fort Ransom","Arroyo Seco","San Cristobal","Arroyo Hondo","Red River","Ponemah","Nenana","Bondville","Bridgewater","Chesterfield","Paradox","Gateway","Cimarron","Naturita","Protection","Minneola","Almira","Cape Fair","Shell Knob","Cashton","Odanah","Kila","Satsop","Neah Bay","Newellton","Fort Ripley","Nicholls","Mayfield","Soper","Osage","Jennings","Hallett","Sasakwa","New Park","Stillmore","Kite","Dexter","Dudley","Rentz","Baisden","Sarah Ann","Van","Colorado City","Hartsel","Helix","Meacham","Neotsu","Saint Martin","Saint Meinrad","Leopold","Evanston","Berrien Center","Kintyre","Quality","Hoosick","Covelo","Holton","Cullen","Greenville","Arlee","Thompson Falls","Saint Ignatius","De Borgia","Saint Regis","Philipsburg","Dixon","Heron","Trout Creek","Lismore","Monroe","Elk Point","Lesterville","Ghent","Michigantown","Rossville","Biggsville","Mooers","Mooers Forks","Leslie","Hobson","Falls City","Clara City","Sacred Heart","Maynard","Noxon","Ravalli","Gordon","Cottonwood","Pansey","Ashford","Milnesville","Farlington","Amoret","Hepler","Uniontown","Franklin","Prescott","Walnut","Arthur","Buffalo","Moulton","Lu Verne","Minden","Boxholm","Stanton","Gilmanton","Tony","Eau Galle","Winter","Dunbar","Coloma","Skyland","Galena","Saxtons River","Ninilchik","Pavillion","Dulzura","Arnegard","New Town","Garrison","Mandaree","Fallsburg","German Valley","Baileyville","Orangeville","Winslow","Latham","Pilot Grove","Surrency","Red Level","Calpella","Sweet Springs","Renner","Larchwood","Eureka","Westport","Pollock","Glenham","Hosmer","Mount Vernon","Tripp","Artesian","Stella","Salem","Rulo","Phil Campbell","Dauphin Island","Prairie du Rocher","Copalis Beach","Wendell","Hagerman","Dietrich","Eden","Reed Point","Floweree","Judith Gap","Greycliff","Bainville","Mountain View","Onia","Leon","Lineville","Grand River","Spickard","Lucerne","Purdin","Eagleville","Weldon","Thayer","Cainsville","Davis City","Nickelsville","Fort Blackmore","Queen City","Rutledge","Thompson","Novelty","Martinsdale","Flaxville","Sunburst","Garryowen","Ludlow","Wheeling","Novinger","Sheldon","Sharon","Binford","Finley","Palermo","Sentinel Butte","Medora","Paxico","Shidler","Kaneville","Campbell Hill","Rockwood","Questa","Cerro","Caraway","Lepanto","Hay","Treichlers","Jayton","Paducah","Wilson","Carlos","Teasdale","Torrey","Bryce Canyon City","Boulder Town","Marysvale","Bicknell","Goehner","Gunnison","Three Mile Bay","Pineville","Marietta","Redwood Estates","Hill City","Hammond","Dalton City","Williams","Plainville","May","Albion","Mackay","Blue Mounds","Monteview","Picabo","Glenns Ferry","Big Wells","Sebastian","Redfield","Edna","Mulberry","Anthem","Maryknoll","Hartland","Sebeka","Lueders","Lawn","Chebeague Island","Searsmont","Dunseith","Fordville","Adams","Gilby","Wolverton","Hoople","Port Royal","Erick","Durham","Pandora","Ray","Bascom","Exline","Kirkville","Tyringham","Grand Portage","Dayton","Childs","Greeleyville","Cades","Fitzpatrick","Zortman","Loma","Westhope","De Soto","Simla","Saint Francis","Stacyville","North Monmouth","Leeds","Monmouth","Groton","Jordan","Walton","Earth","Raymond","Phenix","Meherrin","Cordesville","Doddridge","Fulton","Washington","Mountainair","Sundown","Junction","Herod","Bryce Canyon","Tropic","Minersville","Sanderson","Sheffield","Alden","Omena","Ellsworth","Blairstown","Clemons","Andrew","Musella","Paragon","Owensburg","Switz City","Inwood","Steen","Alvord","Hudson","Hills","Presho","Howard","Fort Thompson","Jeffers","North Freedom","Keyes","Garland","Turkey","Republic","New Riegel","Fishers Island","Neosho Falls","Bennington","Grand Cane","Windsor","Calder","Mattaponi","Crawfordville","Tyler","Cleveland","Batson","La Mesa","Wakefield","Bethlehem","Custer","Creekside","Clarksville","Stittville","Galesburg","Nicktown","Milmay","Chatham","Marshall","Palmyra","Trenton","Gilman","Berlin","Dana","Welaka","Taberg","Maxwell"
,"India","Bhandup","Mumbai","Visakhapatnam","Coimbatore","Delhi","Bangalore","Pune","Nagpur","Lucknow","Vadodara","Indore","Jalalpur","Bhopal","Kolkata","Kanpur","New Delhi","Faridabad","Rajkot","Ghaziabad","Chennai","Meerut","Agra","Jaipur","Jabalpur","Varanasi","Allahabad","Hyderabad","Noida","Howrah","Thane","Patiala","Chakan","Ahmedabad","Manipala","Mangalore","Panvel","Udupi","Rishikesh","Gurgaon","Mathura","Shahjahanpur","Bagpat","Sriperumbudur","Chandigarh","Ludhiana","Palakkad","Kalyan","Valsad","Ulhasnagar","Bhiwani","Shimla","Dehradun","Patna","Unnao","Tiruvallur","Kanchipuram","Jamshedpur","Gwalior","Karur","Erode","Gorakhpur","Ooty","Haldwani","Bikaner","Puducherry","Nalbari","Bellary","Vellore","Naraina","Mandi","Rupnagar","Jodhpur","Roorkee","Aligarh","Indraprast","Karnal","Tanda","Amritsar","Raipur","Pilani","Bilaspur","Srinagar","Guntur","Kakinada","Warangal","Tirumala - Tirupati","Nizamabad","Kadapa","Kuppam","Anantpur","Nalgonda","Potti","Nellore","Rajahmundry","Bagalkot","Kurnool","Secunderabad","Mahatma","Bharuch","Miraj","Nanded","Anand","Gandhinagar","Bhavnagar","Morvi","Aurangabad","Modasa","Patan","Solapur","Kolhapur","Junagadh","Akola","Bhuj","Karad","Jalgaon Jamod","Chandrapur","Maharaj","Dhule","Ponda","Dahod","Navsari","Panjim","Patel","Nashik","Amravati","Somnath","Ganpat","Karwar","Davangere","Raichur","Nagara","Kushalnagar","Hassan","Hubli","Bidar","Belgaum","Mysore","Dharwad","Kolar","TumkÅ«r","Tiruchi","Thiruvananthapuram","Kozhikode","Thrissur","Madurai","Thalassery","Kannur","Karaikudi","Thanjavur","Manor","Idukki","Thiruvarur","Alappuzha","Gandhigram","Kochi","Annamalainagar","Amet","Kottarakara","Kottayam","Tirunelveli","Mohan","Salem","Attingal","Chitra","Chengannur","Guwahati","Kalam","Ranchi","Shillong","Gangtok","Srikakulam","Tezpur","Bhubaneswar","Imphal","Sundargarh","Arunachal","Manipur","Bihar Sharif","Mandal","Dibrugarh","Darbhanga","Gaya","Bhagalpur","Kunwar","Barddhaman","Jadabpur","Kalyani","Cuttack","Barpeta","Jorhat","Kharagpur","Medinipur","Agartala","Saranga","Machilipatnam","Dhanbad","Silchar","Dumka","Kokrajhar","Bankura","Jalpaiguri","Durgapur","Kalinga","Palampur","Jammu","Dwarka","Faridkot","Udaipur","Raigarh","Hisar","Solan","Ajmer","Lala","Gurdaspur","Sultanpur","Jhansi","Vidisha","Jagdalpur","Dipas","Sawi","Etawah","Saharanpur","Ujjain","Kangra","Bhilai","Rohtak","Haryana","Ambala","Bareilly","Bhoj","Kapurthala Town","Sangrur","Pusa","Sagar","Rewa","Bhawan","Rampur","Bhadohi","Cuddalore","Khopoli","Bali","Bhiwandi","Vasai","Badlapur","Sambalpur","Raurkela","Brahmapur","Visnagar","Surendranagar","Ankleshwar","Dahanu","Silvassa","Jamnagar","Dhansura","Muzaffarpur","Wardha","Bodhan","Parappanangadi","Malappuram","Vizianagaram","Mavelikara","Pathanamthitta","Satara","Janjgir","Gold","Himatnagar","Bodinayakkanur","Gandhidham","Mahabalipuram","Nadiad","Virar","Bahadurgarh","Kaithal","Siliguri","Tiruppur","Ernakulam","Jalandhar","Barakpur","Kavaratti","Ratnagiri","Moga","Hansi","Sonipat","Bandra","Aizawl","Itanagar","Nagar","Ghatkopar","Chen","Powai","Bhimavaram","Bhongir","Medak","Karimnagar","Narsapur","Vijayawada","Markapur","Mancherial","Sangli","Moradabad","Alipur","Ichalkaranji","Devgarh","Yavatmal","Hinganghat","Madgaon","Verna","Katra","Bilaspur","Uttarkashi","Muktsar","Bhatinda","Pathankot","Khatauli","Vikasnagar","Kollam","Kovilpatti","Kovvur","Paloncha","Vasco","Alwar","Bijapur","Tinsukia","Ratlam","Kalka","Ladwa","Rajpura","Batala","Hoshiarpur","Katni","Bhilwara","Jhajjar","Lohaghat","Mohali","Dhuri","Thoothukudi","Sivakasi","Coonoor","Shimoga","Kayamkulam","Namakkal","Dharmapuri","Aluva","Antapur","Tanuku","Eluru","Balasore","Hingoli","Quepem","Assagao","Betim","Cuncolim","Ahmednagar","Goa","Caranzalem","Chopda","Petlad","Raipur","Villupuram","Shoranur","Dasua","Gonda","Yadgir","Palladam","Nuzvid","Kasaragod","Paonta Sahib","Sarangi","Anantapur","Kumar","Kaul","Panipat","Uppal","Teri","Tiruvalla","Jamal","Chakra","Narasaraopet","Dharamsala","Ranjan","Garhshankar","Haridwar","Chinchvad","Narela","Aurangabad","Sion","Kalamboli","Chittoor","Wellington","Nagapattinam","Karaikal","Pollachi","Thenkasi","Aranmula","Koni","Ariyalur","Ranippettai","Kundan","Lamba Harisingh","Surana","Ghana","Lanka","Kataria","Kotian","Khan","Salt Lake City","Bala","Vazhakulam","Paravur","Nabha","Ongole","Kaladi","Jajpur","Thenali","Mohala","Mylapore","Bank","Khammam","Ring","Maldah","Kavali","Andheri","Baddi","Mahesana","Nila","Gannavaram","Cumbum","Belapur","Phagwara","Rander","Siuri","Bulandshahr","Bilimora","Guindy","Pitampura","Baharampur","Dadri","Boisar","Shiv","Multi","Bhadath","Ulubari","Palghar","Puras","Sikka","Saha","Godhra","Dam Dam","Ekkattuthangal","Sahibabad","Kalol","Bardoli","Wai","Shirgaon","Nehra","Mangalagiri","Latur","Kottakkal","Rewari","Ponnani","Narayangaon","Hapur","Kalpetta","Khurja","Ramnagar","Neral","Sendhwa","Talegaon Dabhade","Kargil","Manali","Jalalabad","Palani","Sirkazhi","Krishnagiri","Hiriyur","Muzaffarnagar","Kashipur","Gampalagudem","Siruseri","Manjeri","Raniganj","Mahim","Bhusawal","Tirur","Sattur","Angul","Puri","Khurda","Dharavi","Ambur","Vashi","Arch","Colaba","Hosur","Kota","Hugli","Anantnag","Murshidabad","Jharsuguda","Jind","Neyveli","Vaniyambadi","Srikalahasti","Liluah","Pali","Bokaro","Sidhi","Asansol","Darjeeling","Kohima","Shahdara","Chandannagar","Nadgaon","Haripad","Sitapur","Vapi","Bambolim","Baidyabati","Connaught Place","Singtam","Shyamnagar","Sikar","Choolai","Mayapur","Puruliya","Habra","Kanchrapara","Goregaon","Tiptur","Kalpakkam","Serampore","Konnagar","Port Blair","Canning","Mahad","Alibag","Pimpri","Panchgani","Karjat","Vaikam","Mhow","Lakhimpur","Madhoganj","Kheri","Gudivada","Avanigadda","Nayagarh","Bemetara","Bhatapara","Ramgarh","Dhubri","Goshaingaon","Bellare","Puttur","Narnaul","Porbandar","Keshod","Dhrol","Kailaras","Morena","Deolali","Banda","Orai","Fatehpur","Mirzapur","Adilabad","Pithapuram","Ramavaram","Amalapuram","Champa","Ambikapur","Korba","Pehowa","Yamunanagar","Shahabad","Hamirpur","Gulbarga","Sagar","Bhadravati","Sirsi","Honavar","Siruguppa","Koppal","Gargoti","Kankauli","Jalna","Parbhani","Koraput","Barpali","Jaypur","Banswara","Tindivanam","Mettur","Srirangam","Deoria","Basti","Padrauna","Budaun","Bolpur","Gujrat","Balurghat","Binnaguri","Guruvayur","Chandauli","Madikeri","Piduguralla","Vinukonda","Berasia","Sultans Battery","Ramanagaram","Angadipuram","Mattanur","Gobichettipalayam","Banga","Sibsagar","Namrup","North Lakhimpur","Dhenkanal","Karanja","Cheyyar","Vandavasi","Arakkonam","Tiruvannamalai","Akividu","Tadepallegudem","Madanapalle","Puttur","Edavanna","Kodungallur","Marmagao","Sanquelim","Sakri","Shahdol","Satna","Thasra","Bundi","Kishangarh","Firozpur","Kot Isa Khan","Barnala","Sunam","Pithoragarh","Jaspur","Jhargram","Dimapur","Churachandpur","Raxaul","Motihari","Munger","Purnea","Mannargudi","Kumbakonam","Eral","Nagercoil","Kanniyakumari","Ramanathapuram","Sivaganga","Rajapalaiyam","Srivilliputhur","Suratgarh","Gohana","Sirsa","Fatehabad","Nurpur","Chamba","Khergam","Dindigul","Pudukkottai","Kaimganj","Tarn Taran","Khanna","Irinjalakuda","Sehore","Parra","Dicholi","Chicalim","Saligao","Changanacheri","Igatpuri","Sangamner","Ganganagar","Kanhangad","Chidambaram","Chittur","Nilambur","Arvi","Jalesar","Kasganj","Chandausi","Beawar","Bharatpur","Kathua","Chalisgaon","Karamsad","Peranampattu","Arani","Payyanur","Pattambi","Pattukkottai","Pakala","Vikarabad","Bhatkal","Rupnarayanpur","Kulti","Koch Bihar","Nongstoin","Budbud","Balangir","Kharar","Mukerian","Mansa","Punalur","Mandya","Nandyal","Dhone","Candolim","Aldona","Solim","Daman","Koothanallur","Sojat","Alanallur","Kagal","Jhunjhunun","Sirhind","Kurali","Khinwara","Machhiwara","Talwandi Sabo","Malpur","Dhar","Medarametla","Pileru","Yercaud","Ottappalam","Alangulam","Palus","Chiplun","Durg","Damoh","Ambarnath","Haveri","Mundgod","Mandvi","Behala","Fort","Bela","Balana","Odhan","Mawana","Firozabad","Bichpuri","Almora","Pauri","Azamgarh","Phaphamau","Nongpoh","Gangrar","Jhalawar","Nathdwara","Jaisalmer","Pushkar","Sirohi","Baroda","Ambah","Ambejogai","Ambad","Osmanabad","Betalbatim","Gangapur","Dindori","Yeola","Pandharpur","Neri","Umred","Patelguda","Patancheru","Singarayakonda","Peddapuram","Gadag","ChikmagalÅ«r","Chikodi","Amer","Chintamani","Tambaram","Palayam","Karamadai","Omalur","Kuzhithurai","Faizabad","Thirumangalam","Kodaikanal","Devipattinam","Dharapuram","Rudrapur","Talcher","Haldia","Karsiyang","Sandur","Bapatla","Shamsabad","Kandi","Ramapuram","Anchal","Trimbak","Calangute","Arpora","Khargone","Mandla","Kalan","Pachmarhi","Dhamtari","Kumhari","Aundh","Tala","Tuljapur","Botad","Sidhpur","Sanand","Nagwa","Mussoorie","Vadamadurai","Sholavandan","Pochampalli","Perundurai","Lalgudi","Ponneri","Mount Abu","Vadner","Shanti Grama","Nalagarh","Pahalgam","Dinanagar","Jatani","Ganga","Barmer","Hoshangabad","Khajuraho Group of Monuments","Betul","Sangola","Tirumala","Mirza Murad","Attur","Budha","Pala","Tonk","Koni","Rajpur","Shrigonda","Hazaribagh","Nagaur","Mandapeta","Nabadwip","Nandurbar","Nazira","Kasia","Bargarh","Kollegal","Shahkot","Jagraon","Channapatna","Madurantakam","Kamalpur","Ranaghat","Mundra","Mashobra","Rama","Chirala","Bawana","Dhaka","Mahal","Chitradurga","Mandsaur","Dewas","Sachin","Andra","Kalkaji Devi","Pilkhuwa","Mehra","Chhachhrauli","Samastipur","Bangaon","Ghatal","Jayanti","Belgharia","Kamat","Dhariwal","Morinda","Kottagudem","Suriapet","Mahesh","Sirwani","Kanakpura","Mahajan","Sodhi","Chand","Nagal","Hong","Raju","Tikamgarh","Parel","Jaynagar","Mill","Khambhat","Ballabgarh","Begusarai","Shahapur","Banka","Golaghat","Palwal","Kalra","Chandan","Maru","Nanda","Chopra","Kasal","Rana","Chetan","Charu","Arora","Chhabra","Bishnupur","Manu","Karimganj","Ellora Caves","Adwani","Amreli","Soni","Sarwar","Balu","Rawal","Darsi","Nandigama","Mathan","Panchal","Jha Jha","Hira","Manna","Amal","Kheda","Abdul","Roshan","Bhandari","Binavas","Hari","Nandi","Rajapur","Suman","Sakri","Khalapur","Dangi","Thiruthani","Bawan","Basu","Kosamba","Medchal","Kakdwip","Kamalpura","Dogadda","Charan","Basirhat","Nagari","Kangayam","Sopara","Nadia","Mahulia","Alipur","Hamirpur","Fatehgarh","Bagh","Naini","Karari","Ajabpur","Jaunpur","Iglas","Pantnagar","Dwarahat","Dasna","Mithapur","Bali","Nilokheri","Kolayat","Haripur","Dang","Chhota Udepur","Matar","Sukma","Guna","Dona Paula","Navelim","Vainguinim","Curchorem","Balaghat","Bhagwan","Vijapur","Sinnar","Mangaon","Hadadi","Bobbili","Yanam","Udaigiri","Balanagar","Kanigiri","Muddanuru","Panruti","Proddatur","Puliyur","Perambalur","Turaiyur","Tiruchchendur","Shadnagar","Markal","Sultan","Rayagada","Kaniyambadi","Vandalur","Sangam","Katoya","Gudur","Farakka","Baramati","Tohana"
,"Malaysia","Pantai","Kuala Lumpur","Petaling Jaya","Shah Alam","Kajang","Kuching","Setapak","Ipoh","Bukit Kayu Hitam","Bayan Lepas","Taiping","Kuala Terengganu","Kuantan","Johor Bahru","Malacca","Seremban","Kota Kinabalu","Bukit Mertajam","Klang","Alor Gajah","Cheras","Puchong Batu Dua Belas","Taman Sri Ampang","Muadzam Shah","Kuala Pahang","Simpang Empat","Sungai Petani","Taman Senai","Batu Caves","Banting","Kampar","Sungai Buluh","Seri Kembangan","Kampong Pasir Segambut","Kampung Likas","Penampang","Simpang Tiga","Bandar","Lintang","Putrajaya","Damansara","Batu Pahat","Kota","Sepang","Kuala Selangor","Taman Bukit Skudai","Batang Kali","Ayer Itam","Bandar Tun Razak","Tanah Merah New Village Site C","Kuah","Alor Star","George Town","Bandar Baru Bangi","Kerling","Bentung","Victoria","Kampung Tanjung Aru","Taman Prai","Sabak Bernam","Kangar","Itam","Rawang","Kulai","Muar town","Teluk Intan","Masai","Ulu Tiram","Senggarang","Kuala Kangsar","Sitiawan","Kepong","Perai","Butterworth","Teluk Panglima Garang","Lenggeng","Merlimau","Kluang","Port Klang","Kota Tinggi","Pontian Kechil","Miri","Sibu","Pengkalan Chepa","Kampung Pekan Kechil Beranang","Balik Pulau","Tanjung Bunga","Kota Bharu","Karak","Mentekab","Raub","Dungun","Temerluh","Kampong Kemaman","Tanah Merah","Papar","Keningau","Tawau","Kampung Baharu Nilai","Lahad Datu","Kuala Lipis","Bintulu","Tampin","Pasir Gudang","Tumpat","Seberang Jaya","Lunas","Benut","Rengam","Chemor","Pedas","Ranau","Tanjong Karang","Kulim","Taman Kota Jaya","Kepala Batas","Kuala Penyu","Jenjarum","Kuala Pilah","Kota Baharu","Dengkil","Tanjong","Parit Raja","Teronoh","Kampung Batu Uban","Hulu Langat","Sungai Puyu","Cameron Highlands","Durian Tunggal","Teriang","Kampung Ayer Keroh","Port Dickson","Sandakan","Membakut","Kampung Teluk Baru","Pasir Mas","Changloon","Batu Gajah","Keramat Pulai","Baru","Ampang","Kampung Teriang","Bachok","Tanjung","Cyberjaya","Serdang","Pudu","Pandan","Simunjan","Jertih","Semenyih","Kampong Changkat","Segamat","Bukit Gambir","Kamunting","Batu Arang","Jerantut","Nibong Tebal","Jeram","Tasek Glugor","Lumut","Slim River","Ketereh","Jitra","Mantin","Kampong Kahang Batu Twenty-eight","Tamparuli","Jasin","Lukut","Gemas","Tangkak","Gopeng","Bedong","Tapah Road","Ayer Tawar","Gurun","Kuala Nerang","Pengkalan Kempas","Kompleks Sukan Tenom","Padang Rengas","Labis","Jelutong","Beaufort","Sarikei","Bidur","Seri Manjung","Masjid Tanah","Bukit Asahan","Melaka Tengah","Padang Serai","Serdang","Bongawan","Bagan Serai","Kuala Ketil","Simpang Pertang","Tatau","Gelang Patah","Sungai Pelek","Rembau","Layang Layang","Parit Buntar","Rengit","Gerik","Pulau Pinang","Sungai Besar","Kampung Paya Simpang Empat Genting","Kapar","Bandar Tenggara","Kampung Batu Kikir","Pudu Ulu","Sentul","Serendah","Permatang Pauh","Kuala Berang","Melor","Kota Belud","Kertih","Cukai","Hutan Melintang","Batang Berjuntai","Kuala Kubu Baharu","Pantai Remis","Juasseh","Bahau","Gua Musang","Tanjong Malim","Pusing","Pekan","Merbok","Lahat","Pasir Puteh","Kubang Kerian","Langat","Selama","Menglembu","Taman Seremban Jaya","Sungai Bakap","Bau","Kepala Batas","Pendang","Simpang Renggam","Pengerang","Bukit Pasir","Kampung Bota Kiri","Temoh","Taman Megah Ria","Taman Senawang Indah","Sungai Besi","Menggatal","Tambunan","Batu Berendam","Penaga","Batu Feringgi","Marang","Semerah","Parit","Batu","Inanam","Taman Desa","Tampoi","Bangi","Genting","Kuala Klawang","Sungai Udang","Gebeng","Jawi","Broga","Kuang","Kampung Tasek","Labu","Tanjung Sepat","Kuala","Bukit Rotan","Jinjang","Machang","Mukah"
,"Republic of Korea","Seoul","Incheon","Paju","Cheonan","Yongin","Kwanghui-dong","Pon-dong","Gwangju","Gwangmyeong","Tang-ni","Busan","Seongnam-si","Suwon-si","Namyang","Namyangju","Jeju-si","Ulsan","Osan","Hanam","Pyong-gol","Anyang-si","Yangsan","Daejeon","Nonsan","Seocho","Wonju","Kisa","Daegu","Ansan-si","Gongju","Haeundae","Sasang","Bucheon-si","Chuncheon","Ilsan-dong","Naju","Jinju","Uiwang","Gangneung","Yongsan-dong","Pohang","Changwon","Jeonju","Yeosu","Songnim","Gimhae","Songjeong","Hyoja-dong","Icheon-si","Kimso","Iksan","Deokjin","Koyang-dong","Samsung","Anseong","Samjung-ni","Mapo-dong","Gunnae","Nae-ri","Suncheon","Okpo-dong","Moppo","Sangdo-dong","Cheongju-si","Ch'aeun","Taebuk","Yeoju","Seong-dong","Duchon","Gyeongju","Andong","Seosan City","Asan","Miryang","Wonmi-gu","Janghowon","Chungnim","Songam","Tongan","Ap'o","Jecheon","Se-ri","Ka-ri","Hansol","Songang","Hyangyang","Gyeongsan-si","Gumi","Unpo","Ulchin","Namhyang-dong","T'aebaek","Hadong","Haesan","Chungju","Chilgok"
,"Hong Kong","Shuen Wan","Central District","Hung Hom","Kowloon","Quarry Bay","Ngau Tau Kok","Ying Pun","Repulse Bay","Causeway Bay","Tseung Kwan O","Tai Kok Tsui","Tai Wai","Ma On Shan Tsuen","To Kwa Wan","Wong Tai Sin","Tuen Mun San Hui","Ma Yau Tong","Ngau Chi Wan","Yau Ma Tei","Kennedy Town","Chai Wan Kok","Sham Shui Po","Mid Levels","North Point","Happy Valley","Sai Keng","Kwun Hang","Mong Kok","Shek Tong Tsui","Cheung Sha Wan","Sham Tseng","Yuen Long San Hui","Kwai Chung","Sha Tin Wai","Tin Shui Wai","Hong Kong","Tai Hang","Fo Tan","Tsimshatsui","Tsz Wan Shan","San Tung Chung Hang","Peng Chau","Sha Po Kong","Wan Tsai","Shek Kip Mei","Aberdeen","Tai Po","Lai Chi Wo","Shau Kei Wan","Cheung Kong","Tai Lin Pai","Chuen Lung","Sheung Shui","Sheung Tsuen","Fanling","Fa Yuen","Chek Chue","Tai Tan","Kowloon Tong","Ho Man Tin","Ma Wan","Cha Kwo Ling","Wo Che","Lam Tin","Nam A","Tsing Lung Tau","Ting Kau","Tai Chau To","Lin Fa Tei","Chung Hau","Ping Yeung","Wong Chuk Hang","San Tsuen","Pak Ngan Heung","Lam Tei","Kat O Sheung Wai","Lo So Shing","Sha Tau Kok","Tin Wan Resettlement Estate","Tai Wan To","Mau Ping","Shatin"
,"Taiwan","Taipei","Taoyuan","Tuchang","Hsinchu","Nankan","Taichung","Chang-hua","Kao-sung","Taitung","Tainan","Keelung","Yunlin County","Lugang","Puli","Pingtung","Penghu'ercun","Nantou","Miaoli","Hualian","Gaozhongyicun","Wutai","Checheng","Hengchun","Shalun","Chiayi","Maru","Matsu","Yilan","Shuishang","Shuyi","Budai","Toucheng","Shoufeng","Ma-kung","Wang'an","Meilun","Jincheng","Shulin","Pozi","Suqin","Neihu","Yangmei","Hemei","Wangtongwen","Kaohsiung City","Xinzhuang","Taichang","Linkou","Yanping","Taipingding","Wan-hua","Zhunan","Caogang","Douliu","Erlin","Shuiliu","Dahu","Gangshan","Fengshan","Xinji","Nanhua","Shetou","Fanlu","Shuilin","Zhuqi","Yuli","Su'ao","Wanluan","Zhubei"
,"Philippines","Manila","Ayala","Bayan","Roosevelt","Blumentritt","Cardona","Pasong Tamo","Valenzuela","Caloocan City","Taytay","Quezon City","Las Pinas","Makati City","Marikina City","San Juan","Pasig","Paranaque City","Muntinlupa","Salinas","Poblacion","Roxas City","Puerto Princesa City","Pasay","Caloocan","Buting","Lipa City","Taguig","Baguio City","San Pablo City","San Mateo","Rizal","Dasmarinas","Sucat","Sampaloc","Marilag","Angeles City","Mandaluyong City","Malabon","Rodriguez","Fairview","Angeles City","Davao City","Iligan","Cagayan de Oro","Tagum","Butuan","Mawab","Ozamiz City","Bacoor","Cavite City","Carmona","Imus","Tacurong","Pateros","Dumaguete","Carolinas","San Pedro","General Santos","Malolos","Cebu City","Malate","New Manila","Antipolo","Villanueva","Concepcion","Koronadal","Pandi","West","Lucena City","Balayan","Laguna","Calamba","Subic","Bonifacio","Quezon","Lapu-Lapu City","Tagaytay","San Carlos City","San Jose","Asia","Subic","Libis","Palma Gil","Fernandez","Kalibo","Santos","Vargas","Novaliches","Plaza","San Antonio","Philippine","Rizal","Alabang","Legaspi","Laguna","Summit","Bates","Bagumbayan","Salcedo","Batis","Cubao","Binondo","Balabag","General","Guagua","Liberty","Tandang Sora","Capitol","Naga City","Binangonan","San Francisco","Mabalacat","Pikit","Antipolo","Imus","Tarlac City","Batangas","Calapan","Binan","Cabuyao","Hilongos","Mandaue City","Tanza","Caloocan","Silang","Malabon","Navotas","Angat","Navotas","Bulacan","Laoag","Bocaue","Dagupan","Calasiao","Dingras","Cainta","Iloilo City","Iloilo City","Tagbilaran City","Balanga","Pulilan","Olongapo City","Marilao","San Jose","San Fernando","Plaridel","Baliuag","Cabanatuan City","Bataan","Navotas","San Fernando","Meycauayan","Manila","Kawit","Bacolod City","Angono","Los Banos","Paete","Santa Rosa","Calamba City","Santa Cruz","Pangil","Canlubang","Tayabas","Pagsanjan","Zamboanga City","Talisay City","Mandaue City","Ugong Norte","Luna","Olongapo City","Tanauan","Cabatuan","Pasig","West Triangle","Pias","San Pedro","Dipolog City","Victorias City","Zamboanga City","Subic","Abucay","Samal","Orion","Arayat","Boac","Siniloan","San Agustin","Cotabato City","Veronica","Masbate","Bool","Tacloban City","Danao","Rosario West","Taft","Sulo","Centre","Santo","Pagasinan","Cafe","Leyte","Interior","Pagadian","Molave","Palo","Mamungan","Hagonoy","Paul","Bagong Nayon","Mauban","La Trinidad","Apalit","Mariveles","General Trias","Cabugao","Province of Pangasinan","Urdaneta","Alaminos","Malasiqui","Bay","Balungao","Amadeo","Macabebe","Del Monte","Limay","Calbayog City","Real","Tanay","Kapatagan","Trece Martires City","Lamitan","Bagac","Jagna","Obando","Balagtas","Kidapawan","Pampanga","Naga","Diliman Primero","Baao","Cauayan","Pacita","Central","Rosales","Bulacan","Roque","Silang","La Salette","San Miguel","Baclaran","Marcos","Suyo","Maquiling","Plaridel","Los Martires","Acacia","Minalin","Salle","Agusan Pequeno","Gitagum","Pardo","Gallego","Gloria","Nueva","Upper Bicutan","Wines","Vito","La Union","Poblacion, San Felipe","Lawis","Toledo City","Concepcion","Digos","Cogan","Calinan","Mindanaw","Dagupan","Barbar","Mangaldan","San Fabian","Alcala","Bautista","Aquino","Ilog","Manaoag","Tayug","Luzon","San Miguel","Victory","Sta Cruz","Sultan Kudarat","Magsaysay","Dapitan","Mangrove","Tanauan","Alfonso","Island Park","Maria","Tigbauan","Campus","Valencia","Occidental","Panabo","Munoz East","Aguilar","Fortuna","Matandang Balara","Osmena","Leon","Balamban","Cotabato City","Cavinti","Alitagtag","Trinidad","Lilio","Carlos","Vigan","Domingo","Candon","Norte","Oara","Alaminos","Calaca","Padre Garcia","Bauan","Cagayan","Tuguegarao City","Ilagan","Santiago","Llanera","China","Ramon","Feliciano","Marina","Cruz","Ventura","Tambo","Tejeros Convention","Del Pilar","Province of Cebu","Bustos","Daraga","Minglanilla","Sariaya","Bauan","Himamaylan","Silay","Orani","Paniqui","San Jose del Monte","Luna","Smart","Santo Tomas","Aurora","Lahug","Miagao","Dinas","Matalam","Province of Pampanga","Sorsogon","Candelaria","Carlatan","Malvar","Princesa","Looc","Putatan","Villa","Cinco","Bataan","Pinaglabanan","Bago City","Tambler","Tuktukan","Bayawan","Laguerta","Isabela","Mabini","Talon","Don Jose","Dolores","Iriga City","Misamis","Taal","Valencia","Bukidnon","Mapua","Don Bosco Executive Village","Centro","Lourdes","Fernando","Tamag","City of Batac","Merville Subdivision","San Andres","Burgos","Naguilian","San Vicente","Sto Nino","Province of Laguna","Quezon"
,"Australia","East Gosford","City of Parramatta","Pyrmont","Boambee","Paramatta","McGraths Hill","Ipswich","Sydney","Kingscliff","Isabella","Northgate","Boonah","Terry Hills","Beerwah","Gold Coast","Tweed Heads","Yass","Redbank","Bundamba","Palm Beach","Broadbeach","Brisbane","Wynnum","Gladesville","Springwood","Mapleton","Padstow","Enfield","Flinders","Brookfield","Yandina","Merewether","Emu Park","Saint Marys","Upper Coomera","Seaforth","Toogoolawah","Southport","Oatley","Aldinga","Melbourne","Elsternwick","Elwood","Reservoir","Perth","Broadmeadows","Ivanhoe","Ringwood East","Brighton","Elizabeth","Adelaide","Caversham","Brunswick","Ferntree Gully","Salisbury","South Melbourne","Port Melbourne","Abbotsford","Pakenham","Epping","Tarneit","Werribee","Mount Eliza","Reedy Creek","Kirwan","Victoria Point","Mackay","Eight Mile Plains","Toowoomba","Caloundra","Helensvale","Scarborough","Morayfield","Paradise","Stratford","Upper Brookfield","Rockhampton","Petrie","Ripley","Nambour","Albany Creek","Jimboomba","Cairns","Stapylton","Kobble","Thornlands","Logan City","Noosaville","Gladstone","Mooloolah Valley","Park Ridge","Loganlea","Ashgrove","North Tamborine","Toogoom","Bundaberg","Glass House Mountains","Laidley","Samford","Hervey Bay","Buderim","Toowong","Summerholm","Coolum Beach","Manly","Fernvale","Sandstone Point","Bargara","Yaroomba","Narangba","Karana Downs","Townsville","Maryborough","Harvey","Gosnells","Kelmscott","Bunbury","Byford","Karratha","Mandurah","Warnbro","Stoneville","Gooseberry Hill","Geraldton","Busselton","Northam","Coogee","Iluka","Walliston","Maylands","Rockingham","Claremont","Ludlow","Bentley","Bridgetown","Erskine","Belair","Port Pirie","Balaklava","Port Noarlunga","Mount Pleasant","Seaton","Hindmarsh","Darwin","Aldinga Beach","Semaphore","Morphett Vale","Yankalilla","Magill","Mallala","Hallett","Gawler","Little Hampton","Glen Iris","Galston","Bankstown","Newcastle","Balgowlah","Wembley","Ryde","Mudjimba","Wellington Point","Haberfield","Templestowe Lower","Bensville","Glenfield","Ourimbah","Curl Curl","Concord","Albion","Forest","Ivanhoe East","Box Hill","Middleton","Narrabeen","Caboolture","Dapto","Marrickville","Yellow Rock","Ashfield","Manly","Wollongong","Chatswood","Sylvania","Murrumba","Plympton","Wyndham","Bangor","New Farm","North Fitzroy","Hackham","Unley","Modbury","Mitcham","Woodville","Strathalbyn","Happy Valley","Bedford Park","Noarlunga","Hobart","Sandy Bay","Orford","Claremont","New Town","Launceston","Ulverstone","Kingston","Mount Isa","Essendon","Heatherton","Dandenong","Heidelberg","Rosebery","Strathfield","Normanhurst","Blacktown","Epping","Rhodes","Lidcombe","Merrylands","Wentworthville","Baulkham Hills","Balmain","Drummoyne","Saint Leonards","Granville","Quakers Hill","Sutherland","Carlingford","Glenbrook","Blaxland","Jannali","Rooty Hill","Castle Hill","Charlestown","Adamstown","Gosford","Oyster Bay","Lakemba","Kogarah","Bondi","Kensington","Hurstville","Randwick","Earlwood","Annandale","Penshurst","Liverpool","Sans Souci","Alexandria","Villawood","Maroubra","Mascot","Caringbah","Bronte","Newtown","Ingleburn","Engadine","Homebush","Redfern","Coogee","Footscray","Lindfield","Thornleigh","Kellyville","Burwood","Forestville","Belrose","Mosman","Lane Cove","Killara","Gordon","Paddington","Penrith","Minto","Neutral Bay","Cremorne","Rose Bay","Chippendale","Bexley","Rockdale","Newport","Mona Vale","Berowra","Cronulla","Holsworthy","Fairfield","Rosebery","Eastwood","Pennant Hills","Saint Ives","Picton","Maitland","Camden","Spring Hill","Windsor","Cowra","Albion Park","Balgownie","Hornsby","Mount Colah","Leumeah","Goulburn","Revesby","Leichhardt","Westmead","Croydon","Camperdown","Vaucluse","Lambton","Hamilton","Mayfield","Wickham","Waratah","Coburg","Ballarat","Sandringham","Cheltenham","Keilor","Carnegie","Mitcham","Nunawading","Keysborough","Toorak","Clayton North","Fairfield","Yarraville","Ascot Vale","Noble Park","Springvale","Northcote","St Kilda","Richmond","Caulfield South","Narre Warren","Sydenham","Hoppers Crossing","Sunshine","Williamstown","Mulgrave","Burwood","Ashburton","Doncaster East","Fawkner","Lalor","Warrandyte","Glen Waverley","Mount Waverley","Hawthorn","Endeavour Hills","Prahran","Elsternwick","Kew","Vermont","Blackburn","Kensington","Doncaster","Oakleigh","Ringwood","Mooroolbark","Carrum Downs","North Melbourne","Thornbury","Chelsea","Flemington","Bentleigh","Mentone","Glenroy","Carlton","Moonee Ponds","Parkville","Frankston","Bentleigh East","Wantirna","Fitzroy","Langwarrin","Aspendale","East Malvern","Hallam","Tullamarine","Hampton Park","Newport","Belgrave","Thomastown","Mornington","Croydon","Deer Park","Scoresby","Greensborough","Clontarf","Redcliffe","Bundoora","Templestowe","Hampton","Craigieburn","Albert Park","Moorabbin","Derrimut","Sunbury","Geelong","Belmont","Eaglehawk","Hamilton","Croydon North","Berwick","Melton","Carrum","Bayswater","Oakleigh South","Bonbeach","Donvale","Saint Albans","Preston","Balwyn","Coorparoo","Underwood","Woodridge","Bass Hill","Alexandra","Capalaba","Kelvin Grove","Mooloolaba","Sunnybank","Robertson","Nerang","Burleigh Heads","Mudgeeraba","Surfers Paradise","Greenbank","Noosa","Balwyn North","Glen Huntly","Eudlo","Abbotsford","Northmead","Waterloo","Raymond Terrace","Saint Lucia","Canberra","Queanbeyan","Roseville","Cooranbong","Tuncurry","Gunnedah","Prospect","Nairne","Laverton","South Yarra","Mount Martha","Macleod","McKinnon","Subiaco","Maddington","South Perth","Bassendean","Collaroy","Kirribilli","Cammeray","Pendle Hills","Gymea Bay","Wahroonga","Campbelltown","Ayr","Cleveland","Hope Island","Ultimo","Auburn","Botany","Toongabbie","Stanmore","Bathurst","Kelso","Albury","Wodonga","Miranda","Armidale","Surrey Hills","Grovedale","Bendigo","Waurn Ponds","Geelong West","Wendouree","Forest Hill","Hughesdale","Carlton North","Eltham","Hastings","Montmorency","Kew East","Brighton East","Avalon","Rozelle","Valla Beach","Belmont","Tamworth","Mortdale","Lilydale","Butchers Ridge","Lara","Cranbourne","Diamond Creek","Romsey","Caroline Springs","Potts Point","Belmont","Waterford","Riverwood","Monash","Beenleigh","Stirling","Kensington and Norwood","Seaford","Fremantle","O'Halloran Hill","Gymea","Smithfield","Cessnock","Kurri Kurri","Suffolk Park","Glenelg","Rye","Port Fairy","Sebastopol","Tewantin","Riverton","Mullumbimby","Lismore","Ettalong Beach","Tuggerah","Warragul","Spotswood","Camberwell","Gympie","Leopold","Bellambi","Umina","West Hoxton","Doreen","Berkeley Vale","Swansea","Booker Bay","Woy Woy","Unanderra","Towradgi","Fassifern","Moore","Manildra","Middleton","Byron Bay","Ballina","Warrigal","Emerald","Springfield","Jindabyne","Cooma","Berridale","Toronto","Gloucester","Altona","Darlinghurst","Artarmon","Glebe","Woolloomooloo","Lyneham","Greendale","Maroochydore","Central Coast","Queenscliff","Woronora","Lugarno","Berkeley","Thornton","Castlecrag","Killcare","Narellan","Woolwich","Lisarow","Bolton","Matraville","Orient Point","Dural","Nelson Bay","Coniston","Doonside","Saint Peters","Stradbroke","Dakabin","Bellevue Hill","Wyongah","Killarney","Rosehill","Emu Plains","Kangaroo Point","Bahrs Scrub","Mount Cotton","Figtree","Windermere Park","Morisset","New Lambton","Bethania Junction","Ormiston","Fairy Meadow","Long Jetty","Mannering Park","Mount Druitt","Waverley","Coomera","Coolangatta","Benowa","Kincumber","Ebbw Vale","Tugun","Burpengary","Eagleby","Wallan","Boronia","Mordialloc","Mile End","Ormond","Collingwood","Clifton Springs","Minlaton","Wheelers Hill","Seaford","Merlynston","Cowes","Mont Albert North","Fulham","Murrumbeena","Greenvale","Truganina","Wanneroo","Cannington","Armadale","Scarborough","Sorrento","Beaumaris","Kilmore","Corio","Bulleen","Werribee South","Eaglemont","Lyndhurst","Mernda","Rowville","Rosebud","Monbulk","Bacchus Marsh","Morang","Maribyrnong","Warburton","Williamstown","Rockbank","Mount Evelyn","Windsor","Balaclava","Narre Warren North","Ramsgate","Harrington","Sandgate","Gorokan","Maclean","Dayboro","Beachmere","Pialba","Port Lincoln","Wallaroo","Point Cook","Windsor","Deception Bay","Ormeau","Bli Bli","Beaudesert","Goodna","Burnett Heads","Redland Bay","Riverstone","Grove","Gerringong","Freshwater","Guildford","Selby","Loch","Benalla","Heathmont","Findon","Kilsyth","Goolwa","Mount Barker","Marong","Sellicks Hill","Dingley","Encounter Bay","Blair Athol","Narrawong","Wangaratta","Lemon Tree Passage","Seacombe","Lysterfield","Brookfield","Two Rocks","Kenwick","Cringila","Dundas","Moss Vale","Warwick","Woodford","Tamborine","Cundletown","Illawong","Brooklyn","Wagga Wagga","Wauchope","Haymarket","Kangaroo Flat","Fern Tree","Dunolly","Mount Gambier","Kardella","Traralgon","Port MacDonnell","Golden Grove","Murray Bridge","Brighton","Willaston","Brandon","Dromana","Brighton-Le-Sands","Port Kembla","Seven Hills","Wyee","Brookvale","Point Clare","Waverton","Lake Heights","Waitara","Cardiff","Vineyard","Menai","Richmond","Kurnell","Terrigal","Beaumont","Ives","Bowen","Redlynch","Margate","Boondall","Riverview","Aspley","Regents Park","Currumbin","Warren","Murwillumbah","Kingston","Alberton","Strathpine","Mount Gravatt","Rochedale","Gin Gin","Merredin","Orange","Yamba","Coleambally","Rutherford","Coffs Harbour","Lawnton","Norman Park","Oxenford","Pinjarra","Australind","West End","Dimbulah","Kenmore","Alton Downs","Buln Buln","Batesford","Toolern Vale","Strathfieldsaye","Emerald","Somerville","Gellibrand","Barwon Heads","Beauty Point","Legana","Caulfield North","Newtown","Redan","Burnley","Loxton","Albany","Bonython","Blackwood","Bentley","Rathmines","South West Rocks","Eschol","Mansfield","Beveridge","Kilcunda","Streaky Bay","Virginia","Wallsend","Edwardstown","Lake Munmorah","Narara","Wentworth Falls","Mulgoa","Logan","Carlsruhe","Beaconsfield","Sandgate","Springvale South","Clarinda","Kirrawee","Loftus","San Remo","Seville East","Connells Point","Turramurra","Bundeena","Kenthurst","Malvern","Canterbury","Oaklands","Highbury","Campbelltown","Grange","Eltham North","Watsonia","Saint Helena","Nedlands","Cottesloe","Mosman Park","Palm Cove","Birkdale","Brighton","Eagle Farm","Bargo","Warrane","Yatala","Thursday Island","Aitkenvale","Warrimoo","Katoomba","Kurrajong Heights","Woonona","Davistown","Lavington","Chullora","Teralba","Wingham","Neath","Wangi Wangi","Broadford","Melton South","Bulla","Sippy Downs","Kingsthorpe","Lowood","Spring Hill","Collie","Waaia","Woori Yallock","Black Hill","Belgrave Heights","Nindaroo","Pine Mountain","Oman-Ama","Alexandra","Darley","Lower Plenty","Forster","Dungog","Karalee","Mareeba","Windaroo","Bringelly","Crescent Head","Medowie","Glenorie","Kilcoy","Palmwoods","Tallebudgera","Tiaro","Torbanlea","Boulder","Failford","Luddenham","Gisborne","Wantirna South","Baxter","Belconnen","Hall","Margate","Don","Burnie","Devonport","Newstead","Bellerive","Midway Point","Glenorchy","Latrobe","Dilston","Tunnack","Ellendale","Huonville","Lindisfarne","Landsborough","Hope Valley","Normanville","Birkenhead","Two Wells","Kinross","The Basin","Pymble","Little Bay","Laang","Bulimba","Shorncliffe","Tarragindi","Marsden","Loganholme","Red Hill","Hillcrest","Hamilton","Reynella","Ingle Farm","Seacliff","Seaview","Caulfield","Nana Glen","Darling","Mitiamo","Ferny Creek","Osborne","Cardup","Clovelly","The Oaks","Rushworth","Port Macquarie","Yallourn","Burrum Heads","Cardigan","Newstead","Tottenham","Inglewood","Newmarket","Gayndah","Alphington","Davidson","North Turramurra","Greenwich","Malabar","Longueville","Crows Nest","Tennyson","Daisy Hill","Parkwood","Mitchelton","Aylmerton","Gracemere","Yeppoon","Gatton","Stanhope","Kew","Woorim","Condamine","Singleton","Kingswood","The Entrance","Bateau Bay","Mittagong","Shellharbour","Wyong","Hunters Hill","Heddon Greta","Avoca Beach","Highett","Meredith","Seymour","Woolamai","Healesville","Slacks Creek","Bohle Plains","Bushland Beach","Browns Plains","Bongaree","Somerset","Old Beach","St Helens","Adelong","Hurstbridge","Thirroul","Faulconbridge","Yarra Junction","Roma","Pallarenda","Oak Park","Acacia Ridge","Corlette","Stockton","Corrimal","Armadale","Rydalmere","Bruce","Nowra","Raworth","Goonellabah","Taren Point","Wilberforce","Kotara","Barwon Heads","Officer","Creswick","Briar Hill","Moonah","Murrumbateman","Thargomindah","Guildford","Avenue","Stanthorpe","Girraween","Beechworth","Campbellfield","Wanbi","Mannum","Karoonda","Thebarton","Yowie Bay","Wellington","Moana","Alice Springs","Norton Summit","Meadows","Woodside","Crafers","Aldgate","Victor Harbor","Wayville","Wellard","East Fremantle","Seville","Saint James","Swan View","Spearwood","Bicton","Hamilton","Mount Helena","Marion","Aberfoyle","Kapunda","Derwent","Rokeby","Victoria Park","Clifton Hill","Chipping Norton","Como","Toukley","Bonnet Bay","Aberglasslyn","Bellbird","Gilmore","West Pymble","Corinda","Enoggera","Deagon","Drayton","Ascot","Tannum Sands","Drysdale","Kyneton","Riddell","Parkdale","Koo-Wee-Rup","Mooroopna","Alfredton","Ringwood North","Wollert","Kallista","Ballan","Miners Rest","Bannockburn","Lancefield","Waubra","Axedale","Drouin","Burradoo","Yackandandah","Fullerton","Tahmoor","Ulladulla","Bogangar","Wahgunyah","Manning Point","Yerrinbool","Mirrabooka","Norah","Freemans Reach","Ningi","Pomona","Pimpama","Maleny","Harristown","Coolum","Moggill","Jacobs Well","Glenhaven","Elderslie","Virginia","Wacol","Hawthorne","Marino","Dalkeith","Worongary","Redhead","Willow Vale","Lennox Head","Lawson","East Maitland","Alpine","Hazelbrook","Dolans Bay","Tarrawanna","Hat Head","Sylvania Waters","Oxley","Eden","Green Point","Bega","Darling Point","Heathcote","Erina","Moree","Maryland","Smythes Creek","Ross Creek","Haddon","Kiama","Spring Field","Kempsey","Willunga","Maslin Beach","Amaroo","Exeter","Yolla","George Town","Swansea","Cygnet","Deloraine","Selbourne","Hagley","Carrick","Lulworth","Emu Vale","Clifton","Tynong","Pelican","Kawungan","Waikerie","Trunkey","Thompson","Bourke","Young","Wollongbar","Verdun","Colo","Carrington","Waterloo","Milton","Dawson","Mitchell","Narromine","Palmer","Bungendore","Braidwood","Bell","Dubbo","Gaythorne","Saint Georges Basin","Grant","Phillip","Stockyard Creek","Somerset","Gordon","Colac","Hazelwood","Deakin","Glenvale","Southbank","Edith","Monterey","Blakehurst","Hurstville Grove","Kareela","Box Hill South","Montrose","Strathmore","Darra","Lamington","Mourilyan","Sheffield","Fingal","Dardanup","Palm Island","Edmonton","Atherton","Sale","Langhorne Creek","Fyshwick","Wallacia","Leeton","Mooney Mooney","Trafalgar","Hawksburn","Nuriootpa","West Burleigh","Rylstone","Kootingal","Cooroy","Casino","Research","Wonga Park","Napoleons","Whittlesea","River Heads","Clyde","Jilliby","Barnsley","Torquay","Point Lonsdale","Indented Head","Silvan","Portarlington","Olinda","Clunes","Warren Shire","Tyabb","Kyabram","Marysville","Daylesford","The Patch","Goornong","Castlemaine","Oatlands","Tooradin","Lilli Pilli","Dundowran","Proserpine","Bradbury","Taree","Marulan","Bowral","Nords Wharf","Kingston","Drouin South","Neerim South","Moore Park","Pearce","Pioneer","Ridgley","Wilson","Wynyard","Kingston","Hunter","Churchill","O'Connor","Sarina","Salt Ash","Bonnells Bay","Fairview","Banksmeadow","Willaura","Lebrina","Uki","Nerrigundah","Katherine","Oakey","Crookwell","Bungonia","Coondoo","Myrtleford","Maybole","Beeac","Burekup","Bullsbrook","Coolup","Keysbrook","North Mackay","Tempe","Daceyville","Griffith","Macedon","Bayles","Pambula","Shenton Park","Casterton","Woodend","Portland","Trentham","Wamuran","Schofields","Budgewoi","The Rocks","Cambewarra","Grafton","Cowan","Sanctuary Point","Basin View","Murrurundi","Forbes","Mangerton","Anna Bay","Wulkuraka","Kennington","Rocklea","Burnside","Queenstown","Maudsland","Barcoo","Uraidla","Largs North","Keiraville","Stieglitz","Attadale","Lewiston","Melville","Kalgoorlie","Batchelor","Williams","Kingaroy","Binda","Kadina","Tammin","Clare","Lithgow","Yapeen","Oberon","Callington","Calen","Windellama","Hepburn Springs","Snowtown","Yaamba","Wondai","Bundook","Monteagle","Caltowie","Doubtful Creek","Mission Beach","Nebo","Cudlee Creek","Goomeri","Caragabal","Mudgee","Narrabri","Bordertown","Benambra","Yea","Longreach","Gregadoo","Echuca","Buchan","Robertstown","Condobolin","Darkan","Ingham","Mirani","Kenilworth","Esk","Bobin","Kerang","Heathcote","Keith","Weetah","Invermay","Pipers Brook","Hollow Tree","Kindred","Warrnambool","Korumburra","Leongatha","Foster","Jindivick","Garfield","Inverloch","Nyora","Mirboo North","Forsayth","Port Augusta","Woodleigh","Point Pass","Golconda","Jarrahdale","Judbury","Sturt","Mount Lofty","Eumundi","Kuranda","Scottsdale","Tanunda","Ebenezer","Canterbury","Morwell","Stratford","Yarram","Flynn","Bairnsdale","Tinamba","Newry","Alberton","Koetong","Lindenow","Grenfell","Stuart Park","Asquith","Keswick","Bedfordale","Wallington","Toorbul","Clyde North","Cremorne","Lake Illawarra","Holroyd","Blackheath","Wattle Grove","Leura","Edgecliff","Bulli","Woolooware","Woombah","Marsden Park","Diggers Rest","Beverley","Empire Bay","Agnes Banks","Windsor","Silverwater","Cobbitty","Denham","Wattle Grove","Sherbrook","Upwey","Bellbrae","McCrae","Lakes Entrance","Cockatoo","Huntly","Boolarra","Clarkefield","Toolangi","Maryborough","Picnic Bay","Clyde","Sellicks Beach","Lutana","Sassafras","Lyndoch","Whyalla","Sandford","Longwarry","Beaconsfield Upper","Parkes","Arcadia","Pokolbin","Ellalong","Eagle Heights","Taroona","Warrawong","Colo Vale","Yarrambat","Wedderburn","Greta","Jensen","Glenreagh","Franklin","Killarney","Ellerslie","Allansford","Nullawarre","Crossley","Macarthur","Camperdown","Lancelin","Gepps Cross","Kings Park","Kanwal","Long Point","Port Hacking","Edithvale","Barkstead","Buninyong","Nerrina","Fern Tree Gully","Broadwater","Boddington","Manning","Narrogin","Muchea","Berry","Alstonville","Blackwall","Stroud","Tenambit","Warnervale","Beresfield","Matcham","Helensburgh","Avondale","Orchard Hills","Tarro","Thirlmere","Oakdale","Woodford","Lake Cathie","Beechwood","Hastings Point","Marlee","Camden Haven","Boat Harbour","Bowenfels","Hill Top","Weston","Arno Bay","Callala Bay","Abermain","Smithfield","Fingal Bay","Cootamundra","Clareville","Bolwarra","Scarsdale","Swan Hill","Poowong","Teesdale","Wandin North","Moorooduc","Moriac","Mildura","Crib Point","Lethbridge","Euroa","Cardinia","Port Hedland","Donnybrook","Point Vernon","Agnes Water","Port Douglas","Howard","Cawarral","Thuringowa","Closeburn","Innisfail","Meringandan","Yorkeys Knob","Rosewood","Upper Caboolture","Kettering","Longford","Smithton","Perth","Winkleigh","Turners Beach","Penguin","Merriwa","Penfield","Waterloo Corner","Summertown","Gosforth","Barellan","Killingworth","Windang","Oakhurst","Yeoval","Miles","Grantham","Junee","Green Hill","Thagoona","Tully","Amamoor","Mortlake","Batlow","Bangalow","Biloela","Hawkesbury Heights","Narrandera","Wamberal","Linden","Old Bar","Nanango","Silverdale","Cooloolabin","Crystal Creek","Coolah","Woodgate","Bulga","Mount Saint Thomas","Kendall","Wilton","Scarness","Minmi","Broken Hill","Royal Park","Wonthaggi","Buckland","Christies","Austins Ferry","Apollo Bay","Ararat","Yallingup","Mylor","Mooroopna","Ravenswood","Rochester","North Beach","Applecross","Laverton","Tongala","Balnarring","Stanley","Robinvale","Roseworthy","Cummins","Tingoora","Canungra","Glossodia","Woolgoolga","Woombye","Wooloweyah","Howe","Lockhart","Stannum","Port Sorell","Tincurrin","Upper Burringbar","Beverley","Kojonup","Maidenwell","Dirranbandi","Darlington","Baringhup","Newnham","Zeehan","Forrest","Koolewong","Brandy Hill","Branxton","Windsor Downs","Pontville","Evandale","Kinglake","Tallarook","Glenburn","Braeside","Mount Egerton","Wedderburn","Allanson","Brookdale","Broome","Margaret River","Wimbledon","Bundanoon","Gundaroo","Nambucca Heads","Ulmarra","Narooma","Burrum","Tarzali","Mount Julian","Middlemount","Oxley","Mount Larcom","Marmor","Piggabeen","Montville","Armstrong Creek","Bellara","Howlong","Copmanhurst","Mandalong","Wilmot","Cooee","Blackmans Bay","Bagdad","Railton","Beacon","Dover Heights","Yarrawarrah","Mount Morgan","Safety Bay","Bald Hills","Portsea","Ocean Shores","Flinders","Mount Perry","Belgian Gardens","Venus Bay","Seven Mile Beach","Gould","Howard Springs","Bilinga","Horsham","Abbotsham","Black Rock","Blackwarry","Ross","Denman","Clarence Town","Tenterfield","Walgett","Dorrigo","Inverell","Scone","Stawell","Ferndale","Notting Hill","Campbell","Yanchep","Winchelsea","Serpentine","Mount Macedon","Cook","Trinity Beach","Caravonica","Barwon Downs","Burraneer","Saint Andrews","Glenore Grove","Somersby","Riana","Kooyong","Wandoan","Dunsborough","Ellangowan","Balhannah","Tatura","Angaston","Yallourn North","McLaren Vale","Riverside","Urangan","Applethorpe","Booral","Mount Ousley","Douglas Park","Wyreema","Cannonvale","Broadwater","Mount Helen","Buxton","Muswellbrook","Glen Osmond","Risdon","Lovely Banks","Telegraph Point","Medlow Bath","Babinda","Tieri","Mooralla","Normanton","Hove","Mount Direction","Howden","Norwood","Hadspen","Spreyton","Bridgewater","Collinsvale","Sulphur Creek","Lauderdale","Dodges Ferry","Bicheno","Kempton","Goodwood","Endeavour","Dalby","Chinchilla","Yarragon","Parap","Weston Creek","Wongan Hills","McLaren Flat","Moama","White Rock","Deepdene","Somerton","Moruya","Airlie Beach","Canadian","Edge Hill","Advancetown","Big Pats Creek","Myrrhee","Gilberton","Limestone","Logan Village","Rodborough","Highfields","Marshalltown","Stirling","Dereel","Yinnar","Malmsbury","Koornalla","Glengarry","Koroit","Tambo Upper","Maffra","Tarlee","Eudunda","Waterloo","Clare","Long Plains","Gordonvale","Pittsworth","Gheerulla","Westbrook","Lawgi","Blackbutt","Crows Nest","Coutts Crossing","Binnaway","Baynton","Toora","Orroroo","Chatsworth Island","One Tree Hill","Nar Nar Goon","Argents Hill","Dumbalk","Pechey","Bowraville","Nhill","Brown Hill","Kerry","Allora","Yangan","Smythesdale","Success","Cockburn","Norlane","Bridgewater","Port Adelaide","Coromandel Valley","Beaumont","Queensferry","Lockridge","Braddon","Tawonga","Saints","Walhalla","Karnup","Tomago","Drummond Cove","Hyland Park","Moranbah","Willow Grove","Macquarie Park","Gowrie","West Wyalong","Everton","Rosanna","Wyalkatchem","Mundaring","Kununurra","Exmouth","Esperance","Tumut","Blayney","Traralgon South","Clontarf","Heathcote Junction","Wickham","Bundalong","Purnim","Nirranda","Grassmere","Carlton South","Yarra Glen","Mount Dandenong","Macksville","Halls Gap","Kalorama","Bombala","Douglas","Freeling","Corinthia","Tyalgum","Woodburn","Wentworth","Welshpool","Baker","Tooronga","Homebush","Forrest","Torquay","Woodvale","Illawarra","Campbelltown","Blair Athol","Roleystone","Gore Hill","Bilpin","Yenda","Hendon","Ross River","Glenorchy","Dimboola","Blackwood","Pinery","Cotham","Peterborough","Hexham","Murtoa","Rudall","Alma","Cedar Grove","Echunga","Parkhurst","Temora","Wiluna","Mundijong","Langley","Crawford","Marian","Tom Price","Weethalle","Coober Pedy","Glen Huon","Beenak","Anglesea","Carbrook","Little River","Lang Lang","Whitfield","Mangalore","Yarpturk","Kambalda","Blackwater","Darlington","Eaton","Carnarvon","Tuggeranong","City of West Torrens","Lower Chittering","Dunmore","Laguna","Gravesend","Hahndorf","Wollar","Won Wron","Eden Park","Piawaning","Gilston","Drouin West","Parkerville","Coonawarra","Brewarrina","Mallanganee","York","Wooroolin","Martins Creek","Ashton","Austinmer","Westfield","Berrima","Pitt Town","Newstead","Grandchester","Birdwood","Tolga","Pearcedale","Boneo","Walmer","Nagambie","Kardella South","Allambee","Yarraman","Nannup","Perenjori","O'Sullivan Beach","Barry","Sunnyside","Shoal Point","Hawker","Cambridge","McLachlan","Hopetoun","Tallangatta","Pinkenba","Kings Cross","Lyons","Lowanna","Bool Lagoon","Valley Heights","Saint George","Bomaderry","Point Lookout","Ceduna","Mossman","Sandy Hollow","Mount Molloy","Salamander Bay","Woodstock","Menangle","Glen Innes","Arrawarra","Enmore","Koorawatha","Sapphire","Mullewa","Aberdeen","Boyup Brook","Augusta","Dumbleyung","Southern Brook","Wyalong","Talmalmo","Coleraine","Manjimup","Calingiri","Obi Obi","Bullyard","Broke","Womboota","Mirboo","Retreat","Kyogle","Cawongla","Koah","Bulahdelah","Spencer","Cooktown","Coolamon","Sarina Beach","Coledale","Melrose","Maroota","Balmoral","Mount White","Mount Keira","Dunkeld","Hammond","Hoddles Creek","Copacabana"
,"Vietnam","Hanoi","Ho Chi Minh City","Can Tho","Thanh Nguyen","Dinh Long","Vinh","Nghi Loc","Phu Xuyen","Tan Thuan Dong","Nam Äá»‹nh","Thanh Pho Thai Nguyen","Haiphong","Huáº¿","Da Nang","Da Lat","Khanh Hoa","Quang Trung","An Thanh","Long An","Thanh Pho Ninh Binh","Thanh Pho Hoa Binh","Tan Binh","Xom Truong Dinh","Le Loi","Phuong Tan","Ap Trung","Binh Thanh","Xom Thang","Thu Dau Mot","Bach Ma","Dien Bien Phu","Long Van","Ben Nghe","Phu Nhuan","Ap Sai Gon","Go Vap","Truong Son","Thong Nhat","Thanh Pho Thai Binh","Van Tan","An Tam","Co Giang","Quan Ngoc","Nha Be","Thu Duc","Bac Giang","Tang","Ha Long","Thanh Pho Hai Duong","Bac Ninh","Nha Trang","Pleiku","VÅ©ng TÃ u","Thuan An","Hung Yen","Thanh Pho Tuyen Quang","Ha Nam","Bien Hoa","Di An","Vinh Yen","Luong Hoi","Phan Thiáº¿t","Quáº£ng NgÃ£i","Qui Nhon","Buon Ma Thuot","Yen Thanh","Bac Kan","Lao Cai","Lang Son","Phu Tho","Yen Bai","SÆ¡n La","Thanh Pho Ha Giang","An Dinh","Quan Trang","Thanh HÃ³a","Huong Tinh","Quang Tri","Quang Nam","Giong Ngai","An Nhon","Dac Loc","Phu Yen","Kon Tum","Dong","Binh Thoai","Thon Bao An","Binh Phuoc","Long Tan","Báº¿n Tre","Dong Thap","An Giang","Ca Mau","Soc Trang","Tay Ninh","Má»¹ Tho","Dong Nai","Ha Tinh","Lang Dung","Ha Dong","Hoang Mai","Cho Ha","Tra Vinh","Thach That","Bang","Xom Phuoc My","Cam Pha","Vinh Long","Vi Thanh","Phan Thon","Chuong Duong","Minh Khai","Giong Truong","Ben Than","Thuan Cong","Duc Thang","Lang Hong","Van Hai","Tam Ky","Truong Lam","Trao"
,"Russia","Moscow","Omsk","Peschanka","Novovarshavka","Luzino","Mar'yanovskiy","Alekseyevka","Abakan","Sayanogorsk","Chernogorsk","Borodino","Beya","Volgograd","Rostov-on-Don","Stavropol'skiy Rayon","Smolensk","Kursk","Astrakhan","Ulyanovsk","Rybinsk","Lipetsk","Dimitrovgrad","Kostroma","Kaluga","Kaliningrad","Tolyatti","Sterlitamak","Kemerovo","Chelyabinsk","Krasnodar","Severodvinsk","Samara","Beloretsk","Voronezh","Ufa","Samara","Cherepovets","Tyumen","Saint Petersburg","Shebekino","Elektrostal","Khabarovsk","Novosibirsk","Ryazan","Avtozavodskiy Rayon","Khimki","Korolev","Pushkino","Mytishchi","Kubinka","Kolomna","Novoural'sk","Yekaterinburg","Severoural'sk","Syktyvkar","Kamensk-Ural'skiy","Ulan-Ude","Barnaul","Surgut","Kushva","Liski","Zlatoust","Miass","Yuzhnoural'sk","Vladivostok","Nizhnevartovsk","Zvezda","Shatura","Chik","Iskitim","Linevo","Kuybyshev","Yegor'yevka","Pyatigorsk","Stavropol","Yessentuki","BudÃ«nnovsk","Georgiyevsk","Vinsady","Kislovodsk","Georgiyevskoye","Sochi","Labinsk","Zarechenskiy","Bataysk","Taganrog","Novocherkassk","Zolotarevka","Novorossiysk","Svetlyy","Mostovskoy","Chyorny Yar","Cherkessk","Sovetskiy","Megion","Tarko-Sale","Urengoy","Perm","Revda","Alapayevsk","Kurgan","Gubkinskiy","Lys'va","Pangody","Nefteyugansk","Salekhard","Nyagan","Verkhnyaya Salda","Sysert'","Nev'yansk","Aykino","Ukhta","Kotlas","Arkhangelsk","Chernyakhovsk","Sovetsk","Murmansk","Severomorsk","Murmashi","Kandalaksha","Anuchino","Ussuriysk","Nakhodka","Yekaterinovka","Sergeyevka","Novoshakhtinskiy","Arsen'yev","Spassk-Dal'niy","ArtÃ«m","Belgorod","Tver","Sputnik","Vologda","Sheksna","Vsevolozhsk","Bryansk","Volgodonsk","Pavlovsk","Sevastopol'","Cheboksary","Taushkasy","Veliky Novgorod","Krasnoyarsk","Yaroslavl","Posad","Tula","Kurgan","Magnitogorsk","Samara","Samsonovka","Syzran'","Nizhniy Novgorod","Bor","Izhevsk","Irkutsk","Kalashnikovo","Penza","Solnechnogorsk","Saratov","Tomsk","Seversk","Ufa","Angarsk","Yoshkar-Ola","Bibayevo","Pervouralsk","Vladikavkaz","Novovoronezh","Rossosh'","Baranchinskiy","Domodedovo","Lytkarino","Podolsk","Pskov","Usol'ye-Sibirskoye","Kushnarenkovo","Iglino","Dyurtyuli","Yaratovo","Tuymazy","Meleuz","Belebey","Ramenskoye","Noginsk","Moskovskiy","Anapa","Zhukovskiy","Azov","Krasnyy Sulin","Zernograd","Rodionovka","Kamensk-Shakhtinskiy","Donetsk","Shakhty","Kurgan","Tagil","Serpukhov","Krasnoufimsk","Lesnoy","Lesnoy","Vladimir","Sobinka","Lakinsk","Arzamas","Balakovo","Engel's","Chkalov","Novosokolovogorskiy","Volga","Kuznetsk","Druzhba","Nal'chik","Glazov","Maykop","Novaya Silava","Bratsk","Pivovar","Konakovo","Biysk","Rybnoye","Shelekhov","Lisikha","Baykal","Volzhskiy","Apatity","Kirovsk","Khot'kovo","Tuapse","Pokrov","Nevinnomyssk","Polevskoy","Unecha","Kingisepp","Chita","Gus'-Khrustal'nyy","Tikhvin","Severobaykal'sk","Novokruchininskiy","Novokuznetsk","Kuznetskiy Rayon","Maloyaroslavets","Blagoveshchensk","Alatyr'","Zavodoukovsk","Kungur","Berezniki","Okhansk","Kachkanar","Irbit","Asha","Chebarkul'","Borovskiy","Ishim","Uktuz","Yalutorovsk","Uray","Novy Urengoy","Krasnokamsk","Nytva","Khanty-Mansiysk","Kstovo","Yurga","Betlitsa","Mosal'sk","Kamyshin","Nikolayevsk","Borodynovka","Kurganinsk","Kanevskaya","Starovelichkovskaya","Gul'kevichi","Uspenskoye","Abinsk","Slavyansk-na-Kubani","Armavir","Chelbasskaya","Yeysk","MikhnÃ«vo","Vyksa","Novodmitriyevka","Zheleznogorsk","Dzerzhinsk","Saransk","Start","Bol'shoye","Kolpino","Pushkin","Borisoglebsk","Chekhov","Protvino","Klimovsk","Bilibino","Khrenovoye","Volga","Tayga","KiselÃ«vsk","Sevsk","Kopeysk","Voskresenskoye","Tambov","Uvarovo","TimashÃ«vsk","Gelendzhik","Belorechensk","Dinskaya","Krymsk","Brod","Noyabrsk","Labytnangi","Nadym","Tobol'sk","Stary Oskol","Orenburg","Sosnovoborsk","Kirov","Kazanâ€™","Sibay","Ishkulovo","Birsk","Novobelokatay","Karaidel'","Aramil","Mezhdurechensk","Berdsk","Ural","Solikamsk","Artem","Novocheboksarsk","Novokuybyshevsk","Novosemeykino","Vyshniy VolochÃ«k","Belogorsk","Makhachkala","Kuban'","Nizhniy Tagil","Liniya","Zheleznogorsk","Zheleznovodsk","Kodinsk","Krasnogorsk","Lomonosov","Petergof","Zarechnyy","Sovetskaya Gavan'","Odintsovo","Putilkovo","Veshki","Strezhevoy","Zelenograd","Rassvet","Kamenolomni","Selo","Gukovo","Krasnoye-na-Volge","Kazan'","Alikovo","Zelenodolsk","Achinsk","Fryazino","Vega","Snezhinsk","Lesozavodsk","Priozersk","Roshchino","Yakutsk","Novozolotovskaya","Bol'shiye Saly","Orlovskiy","Persianovka","Rodionovo-Nesvetayskaya","Chaykovskiy","Kurchatov","Novozavedennoye","Belgorod","OrÃ«l","Kromy","Kamyshovka","Fatezh","Nizhnekamsk","Dmitrov","Aleksandrov","Sarapul","Khabarskoye","Chiverevo","Pioner","Tikhoretsk","Kropotkin","Leningradskaya","Slavyanka","Parkovyy","Ust'-Labinsk","Kirpil'skaya","Pavlovskaya","Novokorsunskaya","Lesodacha","Kalininskaya","Moldavanskoye","Leninskiy","Staronizhestebliyevskaya","Ivanovo","Rubtsovsk","Snezhinskiy","Serov","Verkhnyaya Pyshma","Svetlyy","Zelenogorsk","Lesosibirsk","Myski","Nova","Zvenigorod","Kaltan","Kristall","Balashov","Vyborg","Gusev","Neftekamsk","Ishimbay","Volga","Salavat","Orsk","Kovrov","Zaraysk","Bashkortostan","Kineshma","Novoaltaysk","Leninskoye","Ruza","Naro-Fominsk","Postnikova","Filial","Asbest","Rubin","Ust'-Ilimsk","Vyatka","Furmanov","Vspomogatel'nyy","Tynda","Kholmsk","Tuchkovo","Skovorodino","Konosha","Istra","Chernogolovka","Kupavna","Vorovskogo","Sharapova Okhota","Sukhanovo","Kosteniki","Amur","Dubna","Komintern","Svetlograd","Lenina","Obninsk","Del'ta","Staraya Russa","Techa","Patrushi","Pushchino","Sosnogorsk","Nartkala","Zhukovskogo","Arkhangel'skoye","Kanavka","Dudinka","Zheleznodorozhnyy","Petropavlovsk-Kamchatsky","Partizansk","Spassk","Dal'negorsk","Chernigovka","Primor'ye","Bol'shoy Kamen'","Barabash","Bol'shak","Koz'modem'yansk","Zvenigovo","Volzhsk","Lobnya","OzÃ«ry","Klin","Reutov","Orekhovo-Zuyevo","Elektrougli","Losino-Petrovskiy","Bronnitsy","Rostov","Gran'","Tarusa","Agidel","Kamchatka","Petropavlovka","Yelizovo","Nazran","Volkhonshchino","Nauka","Pavlovskiy Posad","Rozhdestvenka","Klintsy","Manturovo","Oshib","Ishley","Zavodouspenskoye","Ust'-Kut","Zima","Balabanovo","Borovichi","Gatchina","Kolomino","Romanovka","Marks","Mozhga","Snezhnogorsk","Nikel","Petrozavodsk","Nikol'skoye","Vorkuta","Usinsk","Okulovka","Chudovo","Svetlogorsk","Velikiye Luki","Pryazha","Morozovo","Naryan-Mar","Koryazhma","Sertolovo","Votkinsk","Kvatchi","Pychas","Kush'ya","Kizner","Bras","Igra","Gorno-Altaysk","Temryuk","Morshansk","Kirsanov","Dmitriyevka","Bugul'ma","Metallostroy","Yekaterinoslavka","Svobodnyy","Arkhara","Seryshevo","Belogorka","Zeya","Magdagachi","Raychikhinsk","Vysokovsk","Nadezhdinka","Neryungri","Aldan","Ibresi","Magnitnyy","Agapovka","Novator","Bologoye","Redkino","Kirishi","Mamontovka","Lyubertsy","Kirovgrad","Kotel'niki","Slantsy","Stroitel'","Berezayka","Teykovo","Noril'sk","Glebychevo","Kirzhach","Yuzhno-Sakhalinsk","Pugachev","Otradnyy","Chapayevsk","Zhigulevsk","Lukhovitsy","Sokol","Gagarin","Komsomolsk-on-Amur","Zelenogorsk","Leningradskiy","Piter","Sarov","Vitebskaya","Sloboda","Chernushka","Dolgoprudnyy","Izmaylovo","Vichuga","Ural'skaya","Derbent","Khasavyurt","Malaya Vishera","Podstepki","Magadan","Detchino","Grozny","Staraya Kupavna","Satis","Pskovskoye","Krasnoarmeyskaya","Pervo","Torzhok","Smolenskaya","Kirova","Stroiteley","Altayskoye","Kabardino","Vladykino","Nakhabino","Vnukovo","Kyshtym","Trekhgornyy","Melenki","Lebedev","Sofrino","Tyrma","Borzya","Safonovo","Nizhneudinsk","Ust'-Katav","Elista","Barnaul","Al'met'yevsk","Yelabuga","Chistopol'","Skala","Sharnutovskiy","Nelidovo","Lesnoy Gorodok","Odintsovo","Tomilino","Metallurg","Koptyuga","Markovo","Urgal","Rzhev","Desnogorsk","Krasnoznamensk","Uglich","Kronshtadt","Pargolovo","Sergiyevskoye","Morozov","Mayakovskogo","Ogarev","Lenkino","Gogolya","Prokhladnyy","Baksan","Akhtubinsk","Krasnyy Yar","Frolovo","Rovnoye","Sorochinsk","Ariadnoye","Bovykiny","Chemashur","Lazo","Altay","Shebalino","Millerovo","Zubovo","Nikolayevsk-on-Amur","Birobidzhan","Amursk","Moskovskaya","Rossiyskiy","Mikhaylovskoye","Rodniki","Khangash-Yurt","Kinel'","Volzhskiy","Pervomayskaya","Progress","Sary","Aksenovo","Kadrovik","Korkino","Avangard","Gubakha","Chastyye","Minusinsk","Potok","Vidnoye","Studenets","Sistema","Mariinskiy Posad","Kanash","China","Olimpiyskiy","Neman","Vagay","Nizhegorodskaya","Kraskovo","Verkhnekazymskiy","Soldatskoye","Sofrino","Sviblovo","Krasnoarmeysk","Sergiyev Posad","Bugry","Ugra","Mira","Kartaly","Novotroitsk","Mednogorsk","Troitsk","Sartykov","Sosnovo","ChÃ«rnaya Kholunitsa","Vostochnyy","Karin Perevoz","Vostochnaya","Yelanskiy","Lyantor","Sverdlovskaya","Miasskoye","Krasnokamensk","Shtol'nyy","Novomoskovsk","Rakita","Glazunovka","Severo-Kuril'sk","Uglegorsk","Komarov","Slyudyanka","Cheremkhovo","Isheyevka","Povarovo","Bad'-Pashnya","Voskresensk","Denisovo","Dzerzhinskiy","Radist","Ilya","Osel'ki","Novoye Devyatkino","Klyuchi","Zaprudnya","Sosnovyy Bor","Karabulak","Izberbash","Dedovsk","Satka","Yel'niki","Drezna","Damkhurts","Dagomys","Golitsyno","Kavkaz","Novyy","Gorodna","Purovsk","Orshanka","Atlas","Nazarovo","Kholmistyy","Buzuluk","Gudermes","Kulikov","Ovchinnikov","Murom","Verkhniy Ufaley","Al'fa","Kansk","Ilim","L'vovskiy","Novomichurinsk","Uren'","Stupino","Kamennomostskiy","Novaya Igirma","Mebel'naya Fabrika","Poronaysk","Severo-Zapad","Krasnotur'insk","Uryupinsk","Krasnogorskiy","Kugesi","Uyar","Sayansk","Lada","Perepravnaya","Yanaul","Sheregesh","Troitsk","Udomlya","Zaural'skiy","Zavolzh'ye","Lodeynoye Pole","Podporozh'ye","Vyaz'ma","Bezhetsk","Ibrya","Star'","Rostovskaya","Gorin","Vyazemskiy","Kor'","Komsomol'sk","Vysokogornyy","Obluch'ye","Bogorodskoye","Nikulin","Sestroretsk","Begunitsy","Novodvinsk","Nelazskoye","Buyantsevo","Nadvoitsy","Kostomuksha","Prirechensk","Novoselovo","Asino","Zheleznogorsk-Ilimskiy","Kolpashevo","Prokop'yevsk","Anzhero-Sudzhensk","Berezovka","Leninsk-Kuznetsky","Topki","Borkovka","Roslavl'","Kumertau","Zelenogradsk","Avri","Staropesterevo","Belovo","Shchelkovo","Sverdlovskiy","Monino","Perovka","Kamenka","Lomov'","Bednodem'yanovsk","Sursk","Baza","Bogoroditsk","Reftinskiy","Starodub","Kovdor","Dalmatovo","Livny","Korsakov","Okha","Novoshakhtinsk","Ivan'","Osnova","Aro","Sverdlova","Svirsk","Segezha","Aleksin","Shchekino","Kimovsk","Plavsk","Dubovka","Blagovar","Tatlybayevo","Ashchibutak","Kirgiz-Miyaki","Povedniki","Barda","Kusa","Rezh","Ocher","Roshchino","Arti","Yugorsk","Novozybkov","Karachev","Severskaya","Mega","Pulkovo","Pyshma","Kalinina","Sortavala","Raduga","Selyatino","Vrangel'","Kastornoye","Kyzyl","Bol'shaya Rakovka","Dedenevo","Yakhroma","Svobodnaya","Surkhakhi","Ilovlya","Bol'shaya FÃ«dorovka","BelozÃ«rsk","Belyy","Kirovo-Chepetsk","Spas-Demensk","Mga","Ivangorod","Singer'","Elektrogorsk","Krugloye","Likino-Dulevo","Kashira","Mineralnye Vody","Rossosh'","Pavlovo","Zaozersk","Baltiysk","Nizhniy Odes","Troitsko-Pechorsk","Pechora","Inta","Vytegra","Gryazovets","Pestovo","Parfino","Russa","Valday","Monchegorsk","Zori","Tosno","Kinel'-Cherkassy","Vanino","Gavan'","Gavan'","Gubkin","Alekseyevka","Mozhaysk","Shaturtorf","Balashikha","Pushchino","Ratmirovo","Kabanovo","Roshal'","Vurnary","Kochkurovo","Insar","Maksimovka","Atkarsk","Parapino","Snegiri","Gaurilov","Chesnokovka","Kasimov","Yelat'ma","Kol'chugino","Kiryabinskoye","Uchaly","Lesnoy","Pereslavl'-Zalesskiy","Krasnogvardeyskiy","Nevskiy","Frunzenskiy","Uzlovaya","ShchÃ«kino","Donskoy","Serdobsk","Naumkino","Voskresenskoye","Luchegorsk","Lampovo","Krasnodarskiy","Kol'tsovo","Gagino","Sibir'","Chaplygin","Volovo","Yelets","Olenegorsk","Enkheluk","Gusinoozyorsk","Starobachaty","Nizhneyashkino","Gur'yevsk","Yashkino","Yaya","Odan'","Bogdashino","Mtsensk","Golovchino","Dubenka","Leninogorsk","Gornozavodsk","Divnogorsk","Tsna","Aksay","Morozovsk","Ryasnoye","Krasnoarmeyskoye","Krasnoobsk","Yermolkino","Pleloye","Turinsk","SuzÃ«mka","Kozel'sk","Pechory","Volgorechensk","Omchak","Aleysk","Kimry","Sosny","Zarinsk","Belaya Kalitva","Voronezhskiy","Sredneuralsk","Semibratovo","Yugra","Neya","Vyazniki","Poselok","Varvarovka","Pushkina","Ob'","Bagan","Maslyanino","Cherepanovo","Zainsk","Otradnoye","Danilov","Obyedineniye","Ugresha","Lipetsk","Urus-Martan","Tsivil'sk","Taksimo","Kusakovka","Bogorodsk","Kizlyar","Kotel'nich","Ruzayevka","Fialka","Krasnokamensk","Tochka","Aprelevka","Shadrinsk","Zaokskiy","Kuzovatovo","Kondopoga","Adygeysk","Tyrnyauz","Pregradnaya","Mozdok","Shalushka","Vyatskiye Polyany","Shoshma","Urzhum","Podgortsy","Lyambir'","Usinskoye","Krasnyy Kut","Kharp","Kalino","Ivdel'","Dobryanka","Ishimskiy","Kurtamysh","Michurinsk","Rikasikha","Kichmengskiy Gorodok","Velikiy Ustyug","Syamzha","Ust'ye","Poselok","Revda","Kola","Polyarnyy","Kirovsk","Shlissel'burg","Boksitogorsk","Svetogorsk","Pitkyaranta","Sebezh","Bol'shoe Isakovo","Gvardeysk","Tot'ma","Oktyabr'skiy","Serafimovskiy","Linda","Kirovskaya","Klyuchi-Bulak","Shalinskoye","Boguchany","Srostki","Mamontovo","Kamen'-na-Obi","Kuz'minka","Sokolovo","Apazovo","Naberezhnyye Chelny","Lebedyan'","Yalta","Volna","Noginskaya","Lermontov","Volochek","Pavlovskaya Sloboda","Cherkizovo","Usman'","Tolstoy","Birzha","Valentin","Mor'ye","Dubrovka","Divo","Verkhotur'ye","Bulgakov","Bogdanovich","Maykor","Tazovskiy","Filatovskoye","Kasli","Chernushka","Muravlenko","Panayevsk","Tayshet","Zhuravna","Tulun","Medvenka","Tim","Granit","Malino","Semyonov","Kamennogorsk","Poztykeres","Medvedevo","Dubovka","Nevel'sk","Zhirnovsk","Yakovlevo","Tsudakhar","Ust'-Ilimsk","Volkhov","Syas'stroy","Aleksandrovka","Taldom","Timiryazev","Neva","Kamensk","Sven'","Beryozovsky","Gubkin","Pushchino","Volodarskiy","Salym","Karabash","Yemel'yanovo","Rosa","Trubchevsk","Katav-Ivanovsk","Krasnoznamensk","Svetlaya","Ostrov","Buret'","Kirilly","Ostankino","Sodyshka","Karla Marksa","Pikalyovo","Slavgorod","Solnechnodol'sk","Severo","Malysheva","Shumerlya","Aleksino","Skat","Gorbatov","Kel'dysh","Neftekumsk","Vikhorevka","Tapkhar"
,"France","Pont-Saint-Martin","Luce","Montaigu","La Chapelle-de-Brain","Saint-Mars-du-Desert","Challans","Le Mans","Saint-Laurent-de-la-Plaine","Baule","Cholet","Bouaye","Le Poire-sur-Velluire","Nantes","Trelaze","Pornichet","Sallertaine","La Montagne","Angers","Saint-Nazaire","Chateaubriant","Saint-Michel-le-Cloucq","Brissac-Quince","Saint-Julien-de-Concelles","Andouille","Bessay","Chavagnes-en-Paillers","Moutiers-les-Mauxfaits","Sainte-Luce-sur-Loire","Coueron","Savenay","Craon","Vritz","Chanteloup-les-Bois","Thouare-sur-Loire","Rouillon","Le Pellerin","Clisson","Saint-Herblain","Les Sables","Aizenay","Ecommoy","Saint-Hilaire-de-Chaleons","Brain-sur-Allonnes","Avrille","Breze","Doue-la-Fontaine","Coulaines","Pere","Reaumur","Olonne-sur-Mer","Montournais","Vertou","Sainte-Reine-de-Bretagne","Orvault","Evron","Parigne-l'Eveque","Juigne-sur-Sarthe","Chemille-Melay","Renaze","Aigrefeuille-sur-Maine","Pornic","Montbert","La Garnache","Champ","La Ferriere","Combree","Maze","Bouguenais","Port-Brillet","Saint-Christophe-en-Boucherie","Yzernay","La Meilleraye-de-Bretagne","Fontenay-le-Comte","La Plane","Treillieres","Saint-Saturnin-sur-Loire","Le Pouliguen","Saumur","Le Perrier","Blain","Bouchemaine","Loire","Le Lude","Mouzillon","Cande","La Faute-sur-Mer","Nort-sur-Erdre","Indre","Vallet","Carquefou","Saint-Etienne-de-Montluc","RezÃ©","Pipriac","Le Loroux","Lege","Quelaines-Saint-Gault","Pontchateau","Pouance","Laval","Saint-Pere-en-Retz","Torce-en-Vallee","Saint-Brevin-les-Pins","Grand","Le Pin","Saint-Berthevin","Suce-sur-Erdre","Argentre","Saint-Macaire-en-Mauges","Chavagnes-les-Redoux","Couesmes-Vauce","Loiron","Ruille-le-Gravelais","La Chapelle-aux-Lys","Saint-Fort","Chemaze","Le Coudray","Palluau","Ecuille","Saint-Barthelemy-d'Anjou","Challain-la-Potherie","Bazoges-en-Paillers","La Bruffiere","Saligny","Segre","Thorigne-d'Anjou","Soulvache","Grazay","Drain","Saint-Lambert-la-Potherie","Herbignac","Beaufou","Saint-Hilaire-de-Talmont","Lamnay","Change","La Chartre-sur-le-Loir","Mouilleron-le-Captif","Chateau-du-Loir","Sainte-Sabine-sur-Longeve","Vincent","Dreffeac","Anjou","Coex","Beaupreau","Le Voide","Parigne","Melleray","Mamers","Chateau-Gontier","Saint-Corneille","Grosbreuil","Beaufort-en-Vallee","Trementines","Bouffere","Touvois","Abbaretz","La Roche","Aubigny","Yvre-l'Eveque","Croix-de-Vie","Saint-Viaud","Madre","Pellouailles-les-Vignes","Loue","Cheffes","Tierce","Brulon","La Suze-sur-Sarthe","Joue-l'Abbe","Les Lucs-sur-Boulogne","Toutlemonde","Saint-Andre-Treize-Voies","Chateau-d'Olonne","Saint-Julien-de-Vouvantes","La Baconniere","Lire","Villaines-sous-Luce","Cugand","Saint-Jean-de-Monts","Le Longeron","Malville","Nozay","Chantonnay","Derval","Guenrouet","Ancenis","Sautron","La Chaize-le-Vicomte","La Vraie-Croix","Mellac","Rennes","Plomelin","Trigavou","Lorient","Saint-Gregoire","Argol","Saint-Brieuc","Pontivy","La Meaugon","Merlevenez","Landevant","Plaine-de-Walsch","Mezieres-sur-Couesnon","Carnac","Broons","Carhaix-Plouguer","Concarneau","Plougastel-Daoulas","Loudeac","Brest","Logonna-Quimerch","Plouzane","Credin","Irodouer","Nivillac","La TrinitÃ©-sur-Mer","Breal-sous-Montfort","Cleguerec","Melesse","Brech","Gouesnach","Boqueho","Penguily","Le Palais","Lanvaudan","Montgermont","Pouldreuzic","Bulat-Pestivien","Auray","Guidel","Crevin","Ploubezre","Orgeres","Brehand","Plouay","Sene","Plemet","Evran","Dinard","La Meziere","Vannes","Langoelan","Pleurtuit","Quimper","Pledran","Chateaugiron","Saint-Grave","Quebriac","Theix","VitrÃ©","Saint-Jouan-des-Guerets","Chantepie","Vern-sur-Seiche","Ploeuc-sur-Lie","Bain-de-Bretagne","Pluneret","Breteil","Aubigne","Quedillac","Hopital-Camfrout","Languidic","Kerfourn","Reminiac","Lannion","Lampaul-Plouarzel","Penmarch","Le Bono","Bangor","Port-Launay","Ploermel","Glomel","Landebia","Gestel","Quiberon","Queven","Douarnenez","Saint-Aubin-d'Aubigne","Chartres-de-Bretagne","Le Rheu","Miniac-Morvan","TrÃ©guier","Bannalec","Carantec","Plouescat","Dinan","Cormainville","Guemene-sur-Scorff","Pluvigner","Saint-Nolff","Pace","Guichen","Beganne","Molac","Saint-M'Herve","Saint-Dolay","Dinge","Camoel","Chaumont","Lyon","Saint-Maurice-de-Remens","La Chapelle-en-Vercors","Bourgoin","Sainte-Foy-les-Lyon","Chabeuil","Villeurbanne","Bourg-Argental","Roussillon","Saint-Etienne","La Cote","Izernore","Caluire-et-Cuire","Tournon-sur-RhÃ´ne","Saint-Vallier","Bourg-en-Bresse","Chazelles-sur-Lyon","Salagnon","Saint-Chamond","Trevoux","Chanas","Dieulefit","Saint-Chef","Andrezieux-Boutheon","Le Coteau","Loire-sur-Rhone","Saint-Etienne-sur-Chalaronne","Vernioz","Vaulx-en-Velin","Chatillon-la-Palud","Saint-Etienne-de-Valoux","Saint-Sernin","Davezieux","Samognat","Bron","Rillieux-la-Pape","Limonest","Decines-Charpieu","La Talaudiere","Saint-Priest-la-Vetre","Four","Rompon","Ville-sur-Jarnioux","Vernosc-les-Annonay","Dardilly","Fleurieux-sur-l'Arbresle","Saint-Didier-de-la-Tour","Pont-Eveque","Bourg-de-Thizy","Montboucher-sur-Jabron","Lhuis","Brignais","Montbrison","Saint-Cyprien","Lupe","Blyes","Montrond-les-Bains","Meyzieu","Saint-Forgeux","Curtafond","VÃ©nissieux","MontÃ©limar","Ornacieux","La Tour","Janneyrias","Bonson","Sorbiers","Abergement-Saint-Jean","Saint-Fons","Saint-Maurice-l'Exil","La Laupie","Corbas","Neuville-sur-Saone","Saint-Donat-sur-l'Herbasse","Fontaines-sur-Saone","Pont-Salomon","Frontonas","Beauchastel","Saint-Clair-du-Rhone","Montagnieu","Annonay","Marcollin","Viviers","Savasse","Saint-Symphorien-de-Lay","Tassin-la-Demi-Lune","Le Poet-Laval","L'Horme","Oullins","Aubenas","Genay","Auriol","Saint-Cannat","Saint-Martin-de-la-Brasque","Marseille","Beaumont-de-Pertuis","Loriol-du-Comtat","Aix-en-Provence","Eguilles","Barcelonnette","Manosque","Ventabren","La Ciotat","Sorgues","Carces","Avignon","Merindol","Ceyreste","Caumont-sur-Durance","Peypin","Vedene","Arles","Vaison-la-Romaine","St Chamas","Le Puy-Sainte-Reparade","Rognac","Istres","La Brillanne","Sausset-les-Pins","Senas","Valreas","Volx","Saint-Martin-de-Crau","Monteux","Plan-d'Orgon","Saint-Disdier","Salon-de-Provence","Allos","Saint-RÃ©my-de-Provence","Suze-la-Rousse","Gardanne","Isle","Rochefort-du-Gard","Aubagne","BrianÃ§on","Lancon-Provence","Ajaccio","Cadolive","Rousset","Bastia","Chateaurenard","Les Pennes-Mirabeau","Pertuis","Venasque","Martigues","Fos-sur-Mer","Gignac-la-Nerthe","Miramas","Orgon","Velaux","Pujaut","Greasque","Entraigues-sur-la-Sorgue","Meyrargues","Cabries","Courthezon","Les Taillades","Eyragues","Seyne-les-Alpes","Lagnes","Vitrolles","Lambesc","Montclar","Pelissanne","Eyguieres","Mane","Carpentras","Luynes","Les Angles","Grans","La Foux","Corte","Biguglia","Calvi","Moncale","Alata","Lille","Somain","Fresnes-sur-Escaut","Bousbecque","Bertincourt","Hellemmes-Lille","Avesnes-le-Comte","Isbergues","Marly","Riviere","Saint-Pol-sur-Mer","Bruay-sur-l'Escaut","Sains-en-Gohelle","Grand-Fort-Philippe","Ronchin","Tilloy-lez-Cambrai","Hesdin","Jolimetz","Dunkirk","Hautecloque","Hondeghem","Bellebrune","Saint-Saulve","Meurchin","Rieux-en-Cambresis","Lattre-Saint-Quentin","Lens","Oignies","Boisleux-au-Mont","Villers-au-Bois","Douchy-les-Mines","Courcelles-les-Lens","Wallers","Aire-sur-la-Lys","Outreau","Raimbeaucourt","ArmentiÃ¨res","Bully-les-Mines","Hem","Hinges","Bellaing","LiÃ©vin","Allennes-les-Marais","Lewarde","Phalempin","Saint-Pol-sur-Ternoise","Graincourt-les-Havrincourt","Lorgies","Zouafques","Tourcoing","Blaringhem","Croix","Arras","Lynde","Ostricourt","Erquinghem-Lys","Coudekerque-Branche","Locon","Teteghem","Ferriere-la-Grande","Lestrem","Masnieres","Tournehem-sur-la-Hem","Dourges","Roubaix","Hazebrouck","Beuvry-la-Foret","Saint-Hilaire-de-Court","Flines-lez-Raches","Abscon","Valenciennes","Libercourt","Hardifort","Hergnies","Samer","Wimereux","Conde-sur-l'Escaut","Verquin","Boulogne-sur-Mer","Faches-Thumesnil","Hesdin-l'Abbe","Maroeuil","Beaurainville","Merville","Avion","Estevelles","BÃ©thune","Surques","CourriÃ¨res","Bleriot-Plage","Villers-Outreaux","Anzin","Wahagnies","Verquigneul","Houdain-lez-Bavay","Saint-Amand-les-Eaux","Givenchy-en-Gohelle","Escaudain","Nieppe","Saint-Folquin","Solesmes","Proville","Douai","Rouvroy","Bourlon","Waziers","Mazingarbe","Richebourg","Pont-a-Marcq","Calais","Noyelles-sur-Escaut","La Foret","Henin-Beaumont","Roncq","Nomain","Beaumetz-les-Loges","Mons-en-Baroeul","Fouquieres-les-Lens","Mouvaux","Aulnoye-Aymeries","Thumeries","Blagnac","Loures-Barousse","Toulouse","Revel","Albi","Deyme","Castres","Pibrac","Cornebarrieu","Cahors","Castanet-Tolosan","Soues","Luz-Saint-Sauveur","Baron","Begles","Talence","Lauzun","Hourtin","Mussidan","MÃ©rignac","Bordeaux","Catus","Frouzins","Lisle-sur-Tarn","Muret","Saujon","Favars","Niort","Frontenay-Rohan-Rohan","Soyaux","Poitiers","Puilboreau","ChÃ¢tellerault","Gueret","Romans","Limoges","La Rochelle","Tulle","Bretignolles","AngoulÃªme","Ars","Brioux-sur-Boutonne","Lavaur","Roquettes","Balma","Cour-sur-Loire","Verneuil-sur-Vienne","Nieul-sur-Mer","Le Vigeant","Montlieu-la-Garde","Aixe-sur-Vienne","Mesnil-sous-Vienne","Montauban","Verfeil","NÃ©rac","Le Bouscat","Marmande","Sainte-Eanne","Cressat","Bessines-sur-Gartempe","Crayssac","Aussonne","Graulhet","Coutras","Villenave-d'Ornon","Ginestet","Artigues-pres-Bordeaux","Miramont-Sensacq","Cestas","Le Taillan-Medoc","Monpazier","Saint-Lys","Celles-sur-Belle","Saint-Jean-d'Angely","Meschers-sur-Gironde","Chamboret","Saint-Just-pres-Brioude","Terce","Naves","Chef-Boutonne","Lhommaize","Rochefort","Romagne","Besse","Taize-Aizie","Julienne","Arthes","Noilhan","Sainte-Ouenne","Saint-Maxire","Bonnat","Aubusson","La Tremblade","Saint-Maurice-de-Gourdans","Jardres","La Meignanne","Vix","ChÃ¢teau-lÃ‰vÃªque","La Seguiniere","La Bazoge","La Tranche-sur-Mer","La Tessoualle","Murs-Erigne","Clouzeau","Doix","Champagne","Joue-sur-Erdre","Landeronde","Rochetrejoux","Loge-Fougereuse","Saint-Lyphard","Vigneux-de-Bretagne","Le Bignon","Belleville-sur-Vie","Ernee","Saint-Sylvain-d'Anjou","Neuville-sur-Sarthe","Savigne-sous-le-Lude","Landevieille","Saint-Clement-des-Levees","Sable-sur-Sarthe","Beauvoir-sur-Mer","Heric","Blaison-Gohier","Monce-en-Belin","La Limouziniere","Bois","Villeveque","Mayenne","Segrie","La Mothe-Saint-Heray","Vion","Vezins","Saint-Florent-le-Vieil","Pissotte","Mars","Crespin","Les Herbiers","Saint-Saturnin-du-Limet","Longeville-sur-Mer","La Renaudiere","Les Clouzeaux","Dollon","Maisdon-sur-Sevre","Frossay","Lucon","Saint-Philbert-de-Grand-Lieu","Sainte-Flaive-des-Loups","Guerande","La Bernerie-en-Retz","Voutre","Sigournais","Marigne","Noyant-la-Gravoyere","Ligne","Arnage","Petit-Mars","Prinquiau","Saint-Andre-des-Eaux","La Haye","Donges","Cerans-Foulletourte","Le Fuilet","Venansault","Coron","Le Fenouiller","La Guyonniere","Corne","Montjean-sur-Loire","Spay","Noyant-la-Plaine","Martigne-Briand","Brigne","Batz-sur-Mer","Vern-d'Anjou","Nalliers","Saint-Marceau","Saint-Philbert-du-Pont-Charrault","Saint-Gildas-des-Bois","Sept-Forges","Saint-Hilaire-de-Riez","La Planche","Mezieres-sous-Lavardin","Le Croisic","Tillieres","Montreuil","Mars-sur-Allier","Soulitre","Le Plessis-Grammoire","Dompierre-sur-Yon","Treize-Septiers","La Haie","Sainte-Gemme-la-Plaine","Fontaine","Meslay-du-Maine","Froidfond","La Grigonnais","Ruille-Froid-Fonds","Ponts","Louresse-Rochemenier","Martinet","Pouzauges","Saint-Lumine-de-Clisson","Chateauneuf","Les Alleuds","Bouvron","Sainte-Florence","Pierre","Landemont","La Roche-sur-Yon","Disse-sous-Ballon","Tregunc","Ploemeur","Plougoumelen","Le Sourn","Erce-en-Lamee","Saint-Ave","Silfiac","Romagne","Morlaix","Bretagne","Saint-Malo-en-Donziois","Saint-Bihy","Chateauneuf-du-Faou","Hennebont","La Forest-Landerneau","La Fresnais","Plaintel","Le Ferre","Acigne","Landerneau","Saint-Urbain","Noyal-Muzillac","Briec","Plerin","Hanvec","Saint-Yvi","Scaer","Melgven","Rosporden","Baud","Lannilis","Dol-de-Bretagne","Plouneour-Trez","Plougasnou","Penestin","Poullaouen","Riec-sur-Belon","Elven","Quelneuc","Cournon","Saint-Jean-sur-Vilaine","Le Guerno","Guipavas","Saint-Tugdual","Baden","Caulnes","Cleder","Villamee","Iffendic","Redene","Plouguin","Surzur","Plumeliau","Saint-Cast-le-Guildo","Plougonvelin","Ergue-Gaberic","Pleugriffet","Combourg","Elliant","Fougeres","Lanmerin","Lamballe","Camors","Lanester","Nostang","Ferel","Plaine-Haute","Ploemel","Goudelin","Yffiniac","Beauce","Kerpert","Saint-Carreuc","Plouha","Clohars-Carnoet","Treguidel","QuÃ©mÃ©nÃ©ven","Portrieux","Guer","Henon","Saint-Quay-Portrieux","Taule","Kervignac","Tremuson","Pluguffan","Le Trevoux","Pleyben","Mur-de-Bretagne","Montauban-de-Bretagne","Ploufragan","Treverien","Roscoff","Redon","Pont-Scorff","Le Relecq-Kerhuon","Langonnet","Pont-l'AbbÃ©","Ploudalmezeau","Geveze","Saint-Pabu","Saint-Domineuc","Trebeurden","Missiriac","Medreac","Argentre-du-Plessis","Treduder","Combrit","Gomene","Plouaret","Lanvollon","Trebry","Sulniac","Bruz","Lanouee","Ploeren","Saint-Jean-la-Poterie","Betton","Guilvinec","Domagne","Peillac","Ploubalay","Plescop","Saint-Adrien","Vezin-le-Coquet","Domalain","Fouesnant","Gouezec","Crehen","Mael-Carhaix","Pluduno","Locmaria-Plouzane","Saint-Agathon","Pont-de-Buis-les-Quimerch","Plaudren","Saint-Senoux","Erdeven","Saint-Renan","Moncontour","Saint-Pierre-la-Cour","Liffre","Reguiny","Brandivy","Plumaugat","Ploerdut","Corseul","Laille","Locmariaquer","Treffendel","Plelan-le-Grand","Janze","Guignen","Plabennec","Tinteniac","Le Faou","Lokmaria","Begard","Ploudaniel","Plestin-les-Greves","Saint-Derrien","Maure-de-Bretagne","Plumelin","Plelan-le-Petit","Le Verger","Andouille-Neuville","Lennon","Spezet","Minihy-Treguier","Pleucadeuc","Henvic","Taillis","Lignol","Saint-Divy","Guenin","Pont-Sainte-Maxence","Bonnemain","Chateaubourg","Saint-Meen-le-Grand","Saint-Barnabe","Lehon","Botsorhel","Chatelaudren","Pleneuf-Val-Andre","Tregastel","Carentoir","Loctudy","Gahard","Meslin","Vieux","Plouer-sur-Rance","Hede-Bazouges","Kerlaz","Plougourvest","Crach","Tregarantec","Plechatel","Saint-Philibert","Moelan-sur-Mer","Montfort-sur-Meu","Caudan","Squiffiec","Plouneour-Menez","Plougar","Gouesnou","Paris","Pabu","Le Faouet","Plogonnec","Messac","Pouldergat","Mohon","Penvenan","QuimperlÃ©","Larmor-Plage","Cleguer","Pommeret","Crozon","Etel","Pleumeleuc","Belle-Isle-en-Terre","Audierne","Peaule","Bains-sur-Oust","Plurien","Plonevez-du-Faou","Brusvily","L'Hermitage","Louargat","Illifaut","Saint-Gerand","ChÃ¢teaulin","Saint-Coulomb","Yvias","BÃ©nodet","Saint-Jean-Trolimon","Louannec","Noyal-Pontivy","Larmor-Baden","Beuzec-Cap-Sizun","Ile-d'Arz","Chevaigne","Planguenoual","Plelauff","Saint-Nicolas-du-Pelem","Questembert","Plomeur","Le Foeil","Pont-Aven","Saint-Pol-de-LÃ©on","La Richardais","Le Vieux Bourg","Balaze","Plorec-sur-Arguenon","Plessala","Paimpont","Croixanvec","Billiers","Sauzon","Plouharnel","Landrevarzec","Pludual","Arradon","Lezardrieux","Le Vieux","Bedee","Gourin","Mouaze","Guengat","Brive","PlonÃ©our-Lanvern","Persquen","Baguer-Morvan","Coesmes","Saint-Gonnery","St-Malo","Monterfil","Saint-Meloir-des-Ondes","Le Vivier-sur-Mer","Trelevern","Berric","Plerguer","Grand-Fougeray","La Motte","Saint-Suliac","Poullan-sur-Mer","Pontorson","Ploumagoar","Maxent","Allaire","Luitre","Esquibien","Cogles","Plouec-du-Trieux","Treve","Treflez","Bourbriac","Quevert","Saint-Nicolas-de-Redon","Plusquellec","Leon","Servon-sur-Vilaine","Lanrelas","Colpo","Muzillac","Saint-Armel","Saint-Congard","La Bosse-de-Bretagne","Plouagat","Belz","Plouezec","Plouigneau","Trefflean","Plougonven","Locmine","Sainte-Seve","Plouvorn","Laignelet","Boulogne-Billancourt","Villebon-sur-Yvette","Neuilly-sur-Seine","Les Sorinieres","Argences","Carros","Marcilly-sur-Tille","Chatillon-sur-Chalaronne","Toulon","Bollene","Draguignan","BagnÃ¨res-de-Bigorre","Yzeure","Bourg-Saint-Andeol","Petit-Palais-et-Cornemps","Chantilly","Mont-Saint-Martin","Chaulnes","Pont-Saint-Esprit","Saint-Crepin-Ibouvillers","Gambais","Urrugne","Domerat","Peymeinade","Lattes","Sezanne","Generac","Buellas","Cergy","Bayonne","Epernon","Villefontaine","Marolles-en-Hurepoix","Clermont-Ferrand","Cabrieres-d'Avignon","Chevincourt","Villeneuve-sur-Lot","Triel-sur-Seine","Chelles","Savigny-le-Temple","Champs-sur-Marne","Vincennes","Pontaut","Chazay-d'Azergues","Chenimenil","Ã‰pinal","Poissy","Saint-Denis-de-Palin","Guyancourt","Andresy","La Courneuve","Grigny","Serris","Grenoble","Marcq-en-Baroeul","Montpellier","Sivry-Courtry","Issy-les-Moulineaux","Noisiel","OrlÃ©ans","Chaponost","Valence","Buc","Courbevoie","Haubourdin","Meudon","Marly-le-Roi","Fontenay-aux-Roses","Rueil-Malmaison","Montreuil","Scy-Chazelles","BesanÃ§on","Bourg-la-Reine","Nice","Ã‰chirolles","Maisons-Alfort","Le Havre","Dugny","Suresnes","Le Pecq","Ã‰vry","Tours","Athis-Mons","Stains","Le Bourget","Cannes","Juan-les-Pins","Sevran","Saint-Ouen","Vitry-sur-Seine","Les Clayes-sous-Bois","Fontenay-sous-Bois","Ã‰pinay-sur-Seine","Versailles","Saint-Maur-des-FossÃ©s","CrÃ©teil","Loos","Levallois-Perret","Heillecourt","Pessac","Nancy","Rouen","Perpignan","Montfavet","Dijon","Saint-Germain-en-Laye","Gif-sur-Yvette","Mantes-la-Jolie","Villefranche-sur-SaÃ´ne","Rosny-sous-Bois","Strasbourg","Cerisy-la-Foret","Billy-Montigny","Le Mee-sur-Seine","Belfort","Colombes","Metz","Lannoy","Dogneville","Montigny-le-Bretonneux","ChÃ¢tenay-Malabry","Choisy-le-Roi","Chatou","Barlin","Wattrelos","Claye-Souilly","Gagny","Rixheim","Louviers","Amiens","Antibes","FrÃ©jus","Bourg-de-PÃ©age","Troyes","Chambray-lÃ¨s-Tours","Tinqueux","Sarreguemines","Cavaillon","Saint-Ã‰tienne-du-Rouvray","Domont","Neuilly-sur-Marne","Fresnes","Colomiers","Saint-RaphaÃ«l","Sartrouville","Surtainville","Bischheim","Hoenheim","Annezin","Vandoeuvre-les-Nancy","Garges-lÃ¨s-Gonesse","Saint-Jean-de-la-Ruelle","Saint-Omer","ChambÃ©ry","Carcassonne","Ã‰pernay","Cormeilles-en-Parisis","Seichamps","Le Perreux-sur-Marne","La Cadiere-d'Azur","Combs-la-Ville","MÃ¢con","Grigny","Villeneuve-sur-Fere","Chevilly-Larue","Vienne","Morsang-sur-Orge","Montmagny","Sens","CompiÃ¨gne","Oberschaeffolsheim","Maisons-Laffitte","La Riche","Saint-SÃ©bastien-sur-Loire","Fontaine","Chilly-Mazarin","Gaillard","L'Etrat","Narbonne","Conflans-Sainte-Honorine","NÃ®mes","Auxerre","Caen","Eysines","Eybens","Le Blanc","Allauch","Aix-les-Bains","Villeparisis","Dammarie-les-Lys","Argenteuil","Bezons","Clamart","Kingersheim","Le Portel","Limay","Le Raincy","Franconville","Chalons-en-Champagne","Petit-Couronne","Cagnes-sur-Mer","Saint-Andre-les-Vergers","PÃ©rigueux","Nevers","Palaiseau","Le Cannet","Bourges","Saint-Laurent-du-Var","Lourches","Rosay","Ã‰vreux","Saint-Germain-les-Arpajon","Egly","Les Mureaux","Terville","Fameck","Neuilly-Plaisance","Saint-Germain-les-Corbeil","Herblay","Brunoy","Blanquefort","Villiers-sur-Marne","Bondy","Noisy-le-Sec","Nanterre","Montevrain","Roquebrune-Cap-Martin","Vaujours","Deuil-la-Barre","La Celle-Saint-Cloud","Villeneuve-Saint-Georges","Saint-MÃ©dard-en-Jalles","Creil","Pantin","Lesigny","Melun","Vaires-sur-Marne","Ennery","Maizieres-les-Metz","Soisy-sur-Seine","Le Neubourg","Dame-Marie","Villettes","Le Port-Marly","Cesar","Gravelines","Saint-Aubin-les-Elbeuf","Montataire","Villers-sur-le-Mont","Samazan","Bourran","Foulayronnes","Tombeboeuf","Tayrac","Sainte-Colombe-de-Duras","Penne-dAgenais","Sainte-Gemme-Martaillac","Anthe","Devillac","Ecluzelles","Bonneval","Lutz-en-Dunois","Bailleul","Chorges","Beausoleil","Menton","Drap","Grasse","Rosieres-pres-Troyes","Sainte-Savine","Berre-l'Etang","Bouc-Bel-Air","Septemes-les-Vallons","Ifs","Saint-Germain-la-Blanche-Herbe","Brive-la-Gaillarde","Chevigny-Saint-Sauveur","Mensignac","Etupes","Vieux-Charmont","Romans-sur-IsÃ¨re","Chartres","Ramonville-Saint-Agne","Cenon","Bruges","Libourne","Bassens","Lormont","Boujan-sur-Libron","BÃ©ziers","Frontignan","SÃ¨te","Mauguio","JouÃ©-lÃ¨s-Tours","Blois","Firminy","Rive-de-Gier","Roanne","La Ricamarie","Saint-Genest-Lerpt","Saint-Priest-en-Jarez","Chalette-sur-Loing","Fleury-les-Aubrais","Ingre","Agen","Saint-Memmie","Pierry","Reims","Laxou","Toul","Florange","Forbach","Hagondange","Amneville","Hayange","Hombourg-Haut","Hettange-Grande","Thionville","Cambrai","Hornaing","Senlis","Achicourt","Wingles","Saint-Martin-au-Laert","Chateaugay","Pau","Bizanos","Illkirch-Graffenstaden","Schiltigheim","Colmar","Mulhouse","Illzach","Riedisheim","Hegenheim","Ecully","Saint-Genis-Laval","Genas","Chalon-sur-SaÃ´ne","Varennes-les-Macon","Le Creusot","Crottet","Montceau-les-Mines","Seez","Annecy","Annemasse","Cluses","Saint-Leu-la-Foret","Le Grand-Pressigny","Deville-les-Rouen","Mont-Saint-Aignan","Sotteville-lÃ¨s-Rouen","Brie-Comte-Robert","Lieusaint","Meaux","Villeblevin","Rubelles","Montereau-Fault-Yonne","Gretz-Armainvilliers","Bois-d'Arcy","Carrieres-sous-Poissy","Villejuif","Plaisir","Acheres","Maurepas","Verneuil-sur-Seine","Vernouillet","Villepreux","La Garde","HyÃ¨res","La Seyne-sur-Mer","Audincourt","Arpajon","Ris-Orangis","Corbeil-Essonnes","Ã‰tampes","Asnieres-sur-Seine","Massy","Verrieres-le-Buisson","La Ville-aux-Bois","Sainte-GeneviÃ¨ve-des-Bois","Draveil","Viry-ChÃ¢tillon","Antony","Clichy","ChÃ¢tillon","Montrouge","Garches","Aulnay-sous-Bois","Bagnolet","Drancy","Les Pavillons-sous-Bois","Livry-Gargan","Noisy-le-Grand","Les Lilas","Saint-Denis","L'Ile-Saint-Denis","Tremblay","Alfortville","Villecresnes","Champigny-sur-Marne","Le Plessis-Belleville","L'HaÃ¿-les-Roses","Ivry-sur-Seine","Persan","Ezanville","Gonesse","Montmorency","Caudry","Villetaneuse","Cachan","Mericourt","Tournefeuille","Lescar","Coubron","Billere","Denain","Saint-Gratien","La Barre-en-Ouche","Silly-la-Poterie","Villemomble","Gennevilliers","Vaux-le-Penil","Saint-Laurent-Blangy","Saint-Julien-les-Metz","Fleury-Merogis","Chennevieres-sur-Marne","La Queue-en-Brie","Bourron-Marlotte","Malakoff","Vigneux-sur-Seine","Thiais","Trappes","Linas","Saulx-les-Chartreux","Paron","Fagnieres","Aubervilliers","Montargis","Savigny-sur-Orge","Bagneux","Mougins","BrÃ©tigny-sur-Orge","Puteaux","Saint-Brice-sous-Foret","Irigny","Nandy","Nogent-sur-Marne","Saint-Remy-la-Vanne","Chambly","Anglet","Hermes","Ã‰vian-les-Bains","Allevard","Saint-Pierre-de-Jards","Dieppe","Brognon","Cordemais","Villeneuve","Coupvray","Roussy-le-Village","Peillon","La Queue-les-Yvelines","Saint-Andre","Monthyon","Riom","Montoire-sur-le-Loir","Mordelles","Hendaye","Speracedes","Carnoules","Elbeuf","Miribel","Vouille","Jouarre","Jacob-Bellecombette","LArbresle","Solaize","Montliard","Neuilly-en-Thelle","Falaise","Saint-Jean-d'Ardieres","Chamblanc","Ballancourt-sur-Essonne","Cregy-les-Meaux","Pernes-les-Fontaines","Semalens","Emerainville","Milly-la-Foret","ChÃ¢teauroux","Cesson","Yerville","Le Landreau","Gron","Houdan","Eaux-Bonnes","Saint-Loup-Cammas","Lempdes-sur-Allagnon","Maubeuge","La Farlede","Briouze","AlÃ¨s","Daoulas","Sciez","Guignes","Langlade","Andernos-les-Bains","Ferolles-Attilly","Gien","Frouard","Cugnaux","Cabris","Saint-Jean-de-Boiseau","Onet-le-Chateau","FÃ©camp","Grandfresnoy","Montferrand-du-Perigord","Brignoles","Marck","Pithiviers","Jarnac-Champagne","Guethary","Le Rouret","Les Essarts","Angliers","Aytre","Floirac","Gradignan","Cherbourg-Octeville","Pontoise","Eaubonne","Voiron","Hallennes-lez-Haubourdin","Flers-en-Escrebieux","Auby","Blendecques","Francheville","Igny","La Grande-Motte","Essey-les-Nancy","Saint-Nicolas-de-Port","Saint-Gervais-sous-Meymont","Canteleu","Yerres","Joinville-le-Pont","Ablon-sur-Seine","Saint-Cyr-sur-Loire","VÃ©lizy-Villacoublay","Viroflay","Saint-LÃ´","Bois-Colombes","Le Port","Saint-Cloud","Fontainebleau","Nemours","Houilles","Le Vesinet","Chenove","Beaune","Sassenage","Meylan","Leers","Seclin","Carvin","Le Chesnay","Taverny","Montgeron","Pont-Ã -Mousson","Creutzwald","Merlebach","Cocheren","Illange","Roissy-en-Brie","AlenÃ§on","Guebwiller","Haguenau","Lingolsheim","Molsheim","Saverne","Noiseau","Mandres-les-Roses","Beauvais","Biarritz","Jurancon","Saint-Jean-de-Luz","La Valette-du-Var","Saint-Pierre-des-Corps","Montlouis-sur-Loire","Chevreuse","Bailly","Goussainville","Wasquehal","Aubiere","Castelnau-le-Lez","Arcueil","Moulins-les-Metz","Maromme","Romainville","Cran-Gevrier","Boissy-Saint-LÃ©ger","Beynes","Anthon","UzÃ¨s","Mions","Pierrefitte-sur-Seine","Longjumeau","La Riviere-de-Corps","Saint-Julien-les-Villas","Saint-Doulchard","Groslay","Sainte-Adresse","Pierre-Benite","Mantes-la-Ville","Torcy","Brou-sur-Chantereine","Beaumont","Arlanc","Ormesson-sur-Marne","Orly","Les Loges","Verniolle","Fuveau","Basse-Goulaine","Etroussat","Condom","L'Isle-Jourdain","Pessan","Ã‰lancourt","Brochon","Bourg-le-Comte","Gaillac","Le Fraysse","Saussenac","Saint-Ay","Bussy-Saint-Georges","Pont-l'Eveque","Fabregues","Paul","Lunel","Pons","Olargues","Pignan","Ganges","Cessenon-sur-Orb","Poussan","Loupian","Jaure","Mosson","Krafft","Beauvoir","Les Pins","Mitterand","Lansargues","Montagnac","Bene","Roujan","Martin-Eglise","Doux","Marc","Pierre-de-Bresse","Vichy","Mereville","Cahuzac","Cournon-dAuvergne","Senan","Bonneuil-sur-Marne","Arudy","Perols","La Roque-d'Antheron","Coudoux","Saint-Esteve-Janson","Simiane-Collongue","Ozoir-la-Ferriere","Saint-Maurice","Aulnay-sur-Mauldre","Sucy-en-Brie","Le Pre-Saint-Gervais","Saint-Michel-sur-Orge","Maincy","Aucamville","Mitry-Mory","Nanteuil-le-Haudouin","Avrainville","Ollainville","Sarcelles","Vert-le-Grand","Louveciennes","Rumilly","Montfermeil","La Ferte-sous-Jouarre","Bois-le-Roi","Champcerie","Montivilliers","Villeneuve-le-Roi","Villeneuve-la-Garenne","Montigny-sur-Loing","Villepinte","Charenton-le-Pont","Villiers-le-Bel","Chaville","Montesson","Navarrenx","Ogenne-Camptort","Gaillac-Toulza","Gueugnon","Ã‰pinay-sur-Orge","Rebais","Saint-Mars-de-Locquenay","Vernou-sur-Brenne","Chateauneuf-de-Bordette","Apt","Saint-Peray","Vibraye","Vias","Montmoreau-Saint-Cybard","Vitrac-Saint-Vincent","Brigueuil","Chasseneuil-sur-Bonnieure","Estrablin","Chatte","Saint-Baudille-de-la-Tour","Moissieu-sur-Dolon","Saint-Front","Monsteroux-Milieu","Fouquebrune","Les Gours","Realville","Auzielle","Plaisance-du-Touch","Montreuil-aux-Lions","Trilport","Mezieres-sur-Seine","Reilly","Lentilly","Cappelle-la-Grande","Fort-Mardyck","Boncourt-sur-Meuse","Bage-la-Ville","Certines","Thil","Chevry","Pougny","Belley","Rance","Dangeul","Saint-Fregant","Gex","Vire","Saint-Didier-d'Aussiat","Ars-sur-Formans","Saint-Germain-de-Joux","Bray-sur-Seine","Egligny","La Brosse","Courtomer","Nangis","Meigneux","Beligneux","Pizay","Lavours","Etrez","Ozan","Echenevex","Rivieres","Valbonne","Ascq","Saint-Etienne-de-Saint-Geoirs","Labege","SÃ¨vres","Mont-Saint-Martin","Chateauneuf-de-Gadagne","Bohal","Sens-de-Bretagne","La Crau","Vanves","La Plaine-Saint-Denis","Crolles","Bailly-Romainvilliers","Sainte-Maxime","Rully","La Celle-sous-Montmirail","Le Mesnil-Fuguet","Vieux-Manoir","Servian","L'Isle-Adam","Bobigny","Santes","Bazoncourt","Chavanod","Montluel","Leaz","Marange-Silvange","Nilvange","Gandrange","Saint-Germain-du-Puy","Croissy-sur-Seine","Moulin","Les Hotelleries","Marie","Chilly","Courcouronnes","Crillon-le-Brave","Vesly","Chereng","Berry-Bouy","Puy-Guillaume","Ermont","Le Plessis-Bouchard","Saint-Max","Plan-de-Cuques","Malzeville","Bihorel","Romagnat","La Norville","Seyssinet-Pariset","Carqueiranne","Laye","Bry-sur-Marne","Jarville-la-Malgrange","Pont-a-Vendin","Ares","Peyrehorade","Meythet","Joeuf","Breuillet","Saint-Martin-de-Bernegoue","Lillebonne","Le Muy","Carbonne","Bonifacio","Veyre-Monton","Escalquens","Aubigny-sur-NÃ¨re","Gas","Monchy-Saint-Eloi","Fitz-James","Roquefort","Royat","Raon-l'Etape","Mirecourt","Borgo","Incheville","Cusset","Savieres","Remy","Perrecy-les-Forges","Andeville","Franqueville","Souppes-sur-Loing","Villeneuve-Loubet","Saint-Germer-de-Fly","Villy-Bocage","Aix-Noulette","Petite-Foret","Saussines","Bages","Villers-CotterÃªts","Bettignies","Soignolles-en-Brie","Hirson","Rochetoirin","Dourdan","Bletterans","Teloche","Senonches","Jouhet","Saint-Etienne-de-Crossey","Charancieu","Morestel","Tullins","Charavines","Les Abrets","Chirens","Saint-Geoire-en-Valdaine","Oyeu","Saint-Jean-de-Moirans","Villabe","Querrieu","Feucherolles","Rocquencourt","Crouy-sur-Ourcq","Voisins-le-Bretonneux","Saint-Christophe-sur-Avre","Poilly-lez-Gien","AmbÃ©rieu-en-Bugey","Eschau","Fegersheim","Pfastatt","Wittenheim","Erstein","Rhinau","Gerstheim","Lignerolles","Mirepoix","Saint-Symphorien-sur-Saone","Le Puy-en-Velay","Les Fontaines","Noeux-les-Auxi","Confolens","Ruffec","Woerth","Wissembourg","La Chapelle-de-Guinchay","Ruelle-sur-Touvre","Diemeringen","Soufflenheim","Dettwiller","Chemin-d'Aisey","Cognac","Saint-Hilaire-Cusson-la-Valmitte","Chateauneuf-les-Martigues","La Rochefoucauld","Le Gond","Ingwiller","Fruges","Beaulieu-sur-Dordogne","Objat","Bourbon-l'Archambault","Marcillac","Sarre","Nexon","Allassac","La Couronne","Argentiere","Reichshoffen","Le Chambon","Drulingen","La Gaillarde","Segonzac","Cize","Chalon","Munster","Chalais","Lourdes","Mazan","Romaine","Eccles","Thiers","Issoire","Corbigny","Blesle","Figeac","Clermont","Fortschwihr","Boussac","Jeumont","Montbard","Larche","Ottmarsheim","Paulhaguet","Eymoutiers","Correze","Moulins","Montemboeuf","Bort-l'Etang","Rochechouart","Chabanais","Saugues","Langeac","Sauze","Argentat","Le Dorat","Le Montel","Maringues","Castelnau-Durban","Semeac","Chauny","Tarentaise","Tarbes","Ceyrat","Pouilly","Saint-Sulpice-le-Vieux","Brazey-en-Plaine","Felletin","Aurec-sur-Loire","Monistrol-d'Allier","Arnay-le-Duc","Treignac","Nolay","Cosne-d'Allier","Besse","Le Comte","Saint-Germain-Nuelles","Puylaurens","Jury","Salviac","Caussade-Riviere","Marciac","Uzerche","Bessines","Billom","Le Monastier-sur-Gazeille","Le Crotoy","SÃ©lestat","Digne-les-Bains","Gignac","Marignane","Baignes-Sainte-Radegonde","Pontailler-sur-Saone","La Chaise","Villedieu","Moltifao","Hochfelden","La Walck","ChamaliÃ¨res","Tence","Sains-du-Nord","Genlis","Chateau-Chervix","Les Martres","Chatelus","Premery","Luzy","Cerizay","Pamiers","Orbey","Clamecy","Ambert","Volvic","Brives-sur-Charente","Ahun","Allegre","Saint-Martin-sur-Arve","Saint-Julien-sur-Bibost","Retournac","Illfurth","Courpiere","Aigre","Craponne","Chatel-Guyon","Estaires","Le Fousseret","Warendin","Oissel","Harnes","Laon","Saint-Benin-dAzy","Gerzat","La CharitÃ©-sur-Loire","Benevent-l'Abbaye","Marquion","Tournay-sur-Odon","Saint-Laurent-Rochefort","Conde-Sainte-Libiaire","Brezolles","Apcher","Bellac","Mielan","La Montagne","Meriel","Arzon","Montarnaud","Cheron","Le Cres","Sainte-Marie-de-Cuines","Landos","Oradour","Yssingeaux","Houplines","Semur-en-Brionnais","Neuvic","Grenade","Nantiat","Auzances","Lezoux","Carcopino","Audes","Arreau","Gondecourt","Guerigny","Saint-Didier-sur-Rochefort","Lacaune","Chateaumeillant","Le ChÃ¢teau-dOlÃ©ron","Dreville","Agde","Wittelsheim","Saint-Michel-de-Volangis","Sombernon","Cunlhat","Aspet","Beuvron-en-Auge","Niederbronn-les-Bains","Bouxwiller","Mutzig","Porcheresse","Bugeat","Rouffach","Baillargues","Le Pontet","Wintzenheim","Kaysersberg","Bischwiller","Port-Saint-Louis-du-Rhone","Castelnaudary","Saint-Eloy-la-Glaciere","Aigueperse","Champeix","Orgerus","Blaye","Cere","Givet","Villefagnan","Rene","Septeuil","Mulcent","Guillestre","Chaumont","Sangatte","Touques","Riez","Quetigny","Les Bains","Dechy","Montigny-en-Cambresis","Requista","Villefranche-le-Chateau","Clement","Caraman","Rungis","Seynod","Noisy-le-Roi","Henin-sur-Cojeul","Saint-Maximin","Sinceny","Champagne-sur-Oise","Amen","Malabry","Juvignac","Ernolsheim-Bruche","Wingersheim","Masevaux","Guewenheim","Huningue","Richwiller","Geispolsheim","Ostwald","Wolfisheim","Nouilly","Bouxieres-aux-Dames","Sapogne-et-Feucheres","Noyon","Maxeville","Gaillon","Catenoy","Issus","La Brulatte","Mourenx","Mirepeix","Mesplede","Arthez-de-Bearn","Mazerolles","Meillon","Monein","Maure","Malaussanne","Orthez","Lacadee","Espelette","Morlaas","Assat","Andoins","Mouguerre","Hasparren","Mauleon-Licharre","Maslacq","Bedous","Villefranque","Oloron-Sainte-Marie","Montardon","Saint-Jean-Pied-de-Port","Lanne-en-Baretous","Arbus","Cambo-les-Bains","Bidache","Ondres","Sauveterre-de-Bearn","Bordes","Salies-de-Bearn","Saint-Palais","Artix","Boucau","Larressore","Gomer","Saint-Pee-sur-Nivelle","Sauvagnon","Ascain","Bardos","Asasp-Arros","Sendets","Casteide-Cami","Cescau","Doumy","Soumoulou","Ispoure","Sare","Gan","Louvie-Juzon","Boeil-Bezing","Baudreix","Ogeu-les-Bains","Astis","Saint-Faust","Feas","Lalonquette","Ustaritz","Ciboure","Briscous","Ger","Pontacq","Gabaston","Maucor","Navailles-Angos","Coarraze","Artiguelouve","Rebenacq","Osses","Goes","Louvigny","Higueres-Souye","Beuste","Monesties","Nissan-lez-Enserune","Very","Lommerange","Remilly","Seingbouse","Behren-les-Forbach","Ottange","Saint-Avold","Theding","Duclair","Tournedos-Bois-Hubert","Vernon","Erquy","Morieux","Le Guildo","Marsac","Peyrolles-en-Provence","Trets","Bruebach","Soultz-Haut-Rhin","Turckheim","Hattstatt","Ostheim","Pulversheim","Ensisheim","Bouliac","Carbon-Blanc","Tresses","Ambes","Yvrac","Montaut","Saint-Etienne-de-Baigorry","Bouzonville","Carling","Stiring-Wendel","Heming","Villing","Vittersbourg","Luppy","Goin","Berg-sur-Moselle","Frocourt","Morienval","Eaucourt-sur-Somme","Bourdon","Villers-Bocage","Poix-de-Picardie","Montdidier","Valdoie","Montbouton","Grandvillars","Hericourt","Buhl","Thann","Lahonce","Tarnos","Saint-Vincent-de-Tyrosse","Soustons","Marigny","Granville","Les Pieux","Sotteville","Bolleville","Saint-Sauveur-le-Vicomte","Saint-Pair-sur-Mer","Denneville","Donville-les-Bains","Mortain","La Lucerne-dOutremer","Avranches","Fleury","Torigni-sur-Vire","Gavray","Surville","Valognes","Igoville","Coutances","Blainville-sur-Mer","Gouville-sur-Mer","Jobourg","Corny-sur-Moselle","Dieuze","Colombelles","La Riviere","Le Plessis-Trevise","Antheuil-Portes","Lamorlaye","Scharrachbergheim-Irmstett","Cernay","Bassemberg","Innenheim","Mommenheim","Wiwersheim","Entzheim","Saint-Girons","Foix","Lezat-sur-Leze","La Tour-du-Crieu","Les Cabannes","Lavelanet","Seignalens","Quintin","Jugon-les-Lacs","Mousteru","Hillion","Bonnieres-sur-Seine","Agneaux","Ouzouer-sur-Trezee","Beaugency","Creissan","Portiragnes","Serignan","Villeneuve les beziers","Magalas","Saint-Chinian","Capestang","Bouzigues","Villeneuve","Meze","Palavas-les-Flots","Saint-Thibery","Teyran","Marseillan","Bessan","Prades-le-Lez","Balaruc-les-Bains","LodÃ¨ve","Balaruc-le-Vieux","Cazouls-les-Beziers","Vailhauques","Clermont-l'Herault","Belarga","Maraussan","Laroque-de-Fa","Canet-de-Salars","Montaud","Pezenas","Cournonsec","Montblanc","Fitilieu","Cintre","Nouvoitou","Saint-Benoit-des-Ondes","Bosc Renoult","Peynier","Locquirec","La Motte-Saint-Jean","Lieuron","Mezzavia","Creuzier-le-Neuf","Doyet","Le Loroux-Bottereau","Champagne-sur-Seine","Ormoy","Roquebrune-sur-Argens","Guilherand-Granges","Lomme","Abbeville","Gentilly","Rambouillet","Langres","Steenvoorde","Serans","Mandelieu-la-Napoule","Vence","Dieue-sur-Meuse","Sarrey","Fleure","Cabasse","MontbÃ©liard","Pontcharra","Oppede","Citerne","Gauchy","Achiet-le-Petit","Saint-Hostien","Orchies","ChÃ¢teau-Thierry","Saintes","Vif","Rivarennes","Saint-Pierre-d'Oleron","Ruelle","Grugies","Cauroy-les-Hermonville","Cormicy","Coulommiers","La Teste-de-Buch","Espalais","Goudourville","Vouhe","Izon","Larcay","Ruffiac","Montigne-le-Brillant","La Boissiere-des-Landes","Fontenay-Tresigny","Faremoutiers","Beuvraignes","Jouy-le-Moutier","Villemoisson-sur-Orge","Ouveillan","Caux-et-Sauzens","Pointis-Inard","Villefranche-de-Lauragais","Terraube","Labastide-Saint-Pierre","Viviers-les-Montagnes","Palaja","Montreal","Collioure","Longuenesse","Saint-Martin-d'HÃ¨res","Brindas","Mellecey","Simandres","Les Chapelles","Sauvian","Argelliers","Canohes","Colombieres-sur-Orb","Corneilla-de-Conflent","Tressan","Boisseron","Limeil-Brevannes","Clevilliers","Marthod","Montreal","Piney","Balanod","Marles-les-Mines","Wervicq-Sud","MontluÃ§on","Parthenay","Saint-Maixent-l'Ecole","Chauvigny","Sainte-Verge","Avize","Velleron","Vinon-sur-Verdon","Chauray","Saint-Maigrin","Thouars","Le Tallud","Puihardy","Saint-Avertin","Naizin","Paulx","Saint-Pryve-Saint-Mesmin","Louvres","Guise","Provins","Oyonnax","Rocbaron","Tarcenay","Eze","Harfleur","Saivres","Beliet","Montreal-la-Cluse","Jeurre","Preignac","Parcay-Meslay","Olivet","Beaumont-sur-Oise","Charleville-MÃ©ziÃ¨res","Saint-Quentin-le-Verger","Soissons","Lecelles","Homblieres","Laurent","Fontenay-le-Fleury","La Colle-sur-Loup","Still","Biache-Saint-Vaast","Saint-Jean-le-Blanc","Gareoult","Neuville-en-Ferrain","Vieux Conde","Saint-Ismier","Golbey","Notre-Dame-de-Bondeville","Lantriac","Villasavary","Saint-Amans-Soult","Annay","Ponthierry","La Madeleine","Sollies-Pont","LunÃ©ville","Bagnols-sur-Ceze","Moureze","Unieux","Villejust","Signes","Salin-de-Giraud","Saint-Mandrier-sur-Mer","Le Beausset","Peri","La Celle","Montauroux","Pignans","Le Conquet","Varades","Gargenville","Le Thor","Courseulles-sur-Mer","Bernieres-sur-Mer","Rocquemont","Morgny-la-Pommeraye","Douvres-la-Delivrande","Saint-Clair-sur-l'Elle","Cresserons","Yvetot","Clasville","CrÃ©py-en-Valois","Dreux","Longpont-sur-Orge","Givors","Pont-d'Ain","Vendat","Sennecey-le-Grand","Saint-Marcel-d'Urfe","Saint-Germain-du-Plain","Louhans","Savigneux","Saint-Marcel-les-Valence","Bellignat","Saint-Cyr-sur-Mer","Jarrie","Cercoux","Montrelais","Machecoul","Saint-Cyprien-Plage","Saint-Parres-aux-Tertres","Bessieres","Le Haillan","Cousances-les-Forges","Lons-le-Saunier","Fontaine-le-Comte","Saint-Benoit","Eu","Lardy","Saint-Aygulf","Cesson","Grande-Synthe","Cebazat","Mazamet","Deauville","Brou","Mortagne-au-Perche","Hauterive","Ivry-la-Bataille","Saint-Pierre-d'Entremont","La Chaussee","Coudray-au-Perche","Anet","Marcheville","Fresse","Marpent","Villers-Sire-Nicole","Coucy-le-Chateau-Auffrique","Lectoure","Enghien-les-Bains","Saint-Ouen-l'Aumone","Villette-d'Anthon","Saint-Just-en-Bas","Brunstatt","Collegien","Maule","Viarmes","Saint-Alban-Leysse","Labruguiere","Aussillon","Brie","Hasnon","Saint-Die-des-Vosges","Audenge","Saint-Laurent-d'Arce","Geloux","Langon","Saint-Magne-de-Castillon","Sainte-Neomaye","Vergt","Tartas","Bergerac","Veron","Rully","Claix","Saint-Pierre-d'Albigny","L'Isle-sur-la-Sorgue","Le Pont","Angres","Guesnain","Missillac","Saint-Victoret","Vidauban","Peille","Saint-Gaudens","Moissac","Labarthe-sur-Leze","Montricoux","Pinsaguel","Montgaillard","Leuc","Bram","Les Arcs","Cabrieres-d'Aigues","Marguerittes","Autrans","Saint-Etienne-des-Oullieres","Creissels","Villefranche-de-Rouergue","Naucelle","Azay-le-Brule","Entrecasteaux","Nanteuil-les-Meaux","Cranves-Sales","Rodez","Lezignan-Corbieres","Rieupeyroux","Marennes","Annezay","Les Mathes","Chatelaillon-Plage","Tonnay-Charente","Le Bois-Plage-en-Re","Arvert","Cozes","Royan","Vouneuil-sur-Vienne","Archiac","Ecoyeux","Trizay","Pons","Bourgneuf","Cubzac-les-Ponts","Echillais","Port-des-Barques","Saint-Georges-d'Oleron","Rouffignac","Saint-Jean-de-Liversay","Dompierre-sur-Mer","Geay","Saint-Agnant","Hermies","Jaunay-Clan","Pujols","Avanton","Roullet-Saint-Estephe","Saint-Vivien","Martignas-sur-Jalle","Chasseneuil-du-Poitou","Beaumont-du-Perigord","Bonneville-Aptot","Auberchicourt","Scorbe-Clairvaux","Perigny","Portets","Saint-Robert","Port-Sainte-Marie","Saint-Denis-de-Pile","La Chevroliere","Gujan-Mestras","Olemps","Sebazac-Concoures","Bioule","Saint-Pathus","Saint-Georges-de-Baroille","Aubignan","Asnans-Beauvoisin","Villers-les-Pots","Replonges","Ferreol","Auxonne","Guny","Choisy-en-Brie","Renage","Corcieux","Thaon-les-Vosges","Malancourt-la-Montagne","Thonon-les-Bains","Remenoville","Damelevieres","Rougemont","Saint-Maurice-sur-Moselle","Publier","Saessolsheim","La Cerlangue","La Remuee","Pont-Audemer","Portvendres","Castelsarrasin","Saint-Vallier","Dammartin-en-Goele","Othis","Vizille","Voreppe","Avesnes-sur-Helpe","Fourmies","Camon","Corbie","Quaedypre","Vimy","Garancieres-en-Drouais","Vineuil","Viriat","Pegomas","Douzy","Villemoustaussou","Vineuil","Cassis","Les Ormes-sur-Voulzie","Le Deluge","Chaussy","Avaray","Courcelles-sur-Viosne","Migennes","Saint-Nom-la-Breteche","Vierzon","Amure","Saint-Jean-aux-Amognes","L'Isle-d'Abeau","Fontanil-Cornillon","Eragny","Galluis","Saint-Dizier-en-Diois","La Chapelle-d'Armentieres","Le Pradet","Villard-Bonnot","Moirans","Amboise","Chaumontel","Fosses","Herserange","Puyricard","Entre-deux-Guiers","Saint-Christophe-sur-Guiers","Bayeux","Saint-Arnoult","Cire-d'Aunis","Soubise","Aulnay","Chaniers","Lisieux","Saint-Amand-Montrond","Breuillet","Saint-Hippolyte","Saint-Denis-d'Oleron","La Flotte","Saint-Sulpice-d'Arnoult","Marans","Surgeres","Vaux-sur-Mer","Jarny","Thiviers","Morteau","Rivesaltes","Pierrelatte","Angoulins","Breuil-Magne","La Chapelle-Baton","Saint-Leger-des-Vignes","Tonnay-Boutonne","Vallant-Saint-Georges","Bompas","Saint-Servant","Saint-Marcellin","Perenchies","Bouzel","Vertaizon","Portet-sur-Garonne","Tournus","Carrouges","La Gacilly","La Loupe","Querenaing","Douvrin","Tergnier","Lambres-lez-Douai","Blonville-sur-Mer","Preaux","Saint-Aubin-sur-Gaillon","Cany-Barville","Coudray","Poses","Trumilly","Montigny-le-Chartif","Nogent-le-Rotrou","Vauchamps","Reuves","Landivisiau","Varennes-sur-Seine","Noeux-les-Mines","Attiches","Marsillargues","Bouillargues","Saint-Jean-de-Bournay","Pont-de-l'Arche","Le Teilleul","Ã‰tretat","Saint-Pierre-en-Port","Elna","Paillencourt","Commelle-Vernay","La Biolle","Banize","Nohanent","Ailly-sur-Noye","Cazeres","Montrejeau","Lege-Cap-Ferret","Fronsac","Saint-Sebastien","Pre-en-Pail","Les Touches","Champeon","Chas","La Verpilliere","Saint-Clair-de-la-Tour","Mont-de-Marsan","Sallanches","Aime","Pont-en-Royans","Saint-Didier-en-Velay","Saint-Loup","La Roche-sur-le-Buis","Messimy","Couternon","Monistrol-sur-Loire","Ludres","Boissy-le-Chatel","Romorantin-Lanthenay","Vire","Les Ollieres-sur-Eyrieux","Viviers-du-Lac","Chabons","La Plagne","Challes-les-Eaux","Gap","Ugine","Sonnay","Fegreac","Bauvin","Wavrin","Plourin","Saint-Bonnet-de-Mure","Valencin","Brouilla","Saint-Orens-Pouy-Petit","Paulhan","Limoux","Saint-Claude","Piennes","Longlaville","Euville","Saint-Mihiel","Longeville-en-Barrois","Sainghin-en-Melantois","Violaines","Naintre","Lussac","Echire","Corme-Royal","Einville-au-Jard","Hadol","ChÃ¢teauneuf-dIlle-et-Vilaine","Baulon","Le Tronchet","La Milesse","Saint-Thurial","Mareil-sur-Loir","Damigny","Pleugueneuc","Commer","Saint-Jean-sur-Erve","La Tour-Saint-Gelin","Pluzunet","Laissey","Saint-Vit","Bonneville","Darnetal","Folschviller","Avon","Bandol AOC","Saint-Esteve","Le Lavandou","Guingamp","Bagneaux-sur-Loing","Viriville","Auterive","Baziege","Flers","Wattignies","Montoir-de-Bretagne","Vendin-le-Vieil","Albertville","Ardres","Sanary-sur-Mer","Veneux-les-Sablons","Ecuelles","Egletons","Saint-Cyr-l'Ã‰cole","Villeneuve-la-Guyard","Lagrave","Saint-Gregoire","Aubiet","Fayssac","Valence-d'Albigeois","Cagnac-les-Mines","Vielmur-sur-Agout","Brousse","Divonne-les-Bains","Montagnat","Peron","Ornex","Dole","Flevy","Cuvry","Sceaux","Blainville-sur-Orne","Bois-Arnault","Luc-sur-Mer","Appeville","Pont-Saint-Pierre","Pomport","Mios","Barberaz","Wambrechies","Loche","Echenon","Chaspinhac","Saint-Savournin","Noiron","Pessans","Cuges-les-Pins","Uchaux","Mormant","Auvers-Saint-Georges","Fresnay-l'Eveque","La Bazoche-Gouet","Souprosse","Cysoing","Annequin","Templeuve","Dormans","Cogolin","La Voulte-sur-Rhone","Le Teil","Bellegarde-sur-Valserine","Cloyes-sur-le-Loir","Viuz-en-Sallaz","Saint-Michel-Chef-Chef","Cuers","Saint-Maximin-la-Sainte-Baume","Saint-Chaptes","Couhe","Montreuil-Bonnin","La Mailleraye-sur-Seine","Marcheprime","Morcenx","Arengosse","Vicq-d'Auribat","Caudebec-en-Caux","Saint-Andre-le-Gaz","Boussy-Saint-Antoine","Vaureal","Montesquieu-Volvestre","Saint-Gerand-de-Vaux","Abondant","Vendome","Laneuveville-devant-Nancy","Monbalen","Boutigny-Prouais","Versonnex","Magny-le-Hongre","Vivy","Boissy-Mauvoisin","La Fleche","La Ferte","Chablis","Soulaincourt","Sees","Vitry-la-Ville","Chateau-sur-Epte","Saint-Thierry","Biesles","Kienheim","Les Thilliers-en-Vexin","Ussac","La Souterraine","Sainte-Soulle","Sarge-sur-Braye","Verzenay","Hersin-Coupigny","Auchy-les-Mines","Saint-Paul-en-Cornillon","Camaret-sur-Mer","Cornas","Chaon","Loriol-sur-Drome","Toussieu","Saint-Amant-Tallende","Ciry-le-Noble","Villers-sur-Saulnot","Bethoncourt","Villemoirieu","Valines","Belmont","Schweighouse-Thann","Sainte-Anne-Saint-Priest","Portes-les-Valence","Saint-Felicien","Lablachere","Montbizot","Ussel","Puget-sur-Argens","Tresques","Ozolles","Le Teich","Perrigny","Limerzel","Etrepagny","Saint-Urbain","Trouville-sur-Mer","Gravigny","Pont-du-Casse","Mornant","Nuits-Saint-Georges","Les Mages","Ruch","Alluy","Decize","Mennecy","Bouffemont","Brasles","Venelles","Chateauneuf-du-Rhone","Neuille","Chateauneuf-sur-Sarthe","Vinay","Villaz","Baune","Champtoceaux","Pelussin","Salaise-sur-Sanne","Ennevelin","Lillers","Etoges","Pont-sur-Yonne","Allonville","Valenton","Chateaufort","Fere-Champenoise","Caylus","Sin-le-Noble","Saint-Martial-de-Vitaterne","Couzeix","Malemort-sur-Correze","Ambazac","Saint-Yrieix-la-Perche","Saint-Chartres","Allonnes","Connerre","Varennes-Vauzelles","La Jarrie","Forges","Champagne-les-Marais","Toussus-le-Noble","Roye-sur-Matz","Lormaye","Saint-Arnoult-en-Yvelines","Perros-Guirec","Saint-Quay-Perros","Montvalen","Ã‰taples","Licques","Morangis","Sauzelles","Buzan","La Mure","Feissons-sur-Isere","Culoz","Jarcieu","Chignin","Berd'huis","Woippy","Hardencourt","Vendargues","Semoine","Courcelles-Val-d'Esnoms","Verdun","Neuves-Maisons","La Varenne","Saint-Martin-le-Vinoux","Drachenbronn-Birlenbach","Mathenay","Poulainville","Plounerin","Merxheim","La Saulce","Chabottes","Vallouise","Nouzonville","Juniville","Sommerance","Vouziers","Chehery","Jandun","Saint-Andre-de-Chalencon","Centres","Decazeville","Aubin","Saint-Affrique","Charost","Mereau","Vailly-sur-Sauldre","Saint-Florent","AlÃ©ria","Brando","Oletta","GÃ©rardmer","Saint-Etienne-les-Orgues","Reillanne","Sisteron","Volonne","Plessis-Barbuise","Eaux-Puiseaux","Etourvy","Marigny-le-Chatel","Auxon","Ploubazlanec","Rospez","Poisy","Aubevoye","Gasny","Ecardenville-la-Campagne","Saint-Etienne-sous-Bailleul","Azerailles","Uchaud","Nages-et-Solorgues","Saint-Hilaire-de-Brethmas","Bernis","Leguevin","Feneyrols","Magny-le-Desert","La Tour-sur-Orb","Sainte-Enimie","Antrain","Tourouvre","Domfront","Bazoches-sur-Hoene","Saint-Germain-du-Corbeis","Soligny-la-Trappe","Couterne","Frencq","Marquise","Brebieres","Coulomby","Merlimont","Landrethun-le-Nord","Langueux","Anzy-le-Duc","Epinac","Palinges","Chenay-le-Chatel","Autun","Buxy","Savigny-en-Revermont","Montfort","Noyen-sur-Sarthe","Vaas","Coulans-sur-Gee","Bourg-Saint-Maurice","La Motte-Chalancon","La Bathie","Villard-sur-Doron","Saint-Julien-des-Landes","Saint-Georges-de-Pointindoux","La Verrie","Curzay-sur-Vonne","Dissay","Civray","Sommieres-du-Clain","Cisse","Fouronnes","Ancy-le-Franc","Courson-les-Carrieres","Ouanne","Ligny-le-Chatel","Noyers","Esson","Baye","Cordes-sur-Ciel","Boissezon","Moulin-Mage","Blan","Briatexte","Trouillas","Limours","Chaumes-en-Brie","Romilly-sur-Seine","Roissy-en-France","Boissy-le-Bois","Marolles-en-Brie","Pecqueuse","Toucy","Six-Fours-les-Plages","Ollioules","Le Revest-les-Eaux","Gassin","Magny-les-Hameaux","Magny-en-Vexin","Blanzat","Boissy-l'Aillerie","Vigny","Contamine-sur-Arve","Saint-Germain-les-Paroisses","Chanoz-Chatenay","Aramon","L'Herbergement","Noyers","Valensole","Saint-Astier","Genis","BelvÃ¨s","Champagne","Hauteville-Lompnes","Beaupont","Neuville-sur-Ain","Nattages","Molandier","Vinassan","Donzere","Barjac","Le Pre-d'Auge","Demouville","Ouilly-le-Vicomte","Ellon","Mezidon-Canon","Coupesarte","Heurtevent","Saint-Vaast-en-Auge","Bonneville-la-Louvet","Arzano","Scrignac","Delle","Vers-Pont-du-Gard","Lesparre-MÃ©doc","Saint-Seurin-de-Cadourne","Targon","Pauillac Haut","La Reole","La Garde","Cruas","Ouzouer-le-Marche","Selles-sur-Cher","Limogne-en-Quercy","Assier","Geyssans","Rohan","Sarzeau","Pluherlin","Rety","Flechin","Ponte-Leccia","Maintenon","Saint-Valery-en-Caux","Colleville-Montgomery","Thuit-Hebert","Boos","Bolbec","Vacognes-Neuilly","Fere-en-Tardenois","Arcy-Sainte-Restitue","Braine","Vervins","Oulchy-le-Chateau","Quiberville","Sainte-Agathe-d'Aliermont","Saint-Nicolas-d'Aliermont","Gueures","Petreto-Bicchisano","Sari-d'Orcino","Porto-Vecchio","Prigonrieux","Montagne","Cazaux","Loudun","Linars","Pineuilh","Couze-et-Saint-Front","Montpon-Menesterol","Port-Joinville","Sainte-Hermine","Les Pineaux","La Reorthe","Vignot","Eyrans","Saint-Medard-de-Guizieres","Saint-Selve","Neuville-de-Poitou","Nersac","Cordelle","Cremeaux","Machezal","Bourbon-Lancy","Neuilly-le-Real","Dompierre-sur-Besbre","Les Avenieres","Bedarrides","Varces-Allieres-et-Risset","Villelaure","Cornillon-en-Trieves","Beaulieu-sur-Mer","Vauban","Fontain","Varangeville","La Force","Crosne","Lathuile","Vagney","La Roquette-sur-Siagne","Valberg","Lure","Saint-Jorioz","Notre-Dame-de-Gravenchon","Baguer-Pican","Plougoulm","Parne-sur-Roc","Precigne","Andon","Saint-Martin-du-Var","Gruchet-le-Valasse","Vittel","Saint-Cergues","Basse-sur-le-Rupt","Magland","Le Petit-Quevilly","Haverskerque","Saint-Antoine-la-Foret","Saint-Julien-en-Genevois","Beauzelle","Rozoy-Bellevalle","La Couarde-sur-Mer","Reignac-sur-Indre","Audruicq","La Ferte-Saint-Samson","Sainte-Marguerite","Civrieux","Meximieux","Odomez","Honfleur","Genebrieres","Saint-Orens-de-Gameville","Eaunes","Puygouzon","Villemur-sur-Tarn","Pezilla-la-Riviere","Lauzerville","Damiatte","Castelginest","Montaut","Lapalme","Salies-du-Salat","Martel","Mauzac","Cambounet-sur-le-Sor","Seysses","Montbeton","Fenouillet","Millas","Saint-Etienne-de-Tulmont","Tremeven","Herlies","Terdeghem","Evin-Malmaison","Warluzel","Juziers","Bucy-le-Long","Saint-Mande","Montsoult","Charmes","Kerien","Plouguerneau","Saint-Igneuc","Glos-sur-Risle","Mondrainville","Pavilly","Clinchamps-sur-Orne","Fontaine-le-Dun","Desvres","Thivars","Bras","Roquevaire","Saint-Mitre-les-Remparts","Saint-Andiol","Fours-Saint-Laurent","Saint-Andre-sur-Orne","Lusignan","Vayres","Port-de-Bouc","Saint-Apollinaire","Saint-Jean-en-Royans","Les Vans","Vernoux-en-Vivarais","Saint-Lager-Bressac","Saint-Gervais-sur-Roubion","La Begue","Pont-de-Labeaume","Gervans","Beaumont-les-Valence","Peyrins","Puy-Saint-Martin","Chomerac","Serignan-du-Comtat","Roubion","La Souche","Nyons","Tain-l'Hermitage","Desaignes","Jaujac","Saint-Pierreville","Vion","Peyrus","Saint-Sorlin-en-Valloire","LargentiÃ¨re","Alboussiere","Saint-Martin-de-Valamas","Lussas","Saint-Barthelemy-de-Vals","Banne","Vignes","Marsanne","Charnas","Ruoms","La Baume-de-Transit","Colombier-le-Cardinal","Alixan","Anneyron","Saint-Trojan-les-Bains","La Chaussaire","Dampierre-sur-Boutonne","Fouras","Varrains","Vihiers","la Roca d'Albera","Pontcharra-sur-Turdine","Laval-sur-Doulon","Chargey-les-Gray","Cluny","Pouydesseaux","Lozinghem","Hardelot-Plage","Masny","Preseau","La Chapelle","Bourdenay","Saint-Lubin-des-Joncherets","Sorede","Negrepelisse","Grepiac","Brassac","Tarascon","Tourves","Les Pins","Saint-Jean-de-Chevelu","Digoin","Cerny","Baillet-en-France","Livarot","Sebecourt","Sail-sous-Couzan","Algrange","Bournezeau","Hallines","Condette","Quesnoy-sur-Deule","Laventie","Vulaines-sur-Seine","Presles-en-Brie","Montville","Mers-les-Bains","Bosgouet","Le Trait","Rozoy-sur-Serre","Mondonville","Cussey-les-Forges","L'ÃŽle-Rousse","Force","CondÃ©-sur-Huisne","Authie","Civaux","Flayosc","Fleurance","Ayguesvives","Le Barboux","Goux-les-Usiers","Saint-Pourcain-sur-Sioule","Prahecq","Fumel","Saint-Marcel-d'Ardeche","Malause","Rousson","Vonnas","Poulx","Sainte-Croix-en-Jarez","Villers-Farlay","Le Touvet","Flumet","L'Albenc","Gieres","Morieres-les-Avignon","Saint-Andre-Goule-d'Oie","La Gaubretiere","Landes","Azerables","Saint-Privat","Jarnages","Grandsaigne","Pechbonnieu","Montigny-les-Cormeilles","Orgeval","Saint-Michel","Sissonne","Villers-Bocage","Pont-du-Chateau","Savigny-les-Beaune","Mareuil","Cambes","Mimbaste","Oiron","Saran","Chevannes","Le Thillot","Arx","Le Tholonet","Durance","Rognes","Lantilly","Varilhes","Mazeres-de-Neste","Ferrieres-sur-Ariege","Pradieres","Le Mas","Miglos","Caumont","Laroque-d'Olmes","Carrieres-sur-Seine","Nozay","Le Kremlin-Bicetre","Mainvilliers","Varages","Pourrieres","Arzal","Beauvoir-de-Marc","Camps-la-Source","Canet-Plage","Saint-Florent-sur-Auzonnet","Dienville","Biermont","Venables","Forges-les-Eaux","Goderville","Les Milles","Rians","Ploumilliau","Nieuil-l'Espoir","Rainfreville","Landrecies","Soorts-Hossegor","La Landec","Vieille-Eglise-en-Yvelines","Steenbecque","Henouville","Croissanville","Conde-sur-Noireau","Saint-Malo-du-Bois","Saint-Rambert-en-Bugey","Surville","Merville-Franceville-Plage","Vic-le-Comte","Cires-les-Mello","Jeandelaincourt","Faucigny","SamoÃ«ns","Choisy","Saint-Laurent-des-Autels","Villenoy","Boen-sur-Lignon","Anglesqueville-l'Esneval","Monnieres","Porcheres","Pleumeur-Bodou","Quessoy","Villeton","Moissy-Cramayel","Arles","Pringy","Frepillon","Tomblaine","Saint-Romain-en-Gier","Saint-Lye","Mireval-Lauragais","Nebian","Quint-Fonsegrives","Fleury-sur-Orne","Bonsecours","Epinay-sous-Senart","Vernegues","Renescure","Quincy-Voisins","Saint-Luperce","Bailleau-le-Pin","Berat","Poix-du-Nord","Saint-Michel-de-Maurienne","Rouans","Etang-sur-Arroux","Roquecourbe","Challet","Corancez","Sigean","Sernhac","Saint-Siffret","Fourques","Gignac","Torfou","Montfaucon-Montigne","Seiches-sur-le-Loir","Barjouville","Is-sur-Tille","Sarrebourg","Merville","Sommieres","Amplepuis","Wavrechain-sous-Denain","Laloubere","Juillan","Saint-Laurent-de-la-Salanque","Toulouges","Chateau-Porcien","Buchy","Bosc-le-Hard","Saint-Martin-sur-Ocre","Tavers","Bezouce","Pieusse","Ledenon","Thuir","Herbeys","Beauvoisin","Issenheim","Roussay","Mouy","Saint-Calais","Mimet","Lagupie","Maulevrier","Besne","Steenwerck","Saint-Loubes","Tarnes","Monchecourt","Coulogne","Bompas","Nogent-sur-Oise","Seignosse","Verberie","Foissiat","Longueil-Annel","Jard-sur-Mer","Eauze","Ecos","Dozule","Saint-Erblon","Le Mele-sur-Sarthe","Dercy","Villeneuve-les-Bouloc","Lacs","La Chatre","Clesse","Bazas","Vireux-Wallerand","Etreux","Bourbourg","Wormhout","Macau","Beauvais-sur-Matha","Verquieres","Rucqueville","Nouaille-Maupertuis","Schirrhein","Sainte-Menehould","Sannois","Gorron","Belleville-sur-Mer","Baixas","Mouries","Parigne-sur-Braye","Blainville","Conde-sur-Vesgre","Lampertsloch","Fougerolles","Auch","Amberieux-en-Dombes","Villars-les-Dombes","Cadalen","Froges","Sainte-Foy-d'Aigrefeuille","Aigrefeuille","Reuilly","Annoeullin","Farebersviller","Villerupt","Racquinghem","Monnaie","Chateau-Renault","Ligueil","Auxi-le-Chateau","Le Molay","Saint-Jean-d'Illac","Vinneuf","Saint-Julien-du-Sault","Le Bernard","Saint-Martin-de-Valgalgues","Saint-Pierre-du-Mont","Feneu","Rieulay","Lesconil","Saint-Jean-de-Sauves","Saint-Clair","Seremange-Erzange","Us","Thieville","Le Barp","Nonville","Saintry-sur-Seine","Biscarrosse","Parentis-en-Born","Clohars-Fouesnant","Plouarzel","Lanvallay","May-en-Multien","Chateau-Landon","Mauperthuis","Beautheil","Caden","Grez-sur-Loing","Seugy","Boullay-les-Troux","La Turbie","Alignan-du-Vent","Vendres","Frozes","Vars","Mansle","Pecquencourt","La Menitre","Suippes","Bachant","Assevent","Louvroil","Cotignac","Lery","Le Bocasse","Gauciel","Coignieres","Auribeau-sur-Siagne","Bussang","Tessy-sur-Vire","Beaumont-de-Lomagne","Laroin","Villeconin","Saclas","Montigny-en-Gohelle","Saint-Lormel","Oraison","Brece","Epervans","Hamars","Thury-Harcourt","L'Union","Esternay","Lagnieu","Champigny","Ergersheim","Walheim","Zillisheim","Sury-le-Comtal","Nogent","Rollancourt","Montastruc-la-Conseillere","Bar-le-Duc","Savennieres","Houlette","Nohic","Adissan","Bonneuil-en-France","Le Blanc-Mesnil","Verines","Hericy","Roquefort-sur-Soulzon","Matignon","Severac-le-Chateau","Chissay-en-Touraine","Aubais","Arcachon","Saint-Varent","Airvault","Biot","Uckange","Cordes-Tolosannes","Larrazet","Kuntzig","Le Monastier-Pin-Mories","Montrodat","Bazarnes","Boisseuil","Cazavet","Barr","Lincel","Prix-les-Mezieres","Alleriot","Brionne","Villelongue-de-la-Salanque","Banyuls de la Marenda","Archamps","Chamouilley","Saint-Sulpice-sur-Leze","Longages","Bertrange","Longwy","Rombas","Rosselange","Sierck-les-Bains","LAiguillon-sur-Mer","Rechesy","Duingt","Cons-Sainte-Colombe","Vallauris","Saint-Laurent-d'Aigouze","Saint-Hippolyte-du-Fort","Salindres","Saint-Ambroix","Besseges","Miremont","Daux","Rue","Romeries","Contes","La Mulatiere","Talant","Fontaine-les-Dijon","Vaux-les-Saint-Claude","Colombe","La Frette","Saint-Hilaire-de-la-Cote","Montreuil-l'Argille","Chamblac","Aunay-sur-Odon","Torreilles","Livet-et-Gavet","La Paute","Le Bourg","Pont-de-Vaux","Salernes","Coulounieix-Chamiers","Le Grau-du-Roi","Sathonay-Camp","Les Maures","Mirebeau-sur-Beze","Grignan","Messy","Massieux","Le Barcares","Leucate","Sainte-Marie","Ecourt-Saint-Quentin","Bormes-les-Mimosas","Passy","Chailles","Acquigny","Heudreville-sur-Eure","Fontaine-Heudebourg","Hondouville","Brosville","Bernay","Thiberville","Battenheim","Sentheim","Gattieres","Sainte-Sigolene","Fraisses","Feillens","Messein","Azy-sur-Marne","Lanrodec","Bringolo","Etriche","Rochefort-sur-Loire","Chalonnes-sur-Loire","Clapiers","La Selve","Langoat","Serrieres","Staffelfelden","Labouheyre","Monteils","Mimizan","Chavanoz","Charvieu-Chavagneux","Champagne-au-Mont-d'Or","Rugles","Valras-Plage","Montmirat","Dax","Allouagne","Saint-Sebastien-de-Morsent","Realmont","Fleurbaix","Gundershoffen","Aurignac","Palaminy","Saint-Julien-le-Vendomois","Moirans-en-Montagne","Saint-Lupicin","Sorquainville","Barentin","Le Passage","Beaumont-le-Roger","Etainhus","Saint-Pierre-le-Moutier","Appeville-Annebault","Tarare","Saint-Quentin-la-Poterie","Malaucene","Locmiquelic","Sauteyrargues","Saint-Genis-Pouilly","Fareins","Athies-sous-Laon","Fresnoy-le-Grand","Bohain-en-Vermandois","Effry","La Capelle","Eperlecques","Landrethun-les-Ardres","Ecouflant","Retiers","Jouques","Alleins","Thegra","Boutigny-sur-Essonne","Mourmelon-le-Grand","Joigny","Peyruis","Mayet","Boulazac","Orchaise","Bignan","Ambon","Bienvillers-au-Bois","Briollay","Conde-en-Brie","Hagenthal-le-Haut","Thoiry","Conques-sur-Orbiel","Lescout","Malaunay","Trogues","Sainte-Maure-de-Touraine","Abilly","Buxeuil","Villebarou","Saint-Martin-du-Mont","Grisolles","Chancenay","Les Forges","Commercy","Menil-la-Horgne","Ugny-sur-Meuse","Vaucouleurs","Chatillon","Laurens","Pouzolles","Neffies","Rocheserviere","Thure","Roches-Premarie-Andille","Saint-Maurice-la-Clouere","Calleville","Lherm","Rieux-de-Pelleport","Barbentane","Villars-en-Pons","Gemozac","Carignan","Mouzon","Issancourt-et-Rumel","Donchery","AÃ¿","Grauves","Ully-Saint-Georges","Vaumoise","Saint-Hilaire-de-Loulay","Dommartin","Valdahon","La Cluse-et-Mijoux","Metabief","Jougne","Thulay","Sort-en-Chalosse","Gamarde-les-Bains","Vayrac","Payrac","Gourdon","Souillac","Robion","Serent","Saint-Martin-de-Seignanx","Dremil-Lafage","Saint-Paul-Trois-Chateaux","Cavalaire-sur-Mer","Saix","HÃ©rouville-Saint-Clair","Lavernose-Lacasse","Auvers-sur-Oise","Lorgues","Excenevex","Anthy-sur-Leman","Saint-Paul-en-Chablais","Neuvecelle","Longessaigne","Biganos","Couiza","Beauregard-Baret","Canejan","Sierville","Vatimesnil","Breteuil","Couville","Heudebouville","Saint-Samson-sur-Rance","Grand Champ","Aubigny-en-Plaine","Fargues-Saint-Hilaire","Orgelet","Clairvaux-les-Lacs","Senozan","Truyes","Esvres","Marzan","Laiz","Lignerolles","Voujeaucourt","Mamirolle","Villeron","Saint-Parize-le-Chatel","Mondeville","Salins-les-Bains","Obernai","Lisses","Figanieres","Le Plan-de-la-Tour","Fontaines","La Membrolle-sur-Choisille","Saint-Antoine-du-Rocher","Ardentes","Frontenex","Attignat-Oncin","Dortan","Briord","Sochaux","Baume-les-Dames","Gueux","Albens","Yport","Beuzeville","Hussigny-Godbrange","Neuville-les-Dieppe","Nouvelle-Eglise","Wierre-Effroy","Malestroit","Primarette","Pouilly-les-Nonains","Mallemort","Vallon-Pont-d'Arc","Triors","Mallemoisson","Varennes-sur-Loire","Levens","Ribaute-les-Tavernes","Sourcieux-les-Mines","Saint-Pierre-la-Palud","Bessenay","Andilly","Penol","Grussenheim","Dun-sur-Auron","Niederhausbergen","Longpre-les-Corps-Saints","Clichy-sous-Bois","Pommevic","Gaas","Langon","Villefranche-sur-Cher","Sedan","Aigues-Mortes","Brain-sur-l'Authion","La Bohalle","Le May-sur-Evre","La Jubaudiere","Champcueil","Courances","Mauchamps","Goux-les-Dambelin","Clerval","Geney","LIsle-sur-le-Doubs","Quingey","Savigne-l'Eveque","Marseilles-les-Aubigny","Le Perray-en-Yvelines","Montaigut-sur-Save","L'Argentiere-la-Bessee","Puy-Saint-Andre","Jonquieres","Comps","Millau","Neuilly-Saint-Front","Escoutoux","Saint-Dizier","Saint-Jean-Bonnefonds","Bons-en-Chablais","Le Rove","Saint-Zacharie","Gommegnies","Meynes","Avensan","Parthenay-de-Bretagne","Haspres","Saint-Eliph","Saint-Genies-des-Mourgues","Sainte-Lucie-de-Tallano","Saint-Maime","Castries","Vemars","Missy-sur-Aisne","Venizel","Blangy-sur-Bresle","Neufchatel-en-Bray","Offranville","Bressols","Freneuse","Plombieres-les-Dijon","Germainville","Avanne-Aveney","Pontarlier","Arcon","Aniane","Dieulouard","Bruley","Saint-Gilles","Costaros","Vals-pres-le-Puy","Le Grand Village","Labenne","Bourg-Achard","Plouvien","Saint-Ouen-du-Tilleul","Bosrobert","Kunheim","SartÃ¨ne","Propriano","Goulet","Porticcio","Servon","Thenelles","Ansauvillers","Salouel","Noordpeene","Marsangy","Crochte","Cappelle-Brouck","Luray","Vernouillet","Sainte-Colombe-sur-Guette","La Digne-d'Amont","Margaux","Rabastens-de-Bigorre","Coufouleux","Saint-Savin","Montmorillon","Origny-en-Thierache","Rantigny","Vieillevigne","Argentan","Gace","Rai","L'Aigle","Faucompierre","Seine-Port","Cagny","Guiclan","Saint-Bres","Village-Neuf","Saint-Louis","Embrun","Sibiril","Vignoc","Auboue","Homecourt","Vinca","Clerieux","Witry-les-Reims","Aincourt","Meulan-en-Yvelines","Montalet-le-Bois","Oinville-sur-Montcient","Noyers-Bocage","ChÃ¢tillon-sur-Seine","Malain","La Rochette","Olonzac","Pepieux","Haironville","Calvisson","Milhaud","Vestric-et-Candiac","Vauvert","Croisilles","Samatan","Bapaume","Bucquoy","Lagardelle-sur-Leze","Metzeral","Fraize","BruyÃ¨res","Gray","Brussey","Villers-le-Lac","Ansac-sur-Vienne","Damparis","Saint-Paul-en-Foret","Maisnil","Oresmaux","Moreuil","Hombleux","Neuf-Brisach","Tournan-en-Brie","Livry-sur-Seine","Doullens","Palau-del-Vidre","Arpaillargues-et-Aureillac","Trebes","Arc-sur-Tille","Touville","Iville","Riorges","Varois-et-Chaignot","Etevaux","Binges","Amfreville-la-Mi-Voie","Belbeuf","Avelin","Carmaux","Le Garric","Javene","Cobrieux","Trausse","Bury","San-Nicolao","Folelli","Prunelli-di-Fiumorbo","Ghisonaccia","Fondettes","Maureillas-las-Illas","Brives-Charensac","Blavozy","Porcelette","Sainte-Florine","Saint-Tropez","Riedseltz","Ecault","Saint-Etienne-au-Mont","Selongey","Semblancay","Rinxent","Tilques","Serques","Thiant","Bousies","Le Cateau-Cambresis","Jenlain","Mondeville","Coltainville","Saint-Prest","Saone","Roches-les-Blamont","Saint-Emilion","Aniche","Ecaillon","Verlinghem","Watten","Marconnelle","Moragne","Nesle","Chambry","Goncelin","Saint-Pierre-les-Elbeuf","Saint-Vincent-de-Paul","Lignan-sur-Orb","Lieuran-les-Beziers","Bassan","Oudon","Saffre","Voissant","Samois-sur-Seine","Coublevie","Haveluy","Benfeld","Bar-sur-Seine","Varennes-sur-Allier","Bricquebec","Alenya","Magescq","Saint-Sever","Bonchamp-les-Laval","Chevru","Cauge","Bellegarde","Lorris","Pourrain","Brienon-sur-Armancon","Izeron","Lembach","Saint-Lambert-du-Lattay","Brains","Venarey-les-Laumes","Villars-et-Villenotte","Geste","Fonsorbes","Beyrie-en-Bearn","Aurillac","Sainte-Livrade-sur-Lot","Deulemont","Lachapelle-sous-Rougemont","Locoal-Mendon","Babeau-Bouldoux","Ducey","Noyers-sur-Cher","Mareuil-sur-Cher","Hauteville-sur-Mer","Benouville","Font-Romeu-Odeillo-Via","Roisel","Quarouble","Onnaing","Rosoy-en-Multien","La Sentinelle","Epone","Saint-Coulitz","Villerville","L'Huisserie","Albefeuille-Lagarde","Fontaine-Notre-Dame","Niergnies","Neuville-Saint-Remy","Saint-Cyprien","Saint-Nazaire","Vilallonga dels Monts","Manduel","Tauriac","Andilly","Maxilly-sur-Saone","Sorigny","Azay-sur-Cher","Bourgbarre","Neufchateau","Saint-Christophe-sur-Roc","Montebourg","Ventiseri","Saint-Vaast-la-Hougue","Fontaine-Notre-Dame","Pontaubault","Saint-Gaultier","Pitres","Alizay","Romilly-sur-Andelle","Amfreville-sous-les-Monts","Charleval","Les Andelys","Lyons-la-ForÃªt","Saint-Pierre-du-Vauvray","Ande","Vic-sur-Aisne","Authevernes","Bueil","Noveant-sur-Moselle","La Garenne","Villard-de-Lans","Saint-Martin-de-Re","Ars-en-Re","Tourly","Graveson","Anjoutey","Sainte-Helene","Saint-Privat-la-Montagne","Amanvillers","Evrecy","Amaye-sur-Orne","Esquay-Notre-Dame","Brouay","Exireuil","Les Aubiers","Mirebeau","Lencloitre","Le Cailar","Aimargues","Codognan","Vergeze","Mus","Bertry","Saint-Denis-de-Cabanne","Charlieu","Blere","Meru","Les Rosiers","Saint-Remy","Marsannay-la-CÃ´te","Perrigny-les-Dijon","Poisat","Villefranche-sur-Mer","Beuvrages","Feyzin","Lasalle","Montferrat","Evans","Etuz","La Roquebrussanne","Lannemezan","La Salvetat-Saint-Gilles","La Salvetat-Lauragais","Fontenilles","Restinclieres","Eymet","Seilhac","Muizon","Villemandeur","Malataverne","Espeluche","Plesse","Calas","Saint-Paul-les-Durance","Trans-en-Provence","Meyenheim","Saint-Mars-la-Jaille","Saint-Gereon","Canly","Jaux","Rupt","Casson","Tracy-le-Val","Attichy","Ermenonville","Geudertheim","Noailles","Auteuil","Loos-en-Gohelle","Tigery","Etiolles","Juvisy-sur-Orge","Villers-Saint-Paul","Saint-Just-en-Chaussee","Breuil-le-Vert","ChÃ¢teaudun","Horbourg-Wihr","Soisy-sous-Montmorency","Chaponnay","Marennes","Heyrieux","Villeneuve-Tolosane","Saint-Julien-du-Puy","Saint-Pal-de-Mons","La Seauve-sur-Semene","Houlgate","Villers-sur-Mer","Marchiennes","Vred","Warlaing","Donneville","Bruguieres","Gratentour","Saint-Jory","Fronton","Castelnau-d'Estretefonds","Mirepoix-sur-Tarn","Franois","Pirey","Serre-les-Sapins","Mazerolles-le-Salin","Peronne-en-Melantois","Bornel","Saint-Leger-en-Bray","Chaumont-en-Vexin","Trie-Chateau","Paillart","Breteuil","Meuse","Longfosse","Ardoix","Montferrand-le-Chateau","Boussieres","Thoraise","Saint-Jean-Brevelay","Aubin","Pfaffenhoffen","Niedermodern","Obermodern-Zutzendorf","Zutzendorf","Saint-Cyr-en-Val","Oberbronn","Goersdorf","Langensoultzbach","Morsbronn-les-Bains","Louverne","Mauriac","Nery","Bethisy-Saint-Pierre","Holtzwihr","Seilh","Trignac","Uxem","Sain-Bel","Aubergenville","Mareuil-sur-Ourcq","Barbechat","Briare","Ambutrix","Mery-sur-Oise","Seppois-le-Bas","Lognes","Raismes","Saulnot","Bouresse","Granges-le-Bourg","Villersexel","Vesoul","Vaivre-et-Montoille","Luxeuil-les-Bains","Aillevillers-et-Lyaumont","La Bassee","Salome","Epouville","Arnas","Equihen-Plage","Cervens","Mortefontaine","Saint-Pantaleon-de-Larche","Chantrans","Levier","Gemenos","Doubs","Le Vigan","Aveze","Ville-du-Pont","Sarlat-la-CanÃ©da","Gilley","Schwenheim","Les Fins","Flangebouche","Caissargues","Grosbliederstroff","Hambach","Sarralbe","Niderviller","Saulxures-sur-Moselotte","Rohrbach-les-Bitche","Bitche","Domene","La Destrousse","La Bouilladisse","Vermelles","Haisnes","Cambrin","Hoerdt","Gorges","Teurtheville-Hague","Novalaise","Bois-le-Roi","Chartrettes","Gonfaron","Baraqueville","Moyrazes","Lescure","Saint-Didier-sous-Riverie","Perigneux","Saint-Christo-en-Jarez","Estivareilles","La Tourette","Saint-Julien-le-Roux","Saint-Saturnin-les-Avignon","Saint-Vallier-de-Thiey","Neuville-sur-Escaut","Mesnil-Saint-Georges","Villeneuve-de-Berg","Huchenneville","Courtry","Hanches","Bretignolles-sur-Mer","Virieu-le-Grand","Fislis","La Ferte-Milon","Moernach","Canouville","Gisors","Vieux-Ferrette","Wittisheim","Dambach-la-Ville","Cucuron","Cadenet","Lugrin","Oberhaslach","Niederhaslach","Sarrians","Sauverny","Le Cellier","Beine-Nauroy","Notre-Dame-de-Boisset","Authie","Rots","Caromb","BÃ©doin","Melrand","Pannes","Groisy","Dordives","Nargis","Fontenay-sur-Loing","Villecroze","Ferrieres-en-Gatinais","Courtenay","Beaune-la-Rolande","Montady","Chevilly","Rochecorbon","Roville-aux-Chenes","Villacourt","Saint-Branchs","Le Luc","Chevrieres","Mont","Dieffenbach-au-Val","Roumare","Port-Louis","Ectot-les-Baons","Neville","Laversines","Saint-Romain-le-Puy","Avallon","Blotzheim","Steige","Maisonsgoutte","Port-Saint-Pere","Sainte-Pazanne","Barneville-Carteret","Granges","Pougues-les-Eaux","Revigny-sur-Ornain","Villers-aux-Vents","Arthon-en-Retz","Chemere","Longeville-les-Metz","Ligny-en-Barrois","Givrauval","Faulquemont","Crehange","Ensues-la-Redonne","Sainte-Foy-l'Argentiere","Pihem","Helfaut","Villers-les-Nancy","Heudicourt-sous-les-Cotes","Bassussarry","Bray-Dunes","Momeres","Montignac-de-Lauzun","Conches-en-Ouche","Saint-Elier","Boves","Bilieu","Magagnosc","Le Bar-sur-Loup","Tourrettes-sur-Loup","Sains-en-Amienois","Wasselonne","Ouistreham","Lion-sur-Mer","Hermanville-sur-Mer","Flixecourt","Mouflers","Saint-Ouen","Halloy-les-Pernois","Gezaincourt","Rans","Comines","Oye-Plage","Artigueloutan","Boust","Etoile-sur-Rhone","Vendenheim","Saint-Cyr-sur-Morin","Saint-Denis-les-Rebais","Nazelles-Negron","Saint-Hilaire-du-Harcouet","Saverdun","Pujaudran","Saulxures-les-Nancy","Sospel","La Trinite","Mardyck","Loon-Plage","Pont-de-l'Isere","Saint-Jean-de-Muzols","Saillans","Guilers","Notre-Dame-de-Riez","Givrand","Soullans","Forcalquier","Les Mees","Chateau-Arnoux-Saint-Auban","Saint-Auban","Laragne-Monteglin","Tallard","Saint-Lumier-en-Champagne","Pleuven","Saint-Paul-de-Vence","Fismes","Kutzenhausen","Saint-Soupplets","Seignelay","Saint-Florentin","Venizy","Saint-Paul-les-Dax","Samadet","Saubion","Capbreton","Die","Laval-d'Aix","Valentigney","Rumilly-en-Cambresis","Jonzieux","Roche-la-Moliere","Langan","Saint-Pierre-de-Chandieu","Marignier","Ayse","Pontonx-sur-l'Adour","Arveyres","Saint-Germain-du-Puch","Genissac","Branne","Espiet","Saint-Quentin-de-Baron","Cavignac","Noves","Saint-Yzan-de-Soudiac","Pugnac","Scherwiller","Kintzheim","Exincourt","Lesneven","Moussan","Gruissan","Saint-Cyr-sur-le-Rhone","Saint-Romain-en-Gal","Pont-de-Cheruy","La Cote","Fouillard","Trouhans","Esbarres","Saint-Jean-de-Losne","Seurre","Verpillieres","Champien","Roye","Matigny","Gragnague","Saint-Aubin-du-Cormier","Noyal-sur-Vilaine","Vaire","Annecy-le-Vieux","Etival-Clairefontaine","Saint-Remy","Raon-sur-Plaine","Baccarat","Rambervillers","Maclas","Bouray-sur-Juine","Sully-sur-Loire","Ouzouer-sur-Loire","Tigy","Guilly","Pouxeux","Remiremont","Boigny-sur-Bionne","Archettes","Branoux-les-Taillades","Reignier-Esery","Vincey","Nomexy","Chavigny","Bainville-sur-Madon","Maron","Charmes","Chatel-sur-Moselle","Lux","Branches","Diemoz","Gundolsheim","Appoigny","Gemil","Marcoussis","Potigny","Salles-d'Aude","Serifontaine","Carry-le-Rouet","Halluin","Prevessin-Moens","Ferney-Voltaire","Valleiry","Ammerschwihr","Mittelwihr","Biesheim","Illhaeusern","RibeauvillÃ©","Boissy-sous-Saint-Yon","Allieres","Remoulins","Couloisy","Pierrefonds","Blincourt","Estrees-Saint-Denis","Rouvillers","Le Lardin-Saint-Lazare","Bas-en-Basset","Le Coudray-Montceaux","Betheny","Puiseaux","Malesherbes","Orveau-Bellesauve","Moneteau","Altkirch","Carspach","Didenheim","Ungersheim","Heidwiller","Waldighofen","Roche-lez-Beaupre","Thise","Gilly-les-Citeaux","Gevrey-Chambertin","Drusenheim","Marly-la-Ville","Cosges","Buigny-les-Gamaches","Beauchamps","Vals-les-Bains","Bazancourt","Warmeriville","Pompey","La Chapelle-Orthemale","Quibou","Balschwiller","Charnecles","Beaucroissant","Guenange","Montrequienne","Trieux","Vigy","Aumetz","Boulange","Serrouville","Mancieulles","Tucquegnieux","Briey","Mont-Bonvillers","Norroy-le-Sec","Joudreville","Mouliets-et-Villemartin","Giraumont","Conflans-en-Jarnisy","Lezennes","Le Grand-Quevilly","Chatignonville","Corbreuse","Baron","Chasse-sur-Rhone","Ornans","Gemeaux","Payrin-Augmontel","Aiguefonde","Lagarrigue","Artannes-sur-Indre","Seloncourt","Offemont","Salbert","Notre-Dame-de-Livoye","Monteynard","Ecole-Valentin","Miserey-Salines","Villiers-sur-Orge","Arbent","Westhoffen","Boulieu-les-Annonay","Champniers","Plailly","Saint-Prix","Andilly","Bavent","Sarre-Union","Arche","Bosc-Guerard-Saint-Adrien","Chambourcy","Longuyon","Haucourt-Moulaine","Mexy","Audun-le-Tiche","Errouville","Tiercelet","Vetraz-Monthoux","Graveron-Semerville","Podensac","Le Chatelet-en-Brie","LÃ©ognan","Gordes","Provin","Rott","Moret-sur-Loing","Saint-Mammes","Pontault-Combault","Margon","Ecouen","Lourenties","Saint-Saens","Barbaste","Picquigny","Castillon-Massas","Montech","Renaison","Le Gua","Champforgeuil","Contrexeville","Maing","Le Quesnoy","Louvignies-Quesnoy","Labourse","Secondigny","Laize","Auchel","Bressuire","Verdun-sur-Garonne","Trouy","Sansais","Neuville-aux-Bois","Pierrelaye","Saint-Florent-sur-Cher","Saint-Martin-d'Auxigny","Henrichemont","Sancerre","Langoiran","La Chapelle-sur-Chezy","Chatillon-sur-Seiche","Migne-Auxances","Foug","Chambord","Bracieux","Belleville","Bleigny-le-Carreau","Mousson","Atton","Vandieres","Pagny-sur-Moselle","Cour-Cheverny","Barbazan-Debat","Rivedoux-Plage","Venoy","Weitbruch","Kurtzenhouse","Saint-Martin-le-Beau","Saint-Laurent-du-Pont","Betschdorf","Guipronvel","Milizac","Krautergersheim","Saint-Gely-du-Fesc","Treuzy-Levelay","Saint-Pierre-Montlimart","Eckbolsheim","Saint-Quentin-Fallavier","Ruy","Saint-Alban-de-Roche","Sermerieu","Le Bouchage","Corbelin","Athee","Dolomieu","Eloyes","Cessieu","Guerting","L'Hopital","Ippling","Bozouls","Espalion","Cransac","Laissac","Nointel","Bernes-sur-Oise","Sourdun","Saint-Brice","Lelling","Messia-sur-Sorne","Vallangoujard","Grisy-Suisnes","Santeny","OEting","Arnouville","Saint-Maixant","Espira-de-l'Agly","Tonnerre","Brison-Saint-Innocent","Mouxy","Ravenel","Gruffy","Longvic","Gambsheim","Seronville","Aureilhan","Nesles-la-Vallee","Vic-la-Gardiole","Blainville-sur-l'Eau","Blenod-les-Toul","Azay-le-Rideau","Cerelles","Rittershoffen","Hohwiller","Morigny-Champigny","Coulon","Saint-Savin","Les Eparres","Nivolas-Vermelle","Neufmanil","Aiglemont","Itteville","Bezannes","Capdenac-Gare","Ecquevilly","Saint-Christol-les-Ales","Angerville-la-Martel","Valmont","Trept","Cremieu","Panossas","Chamagnieu","Wattwiller","Bievres","Roderen","Sanvignes-les-Mines","Etricourt-Manancourt","Saint-Macaire","Toulenne","Saint-Cheron-du-Chemin","Janvry","Briis-sous-Forges","Saint-Jacques-de-la-Lande","Villiers-Adam","Epiais-Rhus","Remecourt","Marines","Gallardon","Magne","Guipry","Gannat","Mozac","Rupt-sur-Moselle","Neris-les-Bains","Ramonchamp","Chamblet","Cabestany","La Buissiere","Gosnay","Forges-les-Bains","Berviller-en-Moselle","Lizy-sur-Ourcq","Varreddes","Belleville","Montceaux","Rostrenen","Hangest-en-Santerre","Touquin","Rozay-en-Brie","Courpalay","Malling","Lambersart","Wingen-sur-Moder","Zittersheim","Verson","Tourville-sur-Odon","Cheux","Oberhergheim","Lexy","Crest","Garat","Balzac","Escaudoeuvres","Thun-l'Eveque","Reguisheim","Burnhaupt-le-Haut","Coutiches","Port-sur-Saone","Caille","Chateauneuf-le-Rouge","Mehun-sur-Yevre","Longeville-les-Saint-Avold","La Fare-en-Champsaur","Lougres","Bavans","Lailly-en-Val","Noidans-les-Vesoul","BÃ©nouville","Sardieu","Wangen","Saint-Simeon-de-Bressieux","Montois-la-Montagne","Theize","Morhange","Baronville","Saint-Drezery","La Gaude","Saint-Jeannet","Vinzelles","Creches-sur-Saone","Saint-Evarzec","Monts","Lanton","Cinq-Mars-la-Pile","Luynes","Chinon","Beaumont-en-Veron","Saint-Aubin-sur-Mer","Issoudun","Les Bordes","Seyssins","DÃ©ols","Argenton-sur-Creuse","Le Tignet","Chalonvillars","Thierville-sur-Meuse","Cruet","Rotherens","Beauchamp","Vert-le-Petit","Le Plessis-Pate","Leuville-sur-Orge","Haulchin","Veauche","Anse","Reyrieux","Argeville","Pussay","Amillis","Communay","Chasne-sur-Illet","Lasson","Thaon","Beauval","Echenoz-la-Meline","Bourguebus","Sainte-Catherine","Champtercier","Florensac","Beaucaire","Feuguerolles-sur-Seulles","Malijai","Saint-Andre-lez-Lille","Tourlaville","Champhol","Luce","Saint-Marcel-Bel-Accueil","Erome","Cattenom","Vallier","Custines","Champigneulles","Bubry","Ailly-sur-Somme","Villers-Bretonneux","Reaumont","La Ville aux Chiens","Pechabou","Montgiscard","Villenouvelle","La Barre-de-Monts","Dombasle-sur-Meurthe","Montbazin","Laverune","Combronde","Ennezat","Beauregard-Vendon","Prompsat","Argenton-les-Vallees","Saint-Aubin-du-Plain","Aiffres","ChÃ¢teau de Loches","Saint-Jean-Saint-Germain","Varennes-Jarcy","Thezan-les-Beziers","Murviel-les-Montpellier","Saint-Martin-d'Uriage","Kaltenhouse","Le Boulay-Morin","Normanville","Roques","BÃ©darieux","Herepian","Servas","Cournonterral","Gigean","Saint-Jean-de-Vedas","Dachstein","Mathieu","Saint-Junien","Avressieux","Gauriac","Aoste","Saint-Genix-sur-Guiers","Domessin","Oradour-sur-Glane","Compreignac","Saint-Leonard-de-Noblat","Saint-Jouvent","Couvron-et-Aumencourt","Troarn","Festieux","Heutregiville","Aguilcourt","Guignicourt","Attigny","Joigny-sur-Meuse","Revin","Rocroi","Saint-Parres-les-Vaudes","Treves","Montseveroux","Chaufour-Notre-Dame","Noisy-sur-Ecole","Sevrier","Saint-Andre-de-l'Eure","Garencieres","Mousseaux-Neuville","Sainte-Tulle","Montfuron","Sivry-sur-Meuse","Brieulles-sur-Meuse","Stenay","Cherisy","Mercy-le-Bas","Bouligny","Gauriaguet","Peltre","Talange","Maizeroy","Apach","Rettel","Aigueblanche","Metzeresche","Augny","Filstroff","Laquenexy","Courcelles-sur-Nied","Boulay-Moselle","Volmerange-les-Boulay","Illiers-l'Eveque","Courdemanche","Sorel-Moussel","Ezy-sur-Eure","Saint-Remy-sur-Avre","Saucats","Eterville","Binic","Garennes-sur-Eure","Etables-sur-Mer","Paimpol","Kerfot","Pomerols","Pacy-sur-Eure","Villiers-en-Desoeuvre","Pinet","Menville","Pierrevert","Verneuil-sur-Avre","Menucourt","Boisemont","Saint-Ouen-en-Brie","Villeneuve-le-Comte","Mathay","Mandeure","Saint-Omer-en-Chaussee","Truchtersheim","Brumath","Feldkirch","Durmenach","Coray","Goven","Arcay","Orval","Courcelles-sur-Seine","Bois-Guillaume","Martinvast","Brehal","Isneauville","Corps-Nuds","Vendeuvre-du-Poitou","Valmont","Macheren","Pont-de-Roide","Hyemondans","Bourseville","Quincy-sous-Senart","Brancourt-en-Laonnois","Cheval-Blanc","Montagny-les-Lanches","Nogent-le-Roi","La Verriere","La Turballe","Hannogne-Saint-Martin","Sainte-Catherine","Dainville","Haybes","Fumay","Cuincy","Essert","Chocques","Maurecourt","Seyssinet","Puisserguier","Vitry-en-Artois","Villenave","Breuilpont","Thorigny-sur-Marne","Saulxures","La Ravoire","Saint-Quentin","Lapte","Saint-Sauvant","Feternes","Montberon","Tonneins","Noueilles","Saleilles","Cessales","Courcy","La Londe-les-Maures","Hoymille","Tallende","Geovreisset","Brion","Montfort-l'Amaury","Rivery","Gometz-le-Chatel","Les Echelles","Mens","Noyarey","Notre-Dame-du-Pre","Puicheric","Domancy","Saint-Saturnin-les-Apt","La Tronche","Colmars","Lagarde-d'Apt","Argelers","La Roche-des-Arnauds","Luzarches","Cheny","Launaguet","Radinghem-en-Weppes","Optevoz","Osny","Saint-Didier-de-Formans","Fontaines-Saint-Martin","Amberieux","Manziat","La Chapelle-Saint-Luc","Lamothe-Montravel","La Brigue","Bree","Saint-Malo-de-Phily","Grez-en-Bouere","Saint-Pierre-d'Autils","Cannes-Ecluse","Vourey","La Coquille","Tercis-les-Bains","Coulonges","Proissans","Mareuil","Saint-Aubin-de-Baubigne","La Laigne","Chateauneuf-sur-Charente","Oeyreluy","Josselin","La Taillee","Saint-Georges-le-Flechard","Cap-d'Ail","Cleon","Douvaine","Varennes-en-Argonne","Blanchefosse-et-Bay","Villey-Saint-Etienne","Mouans-Sartoux","Sainghin-en-Weppes","Caudebec-lÃ¨s-Elbeuf","Boiscommun","Mons","Villeneuve-les-Avignon","Paray-le-Monial","Privas","Doudeville","Bourg-le-Roi","Pierre-la-Treiche","Condat-sur-Vienne","Beaupuy","Pavie","Les Essards","Castets-en-Dorthe","Hautmont","Venerque","Rions","Goeulzin","Chaux","Harreville-les-Chanteurs","Vernaison","Pusignan","Montmerle-sur-Saone","Eloise","Poisson","Saint-Christophe-en-Brionnais","Vitry-aux-Loges","Bords","Holtzheim","Cosne-Cours-sur-Loire","Neauphle-le-Chateau","Pont-Remy","Divion","Casteljaloux","Lasbordes","Banyuls-dels-Aspres","Villepinte","Cardesse","Haillicourt","Lapugnoy","Cormeilles","Camphin-en-Carembault","Notre-Dame-de-Sanilhac","Sault-Brenaz","Roussillon","Camarsac","Chaptelat","Breval","Bessancourt","Saint-Vulbas","Aveizieux","Imphy","Varzy","Pouilly-sur-Loire","Urzy","Crozes-Hermitage","La Machine","Marzy","Champagney","Quievy","Archingeay","Auchy-les-Hesdin","Itancourt","Roppenheim","Rountzenheim","Esbly","La Celle-sur-Seine","Livron-sur-Drome","Arques","Jouy-en-Josas","Villette","Aressy","Louvigny","Rancogne","Veigne","Bon-Encontre","Crepey","Lesquin","Wittes","Anzin-Saint-Aubin","Issou","Villennes-sur-Seine","Castelnau-de-Brassac","Le Chatel","Willems","Arleux","Pont-sur-Sambre","Aubigny-au-Bac","Herzeele","Montigny-lÃ¨s-Metz","Lesdain","Masserac","Grillon","Saint-Georges-sur-Loire","Bourgneuf-en-Retz","Vay","Yebles","Les Baux-de-Breteuil","Pontgouin","Montrichard","Brinay","Lus-la-Croix-Haute","Nuaille-sur-Boutonne","Salles-sur-Mer","Vic-en-Bigorre","La Frette-sur-Seine","Bouvincourt-en-Vermandois","Saint-Erme-Outre-et-Ramecourt","Malafretaz","Beaucouze","Sathonay-Village","Amberac","Zimmersheim","Guiscard","Chassieu","Vezenobres","Bagard","Aigrefeuille-d'Aunis","Corneilla-la-Riviere","Lezan","Saint-Sauveur-Gouvernet","Eschentzwiller","BellÃªme","Banvou","Breviandes","Cabourg","La Batie","Grainville-la-Teinturiere","Pouillon","Chatillon-sur-Cher","Patay","Saint-Jean-de-Braye","Retschwiller","Montgivray","Mareil-sur-Mauldre","Rousies","Pont-Sainte-Marie","Sailly-en-Ostrevent","Meslay-le-Vidame","Treon","Hirsingue","Galfingue","Heimsbrunn","Manspach","Heimersdorf","Sainte-Croix-en-Plaine","Niederentzen","Moosch","Luemschwiller","Bollwiller","Appenwihr","Herrlisheim-pres-Colmar","Husseren-Wesserling","Ranspach","Mortzwiller","Bischwihr","Werentzhouse","Kembs","Hagenbach","Wickerschwihr","Liepvre","Coignet","Chateaubriand","La Cheneviere","Albert","Clavel","Bertin","Chaumes","Rivieres","La Bretonne","Bourgogne","Montpezat-sous-Bauzon","Bermicourt","Bouleurs","Grand-Charmont","Revel-Tourdan","Jayat","Cailloux-sur-Fontaines","Sandrans","Taluyers","Succieu","Faramans","Beaurepaire","Saint-Georges-sur-Renon","Treffort","Saint-Genis-les-Ollieres","Poncin","Payzac","Bourg-les-Valence","Valencogne","Saint-Marcellin-en-Forez","Corveissiat","Rambert","Viry","Grenay","Donzy","Sainte-Colombe-sur-Gand","Saint-Vincent-de-Durfort","Duniere","Saint-Just-Chaleyssin","Saint-Heand","Neuville-les-Dames","Joux","Coligny","Saint-Galmier","Bouvesse-Quirieu","Lorette","Gleize","Tartaras","La Plaine","Luzinay","Rieux","Saint-Just-le-Martel","Candillargues","Champlan","Gresy-sur-Isere","Bayon","Lavans-Vuillafans","Duranus","Jully-sur-Sarce","Montbellet","Auneau","Saint-Laurent-de-Mure","Villars","Ennery","Georges","Villons-les-Buissons","La Boussac","Marbache","Paizay-le-Chapt","Santeuil","Gervais","Gros-Rederching","Soucht","Lemberg","Goetzenbruck","Epping","Port-Cros","Severac","Val d'IsÃ¨re","Limas","Garche","Domgermain","Les Combes","Ville-en-Tardenois","Sillingy","Vignols","Chameyrat","Voutezac","Panazol","Saint-Paterne","Gilette","Essegney","Tilly-sur-Meuse","Tourgeville","Oursbelille","Moyeuvre-Grande","Courcelles-Chaussy","Retonfey","Falck","Semecourt","Puttelange-les-Thionville","Rozerieulles","Ancy-sur-Moselle","Ars-sur-Moselle","Ham-sous-Varsberg","Lorquin","Mittelbronn","Guntzviller","Delme","Bechy","Phalsbourg","Louvigny","Donjeux","Reding","Rechicourt-le-Chateau","Morsbach","Brouderdorff","Kerbach","Petite-Rosselle","Bousbach","Altviller","Entrange","Kedange-sur-Canner","Richemont","Contz-les-Bains","Mulcey","Metzervisse","Harreberg","Vitry-sur-Orne","Basse-Rentgen","Vaudreching","Waldhouse","Remering-les-Puttelange","Hundling","Fenetrange","La Maxe","Cherisey","Benestroff","Etting","Verny","Chateau-Salins","Diffembach-les-Hellimer","Ernestviller","Montbronn","Enchenberg","Vigny","Vibersviller","Nousseviller-Saint-Nabor","Amelecourt","Sorbey","Gorze","Nitting","Distroff","Lesse","Hermelange","Chanteloup-les-Vignes","Saulny","Rabat-les-Trois-Seigneurs","Thyez","Vulbens","Lunel-Viel","Saint-Georges-d'Orques","Le Cap D'Agde","Abeilhan","Saint-Christol","Le Bosc","Lamalou-les-Bains","Saussan","Saint-Jean-de-Cornies","Montferrier-sur-Lez","Saint-Andre-de-Sangonis","Labastide-Rouairoux","Valros","Grabels","Puissalicon","Lespignan","Le Bousquet","Espondeilhan","Villeneuve-des-Escaldes","Clary","Tours-sur-Marne","Saint-Cyr-sur-Menthon","Chavannes-sur-Reyssouze","Cras-sur-Reyssouze","Chaleins","Nantua","Tinchebray","Ecorcei","Brix","Dive","Bernieres-le-Patry","Cardonville","Mere","Coulonces","Balleroy","Hardinvast","Norrey-en-Auge","Banville","Saussemesnil","Montabard","Mortree","Coudehard","Cairon","Saint-Martin-des-Champs","Echauffour","Ouville","Saint-Brice-de-Landelles","Carentan","Fontaine-le-Pin","Brecey","Vassy","La Graverie","Buceels","Villers-Canivet","Le Tourneur","Soliers","Saint-Andre-de-Messei","Montmartin-sur-Mer","Boissy-Maugis","Amfreville","Les Forges","Cossesseville","Cerise","Moon-sur-Elle","Saint-Jean-le-Blanc","Bellengreville","Saint-Ouen-sur-Iton","Camprond","Sommervieu","Equeurdreville-Hainneville","La Bigne","Bretteville-sur-Odon","Herouvillette","Saint-Pierre-du-Regard","Ceaux","Fye","Isigny-le-Buat","Saint-Jean-des-Baisants","Villedieu-les-Poeles","Saint-Remy","Irai","Notre-Dame-de-Livaye","Saint-Desir","Giberville","Athis-de-l'Orne","Saint-Sulpice-sur-Risle","Vimoutiers","Ouffieres","La Houblonniere","Thezy-Glimont","Thieuloy-Saint-Antoine","Courmelles","Saint-Martin-le-Noeud","Heilly","Dreslincourt","Moncetz-Longevas","Sault-les-Rethel","Ville","Sebourg","Fechain","Roost-Warendin","Linselles","Leforest","Bavay","Rumaucourt","Courchelettes","Saint-Martin-d'Ablois","La Grandville","Escautpont","Haramont","Mondescourt","Thourotte","Rubempre","Precy-sur-Oise","Alliancelles","Boulogne-la-Grasse","Margny-les-Compiegne","Troissereux","Grivillers","Agnetz","Bantigny","Sainte-Marie-Cappel","Souchez","Houplin-Ancoisne","Aix-en-Ergny","Westbecourt","Ayette","Bouvelinghem","Wanquetin","Sainte-Marie-Kerque","Breuil","Gelannes","Chamagne","Vertus","Taissy","Sillery","Pomacle","Sameon","Beaufort","Holnon","La Varenne","Les Brouzils","Mortagne-sur-Sevre","La Flocelliere","Guemene-Penfao","Saint-Avaugourd-des-Landes","Saint-Mathurin","La Chapelle-Montligeon","Saint-Barthelemy-de-Bussiere","Cosse-le-Vivien","Entrammes","Becon-les-Granits","Durtal","Jumelles","Laigne-en-Belin","Montreuil-sous-Perouse","Saint-Hilaire-le-Vouhis","Pontvallain","La Cropte","Le Pallet","Les Rosiers-sur-Loire","Vue","Chaudefonds-sur-Layon","Willgottheim","Ravieres","Sombacour","Gries","Norges-la-Ville","Gigny-sur-Saone","Le Hohwald","Ingolsheim","Altorf","Blaesheim","Wittersdorf","Harskirchen","Zellwiller","Morschwiller-le-Bas","Limersheim","Mertzen","Courchaton","Coutarnoux","Montenois","Losne","Beauvoisin","Quers","Villeneuve-les-Genets","Broin","Fraisans","Herimoncourt","Freland","La Bourgonce","Chille","Les Fourgs","Bonnard","Creusot","Lapoutroie","Souffelweyersheim","Cussy-les-Forges","Curdin","Annay-sur-Serein","Druyes-les-Belles-Fontaines","Les Hopitaux-Vieux","Nordhouse","Bischoffsheim","Bellefosse","Ruelisheim","Busy","Beutal","Cresancey","Bazoches","Montchanin","Dasle","Malpas","Merry-la-Vallee","Chamoux","Baigneux-les-Juifs","Saint-Mard-de-Vaux","Arlay","Noiron-sous-Gevrey","Villevieux","Roppentzwiller","Hombourg","Rezonville","Arbois","Amange","Malange","Charnay-les-Macon","Moutiers","Groix","Guipel","Saint-Pierre-de-Plesguen","Beignon","Landujan","Langourla","Treveneuc","Osse","Pordic","Moreac","Plussulien","La Bouexiere","Quily","Pommerit-le-Vicomte","Taden","Merdrignac","Callac","Andel","Monterblanc","Lanmeur","Saint-Seglin","Peumerit","Mauron","Le Theil-de-Bretagne","Cinqueux","Lucciana","Labastide-d'Anjou","Aubinges","Aire-sur-l'Adour","Ahuille","Eygurande-et-Gardedeuil","Ville-d'Avray","Elincourt-Sainte-Marguerite","L'Etang-la-Ville","Noyelles-Godault","Camblain-Chatelain","Plouvain","Cognin","Les Halles","Saint-Symphorien-sur-Coise","Saint-Martin-en-Haut","Vaugneray","Hauterives","Duerne","Souzy","Sallaumines","Mareil-Marly","Bougival","Leffrinckoucke","Calonne-Ricouart","Labuissiere","Cauchy-Ã -la-Tour","Bergues","Marquillies","Ghyvelde","La Tour","Bondues","Loison-sous-Lens","Drocourt","Noyelles-sous-Lens","Jasseron","Les Allues","La Villetelle","Magny","Boran-sur-Oise","Somloire","Florent-en-Argonne","Saint-Prouant","Meilhan","La Foret-Fouesnant","Marques","Saulnes","Anizy-le-Chateau","La Jarne","Camaret-sur-Aigues","Saint-Porquier","Fontenay","Grand'Combe-Chateleu","Saint-Cyr-les-Champagnes","Plobsheim","Collonges-au-Mont-d'Or","Bavilliers","Fourqueux","Vaucresson","Pierre-Levee","Villiers-sur-Morin","Montolivet","Pommeuse","Cuy","Choisy-au-Bac","Acy-en-Multien","Brexent-Enocq","Saint-Michel-sous-Bois","Ruesnes","Denier","Sommaing","Saint Nicolas Les Arras","Fournes-en-Weppes","Montcy-Notre-Dame","Les Rivieres-Henruel","Mandres-la-Cote","Bienville","Crisolles","Sault-Saint-Remy","Baisieux","Ferques","Verton","Berck","Billy-Berclau","Averdoingt","Inxent","Pont-de-Briques","Louvemont","Vitry-le-FranÃ§ois","Marcilly-sur-Seine","Crecy-sur-Serre","Saint-Aubin","Bajus","Saint-Martin-Boulogne","Echinghen","Avesnes-le-Sec","Cantin","Ecuires","Famars","Camphin-en-Pevele","Saudoy","Lacroix-Saint-Ouen","Crezancy","Joinville","Brugny-Vaudancourt","Vireux-Molhain","Rethel","Chessy-les-Pres","Forest-sur-Marque","Andres","Brienne-le-ChÃ¢teau","Charmont-sous-Barbuise","Arcis-sur-Aube","Colombiers","Orsan","Peyriac-de-Mer","Claira","Argens","Valleraugue","Castillon-du-Gard","Le Lez","Ponteilla","Lauret","Mandagout","Le Soler","Saint-Clement","La Salvetat-sur-Agout","Pia","Luc-sur-Orbieu","Tavel","Anduze","Marvejols","Saint-Andre-de-Roquelongue","Montfaucon","Sonnac-sur-l'Hers","Laurabuc","Cambieure","Gallician","Fontes","Sardan","Caveirac","Sauzet","Caunes-Minervois","Villemolaque","Lamorville","Fresnes-au-Mont","Marche-Allouarde","Brie","La Nerthe","Ludon-Medoc","Ecole","Esches","Berthecourt","Charonville","Catenay","Barbery","Charolles","La Neuville-du-Bosc","Tillieres-sur-Avre","Auvergny","Vouneuil-sous-Biard","Amailloux","Pont-l'Abbe-d'Arnoult","Castillonnes","Alairac","Monsegur","Saint-Caprais-de-Bordeaux","Nailloux","Bicqueley","Montbonnot-Saint-Martin","Le Versoud","Carpiquet","Cormelles-le-Royal","Villiers-sous-Grez","Theoule-sur-Mer","Real","Saint-Gence","Cravent","Cernay-la-Ville","Vauhallan","Saint-Germain-de-la-Grange","Wissous","Les Mesnuls","Paray-Vieille-Poste","Buno-Bonnevaux","Bresles","Saint-Maurice-Montcouronne","Maisse","Asnieres-sur-Oise","Bruyeres-sur-Oise","Chevry-en-Sereine","Neufmoutiers-en-Brie","Engins","La Buisse","Bourget","Apprieu","Corenc","Sinard","Saint-Jean-de-Maurienne","Brie-et-Angonnes","Beauvoisin","Gilly-sur-Isere","Jarrier","Roybon","Lans-en-Vercors","Les Rives","Montcel","Bassens","Brignoud","Modane","Huez","Saint-Laurent-en-Beaumont","Bevenais","Saint-Vital","Les Marches","Clelles","Bernin","Theys","Saint-Etienne-de-Cuines","Villard-Saint-Christophe","Le Chatelard","Biviers","Macot-la-Plagne","La Porte","Rognaix","Chamoux-sur-Gelon","Pugieu","Saint-Appolinard","Veurey-Voroize","Montlhery","Saint-Vrain","Janville-sur-Juine","La Garenne-Colombes","Montcourt-Fromonville","Flins-sur-Seine","Bazoches-sur-Guyonne","Survilliers","Fay-les-Nemours","Neuville-sur-Oise","Sonchamp","Estadens","Barinque","Saint-Georges-du-Bois","Corbarieu","Poulan-Pouzols","Nicole","Saint-Sylvestre-sur-Lot","Casseneuil","Cenac","Coimeres","Le Buisson-de-Cadouin","Le Pian-sur-Garonne","Cornille","Tabanac","Teuillac","Sainte-Bazeille","Jonzac","Aillas","Saint-Sulpice-et-Cameyrac","Roaillan","Riocaud","Fauch","Dourgne","Bouloc","Labastide-dArmagnac","Gimont","Bezac","Jazeneuil","Pellegrue","Boe","Lansac","Puisseguin","Saint-Vincent-de-Connezac","Paleyrac","Les Artigues-de-Lussac","Castelnau-sur-Gupie","Doulezon","Martillac","Grignols","Bruch","Jonquerets-de-Livet","Saint-Pierre-en-Val","Cauville-sur-Mer","Anceaumeville","Heuqueville","Bois-Jerome-Saint-Ouen","Gonfreville-lOrcher","Saint-Ouen-de-Thouberville","Virville","Angiens","Ouville-l'Abbaye","Ventes-Saint-Remy","Carville-la-Folletiere","Envermeu","Val-de-la-Haye","Barc","Caux","Tourville-la-Riviere","Le Plessis-Hebert","Mesnil-Raoul","Longueville-sur-Scie","Ymare","Trouville-la-Haule","Saint-Nicolas-de-Bliquetuit","Yebleron","Sigy-en-Bray","Rolleville","Saint-Arnoult","Aviron","Riville","Saint-Aquilin-de-Pacy","Fontaine-sous-Preaux","Saint-Eustache-la-Foret","Menilles","Martot","Saint-Germain-Village","Saint-Aubin-sur-Scie","Le Mesnil-Esnard","Sainneville","Le Bosc-Roger-en-Roumois","Saussay-la-Campagne","Cuy-Saint-Fiacre","Saint-Martin-du-Manoir","La Vacherie","Sainte-Austreberthe","Ferrieres-Haut-Clocher","Brachy","Valliquerville","Ecretteville-les-Baons","Hattenville","Chauvincourt-Provemont","Montaure","Sancourt","Sacquenville","Mesangueville","Saint-Jean-le-Thomas","Le Mas-d'Azil","Saint-Jean-du-Falga","Villeneuve-d'Olmes","Francheleins","Gournay-sur-Marne","Villes-sur-Auzon","Marly","Lutterbach","Plesnois","Norroy-le-Veneur","Saint-Pierre-la-Garenne","Templemars","Bouxieres-aux-Chenes","Bures-sur-Yvette","Notre-Dame-d'Oe","Mundolsheim","Damville","Toufflers","Follainville-Dennemont","Magnanville","Duppigheim","Brieres-les-Scelles","Pulnoy","Grosrouvre","Bruyeres-le-Chatel","Cadaujac","Champ-sur-Drac","Venon","Breteniere","Saint-Martin-sur-le-Pre","Reitwiller","Saint-Contest","Moisselles","Oberhoffen-sur-Moder","Steinbourg","Offendorf","Cormontreuil","Reventin-Vaugris","Nogent-sur-Seine","Saint-Pierre-du-Perray","Condrieu","Schnersheim","Rosheim","Habsheim","Pontavert","Saclay","Monthieux","Beynost","Montanay","Quincieu","Saint-Lye-la-Foret","Mours","Puiseux-en-France","Parmain","Butry-sur-Oise","Lormaison","Marcy-l'Etoile","Charbonnieres-les-Bains","Gouvieux","Saint-Aubin-de-Medoc","Saint-Sulpice-de-Faleyrens","Notre-Dame-de-Mesage","Montmelian","Apremont","Gamaches","Saint-Remy-les-Chevreuse","Saint-Antonin-sur-Bayon","Auzeville-Tolosane","Pontpoint","Houdemont","La Penne-sur-Huveaune","Latour","Saint-Cyr-au-Mont-d'Or","Magenta","Emmerin","Jouars-Pontchartrain","Mareuil-les-Meaux","La Vallee de Dormelles","Grazac","Saint-Germain-sur-Morin","Sonnaz","Lattainville","Piscop","Maillane","Buxerolles","Aumur","Leves","Le Thillay","Lapeyrouse-Fossat","Saint-Michel","Le Houlme","Pomponne","Sollies-Toucas","Diges","Saint-Didier-au-Mont-d'Or","Finhan","Ingersheim","Valpuiseaux","Le Mesnil-en-Thelle","Westhouse","Chatenois","Golfe-Juan","Nicorps","Gratot","Charleval","Ille-sur-Tet","Vernet-les-Bains","Uzos","Pugny-Chatenod","Sierentz","La Glacerie","Crespieres","Thiverval-Grignon","Bolsenheim","Ambres","Perigny","Villeneuve-les-Sablons","Corbeil-Cerf","Rogerville","Montbazon","Lignieres-Chatelain","Essertaux","Chamborigaud","Scionzier","Marsac-en-Livradois","Saint-Pierre-de-Varennes","Tignieu-Jameyzieu","Mogneville","Laigneville","Liancourt","Balagny-sur-Therain","Amilly","Pontarme","Les Sauvages","Panissieres","Erbray","Meaudre","Praz-sur-Arly","Valleres","Bouquetot","Bramans","Saint-Gondran","Mas-Saintes-Puelles","Gaillan-en-Medoc","Saint-Remimont","Pernay","Bellegarde-en-Diois","Les Aix-d'Angillon","Chatillon-sur-Indre","Molleges","Cheroy","Lancrans","Madirac","Port-Sainte-Foy-et-Ponchapt","Les Ormes","Les Assions","Saint-Martin-d'Heuille","Villard","Gouaix","Megrit","Moisville","Saint-Hilarion","Barjon","Cusy","Brissac","La Roche","Plaimpied-Givaudins","Charron","Epineuil-le-Fleuriel","Labastide-Beauvoir","Rians","Sainte-Solange","Azay-sur-Indre","Bellenaves","Saint-Amand-de-Coly","Chuelles","Coyriere","Saint-Denis-dAnjou","Bremontier-Merval","Carresse-Cassaber","Bonneville","Preignan","Grand-Auverne","Soulaire-et-Bourg","Bazicourt","Saint-Mard","Quiers","Chamigny","Saint-Fiacre","Ferrieres-en-Brie","Longueville","Ozouer-le-Voulgis","Egreville","Lissy","Amponville","Saint-Ouen-sur-Morin","Salins","Beaumont-les-Nonains","Annet-sur-Marne","Cerneux","Couilly-Pont-aux-Dames","Saint-Martin-en-Biere","Fromonville","Coulommes","Jossigny","Thomery","Chalmaison","Charny","Noisy-sur-Oise","Sollies-Ville","Meounes-les-Montrieux","Besse-sur-Issole","Neoules","Fayence","Forcalqueiret","Le Val","Ginasservis","Puget-Ville","Seillons-Source-d'Argens","Evenos","Tavernes","Foret-la-Folie","Rougiers","La Houssaye-en-Brie","Sagy","Saint-Augustin","Chessy","Germigny-l'Eveque","Fresnes-sur-Marne","Boissise-le-Roi","Plomb","Beuvillers","Montchamp","Saint-Germain-Langot","Campagnolles","Sacey","La Foret","Tirepied","May-sur-Orne","Pennedepie","Saint-Denis-le-Gast","Hudimesnil","Coudray-Rabut","Harcourt","Ranville","Conde-sur-Sarthe","Nehou","Sourdeval","La Ferriere-Bochard","Bougy","Sainte-Honorine-du-Fay","La Motte-Fouquet","Gonneville-sur-Mer","Janville","Billy","Precorbin","Le Dezert","Cahagnes","Pair-et-Grandrupt","Aunay-les-Bois","Creully","Trelly","Fontenai-les-Louvets","Sainte-Marie-Laumont","Le Merlerault","Ussy","Viessoix","Angoville-sur-Ay","Cintheaux","Raids","Ancinnes","Samson","Frenes","Rosel","Le Mesnil-Ozenne","Tourville-en-Auge","Neuilly-le-Bisson","Livet-sur-Authou","Morteaux-Couliboeuf","Montfarville","Saint-Pierre-Tarentaine","Saint-Paul-du-Vernay","Sainte-Marie-du-Mont","Avenay","Saint-Quentin-les-Chardonnets","Castilly","Saint-Sylvain","Saint-Michel-des-Andaines","Le Sap","Fierville-Bray","Messei","Menil-Hermei","Durcet","Ceauce","Putot-en-Bessin","Artolsheim","Baldenheim","Marckolsheim","Aspach-le-Haut","Obenheim","Achenheim","Hangenbieten","La Couture-Boussey","Cormoranche-sur-Saone","Puyloubier","Charly-sur-Marne","Feurs","Angervilliers","Ville-la-Grand","Ligny-en-Cambresis","Naours","Saint-Andre-de-Rosans","Odos","Peronne","Crespin","Vert-Saint-Denis","Isles-les-Villenoy","Signy-Signets","Torcy","Flavigny-sur-Moselle","Marnaz","Vic-sur-Seille","Trelissac","Le Chateau Gaillard","Belleu","Bu","Nefiach","Saint-Maximin","Guerville","Lapouyade","La Poterie-Mathieu","Planches","Classun","Cavillargues","Vaugrigneuse","Randan","Escombres-et-le-Chesnois","Ville-sur-Tourbe","Tailly","Sapogne-sur-Marche","Blanzy-la-Salonnaise","Torvilliers","Caurel","Vandy","Wassy","Joncourt","Conchy-les-Pots","Quevauvillers","Verneuil-en-Halatte","Lieramont","Rieux","Saint-Maxent","Bregy","Pasly","Grand-Laviers","Erquinvillers","Rainneville","Lieuvillers","Saint-Paul-de-Vezelin","Campigneulles-les-Petites","Coye-la-Foret","Bailleul-le-Soc","Estrees-sur-Noye","Bussus-Bussuel","Ons-en-Bray","Pende","Barenton-Bugny","Yaucourt-Bussus","Saint-Maulvis","Barzy-en-Thierache","Isques","Berck-Plage","Neuville-Saint-Vaast","Villers-Plouich","Estrees","Fillievres","Souastre","Ablainzevelle","Bollezeele","Eclaron-Braucourt-Sainte-Liviere","Mery-sur-Seine","Morvilliers","Lavannes","Bossancourt","Richebourg","Rouvroy-sur-Marne","Les Charmontois","Fontaine-en-Dormois","Quilly","Chepy","Bernard","Avenay-Val-d'Or","Vaire-sous-Corbie","Bonneuil-en-Valois","Pierrepont-sur-Avre","Nibas","Dargnies","Poeuilly","Bethencourt-sur-Mer","Beautor","Vineuil-Saint-Firmin","Neufvy-sur-Aronde","Brissy-Hamegicourt","Ailette","Pronville","Pontruet","Davenescourt","Ailly-le-Haut-Clocher","Flers-sur-Noye","Contre","Fignieres","Marest","Montcornet","Dury","Beaucamps-Ligny","Radinghem","Farbus","Marcq-en-Ostrevent","Montreuil-sur-Mer","Norrent-Fontes","Wail","Carency","Aynac","Compolibat","Gramat","La Rochette","Saint-Remy-en-Mauges","Plassay","Pompaire","Montbron","Lestelle-Betharram","Aventignan","Flavin","Thoux","Saint-Clement","Lussant","Leugny","Roche-le-Peyroux","Videix","Chatillon-sur-Thouet","Puycornet","Bougue","Benesse-Maremne","Semeacq-Blachon","Montchaude","Benon","Orion","Laruns","Massat","Clairvaux-dAveyron","Smarves","Coussay-les-Bois","Saint-Vaury","Saint-Sauveur-la-Sagne","Saint-Geniez-d'Olt","Dolus-d'Oleron","Varen","Saint-Yrieix-sur-Charente","ChÃ¢lus","Saint-Laurent-de-la-Pree","Sauze-Vaussais","Jugeals-Nazareth","Saint-Angeau","Pontenx-les-Forges","Commensacq","Izotges","Villeneuve-de-Duras","Montamise","La Foye-Monjault","Tourriers","Montdoumerc","Castetner","Idron","Bignoux","Sedzere","Saint-Jean-de-Marsacq","Bertholene","Garanou","Gencay","Sorcy-Saint-Martin","Angevillers","Fleville-devant-Nancy","Spincourt","Darmont","Aspach-le-Bas","Steinbach","Durlinsdorf","Fellering","Franxault","Lacrost","Vault-de-Lugny","Saint-Leger-sur-Dheune","Chigy","Hurigny","Ovanches","Couchey","Ruffey-les-Beaune","Beaufort","Meursault","Cousance","Danne-et-Quatre-Vents","Moussey","Rarecourt","Senones","Velaines","Nayemont-les-Fosses","Ogy","Taintrux","Sainte-Genevieve","Norroy-les-Pont-a-Mousson","Minversheim","Grentzingen","Wangenbourg-Engenthal","Obersaasheim","Chatillon-le-Duc","Frebuans","Courlaoux","Grandvaux","Champlitte","Bonnevaux-le-Prieure","Saint-Bris-le-Vineux","Saint-Clement","Armaucourt","Rehainviller","Leyr","Oderen","Siegen","Lipsheim","La Frette","Ouhans","Torpes","Saules","Baulay","Levernois","Soucy","Collonges-les-Premieres","Pournoy-la-Grasse","Fontenoy-la-Joute","Treveray","Xures","Gripport","Herny","Hallering","Loudrefing","Jainvillotte","Dieppe-sous-Douaumont","Jezainville","Neuviller-sur-Moselle","Haut-Clocher","Vieux-Thann","Jettingen","Malmerspach","Chemilly-sur-Serein","Mont-sur-Monnet","Farges-les-Chalon","Julienas","Quenoche","Ratte","Courlans","Boussay","La Baule-Escoublac","Beaumont-Pied-de-Boeuf","La Place","Saint-Mars-de-Coutais","Le Fief-Sauvin","Hambers","Besse-sur-Braye","Saint-Aignan-sur-Roe","Triaize","Chambretaud","Mouzeil","Saint-Martin-les-Melle","Saint-Lezin","Mulsanne","Corsept","Fille","Pruille-l'Eguille","Fontenay-sur-Vegre","Saint-Melaine-sur-Aubance","Le Mazeau","Mache","Angles","Le Gavre","Jupilles","Distre","Luceau","Prefailles","Saint-Clement-de-la-Place","Gene","La Salle-de-Vihiers","Monts-sur-Guesnes","Saint-Quentin-en-Mauges","Montigne-les-Rairies","Chatelais","Saint-Laurent-du-Mottay","Mareuil-sur-Lay-Dissais","Le Thou","Maigne","Laigne","Soulaines-sur-Aubance","Xanton-Chassenon","Pontigne","Damvix","Isches","Senonges","Sevrey","Varennes-le-Grand","Ladoix-Serrigny","Couches","Ecrouves","Dornot","Moncel-sur-Seille","Saint-Berain-sur-Dheune","Les Allies","Sausheim","Grandfontaine-Fournets","Mont-sur-Meurthe","Hauconcourt","Ancerville","Magny-Cours","Batilly","Weyersheim","Epfig","Cuisery","Labaroche","Nanton","Salans","Willerwald","Jesonville","Treclun","La Villeneuve","Les Gras","Les Granges","Labry","Dinoze","Velotte-et-Tatignecourt","Haudiomont","Velars-sur-Ouche","La Tagniere","Chevrotaine","Pouilloux","Landres","Knutange","Hilbesheim","Obtree","Vaudrey","Moroges","Juvigny-en-Perthois","Millery","Vezelise","Crancot","Cuinzier","Longevilles-Mont-d'Or","Vermenton","La Tour-de-Scay","Chaudefontaine","Branges","Marchaux","Marliens","Varanges","Le Poet","Jausiers","Les Vigneaux","Callian","La Rouine","Pierrefeu-du-Var","Opio","Agay","Toudon","Le Broc","Castellane","Isola","Ampus","Croix","Regusse","Sepmeries","Senlecques","Tilloy-lez-Marchiennes","Enquin-les-Mines","Ferfay","Cassel","Cauroir","Lallaing","Chemy","Beauquesne","Maignelay-Montigny","La Fere","Mailly-Raineval","Coudun","Essigny-le-Grand","Le Meriot","Janvilliers","Cumieres","Germaine","Erre","Feignies","Le Touquet-Paris-Plage","Fresnes-les-Montauban","Villers-au-Tertre","Roeulx","Brouckerque","Le Parcq","Pouru-Saint-Remy","Cheret","Chesley","Prouilly","Primat","Boeseghem","Prouvy","Hon-Hergies","Rebreuve-sur-Canche","Canlers","Merckeghem","Berles-au-Bois","Lieu-Saint-Amand","Armbouts-Cappel","Rosult","Nedonchel","Frethun","Autremencourt","Hemevillers","Servais","Villers-le-Sec","Lheraule","Caillouel-Crepigny","Marigny-en-Orxois","Ponchon","Meteren","Outines","Gaye","Letanne","Moslins","Boeschepe","Trith-Saint-Leger","Maisnil-les-Ruitz","Sarry","Thennes","Morangis","Sept-Saulx","Dizy","La Groise","Bugnicourt","Bermeries","Wargnies-le-Petit","Callac","Hirel","Plestan","Saint-Briac-sur-Mer","Laurenan","Saint-Pere","Neuville","Plozevet","Plesidy","Kerity","Saint-Christophe-de-Valains","Haute-Goulaine","Saint-Martin-des-Champs","Larchant","Les Granges","Arville","Marles-en-Brie","Bondoufle","Villiers-sur-Seine","Aigremont","Bray-et-Lu","Medis","Vigeois","Beyssenac","Saint-Martin-Terressus","Brouqueyran","Saint-Antoine-Cumond","Ardiege","Boussenac","La Barthe","Sautel","Chervettes","Habas","Saint-Perdon","Campagne","Hossegor","Saint-Leon-sur-l'Isle","Gourvillette","Saint-Pierre-de-Maille","Saint-Hilaire-les-Courbes","Lalinde","Manot","Perpezac-le-Noir","Saint-Saviol","Ainhoa","Mees","Hagetmau","Lacq","Mendionde","Cauneille","Les Eglisottes-et-Chalaures","Chateauneuf-Grasse","Aspremont","Castellar","Villars-sur-Var","Gorbio","Claviers","Colomars","Ramatuelle","Saint-Etienne-de-Tinee","La Napoule","Boissy-le-Girard","Etrechy","Lahosse","Souraide","Chaillevette","Monferran-Plaves","Sarrant","Saint-Projet","Launay","Dabo","Piblange","Moyenmoutier","Ballainvilliers","Guernes","Moulinet","Lezay","Ychoux","Croutelle","Availles-Limouzine","Beaumont","Lanne","Prats-de-Carlux","Borderes-et-Lamensans","Reynies","Cintegabelle","Aussevielle","Maurrin","Lamagistere","Saubens","Mirande","Saint-Martin-le-Pin","Nontron","Saint-Chamassy","Aureilhan","Saint-Julien-en-Born","Veyrac","Thauron","Villedoux","Bassillac","Cancon","Cahuzac","Sergeac","Marignac","Saint-Laurent-Bretagne","Menesplet","Garrevaques","La Cavalerie","Monclar-de-Quercy","Compans","Parc-d'Anxtot","Yves","Ricquebourg","Heres","Auriac","Jonvilliers","Breles","Vauxbuin","Orcet","Saint-Aubin-de-Lanquais","Cheyssieu","Saint-Martin-Choquel","Clarques","Commes","Fontvieille","Crevechamps","Monnetier-Mornex","Cuxac-d'Aude","Lauzerte","Montaigu-de-Quercy","Bailleau-l'Ã‰vÃªque","Malincourt","Coquelles","Voulangis","Saint-Jean-des-Mauvrets","Saint-Crespin-sur-Moine","Champigne","Andard","Orbec","Cuverville","Saint-Gervais-en-Belin","Montgirod","Charmes-sur-Rhone","Sauvagney","Champagnole","Port-en-Bessin-Huppain","Saint-Joachim","Duneau","Courdemanche","Paradou","Allonnes","Lamanon","Saint-Barnabe","Verdon","Maleville","Saint-Sauveur-dAunis","Marsais","Taillebourg","Treffieux","Moinville-la-Jeulin","Chatelet","Val-dIzÃ©","Beaumont-sur-Sarthe","Aubigne-Racan","Requeil","Corroy","Richelieu","La Chevallerais","Ressons-le-Long","Hargicourt","Saint-Eloy-les-Mines","Beaurieux","Villeneuve-sur-Yonne","Faulx","Simorre","Grossoeuvre","Gourlizon","Ollezy","Arches","Mondragon","Le Chaylard","Saint-Germain-Lembron","Giat","Ardes","Chapdes-Beaufort","Nebouzat","Pontgibaud","Neronde-sur-Dore","Pleurs","Quievrecourt","Saint-Denis-sur-Sarthon","Sainte-Cecile","Cauvigny","Gerard","Chatelaines","Robert","Francois","Houlbec-Cocherel","Blacqueville","Berlaimont","Charly","Pont-de-Veyle","Cruzilles-les-Mepillat","Longueau","Saint-Georges-sur-Baulche","Berriac","Jaucourt","Chourgnac","Payzac","Soumeras","Champier","Brezins","Le Thieulin","Frevin-Capelle","Oisy-le-Verger","Arquettes-en-Val","Roquemaure","Berne","Esquerdes","Origny-Sainte-Benoite","Buzet-sur-Baise","Lavardac","Le Pin","Recquignies","Braud-et-Saint-Louis","Aiguillon","Medan","Yenne","Pujo-le-Plan","Englefontaine","Saint-Jean-Lasseille","Rouillac","Le Vaudreuil","Falicon","Damprichard","Fresnes-en-Woevre","Gommerville","Mauves-sur-Huisne","Nuaille","Saint-Bernard","Sainte-Radegonde","Pont-de-Beauvoisin","Montagny-sur-Grosne","Octeville-sur-Mer","Ban-de-Laveline","Luisant","Faverolles-la-Campagne","Fregouville","Varennes","Lacapelle-Marival","Latronquiere","Lamativie","Saint-Privat-de-Vallongue","Gagnieres","Pompadour","Mernel","Louvigne-de-Bais","Mittersheim","Malleloy","Mertzwiller","Zinswiller","Chatel-Saint-Germain","Basse-Ham","Clouange","Lagardere","Vauchelles-les-Domart","Fressenneville","Crevecoeur-le-Grand","Nouvion-le-Vineux","La Neuville-d'Aumont","Feuquieres-en-Vimeu","Milly-sur-Therain","Fresneaux-Montchevreuil","Saint-Riquier","Rosieres-en-Santerre","Peronne","Gournay-en-Bray","Monchy-Humieres","Grilly","Neufgrange","Morainvilliers","Saint-Maurice-sur-Dargoire","Orlienas","Colombier-Saugnieu","Laudun-lArdoise","Lessy","Drace","Saint-Bonnet-le-Troncy","Lantignie","Les Ardillats","Rosteig","Sewen","Mussig","Mittelhausbergen","Dingsheim","Reichstett","Oberhausbergen","La Wantzenau","Lampertheim","Schirmeck","Urmatt","Barembach","La Broque","Baldersheim","Willer-sur-Thur","Petit-Landau","Longes","Cruseilles","La Rixouse","Chatuzange-le-Goubet","Issenhausen","Lixhausen","Boisemont","Gresse-en-Vercors","Venette","Le Meux","Verderonne","Henonville","Auneuil","Froissy","Sainte-Eusoye","Tracy-le-Mont","Ribecourt-Dreslincourt","Haudivillers","Chepoix","Puiseux-le-Hauberger","Francieres","Breuil-le-Sec","Niederbruck","Bergheim","Fessenheim","Saulzoir","Durette","Blerancourdelle","Bongheat","Bucey-les-Gy","Bidart","Villiers-Couture","Epagny","Poissons","Brassempouy","Labatut","Bourgogne","Aumenancourt","Elnes","Pradelles","Belpech","Saint-Ouen-des-Besaces","Choisey","Saint-Paterne-Racan","Dampmart","Sonzay","Villedomer","Buzet-sur-Tarn","Marigny-Marmande","Clermont","Herin","Montoison","Izier","Camiac-et-Saint-Denis","Campeneac","Orphin","Sars-Poteries","Villeneuve-de-la-Raho","Sequedin","Toussieux","Reuil-en-Brie","Cuon","Denice","Saint-Marc-Jaumegarde","Routot","Montlignon","Chamelet","Corconne","Montilly","Combon","Villiers-le-Bacle","Margency","Saint-Denis-en-Val","Clarensac","Vaux-sur-Seine","Spycker","Uchacq-et-Parentis","Theziers","Tautavel","Chambalud","Denee","Sadirac","La Bresse","Contrisson","Fanjeaux","Wizernes","Seyre","Bazet","Lacanau","Pont-Saint-Vincent","Rosieres-aux-Salines","Cuvilly","Moussy","Pargny-sur-Saulx","Vivier-au-Court","Montreuil-sur-Blaise","Anglure","Boubers-sur-Canche","Lumbres","Neuilly-sous-Clermont","Montherme","Therouanne","Caullery","Delettes","Mailly-Champagne","Ecques","Frevent","Roeux","Esnouveaux","Betheniville","Bettancourt-la-Ferree","Dontrien","Neuflize","Vaux-sur-Blaise","Renneville","Bouilly","Tilloy-et-Bellay","Vadenay","Presles-et-Thierny","Versigny","Cottenchy","Etreillers","Sailly-Flibeaucourt","Charteves","Le Plessier-sur-Bulles","Labruyere","Montier-en-Der","Saint-Eulien","Voillecomte","Romain-sur-Meuse","Cunfin","Boursault","Warnecourt","Saint-Martin-Longueau","Reuilly-Sauvigny","Bruyeres-et-Montberault","Annois","Buironfosse","Montiers","Bourguignon-sous-Coucy","Marcoux","Tourrette-Levens","Saint-Andre-les-Alpes","Villars-Colmars","Barreme","Tanneron","Coaraze","Breil-sur-Roya","Albiosc","Moulinet","Blausasc","Utelle","Vers-en-Montagne","Colombier","Sauxillanges","Barges","Saint-Angel","Lafeuillade-en-Vezie","Viellespeze","Dauzat-sur-Vodable","Le Rouget","Bossey","Chenex","Tours-sur-Meymont","Antignac","Couteuges","Loudes","Dallet","Creuzier-le-Vieux","Le Chambon","Verneuil-en-Bourbonnais","Cistrieres","Bayet","Orcines","Vezezoux","Allonzier-la-Caille","Le Monteil","Veigy-Foncenex","Veyrier-du-Lac","Bellerive-sur-Allier","Coubon","La Frasse","ChÃ¢telperron","Lanobre","Vieille-Brioude","Villeneuve-sur-Allier","Teillet-Argenty","Quezac","Gouise","Mezel","Menthon-Saint-Bernard","Dingy-en-Vuache","Gouttieres","Serbannes","Marsat","Espaly-Saint-Marcel","La Chapelaude","Cessy","Brugheas","Chadron","Lepuy","Paray-sous-Briailles","Montbeugny","Neuf Eglise","Chadeleuf","Ytrac","Celles-sur-Durolle","Plauzat","Sardon","Les Breviaires","Bazemont","Fleury-en-Biere","Les Essarts","Lere","Gracay","Civray-de-Touraine","Vouzeron","Mardie","Ecueille","Auffargis","Umpeau","Ecrosnes","Meung-sur-Loire","Monthou-sur-Cher","Saligny-le-Vif","Bridore","Alluyes","Neuvy-en-Beauce","Monthodon","Souesmes","Savigny-sur-Braye","Avord","Negron","Averdon","Moree","Foecy","Tournon-Saint-Martin","Armenonville-les-Gatineaux","Donnery","Courcelles-en-Bassee","Huisseau-sur-Mauves","Courmemin","Vierville","Oisly","Beauchene","Blancafort","Checy","Mer","Nibelle","Ormes","Charmont-en-Beauce","Saint-Lactencin","Autry-le-Chatel","Couddes","Houville-la-Branche","Soulangis","Nonvilliers-Grandhoux","Bessais-le-Fromental","Bourgueil","Veuil","Ange","Chaudon","Sandillon","Boismorand","Gievres","Saint-Julien-de-Chedon","Jouy-le-Potier","Arthon","Antogny le Tillac","Orrouer","Meillant","Marcilly-en-Villette","Selles-Saint-Denis","Selles-sur-Nahon","Pressigny","Saint-Georges-sur-Eure","Epieds-en-Beauce","Reipertswiller","Champenay","Bussieres-les-Belmont","Montsauche-les-Settons","Vaux-la-Petite","Cornimont","Conde-Northen","Bazailles","Blenod-les-Pont-a-Mousson","Bennwihr","Soultz-sous-Forets","Vars","Aissey","Hipsheim","Wildersbach","La Veze","Chevigny","Manom","Saint-Pancre","Repaix","Denting","Uruffe","Lemmes","Saint-Pierre-Bois","Holving","Saint-Aubin-les-Forges","Miellin","Fromont","Guercheville","Beaumont-du-Gatinais","Chevrainvilliers","Recloses","Froncles","Mesnil-Sellieres","Saint-Leu-d'Esserent","Saint-Gratien","Iwuy","Montmorency-Beaufort","Celles-en-Bassigny","Pommiers","Villers-sous-Saint-Leu","Oisy","Calonne-sur-la-Lys","Jonchery-sur-Vesle","Roches-sur-Marne","Hautvillers","Rumigny","Moy-de-l'Aisne","Duisans","Godewaersvelde","Saint-Aubert","Ames","Fournival","Moyenneville","Saint-Imoges","Bourg-Sainte-Marie","Valdampierre","Vignacourt","Bussy-les-Daours","Goincourt","Anais","Arces","Saint-Priest-Taurion","Chateauneuf-la-Foret","Chatenet","Luxey","Masparraute","Escout","Aramits","Poey-de-Lescar","Yzosse","Urdos","Heugas","Agnos","Suhescun","Mornac-sur-Seudre","Masseret","Salles-la-Source","Montestruc-sur-Gers","Saint-Creac","Lacabarede","Guitalens","Lombez","Serres-Castet","BagnÃ¨res-de-Luchon","Saint-Georges-de-Poisieux","Mauze-sur-le-Mignon","Sereilhac","Paizay-le-Tort","Messanges","Arette","Levignacq","Serres-Sainte-Marie","Orsanco","Theze","Undurein","Cabariot","Mosnac","Gente","Saint-Clar-de-Riviere","Donzacq","Lagor","Montrabe","Villebrumier","Saint-Viance","Esnandes","Mieussy","Frangy","Champanges","Sergy","Montagnole","Genissiat","Thusy","Vaumas","Venthon","Habere-Lullin","Etaux","Saint-Yorre","Bellentre","Etercy","Faverges","Chapareillan","Seyssel","Allinges","La Lechere","Franclens","Doussard","Saint-Alban-du-Rhone","Saint-Jeoire-Prieure","Taninges","Les Gets","Peillonnex","Jonzier-Epagny","Ballaison","Amancy","Collonges-sous-Saleve","Trezioux","Corbonod","Vailly","Charvonnex","La Rochette-sur-Crest","Thones","Cercier","Morzine","Chamonix","Marin","MegÃ¨ve","Thorens-Glieres","Le Bois","Gerbaix","Saint-Offenge-Dessus","Onnion","Boege","Bonneguete","Mazeuil","Pers","Mauvezin-de-Prat","Saint-Martin-de-Lenne","Saint-Rome-de-Tarn","Saint-Jean-d'Aigues-Vives","Montgesty","Terssac","Lavardens","Saint-Amans-Valtoret","Barbezieux-Saint-Hilaire","Mignaloux-Beauvoir","Saint-Secondin","Auterive","Gouts","Vignes","Siros","Pouille","Betaille","La Sauve","Lavaur","Ouzilly","Rieumes","Borderes","Labastidette","Lautrec","Pont-de-Larn","Peyrusse-Massas","Piquecos","Jegun","Lanta","Loubille","Neuvic-Entier","Pimbo","Saint-Nicolas-de-la-Grave","Mas-Grenier","Villegailhenc","Perillos","Fontpedrosa","Montesquieu-des-Alberes","Corneilla-del-Vercol","Homps","Sainte-Anastasie-sur-Issole","Moussoulens","Domessargues","Tuchan","Popian","Beaufort","La Caunette","Asperes","el Volo","Saint-Papoul","Garons","Peyriac-Minervois","Verzeille","Tourbes","Assas","Peret","Mons","Alzonne","Aigaliers","Notre-Dame-de-la-Rouviere","Les Fonts","Collias","Cuxac-Cabardes","Villeneuve-la-Riviere","Saint-Bauzille-de-Putois","Annot","Roquesteron","La Motte-du-Caire","Longchamp","Amagney","Montagney","La Balme-d'Epy","Maiche","RenÃ¨ve","Fallerans","Meroux","Plottes","Montcey","Faucogney-et-la-Mer","Sellieres","Tamnay-en-Bazois","Liverdun","Hellimer","Jambles","Les Deux-Fays","Champs-sur-Yonne","Saint-Symphorien-d'Ancelles","Le Bonhomme","Wihr-au-Val","Loupershouse","Freistroff","Saint-Jean-Kourtzerode","Zimming","Clenay","Walscheid","Belleville-sur-Meuse","Rosenwiller","Dampierre-les-Bois","Domats","Velaine-en-Haye","Jolivet","Hombourg-Budange","Ciel","Pontigny","Romange","Fresne","Corcelles-les-Citeaux","Juilly","Membrey","Montret","Velle-le-Chatel","Arpenans","Saint-Amand-en-Puisaye","Savigny-sur-Clairis","Beure","Arc-et-Senans","Boesenbiesen","Breitenbach-Haut-Rhin","Kruth","Geneuille","Battrans","Pouilly-en-Auxois","Dommartin-les-Toul","Durstel","Ammerzwiller","Callas","Peipin","Montfroc","Mison","Tende","Revest-des-Brousses","Castelnaud-de-Gratecambe","Voultegon","Saint-Medard-en-Forez","Loubieng","Ygos-Saint-Saturnin","Came","Irissarry","Nere","Lamaziere-Basse","Fressines","Escondeaux","Marcilhac-sur-Cele","Noailhac","Preyssac-d'Excideuil","Berson","Saleich","Angely","Cologne","Biriatou","Larriviere-Saint-Savin","Garrosse","Exoudun","Saint-Augustin","Chaillac-sur-Vienne","Sanxay","Matha","Berdoues","Campuac","Bach","Saint-Jean-de-Laur","Belmontet","Sauveterre-la-Lemance","Narrosse","Auvillar","Nanteuil-en-Vallee","Claix","Brioude","Laussonne","Arpajon-sur-Cere","Le Falgoux","Chilhac","Job","Orleat","Teissieres-de-Cornet","Saint-Remy-sur-Durolle","Ally","Aulhat-Saint-Privat","Lorlanges","Tiranges","Le Chambon","Seuillet","Couzon","Vollore-Ville","Saint-Leopardin-d'Augy","Isle-et-Bardais","Marcillat-en-Combraille","Huriel","Courcais","Saint-Germain-des-Fosses","Saint-Desire","Le Mayet","Lurcy-Levis","Yronde-et-Buron","Lapalisse","Prix","Aydat","Saint-Pont","Saint-Germain-Laprade","Domaize","Le Brugeron","Monetay-sur-Loire","Yssac-la-Tourette","Roannes-Saint-Mary","Beauzac","Ronnet","Saint-Remy-en-Rollat","Chambon-sur-Lac","Saint-Genes-du-Retz","Saint-Ours","La Chapelle-Laurent","Nonette","Montfermy","Ainay-le-Chateau","Mazet-Saint-Voy","Berzet","Pierrefort","Servant","Saint-Jean-des-Ollieres","Malrevers","Chanteuges","Arsac-en-Velay","Saint-Maigner","Vertolaye","Saint-Martin-Valmeroux","Riom-es-Montagnes","Saint-Agoulin","Murat","Chassagnes","Velzic","Bucheres","Frechencourt","Beaucamps-le-Vieux","Hantay","Vaudesson","Folembray","Fralignes","Aigny","Pougy","Breuvannes-en-Bassigny","Valcourt","Premontre","Pouilly-sur-Serre","Corbeny","Thonnance-les-Joinville","Orrouy","Urcel","Flavacourt","Ormoy-Villers","Moulin-sous-Touvent","Pogny","Poligny","Venteuil","Larzicourt","Poinsenot","Courtenot","Chassemy","Leme","Machemont","Vauchelles-les-Quesnoy","Ribemont","Montmartin","Vesigneul-sur-Coole","Bassu","Vaudemange","Montjavoult","Esmery-Hallon","Vendeuil-Caply","Vauchelles","Montigny-Lengrain","Bonneuil-les-Eaux","Thiers-sur-Theve","Montagny-en-Vexin","BlÃ©rancourt","Vermand","Vivier","Chacenay","Coupeville","Ambrieres","Chambors","Fresne-Cauverville","Saint-Fuscien","Le Vaumain","Offoy","Rivecourt","Aveluy","Roucy","Margencel","Combloux","Abondance","Fillinges","Challex","Tresserve","Aiton","Cornier","Vinzier","Le Grand-Bornand","Colomieu","Leysse","Surat","Lullin","Champfromier","Landry","Mont-Saxonnex","Chens-sur-Leman","Saint-Gervais-les-Bains","Draillant","Chainaz-les-Frasses","Perrignier","Arbusigny","Metz-Tessy","Lully","La Combelle","Araches-la-Frasse","Laissaud","Moens","Le Bourget","Ceyssat","Neussargues-Moissac","Bellevaux","Arenthon","Villy-le-Pelloux","Cordon","Le Cendre","Le Vernet","Viry","Ygrande","Sales","Sauvessanges","Neydens","Rosieres","Chevrier","Buis-les-Baronnies","Afa","Eygalieres","Greoux-les-Bains","Rognonas","Cabannes","Saumane-de-Vaucluse","Sisco","Sarrola-Carcopino","Tavera","Solaro","Saint-Christol","Baume-les-Messieurs","Veynes","Saint-Michel-lObservatoire","Meyreuil","Le Castellet","Grimaud","Nans-les-Pins","Taradeau","Yvette","Saint-Hilliers","Chevry-Cossigny","Montry","Fourches","Gouze","Urcuit","Sainte-Marie-de-Re","Chire-en-Montreuil","Albas","Lapenche","Saulge","Saint-Martin-de-Riberac","Mouthiers-sur-Boeme","Saint-Laurs","La Coudre","Saint-Georges-de-Didonne","Listrac-MÃ©doc","Durfort","Livron","Lahourcade","Cornac","Bignac","Liguge","Cours-de-Monsegur","Reparsac","Maisontiers","Beauvoir-sur-Niort","Martiel","Darney","Liocourt","Villers-sous-Preny","Viomenil","Rosieres-en-Haye","Bartenheim","Bietlenheim","Chatenois-les-Forges","MontmÃ©dy","Athesans-Etroitefontaine","Ecuisses","Gruey-les-Surance","Jeuxey","Allondrelle-la-Malmaison","Cheminot","Diebling","Montreux-Jeune","La Charmee","Magny-sur-Tille","Sassenay","Beinheim","Guerlesquin","Saint-Carne","Locquemeau","Damgan","Lanhelin","Sizun","Plougrescant","Tremel","Logonna-Daoulas","Les Ormes","Bazouges-la-Perouse","Tremblay","Dolo","Saint-Goazec","La Gouesniere","Plouvara","Langrune-sur-Mer","Beauchamps","Fontaine-les-Bassets","Le Renouard","Portbail","Periers","Grentheville","Couvains","Auvillars","Varaville","Marchesieux","Saussey","Courcy","Marcilly-sur-Eure","Reviers","Saint-Jean-des-Champs","Esquay-sur-Seulles","Vauville","Perrou","Monts-en-Bessin","Bacilly","La Meauffe","Saint-Ebremond-de-Bonfosse","Louatre","Moyvillers","Houlle","Campagne-les-Hesdin","Journy","Fontaine-sur-Somme","Coeuvres-et-Valsery","Buire-le-Sec","Chalandry-Elaire","Messon","Thennelieres","Les Petites Loges","Wailly-Beaucamp","Doingt","Hargnies","Mareuil-Caubert","Vauxtin","Lagny-le-Sec","Fressain","Merignies","Camiers","Mortefontaine-en-Thelle","Chouy","Bourbonne-les-Bains","Falaise","Verneuil","Neuvy","Bonnet","Anzat-le-Luguet","Brassac-les-Mines","Queyrieres","Saint-Just-en-Chevalet","Saint-Priest-des-Champs","Montfaucon-en-Velay","Auzon","Le Mont-Dore","Frugeres-les-Mines","Manzat","Marmanhac","Villedieu","Mazeyrat-d'Allier","Champs-sur-Tarentaine-Marchal","Laqueuille","Vergongheon","Charbonnieres-les-Varennes","Moissat","Condat","Effiat","Saint-Gervazy","Ayrens","Saint-Julien-de-Coppel","Olby","Montel-de-Gelat","Andelot-Morval","Saligny-sur-Roudon","Aulnat","Aveze","Olmet","Vigouroux","Lozanne","Le Crest","Paulhac","Vassel","Youx","Beauregard-l'Eveque","Saint-Nectaire","Saint-Mamet-la-Salvetat","Montmarault","Vert","Maffliers","Chaufour-les-Bonnieres","Saint-Louis-de-Montferrand","Sigoules","Fleac","Mourioux-Vieilleville","Bosmie-l'Aiguille","Monsempron-Libos","Grun-Bordas","Villemort","Castelsagrat","Le Vernet","Gourge","Crazannes","Marcay","Venerand","Brieuil-sur-Chize","Samoreau","Courquetaine","Chauvry","Saint-Germain-sous-Doue","Montagny-les-Seurre","Savoyeux","Epertully","Tendon","Belleau","Val-et-Chatillon","Diarville","Sauvigney-les-Pesmes","Pexonne","Montcenis","Lucy-sur-Cure","Saint-Laurent-la-Roche","Longecourt-en-Plaine","Mantoche","Chieulles","Abbeville-les-Conflans","Ogeviller","Uxegney","Friauville","Bellechaume","Pouilley-Francais","Choye","Pommard","Sainte-Lucie de Porto-Vecchio","Calenzana","Santa-Maria-Poggio","Lourmarin","Furiani","Rauville-la-Place","Saint-Lo-d'Ourville","Beaumont-Hague","Le Menil","Cartigny-l'Epinay","Dives-sur-Mer","Grangues","Hebecrevon","Coulouvray-Boisbenatre","Radon","Ranes","Tournieres","Le Mesnil-Vigot","Marolles","Bricqueville-sur-Mer","Moyon","Urou-et-Crennes","Airel","Saint-Quentin-sur-le-Homme","Saint-Martin-de-Blagny","Menil-Erreux","Croisilles","Montgaroult","Contres","Toury","Saint-Georges-sur-Cher","Etrechy","Veretz","Coullons","Civray","Luze","Levroux","Fay-aux-Loges","Neuil","Sainville","Pierres","Chanteau","Lamotte-Beuvron","Saint-Claude-de-Diray","Clery-Saint-Andre","La Selle-en-Hermoy","Chatres-sur-Cher","Saint-Quentin-sur-Indrois","Bonny-sur-Loire","Segry","Valence-sur-Baise","Les Varennes","Pressignac-Vicq","Lavergne","Saint-PÃ©-dArdet","Galie","Fontcouverte","Touzac","Gagnac-sur-Garonne","Rignac","Pontcirq","Lussac-les-Eglises","Bouex","Combrand","Malegoude","Calmont","Ardillieres","Bord","Vaureilles","Saint-Sulpice-les-Feuilles","Nieul-le-Virouil","Biard","Celon","Bouzy-la-Foret","Chemery","Marville-les-Bois","Neung-sur-Beuvron","La Marolle-en-Sologne","Le Bardon","Luant","Darvoy","Chateauneuf-sur-Loire","Jargeau","Villemeux-sur-Eure","Le Poinconnet","Maslives","Cravant-les-Coteaux","Chabris","Jallans","Neuvy-Saint-Sepulchre","Muides-sur-Loire","Lestiou","Billy","Chatillon-Coligny","Saint-Maurice-sur-Fessard","Chevillon-sur-Huillard","Saint-Avit-les-Guespieres","Saint-Hilaire-Saint-Mesmin","Saint-Genies-Bellevue","Maillebois","Arnouville-les-Mantes","Alban","Sainte-Blandine","La Charme","Gelles","Le Plessis-Robinson","Saint-Priest-la-Roche","Lancieux","La Trimouille","Bidarray","Urt","Saint-Abit","Ordiarp","Garris","Domezain-Berraute","Escou","Gelos","Lespielle","Arraute-Charritte","Helette","Alos-Sibas-Abense","Arbonne","Lons","Ousse","Bernadets","Gabat","Bussunarits-Sarrasquette","Montestrucq","Irouleguy","Anhaux","Auga","Uzein","Lasseube","Bielle","Arthez-d'Asson","Claracq","Woustviller","Remelfing","Chantraine","Chateauneuf-en-Thymerais","Castelnau-Montratier","Tremery","Villaines-sous-Bois","Bergholtz","Montalieu-Vercieu","Les Landes-Genusson","Bretteville-sur-Laize","Wignehies","Neuve-Maison","Castelnau-de-Montmiral","Cepoy","Verneuil-l'Etang","Saint-Amancet","Ablis","Saint-Michel-sur-Meurthe","Rumersheim-le-Haut","Magstatt-le-Haut","Dietwiller","Arpheuilles-Saint-Priest","Boissy-Fresnoy","Bressolles","Savigny","Vouillers","Brienne-la-Vieille","Chalette-sur-Voire","Chailly-en-Biere","Barbatre","Noirmoutier-en-l'Ile","Les Essarts","Langeais","Ginestas","Saint-Eloi","Condezaygues","Saint-Vaast-les-Mello","Coursan","Port-la-Nouvelle","Luc","Castres-Gironde","Fourchambault","Areines","Escames","Pouilly","Feuquieres","Grandvilliers","Orny","Marsais-Sainte-Radegonde","Achatel","Marigny-les-Usages","Rebrechien","Loury","Noailles","Le Pout","Creon-d'Armagnac","Belcodene","Tavaux","Poligny","Les Epesses","Morez","Morbier","Les Rousses","Premanon","Reiners","Amelie-les-Bains-Palalda","Baho","Sant Joan de Pladecorts","Ceret","Sant Genis de Fontanes","Jassans-Riottier","Reiningue","Les Peintures","Saacy-sur-Marne","Saint-Georges-de-Reneins","Chauffailles","La Clayette","Jouy-sur-Morin","Poule-les-Echarmeaux","Anor","Trelon","Gourdan-Polignan","Ousson-sur-Loire","Chatillon-sur-Loire","Le Temple-de-Bretagne","Traubach-le-Bas","Kilstett","Bray-en-Val","Grundviller","Saint-Jean-Rohrbach","Antilly","Coupru","Landelles","Fresnay-le-Gilmert","Airaines","Oisemont","Pierrevillers","Lauterbourg","Saint-Barthelemy-Lestra","Marcilloles","Juilly","Plancher-Bas","Recologne-les-Rioz","Esquerchin","Saint-Fulgent","Brax","Saint-Rambert-d'Albon","Montmeyran","Barbieres","Varzay","Cancale","Orbeil","Dadonville","Massiac","Saint-Flour","Martres-Tolosane","Roquefort-sur-Garonne","Vic-sur-Cere","Maureville","Le Port","Harbonnieres","Entressen","Clermont","Dimechaux","Gouves","Aubigny-en-Artois","Capelle-Fermont","Bourcefranc-le-Chapus","Etaules","Bretteville-l'Orgueilleuse","Pouligney-Lusans","Vieilley","Pelousey","Recologne","Valay","Tassille","Longevelle-sur-Doubs","Etouvans","Chadrac","Craincourt","Gresy-sur-Aix","Layrac","Saint-Pargoire","Astaffort","Bossendorf","Roeschwoog","Haussy","Seltz","Lapalud","Piolenc","Nesles","Rang-du-Fliers","Boisjean","Cucq","Trepied","Vendemian","Marqueglise","Le Mesnil-Amelot","Corbeilles","Fressies","Flines-les-Mortagne","Thun-Saint-Amand","Quievrechain","Salbris","Liffol-le-Grand","Aslonnes","Argeles-Gazost","Ordan-Larroque","Vic-Fezensac","Verdun-sur-le-Doubs","Andancette","Beausemblant","Raches","Sachin","Pernes","Vieux-Berquin","La Gorgue","Saint-Jeoire","Bloye","Saint-Trivier-sur-Moignans","Travecy","Saint-Etienne-d'Albagnan","Saint-Martin-de-Londres","Saint-Mathieu-de-Treviers","Ault","Weislingen","Bray-sur-Somme","Querqueville","Mailly-Maillet","Richardmenil","Ceintrey","Pulligny","Gomelange","Chessy","Marmagne","Coincy","Villers-sur-Fere","Morre","Gerbecourt-et-Haplemont","Montfaucon","Hery-sur-Alby","Vasselay","Anglefort","Viesly","Cers","Bieville-Beuville","Maussane-les-Alpilles","Soultzmatt","Roquefort-la-Bedoule","Saint-Piat","La Dominelais","Bourg-Blanc","Coulandon","Verrieres","Terrasson-Lavilledieu","Mazeray","Marcillac-la-Croisille","Bonzac","Boult-sur-Suippe","Campagne-les-Wardrecques","Marcoing","Marcamps","Saint-Aigulin","Authouillet","Ricarville","Bonnebosq","Angerville-l'Orcher","Le Torquesne","Bourth","Meyras","Saint-Laurent-sur-Gorre","Varetz","La Baussaine","Cheverny","Bozel","Pray","Villesiscle","Sannerville","Saint-Julien-sur-Sarthe","Martainville-Epreville","Saint-Vivien-de-Medoc","Frechou","Montelier","Argeliers","Chalezeule","Turquant","Greolieres","Pargny-Filain","Le Luart","Parce-sur-Sarthe","Pern","Pierregot","Quinsac","La Martiniere","Lauris","La Couronne","Aurons","Saint-Agreve","Saint-Remeze","L'Houmeau","Troussencourt","Meilhan-sur-Garonne","Peypin-d'Aigues","Jouy-sur-Eure","Carcans","Le Mas-d'Agenais","Ingrandes","Balbigny","Saint-Medard-d'Aunis","Les Molieres","Malemort-du-Comtat","Faverolles-sur-Cher","Cublac","Feytiat","Lubersac","Contigne","Aigne","Dourdain","Laugnac","Le Molard","Ceyzeriat","Montverdun","Salleles-d'Aude","Contoire","Saint-Valery-sur-Somme","Puchevillers","Prasville","Sille-le-Guillaume","Tuffe","Saint-Julien-de-Cassagnas","Coirac","Emieville","Plounevezel","Clavette","Aougny","Raucourt-et-Flaba","Audun-le-Roman","Bouer","Lignieres-la-Carelle","Etriac","La Halle","Mesnil-sur-l'Estree","Flamanville","Laguenne","Bagnoles-de-l'Orne","La Vespiere","Meslay","Bourganeuf","La Dagueniere","La Possonniere","Bersee","Fretin","Faumont","Courcemont","Saint-Germain-les-Belles","Saint-Germain-les-Vergnes","Oblinghem","Cagnicourt","Troisvilles","Riantec","Saint-Honore-les-Bains","Garchizy","La Feuillade","Yssandon","Aigremont","Blanzy","Aiguebelle","Serrieres-en-Chautagne","Cours-les-Barres","Saint-Martin-des-Olmes","Saint-Cezaire-sur-Siagne","Nueil-sur-Layon","La Romagne","Fiennes","Rebreuviette","La Fouillouse","Busigny","Saramon","Sainte-Croix-Volvestre","Courbeveille","Saint-Aubin-des-Chateaux","Espira-de-Conflent","Vendin-les-Bethune","Le Pont-de-Claix","Marienthal","Sempigny","Pennautier","Jacou","Orvillers-Sorel","Agny","Chatenoy-le-Royal","La Chapelle-Gauthier","Saint-Victor-sur-Arlanc","Grezieu-la-Varenne","Peronnas","Hauteville-les-Dijon","Givry","Mardeuil","Octeville","Urville-Nacqueville","Crissey","Nouvion-le-Comte","Mesanger","Serezin-du-Rhone","Lucenay","Durtol","Griesheim-pres-Molsheim","Balan","Dagneux","Croissy-Beaubourg","Saleux","Vers-sur-Selles","Hautvillers-Ouville","Tatinghem","Lompret","Nuelles","Angicourt","Brenouille","Mornac","Latour-Bas-Elne","La Grand-Croix","Saint-Paul-en-Jarez","Saint-Martin-la-Plaine","Bouzincourt","Ovillers-la-Boisselle","Meaulte","Saint-Rambert-l'Ile-Barbe","Frucourt","Charnay","Vicq","Athies","Perouse","Danjoutin","Rouffiac-Tolosan","Saint-Amarin","Sigloy","Chaingy","Rochemaure","Grane","Espagnac","LIsle-dEspagnac","Sainte-Fortunade","Civrieux-d'Azergues","Lissieu","Izeaux","Sillans","Carnon-Plage","Penchard","Chanteheux","Neuilly-les-Dijon","Montmorot","Chamboeuf","Fenain","Fein","Cambronne-les-Ribecourt","Pimprez","Algolsheim","Wolfgantzen","Attenschwiller","Orry-la-Ville","Cendras","Vieux","Fragnes","Geanges","Verjux","Pfulgriesheim","Millery","Le Pouzin","Nay","Huttenheim","Jardin","La Ferte-Saint-Cyr","Veyras","Coux","Chancelade","Le Treport","Widensolen","Sundhoffen","Andolsheim","Friville-Escarbotin","Woincourt","Chaleze","La Gavotte","Cruscades","Ahuy","Lancey","Saint-Romain-de-Colbosc","Loyettes","Bonnelles","Mareil-en-France","Fontenay-en-Parisis","Saint-Witz","Pluvault","Rilhac-Rancon","Yversay","Mably","Bailleul-sur-Therain","Warhem","Lupstein","Saint-Andre-de-Corcy","Detrier","Arvillard","Soucieu-en-Jarrest","La Ferte-Alais","Estouches","Chalou-Moulineux","Trilbardou","Precy-sur-Marne","Puisieux","Etrepilly","Viry-Noureuil","Pierremande","Vendegies-sur-Ecaillon","Sireuil","Gensac-la-Pallue","Fesches-le-Chatel","Villers-Saint-Sepulcre","Guerard","Villeneuve-les-Maguelone","Ury","Donnemarie-Dontilly","Villecerf","La Madeleine-sur-Loing","Episy","Paimboeuf","Saint-Martin-de-Fontenay","Ottrott","Sainte-Marie-aux-Mines","Chavagne","Chonas-l'Amballan","Caudrot","Saint-Prim","Saint-Remy-l'Honore","Tacoignieres","Nogent-le-Phaye","Happonvilliers","Neron","Saint-Martin-de-Nigelles","Logelbach","Arnieres-sur-Iton","Hordain","Bouchain","Mastaing","Courteranges","Saultain","Jujurieux","Mionnay","Leudeville","Courson-Monteloup","Chalo-Saint-Mars","Coutevroult","Boussens","Villieu-Loyes-Mollon","Saint-Eloi","Boulzicourt","Nogent-l'Artaud","Grand-Rozoy","Orlu","Clairoix","Voulx","Dormelles","Cadillac-en-Fronsadais","Saint-Geoirs","Limoges-Fourches","Crisenoy","La Bridoire","Saint-Beron","Romagnieu","Heiligenberg","Gresswiller","Mettray","Boigneville","Beguey","Cadillac","Poigny-la-Foret","Alissas","Schoeneck","Pfettisheim","Pomeys","Coise-Saint-Jean-Pied-Gauthier","Saint-Gilles-des-Marais","Tossiat","Journans","Chalamont","Montceaux-les-Meaux","Changis-sur-Marne","Saint-Jean-les-Deux-Jumeaux","Sailly-Labourse","Saint-Georges-sur-Fontaine","Mannevillette","Carneville","Saugon","Berville-sur-Seine","Cormes","Cherreau","Chauffry","Villemarechal","Lorrez-le-Bocage-Preaux","Bransles","Chenou","Chatenoy","Marlenheim","Saint-Symphorien-dOzon","Mortcerf","Betz","Guines","Razac-sur-lIsle","Fremainville","Latresne","Tourville-sur-Sienne","Galgon","Ittenheim","Marmoutier","Dimbsthal","Bourogne","Beaucourt","Cuzieu","Saint-Andre-le-Puy","Bar-sur-Aube","Goupillieres","Villiers-le-Mahieu","Marcq","La Feuillie","Villers-Semeuse","Pencran","Saint-Vigor","Barbizon","Le Pont","Malissard","Esery","Roppe","Phaffans","Champeaux","Devecey","Auxon-Dessous","Oingt","Frontenas","Les Olmes","Saint-Thibault-des-Vignes","Pollestres","Druillat","Andance","Fleurey-sur-Ouche","Perruel","Marssac-sur-Tarn","Florentin","Redessan","Cande-sur-Beuvron","Saint-Sixt","Chatenay-sur-Seine","Lachapelle-sous-Chaux","Lepuix","Giromagny","Le Sacq","Saint-Bauzille-de-Montmel","Ouroux","Ouroux-sur-Saone","Etrelles","Alby-sur-Cheran","Wentzwiller","Folgensbourg","Nothalten","Saint-Martin-des-Bois","Albias","Rosny-sur-Seine","Porcheville","La Guerche-de-Bretagne","Killem","Saint-Medard-d'Eyrans","Parempuyre","Chatonnay","Villars-Brandis","Moutiers","Monneville","Neuville-Bosc","Villargondran","Bessens","Saint-Hilaire-lez-Cambrai","Saint-Pardoux-du-Breuil","Miramont-de-Guyenne","Saint-Fiacre-sur-Maine","Haute-Isle","Ponthevrard","Fontenay-le-Vicomte","Beaurains","Vriange","Feigeres","Le Louroux-Beconnais","Saint-Sernin-du-Bois","Le Breuil","Saint-Morillon","Le Tourne","Mons-en-Pevele","Souvigne-sur-Sarthe","Chatel-de-Neuvre","Pontcarre","Saint-Cyr-la-Campagne","Le Thuit-Signol","Warlus","Aubers","Fromelles","Lescherolles","Villiers-Saint-Georges","Trainel","Dhuisy","Tancrou","Jouy-le-Chatel","Everly","Pamfou","Arinthod","Belgentier","Le Champ-pres-Froges","Gironcourt-sur-Vraine","La Terrasse","Lumbin","Etables","Barisey-au-Plain","Cepet","Jalogny","Porcieu-Amblagnieu","Briennon","Eveux","Guegon","Gourhel","Taupont","Chasselay","Chevannes","Villaries","Vacquiers","Boissise-la-Bertrand","Boulancourt","Villetelle","Verargues","Serres-Morlaas","Villotte-sur-Aire","Chanonat","La Roche-Blanche","Saint-Gelais","Themericourt","Commeny","Oelleville","Bressolles","Nievroz","Ballan-Mire","Lempdes","Longchamp-sous-Chatenois","Rouvres-la-Chetive","Thoissey","Bligny-les-Beaune","Chassey-le-Camp","Puligny-Montrachet","Saint-Martin-du-Bois","Sailly-lez-Cambrai","Roumazieres","Saint-Rogatien","Granges-sur-Vologne","Aumontzey","Foussemagne","Novillard","Dierre","Saint-Germain-des-Pres","Chailly-en-Gatinais","Saint-Benoit-sur-Loire","Ladon","Garlin","Dry","Boynes","Trigueres","Ascheres-le-Marche","Coudroy","Estouy","Briarres-sur-Essonne","Batilly-en-Gatinais","Griselles","Nogent-sur-Vernisson","Sermaises","Douchy","Ardon","Ligny-le-Ribault","Auvilliers-en-Gatinais","Ondreville-sur-Essonne","Charsonville","Sennely","Cerdon","Mareau-aux-Pres","Thou","Girolles","Erceville","Guigneville","Tivernon","Boulay-les-Barres","Tournoisis","Rozieres-en-Beauce","Sougy","Yevre-la-Ville","Saint-Maurice-sur-Aveyron","Artenay","Chatillon-le-Roi","Bazoches-sur-le-Betz","Andonville","Saint-Brisson-sur-Loire","Bonnee","Dampierre-en-Burly","Arrabloy","Ascoux","Bazoches-les-Gallerandes","Louzouer","Villemurlin","Beaulieu-sur-Loire","Gidy","Bouafles","Ettendorf","Puyreaux","Les Loges-en-Josas","Etzling","Imling","Saint-Etienne-la-Varenne","Etaimpuis","Saint-Donan","Le Mesnil-le-Roi","Etauliers","Merigny","Roquebilliere","Villabon","Ferin","Lussat","La Greve-sur-Mignon","Conches-sur-Gondoire","Queyrac","Marsainvilliers","Camlez","Chitenay","Courcerac","Esclainvillers","Sainte-Anne-sur-Vilaine","Tregourez","Sainte-Marguerite-des-Loges","Mornay-sur-Allier","Auzouer-en-Touraine","La Guierche","Lassigny","Hesingue","Baulne","Gometz-la-Ville","Saint-Aunes","Lavardin","Uberach","Juigne-sur-Loire","Frauenberg","Moult","Aveize","Moulins-Engilbert","Ossun","Loire-les-Marais","Ferrieres","Saint-Jean-le-Centenier","Saint-Uze","Montvendre","Colombier-le-Vieux","Saint-Christophe-du-Bois","Thaire","Sceaux-sur-Huisne","Souligne-sous-Ballon","Rochegude","Villevocance","Ancone","Saint-Alban-d'Ay","Bazouges-sur-le-Loir","Flee","Saint-Augustin","Roiffieux","Epinouze","Vallans","Chambon","Saint-Victurnien","Fresnay-sur-Sarthe","Donzy-le-Pertuis","Peaugres","Sault","Vitrimont","Bully","Morance","Liergues","Marnes-la-Coquette","Jussy","Alteckendorf","Saint-Andre-Farivillers","Bonlier","Ivry-le-Temple","Allonne","Silly-le-Long","Ver-sur-Launette","Antilly","Ressons-sur-Matz","Plessis-de-Roye","Longueil-Sainte-Marie","Angy","Bailly","Monceaux","Gremevillers","Rousseloy","Moliens","Formerie","Fresnoy-la-Riviere","Rouville","Tartigny","Beauvoir","Valescourt","Cuigy-en-Bray","Rainvillers","Songeons","Berneuil-sur-Aisne","Marseille-en-Beauvaisis","Cuvergnon","Cuise-la-Motte","Dernancourt","Saint-Leger-les-Domart","Ayencourt","Canaples","Criel-sur-Mer","Morisel","Ham","Coivrel","Saint-Aubin-sous-Erquery","Eppeville","Jonquieres","Liancourt-Saint-Pierre","Fourdrinoy","Saint-Aubin-en-Bray","Ablaincourt-Pressoir","Annesse-et-Beaulieu","Marsac-sur-lIsle","Coursac","Dauendorf","Sayat","Beaumont","Wimille","Hautot-sur-Mer","Mattexey","Locmaria-Grand-Champ","Mine de Bert","Hastingues","Moussy-le-Neuf","Montredon-des-Corbieres","Er","Espezel","Molieres-sur-Ceze","Fons","Nevian","Saint-Etienne-du-Valdonnez","Mauressargues","Aubord","Saint-Mamert-du-Gard","Siran","Arrigas","Valliguieres","Pouzilhac","Cazevieille","Estagel","Cazilhac","Fendeille","Graissessac","Prades","Fosse","Fressac","Vacquieres","Montbel","Nizas","Montpezat","Saint-Dionisy","Embry","Aubry-du-Hainaut","Le Doulieu","Auchy-lez-Orchies","Frelinghien","Soulanges","Peroy-les-Gombries","Tricot","Amigny-Rouy","Pont-de-Metz","Cliron","Montmirail","Gouy-en-Ternois","Savy-Berlette","Burbure","Rodelinghem","Recques-sur-Course","Bussy-le-Chateau","Blingel","Hubersent","La Houssoye","Pont-Noyelles","Grandchamp","Dammartin-en-Serve","Breuil","Condecourt","Saulx-Marchais","Les Jumeaux","Fericy","Gressy","Grainville","Marlotte","Villevaude","Liverdy-en-Brie","Mons-en-Montois","Espirat","Le Theil","Roffiac","Bergonne","Saint-Hippolyte","Coudes","Commentry","Le Breuil-sur-Couze","Lachaux","Segonzat","La Chaise","Saint-Sandoux","Champagnac-le-Vieux","Pignols","Vallon-en-Sully","Chauriat","Gennetines","Le Donjon","Saint-Didier-en-Donjon","Le Broc","Saint-Floret","Vernines","Saint-Maurice-de-Lignon","Ceaux-d'Allegre","Fayet-le-Chateau","Parent","Le Vigean","Landogne","Culhat","Felines","Malicorne","Pebrac","Paslieres","Randan","Bains","Perrier","Le Pin","Lacapelle-Viescamp","Fournols","Chirat-l'Ã‰glise","Fleuriel","Brousse","Les Ancizes-Comps","Menetrol","Abrest","Loubeyrat","Verneugheol","Colondannes","Exideuil","Roquecor","Le Segur","Cardaillac","Caragoudes","Puybegon","Burlats","Cazaux-Layrisse","Rouffignac-Saint-Cernin-de-Reilhac","Salles-de-Barbezieux","Fougeres","Salles-Mongiscard","Castels","Loupes","Donnezac","Meilhan","Le Pizou","Saint-Romain-la-Virvee","Sarrazac","Vaulry","Idrac-Respailles","Saint-Laurent-de-Levezou","Saint-Elix-Seglan","Castelnau-de-Levis","Tournecoupe","Conne-de-Labarde","Sainte-Eulalie-en-Born","Mescoules","Razac-d'Eymet","Pissos","Sainte-Foy-de-Longas","Chaignay","Savouges","Pouilley-les-Vignes","Lixheim","Ars-Laquenexy","Boucheporn","Jarmenil","Gosselming","Damerey","Le Planois","Rodern","Hindlingen","Bisel","Echavanne","Bougnon","Dounoux","Nomeny","Benney","Manoncourt-sur-Seille","Bazien","Le Gratteris","Olwisheim","Fey","Gerbeviller","Marcilly-en-Bassigny","L'Etang-Vergy","Thal-Drulingen","Kesseldorf","Daubensand","Darnieulles","Etival","Saint-Martin-du-Puy","Dancevoir","Montcoy","Champdotre","Thenissey","Chalampe","Chichery","Laneuvelotte","Brin-sur-Seille","Buthiers","Aumont","Precy-sur-Vrin","Lamarche","Chaligny","Valmestroff","Troissy","Lambert","Mareuil-le-Port","Pernes-les-Boulogne","Estree-Blanche","Boutancourt","Reumont","Moyenneville","Moulle","Tubersent","Leval","Villers-Helon","Passel","Villenauxe-la-Grande","Chatonrupt-Sommermont","Pouan-les-Vallees","Enencourt-le-Sec","Wirwignes","Thivencelle","Clairmarais","Esquelbecq","Stella-Plage","Fauquembergues","Roquetoire","Selles","Rouvroy-sur-Audry","Laifour","Berthen","Saint-Floris","Rouilly-Sacey","Elincourt","Plumoison","Barastre","Mametz","Courcelles-Epayelles","Villers-Saint-Frambourg","Mondrepuis","Chatres","Compertrix","Ville-sur-Lumes","Leuilly-sous-Coucy","Estrees-les-Crecy","Wandignies-Hamage","Croisette","Maninghen-Henne","Pierrerue","Vescovato","Taglio-Isolaccio","ChÃ¢teauneuf-du-Pape","Belgodere","Castello-di-Rostino","Cairanne","Puimichel","Menerbes","Muro","Poggio-dOletta","Saint-Privat-d'Allier","Loubaresse","Mezeres","Villefranche-d'Allier","Neure","Allier","Saint-Front","Madriat","Salzuit","Fontannes","Dingy-Saint-Clair","Crevant-Laveine","Salers","Saint-Dier-d'Auvergne","Roumegoux","Villebret","Sauret-Besserve","Champagnac","La Forie","Auvers","Malintrat","Vorey","Aigueperse","Chateldon","Viplaix","Desertines","Saint-Jeures","Beon","Pessat-Villeneuve","Olloix","Saint-Illide","Thuret","Trizac","Souvigny","Lyaud","Herisson","La Bourboule","Solignac-sur-Loire","Saint-Offenge-Dessous","Menat","Pralognan-la-Vanoise","Chapeiry","Armoy","Saint-Bonnet-les-Allier","Ollieres","Juvigny","Toulouzette","Saint-Paul","Laurede","Courlay","Villejesus","Chamberet","Vieux-Boucau-les-Bains","Atur","Castelmoron-sur-Lot","Saint-Amand-de-Belves","Maurens","Saint-Michel-de-Rieufret","Riberac","Antagnac","Segalas","Moulin-Neuf","Anglade","Les Eglises-d'Argenteuil","Faye-l'Abbesse","Tecou","els Banys de la Presta","Saint-Geours-d'Auribat","Abere","Lit-et-Mixe","Villefranche-du-Queyran","Lussac-les-Chateaux","Eybouleuf","Gardonne","Trie-sur-Baise","Virelade","Corgnac-sur-lIsle","Chenaud","Abzac","Saint-Julien-de-Lampon","Cameyrac","Candresse","Monferran-Saves","Magnan","Beyrede-Jumet","Bascons","Thorigny","Bouin","Lavardin","Bouere","La Chapelle-Heulin","Andreze","La Plaine","Le Mesnil-en-Vallee","Champtoce-sur-Loire","Souzay-Champigny","Le Marillais","Mansigne","Saint-Martin-du-Bois","Saint-Remy-la-Varenne","La Chataigneraie","Bel Air","Trange","Rablay-sur-Layon","La Marche","Astille","Vendrennes","Serigne","Corze","Rammersmatt","Vantoux","Avril","Soing-Cubry-Charentenay","Maux","Bierry-les-Belles-Fontaines","Heiteren","Poilly-sur-Tholon","Griselles","Cessey","Bosjean","Villevallier","Magny-les-Villers","Sommerviller","Champey-sur-Moselle","Fains-Veel","Champenoux","Waldweistroff","Mondelange","Molesme","Dornes","Dompierre-les-Ormes","Vernierfontaine","Soissons-sur-Nacey","Matzenheim","Maidieres","Rurange-les-Thionville","Bellefontaine","Chambley-Bussieres","Ruffey-les-Echirey","Courgis","Lenoncourt","Villers","Plombieres-les-Bains","Foameix-Ornel","Manonviller","Hultehouse","Crusnes","Bocquegney","Corgoloin","Vincelles","Grozon","Roye","Aze","Echenans","Ronno","Arlebosc","Remuzat","Courzieu","Chuzelles","Peray","Saint-Cyr-le-Chatoux","Violay","Lurcy","Sarras","Chabrillan","Albon-d'Ardeche","Dompierre-sur-Veyle","Rozier-en-Donzy","Marols","Saint-Bonnet-le-Chateau","Ville-sous-Anjou","Saint-Andre-en-Vivarais","Saint-Laurent-d'Agny","Champdieu","Saint-Clair-sur-Galaure","Chambonas","Lezigneux","Saint-Sixte","Groissiat","Vocance","Mirabel-aux-Baronnies","Saint-Denis-sur-Coise","Les Etangs","Beauvene","Saint-Michel-de-Chabrillanoux","Chevalet-le-Haut","Saint-Victor-sur-Rhins","Thoirette","Genet","Versailleux","Ancy","Sainte-Consorce","Merignat","Mours-Saint-Eusebe","Chalencon","Saint-Romain-les-Atheux","Doissin","Serezin-de-la-Tour","Saint-Georges-Haute-Ville","Dargoire","Saint-Andeol-de-Vals","Berzeme","Quincie-en-Beaujolais","Saint-Jean-des-Vignes","Chozeau","Perrex","Birieux","Saint-Genest-Malifaux","Jons","Lapeyrouse-Mornay","Dareize","Faverges-de-la-Tour","Artas","Malmont","Saint-Trivier-de-Courtes","Saint-Pierre-de-Boeuf","Vaulx-Milieu","Romain","Saint-Pierre-de-Bressieux","Saint-Victor-sur-Loire","Lent","Tremons","Neuvy-Bouin","Celle-Levescault","Marnes","Doeuil-sur-le-Mignon","Alloue","Eyjeaux","Adriers","La Perche","Rouille","Saint-Maurice-la-Souterraine","Usson-du-Poitou","Aureil","Firmi","Frejairolles","Villeneuve-de-Marsan","Le Porge","Epenede","Les Nouillers","Payroux","Saint-Ciers-sur-Gironde","Gironde-sur-Dropt","Bernay-Saint-Martin","La Rochenard","Cissac-Medoc","Gondeville","Oradour-Fanais","Chaban","Boutiers-Saint-Trojan","Montendre","Chamboulive","Soreze","Brax","Mercues","Noaillan","Verdelais","Vezac","Excideuil","Saint-Pierre-du-Palais","Orches","Grainville-sur-Odon","Cesny-aux-Vignes","Moyaux","Marchainville","Ronthon","Le Fresne-Camilly","Omonville-la-Rogue","Eroudeville","Pertheville-Ners","Landelles-et-Coupigny","Fontaine-Etoupefour","Gilles","Nouainville","Barbeville","Treauville","Champs","Saint-Pair-du-Mont","Tollevast","Auxais","VascÅ“uil","Fauville-en-Caux","Martigny","Allouville-Bellefosse","Saint-Jean-du-Cardonnay","Reuil-sur-Breche","Ry","La Vaupaliere","Cierrey","Boulleville","Sotteville-sur-Mer","Aignan","Tourville-la-Campagne","Le Thuit-Simer","Courcelles-les-Gisors","Fontaine-Bonneleau","Cavillon","Fontenelle-en-Brie","Luchy","Saint-Venant","Huppy","Guivry","Bouzy","Aubrives","Fampoux","Sissy","Willencourt","Ecury-sur-Coole","Fays-la-Chapelle","Margny","Avancon","Bulles","Wailly","Mailly-le-Camp","Ham-sur-Meuse","Ham-en-Artois","Hestrus","Bavincourt","Camblain-lAbbÃ©","Dieval","Saint-Germain-la-Ville","Perthes-les-Brienne","Pont-Saint-Mard","Croissy-sur-Celle","Saint-Gobain","Ercheu","Chatillon-les-Sons","Bosmont-sur-Serre","Jalons","Neuville-sur-Seine","Blagny","Les Mesneux","Mairy-sur-Marne","Vitry-en-Perthois","Avon-la-Peze","Rethondes","Vieille-Eglise","Sailly-sur-la-Lys","Essoyes","Aix-en-Othe","Aubin-Saint-Vaast","Wambercourt","Fiefs","Acq","Gombergean","Givraines","Saint-Aignan-des-Noyers","Trainou","Chisseaux","Saint-Christophe-sur-le-Nais","Menetreol-sur-Sauldre","Fougeres-sur-Bievre","Genille","Saint-Sigismond","Chenonceaux","Sury-en-Vaux","Menestreau-en-Villette","Dampierre-sur-Blevy","Ports","Saint-Georges-sur-Arnon","Pruniers","Marce-sur-Esves","Molineuf","Druye","Montresor","Vouvray","Montierchaume","Sassay","Neuvy-en-Sullias","Gatelles","Cormeray","Clemont","Verigny","Oizon","Parnay","Sambin","Levainville","Morancez","Belleville-sur-Loire","Vert-en-Drouais","Villaines-les-Rochers","Vimory","Pouille","Mazange","Luzille","Mont-pres-Chambord","Marcilly-sur-Vienne","La Berthenoux","Pellevoisin","Barrou","Montlivault","Thenay","Busloup","Bossay-sur-Claise","Villiers-au-Bouin","Noyant-de-Touraine","Courville-sur-Eure","Braye-sous-Faye","Sainte-Fauste","Semoy","Leouville","Janville","Broue","Prunay-Cassereau","Chedigny","Arrou","La Bussiere","Cellettes","Fontaine-Simon","Villeneuve-Frouville","Saint-Pellerin","Gy-en-Sologne","Huisseau-sur-Cosson","Villers-les-Ormes","Rouziers-de-Touraine","Montainville","Mezieres-en-Drouais","Saint-Flovier","La Guerche","Pouzay","Savigny-en-Septaine","Epuisay","Maron","Courcay","Manthelan","Yermenonville","La Celle","Saint-Firmin-des-Pres","Santranges","Ennordres","Jeu-les-Bois","Neuvy-le-Roi","Souvigny-en-Sologne","Ouarville","Montlouis","Loche-sur-Indrois","Onzain","Moulins-sur-Cephons","Savonnieres","Chataincourt","Theillay","Chaillac","Argent-sur-Sauldre","Thimory","Conflans-sur-Loing","Lury-sur-Arnon","Ervauville","Josnes","Valaire","Monthou-sur-Bievre","Pressigny-les-Pins","Vennecy","Aunay-sous-Auneau","Cuffy","La Celle","Niherne","Ternay","Tour-en-Sologne","Mur-de-Sologne","Chantome","Cangey","Prouais","Touchay","Bricy","Valencay","Montigny","Les Montils","Chanceaux-sur-Choisille","Saint-Bohaire","Belleville-en-Caux","Vandrimare","Senneville-sur-Fecamp","Saint-Leger-du-Bourg-Denis","Fleury-sur-Andelle","Saint-Martin-du-Tilleul","Aumale","JumiÃ¨ges","Bouville","Biville-sur-Mer","Croix-Mare","Ecaquelon","Ecalles-Alix","Tocqueville-en-Caux","Bacqueville-en-Caux","Bondeville","Thierville","Saint-Ouen-du-Breuil","Theuville-aux-Maillots","Criquetot-l'Esneval","Boissey-le-Chatel","Villez-sous-Bailleul","Saint-Martin-du-Bosc","Vaux-sur-Eure","Huest","Arques-la-Bataille","Moulineaux","Caumont","Irreville","Claville","Le Landin","Prey","Harcanville","Fatouville-Grestain","Orvaux","Le Roncenay-Authenay","Authou","Le Fidelaire","Motteville","Goupillieres","Colleville","Broglie","Toussaint","Campagne","Avremesnil","Quillebeuf-sur-Seine","Bois-Anzeray","Annouville-Vilmesnil","Limesy","Saint-Georges-du-Vievre","Fontaine-sous-Jouy","Nointot","Maneglise","Raffetot","Guerville","Avesnes-en-Bray","Rouge-Perriers","Beaurepaire","Saint-Etienne-du-Vauvray","Saint-Martin-Osmonville","Heudicourt","Thiergeville","Servaville-Salmonville","Eslettes","Rosay-sur-Lieure","Sahurs","ClÃ¨res","Fontaine-la-Mallet","La Trinite-de-Reville","Gaillefontaine","La Gueroulde","Epaignes","Saint-Germain-sur-Avre","Marcouville","Tourville-les-Ifs","Bellencombre","Folleville","Lisors","Neuville-Ferrieres","Couargues","Allouis","Lassay-sur-Croisne","Champoulet","Auxy","Crouy-sur-Cosson","Selommes","Barville-en-GÃ¢tinais","Villeperdue","Saint-Laurent-en-Gatines","Cormery","Poce-sur-Cisse","Jalognes","Lugny-Champagne","Francourville","Maille","Souvigne","Chaudron-en-Mauges","Gontier","Malicorne-sur-Sarthe","Villaines-sous-Malicorne","Lusanger","La Membrolle-sur-Longuenee","Grandchamps-des-Fontaines","Fay-de-Bretagne","Aze","Pareds","Notre-Dame-des-Landes","Saint-Ouen-des-Toits","La Tardiere","Le Bourgneuf-la-Foret","Daumeray","Cherre","Saint-Germain-de-Princay","Le Coudray-Baillet","Le Plessis","Corpe","Tallud-Sainte-Gemme","Le Champ-Saint-Pere","Saint-Firmin","Revigny","Feves","Obermorschwiller","Remelfang","Badevel","Cravant","Traenheim","Mangiennes","Ormes-et-Ville","Thil","Rougegoutte","Bonnevent-Velloreille","Uhrwiller","La Montagne","Erize-Saint-Dizier","Tincry","Ancemont","Seuil","Vaudebarrier","Aiserey","Guemar","Villiers-sur-Tholon","Igney","Sassey-sur-Meuse","Valff","Dammarie-sur-Saulx","La Neuveville-devant-Lepanges","Volmerange-les-Mines","Bouligney","Chagey","Lans","Eckwersheim","Ã‰tain","Sponville","Ville-sur-Cousances","Tremont-sur-Saulx","Clermont","Pers-Jussy","Talloires","Marlioz","Les Avanchers-Valmorel","Chezery-Forens","Saint-Germain-sur-Rhone","Aviernoz","Bernex","Arthaz-Pont-Notre-Dame","Saint-Jean-de-Gonville","Verchaix","Praz","Bellevue-la-Montagne","Etrembieres","La Muraz","Saint-Martin-Bellevue","Esserts-Saleve","Orcier","Mures","Chatel","Copponex","Scientrier","Vacheresse","Lovagny","Arcine","Mezeriat","Les Houches","Sauve","Salses-le-Chateau","Saint-Martin-le-Vieil","Serdinya","Souilhanels","Saint-Hippolyte-de-Montaigu","Gailhan","Quissac","Congenies","Saissac","La Rouviere","Saint-Dezery","Maureilhan","Paraza","Palalda","Haute-Rivoire","Septeme","Ambierle","Bouchet","Echalas","Mornay","Pommiers-la-Placette","Oytier-Saint-Oblas","Saint-Didier-sur-Chalaronne","Leyrieu","Cellieu","Cezay","Saint-Bardoux","Charnay","Satillieu","Genissieux","Montsegur-sur-Lauzon","Grammond","Chassagny","Montrevel","Saint-Laurent-des-Combes","Fargues","Bougarber","Ahaxe-Alciette-Bascassan","Momas","Castillon-Debats","Laparrouquial","Cotdoussan","Clarac","Peyrissas","Saint-Generoux","Lahitte-Toupiere","Saint-Jean-de-Lier","Berenx","Saubusse","Ossages","Carsac-Aillac","Captieux","Belveze","Gavarnie","Bonrepos","Denat","Angoume","Estillac","Orban","Saint-Jean-de-Marcel","Saint-Ybars","Levis","Lux","Goyrans","Ondes","Cauzac","Amou","Saint-Avit","Eance","Inguiniel","Les Champs","Huelgoat","Saint-Helen","Saint-Guinoux","Saint-Herve","Edern","Romille","Plourivo","Cardroc","Martigne-Ferchaud","Saint-Pern","La Lande","Saint-Vincent-des-Landes","Perreux","Langolen","Gennes-sur-Seiche","Meucon","Kergloff","Pleyber-Christ","Chanteloup","Ploeven","Neulliac","Monthureux-sur-Saone","Chaumousey","Xertigny","Genelard","Sampigny-les-Maranges","Saint-Aubin-en-Charollais","Jussey","Hageville","Chateau","Schmittviller","Laneuveville-aux-Bois","Lemainville","Chambilly","Laignes","Roulans","Charquemont","Hugier","Pouilly-sur-Vingeanne","Cubry-les-Soing","Saint-Saulge","Saint-Martin-en-Gatinois","Dambenois","Le Vaudioux","Fretigney-et-Velloreille","Pagny-la-Ville","Les Villedieu","Montfleur","Chissey-en-Morvan","Ecleux","Palleau","Mouthe","Lechatelet","Les Hays","Bussy-le-Grand","Ferrieres-les-Scey","Dracy-le-Fort","Ueberstrass","Le Tholy","Provencheres-sur-Fave","Verze","Armes","Foulcrey","Pugey","Charbuy","Montrond","Faimbe","Fresne-Saint-Mames","Orchamps-Vennes","Roffey","Bonnetage","Fuisse","Corcelles-les-Monts","Montessaux","Supt","Merry-sur-Yonne","Pleure","Lucenay-l'Eveque","Ray-sur-Saone","Verne","Saint-Denis-de-Vaux","Floyon","Belmont","Campremy","Vadencourt","Monceau-le-Neuf-et-Faucouzy","Viels-Maisons","Sainte-Genevieve","Novion-Porcien","Fontvannes","Bazuel","Coupelle-Vieille","Moyencourt","Seraucourt-le-Grand","Foulangues","Tupigny","Conde-sur-Marne","Gouy-en-Artois","Inchy","Millencourt","Moislains","Avesnelles","Cartignies","Radonvilliers","Craonne","Billy-sur-Ourcq","Epagne-Epagnette","Mont-Saint-Pere","Bassoles-Aulers","Bethancourt-en-Valois","Lusigny-sur-Barse","Ecueil","Carnieres","Ablain-Saint-Nazaire","Valmondois","Ferrieres","Clairfontaine","Mennevret","Proyart","Commenchon","Herpy-l'Arlesienne","Secheval","Clety","Choisel","Chavenay","Vaudoy-en-Brie","Chateaubleau","Saint-Georges-sur-Allier","Saint-Pierre-le-Chastel","Saint-Jean-de-Sixt","Villy-le-Bouveret","Cereste","Cornillon-Confoux","Lumio","Artigues","Aups","Calcatoggio","Montussan","Montcaret","Dieupentale","Miradoux","Marigny-Chemereau","Chenevelles","Brux","Aigonnay","Bernos-Beaulac","Cornus","Terrebasse","Puycelsi","Mingot","Arzacq-Arraziguet","Saint-Gein","Saint-Mariens","Cartelegue","Gensac","Laguiole","Glenic","Melle","Villexavier","Mazieres-en-Gatine","Blaudeix","Abzac","Saint-Georges-des-Coteaux","Coulombiers","Savignac-les-Eglises","Castanet-le-Haut","Verdun-en-Lauragais","Vaissac","Moliets-et-Maa","Champlemy","Vaux-les-Pres","Dalhunden","Gendrey","Ruffey-sur-Seille","Spechbach-le-Haut","Vitteaux","Buffard","Montarlot-les-Rioz","Lantenne-Vertiere","Poncey-les-Athee","Talon","Vers","Anteuil","Auxey-Duresses","Le Ban-Saint-Martin","Laval-sur-Vologne","Witternheim","Lohr","Dannemoine","Velleminfroy","Montmalin","Brion","Moineville","Cappel","Ochey","Plappeville","Silly-sur-Nied","Sainte-Suzanne","Farincourt","Filain","Noidans-le-Ferroux","Gottenhouse","Novillars","Montboillon","Tresilley","Sessenheim","Favieres","Sarraltroff","Nousseviller-les-Bitche","Laneuveville-devant-Bayon","Jouaville","Bionville-sur-Nied","Wintersbourg","Remereville","Magnieres","Fletrange","Dommartin-les-Remiremont","Lanthenans","Lorry-Mardigny","Troussey","Deyvillers","Bindernheim","Hunspach","Varsberg","Gondreville","Ortoncourt","Mamey","Benamenil","Belleray","Guessling-Hemering","Coume","Vacon","Landser","Vincelles","Brouennes","Moriville","Billy-sous-les-Cotes","Housseville","Champdray","Letricourt","Niffer","Saint-Gingolph","Escurolles","Chaptuzat","Chavaroux","Loisin","Meillerie","La Clusaz","Ydes","Saignes","Le Fayet","La Riviere","Courchevel","La Flachere","Merlas","Bresson","La Salette-Fallavaux","La Sone","Apremont","Cesarches","Tignes","Aiguebelette-le-Lac","Saint-Pierre-dAllevard","Le Cheylas","Saint-Julien-en-Champsaur","Voglans","Blaise","Barraux","Notre-Dame-de-Commiers","Murianette","Lepin-le-Lac","Saint-Cassin","Entremont-le-Vieux","Pallud","Tours-en-Savoie","Aillon-le-Vieux","Thoiry","Saint-Gondon","Selle","Vouzon","Tauxigny","Jars","Courcy-aux-Loges","Croisilles","Saint-Gervais-la-Foret","Manchecourt","Saint-Genou","Bouilly-en-Gatinais","Mesland","Meusnes","Thilouze","Lion-en-Sullias","Mezieres-lez-Clery","Saint-Regle","Dampierre-en-Crot","Vrigny","Florentin","Le Noyer","Boulleret","Assay","Tillay-le-Peneux","Cabanac","Arsague","Serres-Gaston","Louer","Bastennes","Josse","Aubiac","Ambrus","Noaillac","Cabanac-et-Villagrains","Mombrier","Hure","Camblanes-et-Meynac","Chazelles","Chevanceaux","Rohan","Saint-Martial","Lagord","Bommes","Saint-Geyrac","Saint-Etienne-d'Orthe","Biaudos","Viodos-Abense-de-Bas","Castet","Azur","Buros","Oregue","Monflanquin","Saint-Savinien","Meuzac","Barro","Guignicourt-sur-Vence","Loisy-sur-Marne","Mergey","Tincques","Lederzeele","Boulages","Saint-Pouange","Fontenoy","Haussignemont","Le Herie-la-Vieville","Corbehem","Riencourt-les-Bapaume","Marquay","Chigny-les-Roses","Tremilly","Offekerque","Louvil","Etroeungt","Saint-Michel-sur-Ternoise","Capelle","Neuvireuil","Hamel","Gruson","Vincly","Avesnes-les-Aubert","Blacy","Sainte-Preuve","Montagny-Sainte-Felicite","Droupt-Saint-Basle","Vailly-sur-Aisne","Monceau-Saint-Waast","Monchy-Breton","Damery","Saint-Leger-sous-Brienne","Arrigny","Vauchonvilliers","Fontaine-au-Bois","La Calotterie","Gouy-sous-Bellonne","Jonvelle","Saulon-la-Rue","Surgy","Mantry","Pasques","Goxwiller","Preuschdorf","Sand","Michelbach-le-Bas","Tronville-en-Barrois","Dampvalley-les-Colombe","Bersaillin","Civry-en-Montagne","Denevre","Chapelle-Voland","Painblanc","Dezize-les-Maranges","Abbans-Dessus","Kriegsheim","Schillersdorf","Sondernach","Houssen","La Madeleine","Vervezelle","Lucey","Pouillenay","Billey","Simandre","Blodelsheim","Chasnais","Lombron","Saint-Paul-en-Pareds","Ballon","Verneil-le-Chetif","Mont","Coulombiers","Saint-Michel-Mont-Mercure","Sceaux-d'Anjou","Cosmes","Bonnetable","Lassay-les-Chateaux","Saint-Mars-d'Outille","Saint-Michel-Treve","Bouloire","Oisseau","Quilly","Louplande","Sion-les-Mines","Vouvant","Saint-Georges-de-Montaigu","Gennes","Beaurepaire","Le Breil","Castera-Loubix","Lasseran","Buzy","Solferino","Brignac-la-Plaine","Birac-sur-Trec","La Roche","Saint-Sardos","Montvalent","Entraygues-sur-Truyere","Fargues","Saint-Cezert","Saint-Xandre","Coulaures","La Ville","Soulac-sur-Mer","Surba","Orgueil","Boos","Anche","Saint-Pierre-de-Trivisy","Saint-Georges-de-Luzencon","Clairac","Sainte-Marie-de-Chignac","Bellefond","Savignac-sur-Leyze","Romagne","Montrem","Vabres-l'Abbaye","Juilles","Saurat","Lavit","Flamarens","Vandre","Loubes-Bernac","Baurech","Sarliac-sur-lIsle","Cottun","Gesnes-le-Gandelin","Crouay","Tocqueville","Le Mesnil-Villeman","Baupte","Carantilly","Saint-Malo-de-la-Lande","Le Tronquay","Saint-Sauveur-Lendelin","Vieux-Fume","Hocquigny","Ger","Montmartin-en-Graignes","Le Pin-la-Garenne","Fresne-la-Mere","Saint-Gatien-des-Bois","Sainte-Croix-Grand-Tonne","Luneray","Saint-Pierre-de-Varengeville","Fesques","Beaussault","Guiseniers","Ouville","Saint-Leger-de-Rotes","Saint-Pierre-Lavis","Hodeng-Hodenger","Saint-Denis-le-Thiboult","Pissy-Poville","Thietreville","Nonancourt","Quincampoix","Illois","Bacqueville","La Hallotiere","Cottevrard","Alvimare","Gremonville","Saint-Saire","Flancourt-Catelon","Epinay","Gonneville-la-Mallet","Peisey-Nancroix","Vimines","Saint-Avre","Dionay","MÃ©ribel","Etable","Felines","Laure","Saint-Maurice-de-Cazevieille","Thurins","Toulaud","Le Cergne","Montaulieu","Auberives-sur-Vareze","Jonage","Saint-Victor-de-Cessieu","Pact","Mercurol","Grandris","Siccieu-Saint-Julien-et-Carisieu","Lamastre","Margerie-Chantagret","Les Cheres","Mouilleron-en-Pareds","Saint-Hilaire-de-Voust","Villebernier","Pannece","Conquereuil","Monsireigne","Saint-Leger-sous-Cholet","Gesvres","Anetz","Vouille-les-Marais","Chanteloup-en-Brie","Gee","Le Thoureil","Blou","Saint-Pierre-du-Chemin","Echemire","Saint-Christophe-du-Ligneron","Mazieres-en-Mauges","Saint-Martin-des-Noyers","Saint-Georges-du-Rosay","Jallais","Guecelard","La Cornuaille","Saint-Cyr-en-Pail","Puceul","Getigne","Roche","Les Pins","Saint-Germain-sur-Moine","Soulge-sur-Ouette","Mauves-sur-Loire","Saint-Domet","Croze","Lorignac","Conceze","Frechede","Mauran","Valence","Giroussens","Budos","Ayguemorte-les-Graves","Pessac-sur-Dordogne","Saint-Laurent-du-Bois","Arnac-Pompadour","Lariviere-Arnoncourt","Yvrac-et-Malleyrand","Mauremont","Causse-de-la-Selle","Montredon-Labessonnie","Fonbeauzard","Labouquerie","Peyrat-le-Chateau","Condeon","Merignac","Sauveterre-de-Guyenne","Septfonds","Cazals-des-Bayles","Labessiere-Candeil","Sainte-Foy-de-Peyrolieres","Bussac-Foret","Orignolles","Cieux","Rabou","Roches","La Porcherie","Troche","Juillac","Brandonnet","Najac","Courcelles","Rioz","Prisse","Autechaux","Fontaine-les-Luxeuil","Montaigu","Saint-Martin-Belle-Roche","Feche-l'Eglise","Pruzilly","Sermoyer","Mailly-la-Ville","Saint-Amour","Germigny-sur-Loire","Bellevesvre","Entrains-sur-Nohain","Bassigney","Beauvernois","Messigny-et-Vantoux","Molinet","Glanon","La Villedieu-les-Quenoche","Laroche-Saint-Cydroine","Lainsecq","Bresse-sur-Grosne","Verchamp","Parly","Merey-sous-Montrond","Devrouze","Chagny","Saint-Andeux","Chassenard","Lamarche-sur-Saone","Chargey-les-Port","Souvans","Villey-sur-Tille","Boursieres","Bouilly","Echevannes","Eternoz","Vanclans","Ormoy","Saint-Martin-en-Bresse","Chateau-Chinon(Ville)","Vaux-sur-Poligny","Dampierre-les-Conflans","Sainpuits","Laperriere-sur-Saone","Serein","Sornay","Boz","Saint-Usage","Neuilly","Logrian-Florian","Pezens","Boucoiran-et-Nozieres","Liouc","Jeune","Enveig","Barbaira","Banassac","Saint-Privat","Saint-Guilhem-le-Desert","Durban-Corbieres","Generargues","Villeveyrac","Montfrin","Vic-le-Fesq","Campagnan","Combas","Saint-Hippolyte","Mejannes-le-Clap","Murviel-les-Beziers","Fontrabiouse","Nezignan-l'Eveque","Le Collet-de-Deze","Sussargues","Prouzel","Douilly","Morsain","Conflans-sur-Seine","Pargny-la-Dhuys","Villequier-Aumont","Flaucourt","Mourmelon-le-Petit","Saulces-Monclin","Cuperly","Haussimont","Bazeilles","Puisieulx","Vrigne-aux-Bois","Semoutiers-Montsaon","Aulnay-sur-Marne","Fossemanant","Flavy-le-Martel","Froidestrees","Crugny","Autreville","Boubiers","Bichancourt","Braucourt","Morvillers-Saint-Saturnin","Harcigny","Festubert","Etaves-et-Bocquiaux","Laversine","Les Loges","Chambrecy","Saint-Etienne-au-Temple","Feuges","Chapelle-Vallon","Le Baizil","Rumegies","Hallencourt","Fouencamps","Sarcicourt","Villeneuve-au-Chemin","Jarze","Etival-les-le-Mans","Bois-de-Cene","Melay","Louailles","Bouee","Chauve","Andigne","Montsoreau","Chauche","Le Boupere","Soudan","Saint-Philbert-de-Bouaine","Fougere","Moutiers-sur-le-Lay","Longue-Jumelles","Nyoiseau","Fontaine-Guerin","Outille","Lezigne","Saint-Macaire-du-Bois","Moisdon-la-Riviere","Saint-Jean-Ligoure","Ronsenac","Villebois-Lavalette","Nercillac","Boussac","Pageas","Lahontan","Massugas","Capoulet-et-Junac","La Lande","Chenerailles","Puyravault","Lavaurette","Lacour","Salleboeuf","Saint-Vite","Boisse-Penchot","Vallesvilles","Sainte-Terre","Vanzac","La Grave","Lombers","Montpezat-de-Quercy","Escassefort","Peyrignac","Naujan-et-Postiac","Tursac","Thenon","Lizac","Saint-Sebastien","Perignac","Villegouge","Leojac","Trevien","Bor-et-Bar","Les Eyzies-de-Tayac-Sireuil","Lachapelle","Pompertuzat","Forfry","Citry","Jumeauville","Villers","Vetheuil","Auteuil","Caumont-l'Evente","Sainte-Croix-Hague","Moulines","Coulvain","Berjou","Saint-Cornier-des-Landes","Vaux-sur-Aure","Pont-Hebert","Saint-Ouen-du-Mesnil-Oger","Cormolain","Annebault","Quettreville-sur-Sienne","Benerville-sur-Mer","La Coulonche","Cesny-Bois-Halbout","Monteaux","Pontlevoy","Gouillons","Ivoy-le-Pre","Chambourg-sur-Indre","Coulommiers-la-Tour","Villetrun","Houx","Mevoisins","Oucques","Levet","Saint-Hilaire-les-Andresis","Gasville-Oiseme","Dangeau","Vatan","Prunay-le-Gillon","Villeny","Neuville-sur-Brenne","Authon","Monteglin","Belaye","Viabon","Saint-Jean-d'Aubrigoux","Recey-sur-Ource","Bagneaux","La Chatre-Langlin","CargÃ¨se","Illiers-Combray","Courtisols","Ouerre","Romeny-sur-Marne","Breconchaux","Cravanche","Boussois","La Ferte-Mace","Hermillon","Rion-des-Landes","Pompignan","Saint-Amant-de-Boixe","Saint-Pierre-sur-Dives","Tillenay","Capens","Le Passage","Fierville-les-Mines","Orval","Lingreville","Parigny","Cosqueville","Reville","Les Moitiers-en-Bauptois","Roncey","Conde-sur-Vire","Boisyvon","Notre-Dame-de-Cenilly","Doville","Amigny","Quettehou","Montreuil-sur-Lozon","Percy","Sainte-Mere-Eglise","Picauville","Fermanville","Lozon","Saint-Patrice-de-Claids","Quineville","Creances","Reffuveille","Sainte-Cecile","Milly","La Chaise-Baudouin","Bricqueville-la-Blouette","Lessay","Lecousse","Canisy","Glatigny","Pirou","Vasteville","Huberville","Saint-Fromond","La Haye-Saint-Sylvestre","La Feuillie","Barfleur","Neufmesnil","Eschbach-au-Val","Bettwiller","Hatten","Durrenbach","Boersch","Breuschwickersheim","Raedersheim","Stosswihr","Batzendorf","Wintzenbach","Mietesheim","Schopperten","Soultzeren","Neewiller-pres-Lauterbourg","Grassendorf","Chevrieres","Loyes","Saint-Romain-Lachalm","Sevelinges","Ligne","Ecouviez","Le Caylar","Usseau","Germenay","Saint-Jeure-d'Andaure","Thurageau","Saint-Arnoult-des-Bois","Cherveux","Audignies","Voulton","Maurois","Auxange","La Roque-Baignard","Rouperroux","Conde-sur-Iton","Ecardenville-sur-Eure","Pont","Saintes-Maries-de-la-Mer","Genac","Saint-Genies-de-Comolas","Ernemont-sur-Buchy","Frevillers","Escolives-Sainte-Camille","Verneuil-sous-Coucy","Belloy-en-France","Riaille","Commequiers","Torsac","Berville-en-Roumois","La Croix-Valmer","Montayral","Quatremare","La Sauvetat-de-Saveres","Fourques-sur-Garonne","Le Breuil","Livre-sur-Changeon","Pas-en-Artois","Nommay","Ferriere-la-Petite","Villermain","Sainte-Fereole","Brides-les-Bains","Chimilin","Saint-Baldoph","Saint-Martin-de-Belleville","Hauteluce","Proveysieux","Verthemex","Le Pin","Argentine","Saint-Thibaud-de-Couz","Dullin","Mery","Nantoin","Villarlurin","Barby","Saint-Paul-de-Varces","Epierre","Arbin","Saint-Joseph-de-Riviere","Randens","La Motte-Servolex","Monestier-de-Clermont","Massieu","Queige","Puygros","La Chapelle-Blanche","Toulon-sur-Arroux","Beire-le-Chatel","Dixmont","Tracy-sur-Loire","Chaffois","Forleans","Saint-Seine-sur-Vingeanne","Vitreux","Essey","Saint-Martin-sur-Nohain","Epoisses","Mondon","Normier","La Chaux-du-Dombief","Foncine-le-Haut","Ougney","Vathimenil","Chemery-les-Deux","Sexey-aux-Forges","Le Syndicat","Fremonville","Anould","Noisseville","Dorlisheim","Koenigsmacker","Richeling","Romaneche-Thorins","Brinon-sur-Beuvron","Cuiseaux","Fenay","Rosieres-sur-Mance","Vosne-RomanÃ©e","Sauvigny-les-Bois","Moloy","Avot","Autoreille","Gergy","Poiseul-les-Saulx","Blanot","Massingy-les-Semur","Boncourt-le-Bois","Tonnoy","Grandvillers","Sommelonne","Saint-Ouen-les-Parey","Pagny-sur-Meuse","Portieux","Ebersviller","Bonnet","Fontenoy-le-Chateau","Vaxoncourt","Eppe-Sauvage","Montenescourt","Bouvigny-Boyeffles","Saint-Souplet","Monceau-le-Waast","Pinon","Varinfroy","Bellancourt","Arvillers","Villers-les-Roye","Signy-le-Petit","Perrogney-les-Fontaines","Maysel","Wavrechain-sous-Faulx","Sainte-Croix","Clamecy","Gouzeaucourt","Ergny","Arleux-en-Gohelle","Groffliers","Honnecourt-sur-Escaut","Genech","Landas","Bouvaincourt-sur-Bresle","Beugneux","Lannoy-Cuillere","Houry","Vouzy","Pont-sur-Seine","Montpothier","Soyers","Dampierre-au-Temple","Muidorge","Bernaville","Bours","Etelfay","Goury","Le Chesne","Estouteville-Ecalles","Gauville-la-Campagne","Auberville-la-Renault","Manneville-es-Plains","Perriers-sur-Andelle","Petiville","Auffay","Totes","Ypreville-Biville","Auberville-la-Campagne","Saint-Pierre-le-Vieux","Montigny","Saint-Martin-du-Tertre","Nerville-la-Foret","Goussainville","Assignan","Mars","Brignon","Boissieres","Malves-en-Minervois","Cesseras","Oupia","Apcher","Montescot","Portel-des-Corbieres","Bellegarde-du-Razes","Saint-Maximin","Saint-Pierre-la-Bourlhonne","Puilacher","Capendu","Pouzols-Minervois","Fontjoncouse","Saint-Amand-Magnazeix","Vignolles","Londigny","Saint-Martin-Lacaussade","Pontours","Carlucet","Germond-Rouvre","Vasles","Vindelle","La Treille","Richemont","Varaignes","Caumont-sur-Garonne","Lusignan-Grand","Marigny-Brizay","Ax-les-Thermes","Le Bez","Lespinasse","Escazeaux","Avignonet-Lauragais","Cassagne","Geaune","Noirterre","Civrac-de-Blaye","Marsaneix","Augignac","Mauzens-et-Miremont","Journiac","La Bastide","Viven","Nieuil","Torxe","Cherac","Rouvre","Saint-Meard-de-Gurcon","Pleumartin","Bois-de-la-Pierre","Peyrilles","Marignac-Lasclares","Nadillac","Rayssac","Asson","Bonnegarde","Treffrin","Guiler-sur-Goyen","Lanveoc","Averton","Amanlis","Plelo","Guilliers","Querrien","Kerlouan","Brasparts","Meneac","Loyat","Landunvez","Plehedel","Pire-sur-Seiche","Talensac","Lannebert","Rieux","Trelivan","Monsac","Colombier","Roquebrune","Gimeux","Neuvicq-le-Chateau","Pouffonds","Chize","Bonrepos-Riquet","Vieillevigne","Asque","Ganac","Frontignan-Saves","Valdurenque","Linxe","Auriac","Sus","Arboucave","Montpeyroux","Villefranche-d'Albigeois","Le Vigen","Saint-Simon-de-Pellouaille","Fenioux","Jabreilles-les-Bordes","Mauprevoir","Les Vallees","Mirambeau","Millac","Vallegue","Pont-de-Salars","Flagnac","Montfort-en-Chalosse","Saint-Nazaire-de-Valentane","Labastide-Cezeracq","La Tour-dAuvergne","Montmiral","Les Places","Mauves","Beauvallon","Vaux-en-Bugey","Piegros-la-Clastre","Marsaz","Limony","Taulignan","Parnans","Saint-Romain-d'Ay","Le Chateau","Montagut","Aouste-sur-Sye","Saint-Sauveur-de-Montagut","Cherier","Rignieux-le-Franc","Epercieux-Saint-Paul","Planzolles","Polliat","Cors","Le Bessat","Sauzet","Charantonnay","Dommartin","Saint-Verand","Soyons","Saint-Rirand","Ceignes","Courtelevant","Sologny","Vallerois-Lorioz","Blondefontaine","Mervans","Anchenoncourt-et-Chazel","Junay","Rochefort-sur-Nenon","Saint-Boil","Cogna","Bois-d'Amont","Belleneuve","Sommecaise","Bining","Harprich","Mangonville","Leintrey","Munster","Eteimbes","Amathay-Vesigneux","Vaumort","Milly-Lamartine","Voisin","Amancey","Cerilly","Crissey","Marcigny","Rehon","Raon-aux-Bois","Racrange","Rochesson","Gezoncourt","Vahl-les-Benestroff","Francaltroff","Ville","Muespach-le-Haut","Jungholtz","Grandfontaine","Thiefosse","Champ-le-Duc","Saint-Etienne-en-Cogles","Quintenic","Pleudihen-sur-Rance","Miniac-sous-Becherel","La Noe","Nevez","Plumergat","Mellionnec","Hemonstoir","Treglamus","Erce-pres-Liffre","Loperhet","Saint-Maudan","Saint-Segal","Soisy-sur-Ecole","Nouan-le-Fuzelier","Pezou","Sully-la-Chapelle","Marcilly-en-Beauce","Avoine","Mareau-aux-Bois","Poisieux","Panzoult","Veaugues","ChÃ¢teauneuf-sur-Cher","Theuville","Echarcon","Hundsbach","Eulmont","Fremifontaine","Lautenbach","Wuenheim","Jebsheim","Hartmannswiller","Fouday","Lorey","Vecoux","Wittersheim","Strueth","Saales","Gimbrett","Sauvage","Vecqueville","Ambonnay","Connantray-Vaurefroy","Wissant","Vieux-Moulin","Montreuil-sur-Breche","Provencheres-sur-Meuse","Moeslains","Givron","Achiet-le-Grand","L'Epine","Bercenay-en-Othe","Margut","Culmont","Cramant","Fort-Mahon-Plage","Epenancourt","Hebuterne","Fouilleuse","Laleu","Chezy-sur-Marne","Jussy","Pargny-les-Bois","Villers-Allerand","Vailly","Jouy-sous-Thelle","Havrincourt","Trosly-Breuil","Boisbergues","Andechy","Ferreux-Quincey","Abbecourt","Manicamp","Brombos","Bonneil","Chierry","Malras","Jonquieres","Fabrezan","Felix","Cassagnes","Corbere-les-Cabanes","Magrie","Villesequelande","Villeneuve-Minervois","Les Cabanes","Saint-Victor-la-Coste","St Laurent des Arbres","Galargues","Le Martinet","Carlipa","Saint-Series","Castelnau-Valence","Villie-Morgon","Civens","Mont","Drom","Le Breuil","Saint-Paul-les-Romans","Colonzelle","Besayes","Marcilly-d'Azergues","Chateaudouble","Pouilly-le-Monial","Oriol-en-Royans","Condillac","La Coucourde","La Tuiliere","Chassiers","Pont-de-Barret","Saint-Desirat","Alix","Albigny-sur-Saone","Maringes","Perreux","Montcarra","Boisset-et-Gaujac","Saint-Feliu-d'Amont","Sant Andreu de Sureda","Aigues-Vives","Sainte-Valiere","Saint-Jean-de-Serres","Cassagnoles","Florac","Garrigues","Mejannes-les-Ales","Saint-Marcel-sur-Aude","Roquefort-des-Corbieres","Roubia","Saint-Benezet","Teyjat","Urval","Vitrac","Aubas","Parzac","Perigne","Annepont","Villamblard","Bonnetan","Cherves-Richemont","Queaux","Vernon","La Puye","Mainxe","Albussac","Corignac","Saint-Denis-des-Murs","Vianne","La Fouillade","Aubrac","Mouzieys-Teulet","Boulogne-sur-Gesse","Saint-Lary-Boujean","Saint-Jean-du-Bruel","Bouhet","Saint-Sulpice-de-Royan","Villegats","Champsac","Villiers-en-Plaine","Marsilly","Verrieres","Chantemerle-sur-la-Soie","Xaintray","Courcon","Cherves-Chatelars","Surin","Colayrac-Saint-Cirq","Castillon-la-Bataille","Livernon","Serres-sur-Arget","Buanes","Carnin","Verchin","Saint-Pierre-Brouck","Rochy-Conde","Cerisy-la-Salle","Velye","Ambleny","Beaurevoir","Demuin","Chiry-Ourscamp","Muirancourt","Vraux","Osne-le-Val","Juvigny","Quernes","Sailly-le-Sec","Therdonne","Mareuil-en-Brie","Chevillon","Flavigny","Chalindrey","Oger","Herchies","Cagny","Blacourt","Saint-Urbain-Maconcourt","Curel","Boyer","Oiselay-et-Grachaux","Marsannay-le-Bois","Ottonville","Bellemagny","Hammeville","Clemery","Malaumont","Bremenil","Loisy","Berthelange","Irancy","Montenoison","Saint-Romain-le-Preux","Cerisiers","Malay-le-Grand","Saint-Albain","Waville","Dugny-sur-Meuse","Abreschviller","Rauwiller","Cirey-sur-Vezouze","Valleroy-le-Sec","Rainville","Allain","Betting","Prayssas","Sorges","Gornac","Puymiclan","Galapian","Saint-Quentin-du-Dropt","Montdragon","Beurlay","Allonne","Princay","Calmels-et-le-Viala","Cuqueron","Prechac","Cahuzac-sur-Vere","Puybrun","Campet-et-Lamolere","La Riviere","Piegut-Pluviers","Mazion","Veyrignac","Parisot","Sigogne","Les Billanges","Saint-Maurice-les-Brousses","Angeac-Champagne","Autevielle-Saint-Martin-Bideren","Lisle","Bretenoux","Pauilhac","Biars-sur-Cere","Saint-Paul-de-Jarrat","Espinasses","Penta-di-Casinca","Castellare-di-Mercurio","Appietto","Moules","Nessa","Beauvezer","Hermeray","Cheptainville","Boisville-la-Saint-Pere","Petit Chaumont","Buzancais","Villevillon","Greneville-en-Beauce","Mery-es-Bois","Autreche","Saint-Viatre","Fussy","Beaumont-les-Autels","Palluau-sur-Indre","Bleury","Poville","Bazincourt-sur-Epte","La Londe","Dampsmesnil","Bezu-Saint-Eloi","Notre-Dame-d'Aliermont","Sainte-Opportune-du-Bosc","Bosc-Mesnil","Torcy-le-Grand","Argueil","Montreuil-en-Caux","Bosguerard-de-Marcouville","Cuttoli-Corticchiato","Saint-Etienne-du-Gres","Banon","Valle-di-Mezzana","Corbieres","Cervieres","Isigny-sur-Mer","Ouezy","Courson","Saint-Georges-Montcocq","Chailloue","Carolles","Montilly-sur-Noireau","Saint-Germain-de-Tournebut","Sottevast","Courtonne-la-Meurdrac","La Chapelle-Yvon","Les Bordes","Tagnon","Eleu-dit-Leauwette","Dennebroeucq","Wasnes-au-Bac","Remaucourt","Beaudricourt","Morbecque","Houchin","Helesmes","Domart-sur-la-Luce","Hodenc-en-Bray","Tille","Les Ageux","Allery","Silly-Tillard","Varesnes","Le Quesnel","Favieres","Rollot","Brousseval","Saint-Amand-sur-Fion","Audincthun","Sorrus","Cappelle-en-Pevele","Vecquemont","Villembray","Bachy","Gonnehem","Thelus","Ligescourt","Montmacq","Ribemont-sur-Ancre","Mont-Notre-Dame","Cayeux-sur-Mer","Salvagnac","Grezillac","Lafitole","Auxances","Loix","Largeasse","Prin-Deyrancon","Tuzaguet","Cassagnes-Begonhes","Noe","Seissan","Ancizan","Lacaussade","Saint-Seurin-de-Cursac","Maubourguet","Lalbenque","Ballon","L'Isle-Jourdain","Place","Charroux","Villiers-sur-Chize","La Clisse","Saint-Hilaire-Peyroux","Bazian","Peyrilhac","Lalanne-Arque","Lacapelle-Cabanac","Panassac","Saint-Pandelon","Brussieu","Lemps","Souspierre","Allan","Vanosc","Montceau","Ampuis","Bois-de-Gand","Chateauneuf-de-Galaure","Saint-Just-de-Claix","Saint-Maurice-sur-Eygues","Eyzin-Pinet","Saint-Etienne-du-Bois","Saint-Julien","Arcens","Chambost-Longessaigne","Gevrieux","Ratieres","Saint-Etienne-le-Molard","Saint-Denis-en-Bugey","Ansouis","Lafare","Les Baux de Provence","Jonquerettes","Mezel","Esparron-de-Verdon","Chabestan","La Bastide","Taillades","Aubigney","Suin","Baudemont","Crimolois","L'Etoile","Conliege","Cour-et-Buis","Chaussin","Montecheroux","Quarre-les-Tombes","Laning","Gondrecourt-le-Chateau","Vaudeville","Courcelles","Chatenois","Relanges","Spicheren","Urbeis","Fouchy","Sougy-sur-Loire","Bessey-les-Citeaux","Varennes-sous-Dun","Rahon","Blamont","Til-Chatel","Le Deschaux","Saulieu","Morelmaison","Villers-la-Montagne","Haroue","Obermorschwihr","Balgau","Katzenthal","Eichhoffen","Chelan","Lourties-Monbrun","Tauriac-de-Camares","Bagnac-sur-Cele","Montfaucon","Leyme","Beautiran","Sainte-Foy-la-Grande","Champcevinel","Coulx","Civrac-en-Medoc","Houeilles","Saint-AndrÃ©-dAllas","La Villedieu","Sers","Mougon","Bonnes","Vouzan","Saint-Cesaire","Arrenes","Pamproux","Migron","La Pointe","Bannieres","Caucalieres","Cazes-Mondenard","Saint-Cirgues","Lanzac","Saint-Front-d'Alemps","Monbahus","Bagas","Saint-Seurin-de-Prats","Anlhiac","Fors","Les Grands-Chezeaux","Burie","Paizay-le-Sec","Reims-la-Brulee","Azet","Hary","Salles-d'Angles","Montcuq","Uvernet-Fours","Brianconnet","Bellesserre","Lumeau","Lentiol","Chavaignes","Warcq","Saints-Geosmes","Rang","Saint-Jean-de-Soudain","Villerable","Bierne","Sablons","Ambleteuse","Solignac","Pringy","Ribiers","Vorges","Bru","Vourles","Charmant","Val-de-Fier","Bouge-Chambalud","Auxon-Dessus","Telgruc-sur-Mer","Moulins-sur-Yevre","GosnÃ©","Prunieres","Montsalvy","Sauvat","Maurs","Comblanchien","Septvaux","Etigny","Lihons","Menil-sur-Belvitte","Uriage-les-Bains","Mouledous","Pouilly-sous-Charlieu","Charrecey","Illiat","Ners","Courtenay","Bondigoux","Auriac-sur-Vendinelle","Villards","Cormeilles-en-Vexin","Sanguinet","Hauterive","Chevillon","Orbais-l'Abbaye","Lassy","Etouvy","Essia","Bornay","Bief-du-Fourg","Les Essards-Taignevaux","Brimeux","Gouy-Saint-Andre","Galametz","Marenla","Boismont","Gonfreville-Caillot","Plouasne","Saint-Launeuc","Fenouillet","Ur","Marquixanes","Soize","Miserey","Hebecourt","Antigny","Franvillers","Maison-Ponthieu","Sourdon","Saisseval","Neuilly-l'Hopital","Louvrechy","Blaignan","Sery","Sery-les-Mezieres","Ouchamps","Goutrens","Viviez","Saint-Thibault","Boury-en-Vexin","Mignieres","Roquefort-de-Sault","Saint-Martin-Lalande","Feuilla","Urcay","Buxieres-les-Mines","Blomard","Saint-Judoce","Remungol","Malansac","Velines","Saint-Felix-de-Villadeix","Brossac","Villeneuve-Lecussan","Saint-Beat","Murol","Merlines","Colleret","Estaing","Livinhac-le-Haut","Piseux","Prudhomat","Espedaillac","Prayssac","Bourgneuf","Cours-les-Bains","Campeaux","Floing","Matour","Naux","Calavante","Esquieze-Sere","Breux-sur-Avre","Solignac-sous-Roche","La Chapelle-d'Alagnon","Lavoute-Chilhac","Riotord","Le Chatelet-sur-Retourne","Drouville","Joch","Louzy","Frambouhans","Bazens","Damazan","Bricon","Fayl-Billot","Aast","Tajan","Wolschheim","Saint-Blaise-la-Roche","Raizeux","Yzeures-sur-Creuse","Limeray","Montaudin","Villaines-la-Juhel","Chemere-le-Roi","Saint-Pierre-des-Echaubrognes","Montbrun-Bocage","Moncoutant","Thenezay","Bazouges-sous-Hede","Nesles-la-Montagne","Saulnieres","Bailleul-Sir-Berthoult","Etaing","Luxe","Champagnat","Bray-Saint-Christophe","Aumont-en-Halatte","Meharicourt","Wavignies","Le Vieux Bourg","Chaussoy-Epagny","Framerville-Rainecourt","Lihus","Curchy","Mesnil-Saint-Nicaise","Villers-Saint-Genest","Remerangles","Precy-sous-Thil","Morgny","Cavan","Saint-Clet","Plenee-Jugon","Germigny-des-PrÃ©s","Aigues-Vives","Saint-Felix-de-Rieutord","Mercenac","Tourtrol","Tarascon-sur-Ariege","Artigat","Bouan","Bulhon","Kappelen","Wintzfelden","Oberentzen","Spechbach-le-Bas","Husseren-les-Chateaux","Friesen","Lutter","Saubrigues","Cruzy","Corbieres","Premian","Montpeyroux","Le Pouget","Bouvante","Saint-Lambert-sur-Dive","Bonnieux","Prechac","Dalmas","Cirey","Seveux","Brue-Auriac","Morogues","Antignac","Champagne-Mouton","Saint-Vincent-sur-Graon","Anguerny","Montrevel-en-Bresse","Villers-Pol","Lurais","Fontaine-les-Gres","Lechelle","Saint-Cyr-du-Gault","Vivieres","Jeufosse","Vanville","Saint-Martin-en-Campagne","Lieurey","Fultot","Chevire-le-Rouge","Mouthier-en-Bresse","Beauchamps-sur-Huillard","Saint-Brevin-l'Ocean","Kernascleden","Bains-les-Bains","Coulonges-Thouarsais","Taller","Vigneulles-les-Hattonchatel","Jametz","Chenailler-Mascheix","Chatelus-le-Marcheix","Marval","Chambon-sur-Voueize","Cresse","Tramoyes","Saint-Lager","Doazit","Hulluch","Colembert","Chanveaux","Les Ecrennes","Sore","Lescheraines","Collobrieres","Fletre","Corcy","Villerest","Blauzac","Vauvillers","Lusigny","Lamagdelaine","Saint-Cere","Cajarc","Marquefave","Saint-Nabord","Roche","Mattaincourt","Reuilly","Capvern","Charentay","Serrieres-de-Briord","La Gree-Saint-Laurent","Clarafond","Minzier","Marcellaz-Albanais","Bailly-Carrois","Verrey-sous-Salmaise","Gerland","Fontaine-Milon","Moncheaux-les-Frevent","Les Hogues","Vraiville","Serquigny","Neffes","Chezy","Thin-le-Moutier","Mogues","Allogny","Prunay-sur-Essonne","Benifontaine","Pressagny-le-Val","Saint-Martin-la-Campagne","Le Meix-Saint-Epoing","Soulieres","La Barben","Troyon","Mollkirch","Barjols","Lorcieres","Molliens-au-Bois","Cases-de-Pene","Saint-Python","Mazeres-sur-Salat","Veria","Curgies","Gorcy","Trevignin","Saint-Porchaire","Charleville","Paillet","Abancourt","Vigoulet-Auzil","Bours","Llupia","Girancourt","Noyant-d'Allier","La Poterie","Longeves","Saint-Victor-d'Epine","Echevis","Cleon-d'Andran","Neauphlette","Andrest","Pierrefitte-Nestalas","Saint-Laurent-de-Neste","Horgues","Villarzel-Cabardes","Beauville","Grezolles","Vouel","Sennece-les-Macon","Brens","Etampes-sur-Marne","Frieres-Faillouel","Nouvion-sur-Meuse","Haraucourt","Leffincourt","Saint-Loup-Hors","Saint-Roch","Thodure","Saint-Georges-d'Esperanche","Gatey","Falletans","Arcon","Mende","Baconnes","Bourghelles","Winnezeele","Cuinchy","Perignat-les-Sarlieve","Servance","Emance","Saint-Etienne-de-Brillouet","Saint-Georges-les-Baillargeaux","Frontenay-sur-Dive","Seraincourt","Cours","Beugin","Labeuvriere","Aix-en-Issart","Cuffies","Villeneuve-Saint-Germain","Virignin","Villemoyenne","Bretigny","Yvoire","Conde-sur-Suippe","Labastide-Gabausse","La Chaumusse","Saint-Romain-la-Motte","Voves","Champeaux","Juvaincourt","Iteuil","Limetz-Villez","Maennolsheim","Marle","Chavanay","Cours-la-Ville","Sermoise","Bois-Grenier","Bruille-Saint-Amand","Saint-Gengoux-de-Scisse","Busque","Theil-sur-Vanne","Pin","Torcieu","Mouchin","Bourg","Chivres-en-Laonnois","Roullens","Codolet","Beaujeu","Les Adrets-de-l'Esterel","Ceton","Rolampont","Sormonne","Touvre","Rieux-Minervois","Plobannalec-Lesconil","Cerons","Arsac","Les Roches","Saint-Hippolyte","Rimogne","Solers","Houppeville","Sommedieue","Fontaines","Quevillon","Rouxmesnil-Bouteilles","Regniowez","Saint-Seurin-sur-l'Isle","Remigny","Bessonies","Javrezac","Borderes-sur-l'Echez","Collorgues","La Calmette","Saint-Genies-de-Malgoires","Ouilly-le-Tesson","Saint-Remy-du-Nord","Sours","Sandouville","Mouroux","Bassou","Laduz","Nogent-sur-Eure","Olle","Bannes","Bertrimoutier","Fontaine-Uterte","Quillan","Claouey","Erbree","Largillay-Marsonnay","Lentigny","Lavans-les-Saint-Claude","Wambaix","Azille","Saint-Leonard","Lespesses","Wissignicourt","Hondschoote","Vieux-Conde","La Frenaye","Bazoilles-sur-Meuse","Colomby-sur-Thaon","Fresnicourt-le-Dolmen","Blaye-les-Mines","Strazeele","Caestre","Bucy-les-Cerny","Royas","Gommerville","Crouttes","Nordausques","Flaux","Bagnols-en-Foret","Saint-Pierre-des-Fleurs","L'Orbrie","Saint-Oulph","Capinghem","Reyssouze","Plouedern","Boigny","Mortagne-du-Nord","Anhiers","Saint-Michel-sur-Savasse","Cizely","Folles","Blanzay-sur-Boutonne","Cenon-sur-Vienne","Vaubecourt","Velleches","Moustier-en-Fagne","Acheville","Vigueron","Sourribes","Corbara","Goult","Monticello","Omessa","Francardo","La Rochegiron","Roumoules","Fredille","Villorceau","Thimert-Gatelles","Charge","Saint-Eloy-de-Gy","Quincy","Bouzonville-en-Beauce","Outarville","Saumeray","Ciron","Cussay","Menetou-Salon","Dun-le-Poelier","Couy","La Gaillarde","Bourneville","Asnieres","Londinieres","Vieux-Rouen-sur-Bresle","Tocqueville","Beautot","Port-Mort","Tourville-la-Chapelle","Etalondes","Berville-la-Campagne","Le Manoir","Saint-Vaast-du-Val","Saints","Torderes","Saint-Paulet-de-Caisson","Vialas","Sauveterre","Targassonne","Narbonne-Plage","Cepie","Cervera de la Marenda","Los Masos","Saint-Alexandre","La Liviniere","La Canourgue","Valflaunes","Saint-Chely-d'Apcher","Venejan","Ferrals-les-Corbieres","La Jumelliere","Puyravault","Ruaudin","Le Puy","Saint-Laurent-sur-Sevre","Falleron","Chaix","La Meilleraie-Tillay","La Pommeraye","Aron","La Jaille-Yvon","Roeze-sur-Sarthe","La Poueze","Solesmes","Fresnay-en-Retz","Chaille-les-Marais","Ardenay-sur-Merize","Saint-Colomban","Pierric","La Bosse","Nesmy","Saint-Just-Malmont","Vertrieu","Magneux-Haute-Rive","Lancie","Saint-Etienne-de-Fontbellon","Seyssuel","Bonnet","Sarcey","Soleymieux","Champoly","Ambronay","Villeneuve-de-Marc","Douvres","Ourches","Brullioles","Satolas-et-Bonce","Ternay","Agnin","Fleurie","Moire","Chambles","Leigneux","Poncins","Villemotier","Tramole","Precieux","Saint-Romain-de-Lerps","Bagnols","Salvizinet","La Palud","Lamaire","Bunzac","Chiche","Lescure-d'Albigeois","Bellegarde-Sainte-Marie","Montignac-le-Coq","Beychac-et-Caillau","Saint-Pompont","Verac","Campugnan","Frontenac","Hautefage-la-Tour","Monbrun","Montpitol","Saint-Mary","Le Castera","Allemans-du-Dropt","Sauveterre-de-Comminges","Montbartier","Corme-Ecluse","Seyches","Vendays-Montalivet","La Clotte","Varaize","Croix-Chapeau","Saint-Meme-les-Carrieres","Melleran","Soublecause","Belmont-sur-Rance","Roqueseriere","Frespech","Rauzan","Labretonie","Roquelaure-Saint-Aubin","Thaims","Muron","Toulx-Sainte-Croix","Camon","Layrisse","Saint-Lieux-les-Lavaur","Carlus","Saint-Pierre-de-Mons","Pomarez","Terves","Gorre","Romegoux","Les Cars","La Riviere","Saint-Lary-Soulan","Cocumont","Jumilhac-le-Grand","Loupiac-de-la-Reole","Montesquieu","Lasserre","Villejoubert","Sablonceaux","Chail","Preguillac","Aumagne","Luquet","Saint-Savin","Vivonne","Saint-Androny","Bouniagues","Douville","La Bastide","Mons","Saint-Reverien","Dampierre","Audelange","Saulon-la-Chapelle","Bolandoz","Marigny","Bulgneville","Logelheim","Flaxlanden","Seppois-le-Haut","Melsheim","Ligsdorf","Serocourt","Domjevin","Commissey","Saint-Hippolyte","Chatillon-sur-Saone","Sermamagny","Virey-le-Grand","Planay","Rothau","Russ","Pfaffenheim","Wahlenheim","Rossfeld","Eblange","La Chapelle-aux-Bois","Solgne","Henridorff","Pleboulle","Lanleff","Le Folgoet","Malguenac","Landeda","Ploumoguer","Corlay","Lampaul-Guimiliau","Cast","Rochefort-en-Terre","Plounevez-Lochrist","Graces","Prat","La Malhoure","Garlan","Mello","Dreuil-les-Amiens","Senuc","Origny-le-Sec","Saint-Germainmont","Leuvrigny","Tauxieres-Mutry","Thilay","Lavau","Crancey","Sacy","Mairieux","Marcelcave","Rouy-le-Grand","Saint-Etienne-sur-Suippe","Bussy-Lettree","Soulaines-Dhuys","Chateauvillain","Huiron","Blaise-sous-Arzillieres","Lealvillers","Roquefort","Arancou","Eyliac","Azas","Saint-Lanne","Savigne","Bussiere-Poitevine","Montpinier","La Faye","Saint-Claud","Angeac-Charente","Marestaing","Saint-Pierre-d'Irube","Vielle-Saint-Girons","Cannet","Lucq-de-Bearn","Villeve","Meauzac","Pranzac","Bussiere-Galant","Le Breuil","La Magdelaine-sur-Tarn","Condac","Pey","Fons","Belfort-du-Quercy","Fougax-et-Barrineuf","Niderhoff","Domevre-sur-Durbion","Fresse-sur-Moselle","Blamont","Ringendorf","Wolxheim","Jeanmenil","Adamswiller","Kientzheim","Niederschaeffolsheim","Juville","Oberlauterbach","Melay","Savigny-le-Sec","Villers-sur-Port","Champvans","Lugny-les-Charolles","Belrupt-en-Verdunois","Sanchey","Waldwisse","Docelles","Durrenentzen","Rohr","Lafox","Belhade","Meilhac","Lacroix-Falgarde","La Loubiere","Escorneboeuf","Tosse","Momy","Fosses-et-Baleyssac","Montiron","Cabara","Merignas","Suzanne","Nieul-les-Saintes","Le Fossat","Cayrac","La Rouquette","La Ronde","Cieurac","Fontanes","Gurs","Lamothe-Landerron","Chantecorps","Castagnede","Caudecoste","Vignonet","Saint-Martin-Sainte-Catherine","Trouley-Labarthe","Plaisance","Saint-Martin-d'Arrossa","Arberats-Sillegue","Vielle-Tursan","Misson","Aubie-et-Espessas","Hautefort","Han-sur-Nied","Marsilly","Latille","Prefontaines","Ruitz","Plerneuf","Saint-Gilles-les-Bois","Pommerit-Jaudy","Saint-Brandan","Orsonville","Sabatier","Eletot","Sainte-Croix-aux-Mines","Meymac","Milon-la-Chapelle","Renault","Laas","Champcenest","San-Giuliano","Bretigny","Epinoy","Les Bordes-sur-Lez","Plateau","Vendeville","Jeux-les-Bard","Saint-Paul","Tredarzec","Saint-Jean-Kerdaniel","Bouquet","Souzy-la-Briche","Saint-Malo-de-Guersac","Pretot-Vicquemare","Griesbach-au-Val","Saint-Senoch","Montagrier","Ormersviller","Schorbach","Trouville","Saint-Theodorit","La Poste","Meisenthal","Bettviller","Giron","Leval","La Defense","Doncourt-les-Conflans","Haute-Vigneulles","Neufchef","Tressange","Marange-Zondrange","Brouviller","Argancy","Koeur-la-Petite","Aumont-Aubrac","Villers-sur-Meuse","Beaulieu-sous-Parthenay","Misse","Loubigne","Landepereuse","La Chapelle-Gaudin","Colombier-Fontaine","Bourg-sous-Chatelet","Denney","Vandoncourt","Bessoncourt","Tavey","Itxassou","Igon","Moumour","Corbere-Aberes","Saint-Sulpice-la-Foret","Noisy-Rudignon","Pietralba","Ota","Auffreville-Brasseuil","Mathieu","Auvillers-les-Forges","Biot","Longnes","Eth","Rocher","Neuvy","Lens-Lestang","Meillonnas","Bailly-le-Franc","Saint-Leger-aux-Bois","Saint-Pierre-le-Vieux","Douy-la-Ramee","Vigny","La Roche","Piazza","Cervione","Vico","Le Bleymard","Labastide-de-Virac","Porto","Ance","Ferriere-Larcon","Poix","Dunes","Cousolre","Bord","Grosseto-Prugna","Crocq","Villemur","Bray","Signy","Cadours","Montastruc-de-Salies","Rouvroy","Mons","Aubigny-en-Laonnois","Montaigu","Orangis","Neuville","Paris 17 Batignolles-Monceau","Castiglione","Vaillant","Englos","Roussy","Merenvielle","Ecoche","Gousse","Savy","Les Palais","Liernais","Gouaux","Chasseneuil","Cros-de-Ronesque","Liart","Precey","Vienville","Saint-Nauphary","Furchhausen","Varennes","Le Val-dAjol","ChÃ¢teauponsac","Fregimont","Munchhouse","Bagnols","Aymeries","Perols","Faches","Heuchin","Lastic","Hucqueliers","Mortagne","Verne","Grandpre","Parsac","Coupigny","Pionsat","Venant","Sabres","Sainte-Marie-aux-Chenes","Jumelles","Berneval-le-Grand","Thizy-les-Bourgs","Marnand","Ternand","Hochstatt","Ferrette","Savoie","Chevremont","Sorel-en-Vimeu","Fournier","Saint-Simon","Mondetour","Aragon","Nonneville","Cravans","La Copechagniere","La Poiteviniere","Sevres-Anxaumont","Sceaux-du-Gatinais","Gumbrechtshoffen","Hohfrankenheim","Valmy","Besson","Rimbaud","Pompidou","Adam-les-Vercel","Grandville-Gaudreville","Paix","Le Parc","Gouvernes","Casanova","Dorval","Brain-sur-Vilaine","Les Landes","Lesches","Mont-Cauvaire","Collandres-Quincarnon","Henansal","Montrouveau","Les Laumes","Levie","Meyssac","Olliergues","Epegard","Pontaumur","Saint-Sever-Calvados","Vigneulles","Luttange","Gremecey","Haraucourt","Houdelmont","Barisey-la-Cote","Saint-Boingt","Veho","Adelans-et-le-Val-de-Bithaine","Moussy-le-Vieux","Bantzenheim","Duttlenheim","Jallerange","Fourg","Saint-Germain-Laxis","Montpincon","Saulcy-sur-Meurthe","Longeault","Parcieux","Montrond","Saint-Germain","Somme","Serres","Aussonce","Braquis","Guiche","Anneville-Ambourville","La Motte-Saint-Martin","Lacroix-sur-Meuse","Courdimanche-sur-Essonne","Saint-Pierre-de-Lages","Segny","Daubeuf-la-Campagne","Salins-les-Thermes","Grisy-sur-Seine"
,"Germany","Langgons","Holle","Tespe","Walsrode","Salzgitter","Bad Sassendorf","Vienenburg","Rosdorf","Einbeck","Markersbach","Westensee","Lauterbach","Marburg","Dornburg","Mainz","Weinbach","Cologne","Epfenbach","Essen","Huttenberg","Borgentreich","Mettmann","Schutzbach","Florstadt","Markdorf","Sponheim","Warstein","Gelsenkirchen","Sprockhovel","Miellen","Grebenau","Pohl","Sohren","Grosslittgen","Dillenburg","Frankfurt am Main","Tholey","Runkel","Aerzen","Chemnitz","Worrstadt","Windischleuba","Unnau","Waldbrol","Gebhardshain","Berg","Rheinbreitbach","Wandlitz","Euskirchen","Gau-Bickelheim","Leitzkau","Pfreimd","Biederitz","Langenwetzendorf","Donndorf","Stadtkyll","Pressath","Bockau","Nossen","Homberg","Borken","Tobertitz","Haren","Zossen","Grundau","Schlotfeld","Apolda","Limbach-Oberfrohna","Konigs Wusterhausen","Netphen","Altkirchen","Steyerberg","Hohndorf","Dortmund","Spenge","Selm","Espenau","Lemgo","Bochum","Halver","Bergkamen","Erndtebruck","Rudersdorf","LÃ¼beck","Berlin","Gluckstadt","Bernau bei Berlin","Moor","Dresden","Groditz","Nitz","Sebnitz","Colmnitz","Dobeln","Lauchhammer","Olbernhau","Frankenberg","Rabenau","Finsterwalde","Ebersbach","Hockendorf","Friedersdorf","Coswig","Radebeul","Weinbohla","Klettwitz","Rammenau","Freital","Weisswasser","Thiendorf","Brand-Erbisdorf","Senftenberg","Lunzenau","Halsbrucke","Zwickau","Dippoldiswalde","Ottendorf-Okrilla","Pirna","Niederwiesa","Frauendorf","Wittgensdorf","Falkenberg","Geringswalde","Burkhardtsdorf","Bannewitz","Lichtenberg","Freiberg","Lichtenstein","Niesky","Penig","Calau","Frauenstein","Bischofswerda","GÃ¶rlitz","Halle","Marienberg","Rudolstadt","Neukirchen","Riesa","Heidenau","Priestewitz","Zittau","Oelsnitz","Grossrohrsdorf","Fraureuth","Altenburg","Ruckersdorf","Leipzig","Annaberg-Buchholz","Sohland","Schwarzenberg","Mittweida","Nunchritz","Goldberg","Schenkenhorst","Woltersdorf","Malchow","Velten","Havelberg","Brandenburg","Mullrose","Magdeburg","Lubtheen","Waren","Gransee","Templin","Genthin","Klein Rogahn","Vellahn","Wefensleben","Potsdam","Luckenwalde","Werneuchen","Werder","Brodhagen","EisenhÃ¼ttenstadt","Schermen","Teltow","Schollene","Plate","Hamburg","Ganderkesee","Seth","Laatzen","Stadthagen","Hanover","Varel","Winsen","Isenbuttel","Jevenstedt","Achim","Uetze","Bargfeld-Stegen","Kiel","Oldenburg","Bremen","Bad Zwischenahn","Ratekau","Heist","Elmshorn","Aurich","Padelugge","Buchholz","Seevetal","Meldorf","Bonnigheim","Uberlingen","Geislingen","Sandhausen","Rottenburg","Hessheim","Ittlingen","Mannheim","Niefern-Oschelbronn","Friedenweiler","Bietigheim-Bissingen","Elmstein","Backnang","Zwiefalten","Rheinau","Eigeltingen","Freudenweiler","Bad Liebenzell","Landau","Stuttgart","Worms","Ludwigshafen am Rhein","Karlsruhe","Pforzheim","Bad Duerkheim","Mersheim","Ostfildern","Hamm","Bielefeld","Bad Oeynhausen","MÃ¼nster","Dusseldorf","Lubbecke","Point","Lohfelden","Nordkirchen","Kassel","Hagen","Soest","Recklinghausen","Paderborn","Buende","Geseke","Neuenrade","Pinneberg","Neustadt-Glewe","Gingst","Calbe","Ploen","Seefeld","Wesenberg","Falkensee","Barleben","Neuruppin","Zehdenick","Weddingstedt","Flensburg","Heide","Bargteheide","Kaltenkirchen","Geesthacht","Ahrensburg","Norderstedt","Einhaus","Alveslohe","Itzehoe","Reinbek","Wedel","Bad Segeberg","Grosshansdorf","Glinde","Bad Bramstedt","Barmstedt","Schenefeld","Borstel-Hohenraden","Henstedt-Ulzburg","Tornesch","Ratzeburg","Wentorf bei Hamburg","Neu Wulmstorf","Kroppelshagen-Fahrendorf","Molln","Husum","Fahrendorf","Halstenbek","Wilhelmshaven","Diepholz","Cloppenburg","Schortens","Jever","Lohne","Damme","Vechta","Wittmund","Delmenhorst","Nuremberg","Stein","Gunzenhausen","Erlangen","Oberasbach","Neumarkt-Sankt Veit","Burgthann","Herzogenaurach","Feucht","Ansbach","Bamberg","Lauf an der Pegnitz","Gnotzheim","Amberg","FÃ¼rth","Katzwang","Schwarzenbruck","Roth","Schwabach","Sulzbach-Rosenberg","Heroldsberg","Kummersbruck","Rosstal","Neunkirchen am Sand","Baiersdorf","Zirndorf","Pegnitz","Coburg","Schwerte","Unna","Werl","Waltrop","Munich","Ahlen","LÃ¼denscheid","Arnsberg","Werne","Kierspe","Iserlohn","Marienheide","Beckum","Warendorf","Olsberg","Duisburg","Sundern","LÃ¼nen","Dorsten","Frondenberg","Wickede","Brilon","Herdecke","Menden","Holzwickede","Hemer","Deutsch","Kamen","Bingen am Rhein","Bobenheim-Roxheim","Pirmasens","Eisenberg","Speyer","Landstuhl","Viernheim","Bad Kreuznach","Hettenleidelheim","Frankenthal","Homburg","Weinheim","Dudenhofen","Mutterstadt","Grunstadt","Munster-Sarmsheim","Rodalben","ZweibrÃ¼cken","Neustadt/Westerwald","Birkenau","Germersheim","Altrip","Schriesheim","Hordt","Ramstein-Miesenbach","Mehlbach","Langen","Neustadt","Heidelberg","Neckargemund","Leimen","Dannstadt-Schauernheim","Schifferstadt","Limburgerhof","Eppelheim","Bad Mergentheim","Schwetzingen","Lampertheim","Dossenheim","Nussloch","Ellerstadt","Neuhofen","Kahl am Main","Ketsch","Rodersheim-Gronau","Rubke","Naila","Steinwiesen","Selbitz","Radolfzell","Konstanz","Rastatt","Rulzheim","SchwÃ¤bisch Hall","Gaildorf","Giengen an der Brenz","Lauchheim","Wasser","Freiburg","Bad Krozingen","Schopfheim","LÃ¶rrach","Bad Sackingen","Leinfelden-Echterdingen","Echterdingen","Wuppertal","Krefeld","Alfter","Hilchenbach","Kaarst","Winterberg","Steinbach am Taunus","Remscheid","Rheinbach","Preussisch Oldendorf","Huellhorst","Grossbottwar","Erftstadt","Burgkunstadt","Langfurth","Gleissenberg","Viechtach","Nittenau","Chamerau","Jena","Bad Durrenberg","Oranienburg","Bernburg","Wernigerode","Cottbus","Lubbenau","Schonefeld","Plauen","Bodenfelde","Wolfhagen","Host","Kirchheim unter Teck","Kurnbach","Weiden","Hemmingen","Igensdorf","Volkach","Bergtheim","Sulzheim","Baar-Ebenhausen","Beilngries","Altmannstein","Rottweil","Blumberg","Dauchingen","Lauda-Konigshofen","Tauberbischofsheim","Wertheim am Main","Crailsheim","Neckarsulm","Bretzfeld","Heilbronn","Rheinfelden","Tuttlingen","Fridingen an der Donau","Owingen","Berghausen","Appenweier","Bruchsal","Gondelsheim","Friolzheim","Bad Wildbad im Schwarzwald","Olbronn-Durrn","Wildberg","Althengstett","Ludwigsburg","Tamm","Sindelfingen","Herrenberg","Ehningen","Renningen","Gosheim","Bad Durrheim","Wehingen","Villingen-Schwenningen","Esslingen am Neckar","Ellwangen","Wiesloch","Friedrichshafen","Tettnang Castle","Epfendorf","Bohringen","Horb am Neckar","Bad Uberkingen","GÃ¶ppingen","Gladbeck","Herten","Gera","Stahl","Wintrich","Hermersberg","Thallichtenberg","Merzig","Saarlouis","Engen","Kaufungen","Aachen","Herzogenrath","Frechen","Wetzlar","Herne","Babenhausen","Darmstadt","Morfelden-Walldorf","Taunusstein","Offenbach","Oberhausen","Castrop-Rauxel","Oberursel","Bad Soden am Taunus","Jestadt","Minden","Wesseling","Inden","Hattingen","Kelkheim (Taunus)","Wiesbaden","Kall","Mechernich","Sankt Augustin","Bonn","Leichlingen","Leverkusen","MÃ¼lheim","Bad Vilbel","Kempen","Florsheim","Ginsheim-Gustavsburg","Heusenstamm","Hofheim am Taunus","Obertshausen","Nauheim","RÃ¼sselsheim","Hochheim am Main","Kelsterbach","Bischofsheim","Assenheim","Kleve","Willich","Bedburg","Senden","Friedberg","Eriskirch","Ravensburg","Immenstaad am Bodensee","Hockenheim","Albstadt","Wurmlingen","Rielasingen-Worblingen","Singen","Pfullendorf","Waiblingen","Kuchen","Salach","Lorch","Gerlingen","Kressbronn am Bodensee","Oftersheim","Geisingen","Wolfsburg","Wahrenholz","Braunschweig","Meine","Lentfohrden","Holm","Bonningstedt","Hasloh","Moritz","Ulm","Neu-Ulm","Rellingen","Erkner","Neuenhagen","Uelzen","Wustermark","Spremberg","Bestensee","Woltersdorf","Mittenwalde","Furstenwalde","Cuxhaven","Grevesmuhlen","Wismar","OsnabrÃ¼ck","Rostock","Bredstedt","Niebull","Eckernforde","Georgsmarienhutte","Bad Iburg","Hildesheim","Hamelin","Hinte","Emden","Goslar","Peine","Helmstedt","Konigslutter am Elm","GÃ¶ttingen","Stuhr","Langen","Nordenham","Bremerhaven","Lehrte","WolfenbÃ¼ttel","Ahstedt","Nienburg","Rotenburg","Herzberg am Harz","Hemelingen","Hohenkirchen-Siegertsbrunn","Deisenhofen","Halfing","Weilheim","Lindenberg im Allgau","Oberstaufen","Scheidegg","Bayreuth","Burghausen","Schweinfurt","Markt Wald","Weissenburg","Treuchtlingen","Emmering","FÃ¼rstenfeldbruck","Gilching","Schwabhausen","Grobenzell","Planegg","Kempten (Allgaeu)","Olching","Maisach","Murnau am Staffelsee","Oberau","FÃ¼ssen","Waldkraiburg","Passau","Guenzburg","Burgau","Krumbach","Werningshausen","Ilmenau","Handewitt","Harrislee","Kappeln","Bremervorde","Kuddeworde","Greifswald","Preetz","Bordesholm","Jesteburg","Buchholz in der Nordheide","LÃ¼neburg","Winsen","Bad Schwartau","Herrnburg","Raisdorf","Parchim","Ueckermunde","Melsdorf","Stralsund","Simonsberg","Scharbeutz","Heikendorf","Schwerin","Bruel","Wittenforden","Neustrelitz","Robel","Loitz","Ostseebad Kuhlungsborn","Langwedel","Hassel","Mildstedt","Stade","Deutsch Evern","Pasewalk","Neubrandenburg","Schneverdingen","Soltau","Fahrenkrug","Dorverden","Schonberg","NeumÃ¼nster","Wahlstedt","Rendsburg","Borgstedt","Westerronfeld","Osterronfeld","Kremperheide","Oelixdorf","Oststeinbek","Schleswig","Appen","Maschen","Dassendorf","Schwarzenbek","Wohltorf","Wees","Verden an der Aller","Schonkirchen","Sarkwitz","Hamberge","Kronshagen","Ebstorf","Molfsee","Mielkendorf","Ellerau","Timmendorf Beach","Buedelsdorf","Bendestorf","Uetersen","Lauenburg","Neustadt in Holstein","Heiligenhafen","Lutjenburg","Quickborn","Tangstedt","Tangstedt","Negast","Langendorf","Stockelsdorf","Prangendorf","Lagerdorf","Jersbek","Lutjensee","Hoisdorf","Tremsbuttel","Nahe","Itzstedt","Dabelow","Monkeberg","Altenholz","Buxtehude","Escheburg","Barsbuettel","Ludwigslust","Elmenhorst","Grabau","Sassnitz","Sagard","Kisdorf","Selmsdorf","Kummerfeld","Krempe","Hanstedt","Demmin","Prisdorf","Schwalingen","Sprengel","Neuenkirchen","Munster","Uelvesbull","Neu Duvenstedt","Wendisch Evern","Adendorf","Marne","Celle","Jork","Reppenstedt","Bad Bevensen","Wrestedt","Vogelsen","Bardowick","Apensen","Hemmoor","Rosengarten","Eggingen","Kadelburg","Wiernsheim","Mittelstenweiler","Nagold","Leonberg","SchwÃ¤bisch GmÃ¼nd","Hochdorf","Ingoldingen","Mutlangen","Mittelbiberach","Biberach an der Riss","Loxstedt","Stinstedt","Wanna","Brake (Unterweser)","Hechthausen","Hambergen","Schiffdorf","Lamstedt","Hagen","Himmelpforten","Vollersode","Nordholz","Bulkau","Drochtersen","Bockhorn","Sande","Zetel","Friedeburg","Wiesmoor","Schweiburg","Sottrum","Dohren","Tarmstedt","Tostedt","Hemsbunde","Zeven","Helvesiek","Otter","Worpswede","Schwanewede","Gnarrenburg","Mittelnkirchen","Lilienthal","Syke","Rastede","Westerstede","Hatten","Garrel","Friesoythe","Norden","Blomberg","Hage","Mittegrossefehn","Eversmeer","Esens","Upgant-Schott","Hesel","Ihlow","Westerholt","Wirdum","Berumbur","Dornum","Grossheide","Remels","Norderney","Herford","Melle","Hiddenhausen","Espelkamp","Lohne","Lauenhagen","Enger","Adorf","Trostberg an der Alz","Insingen","Dietramszell","Rabenholz","Dassow","Weinsfeld","Barkow","Wermelskirchen","Poing","Riedering","Maintal","Rothenstein","Erfurt","Auma","Heidenburg","Laufach","Freilassing","Bad Reichenhall","Piding","Saaldorf","Weissenhorn","Gauting","Grafelfing","Senden","Pfaffenhofen an der Roth","Poppenricht","Ebermannsdorf","Geretsried","Starnberg","Wolfratshausen","Pocking","Freising","Mindelheim","Altusried","Neufahrn bei Freising","Hallbergmoos","Konigsbrunn","Buchloe","Regensburg","Weiden","Marktredwitz","Arzberg","Bad Alexandersbad","Hallstadt","Viereth-Trunstadt","Pressig","Stockstadt am Main","Aschaffenburg","Amorbach","Friedrichsdorf","Kleinostheim","Hosbach","Niedernberg","Emtmannsberg","Speichersdorf","Bindlach","Weidenberg","Osterode","Andreasberg","Bad Pyrmont","Bad Gandersheim","Dassel","Kreiensen","Rinteln","Belm","Meppen","Osterholz-Scharmbeck","Papenburg","Langenhagen","Wangerooge","Gifhorn","Calberlah","Northeim","Uslar","Langelsheim","Springe","Stolzenau","Sulingen","Schoneiche","Marklohe","Liebenau","Landesbergen","Wriezen","Strausberg","Wennigsen","Hagenow","Boizenburg","Bad Rothenfelde","Trappenkamp","Kalefeld","Erding","Pliening","Markt Schwaben","Oberding","Diedorf","Neusass","Burgkirchen an der Alz","Altoetting","Haiming","Neuotting","Oberhaching","Burglengenfeld","Lappersdorf","Polling","Augsburg","Penzberg","Wielenbach","Peissenberg","Miesbach","Kaufbeuren","Gundelfingen","Sauerlach","Mehring","Oberkotzau","Hof","Otterloh","Landshut","Glattbach","Johannesberg","Unterschleissheim","Grafing bei Munchen","Kirchseeon","Haar","Kaiserslautern","Enkenbach-Alsenborn","Reich","Umkirch","Baden-Baden","Efringen-Kirchen","Eschweiler","Alsdorf","Bad Homburg","Niederkruchten","Meerbusch","Marl","Bad Wildungen","Erkelenz","Haltern","Ratingen","Bocholt","Bergisch Gladbach","Gelnhausen","Seligenstadt","Hanau","Bruhl","Lohmar","MÃ¶nchengladbach","Neuss","Troisdorf","Geldern","Egenhausen","Altensteig","Grombach","Calw","Inzigkofen","Muhlacker","Ostrach","Flein","Buhl","Wolfschlugen","Wendlingen am Neckar","Volkertshausen","Teningen","Albershausen","Zell unter Aichelberg","Nurtingen","Kirchentellinsfurt","Wannweil","Schiltach","Unterkirnach","Monchweiler","Spaichingen","Weinstadt-Endersbach","Urbach","Vogt","Aulendorf","Reutlingen","Balingen","Konigsbronn","Aalen","Pluderhausen","Neuhausen auf den Fildern","Dietenheim","Ummendorf","Mengen","Saulgau","Unlingen","Metzingen","Sinsheim","Obrigheim","Oedheim","Ditzingen","Fellbach","Langenau","Laupheim","Warthausen","Dornstadt","Winnenden","Schwieberdingen","Maulburg","Lauchringen","Inzlingen","Philippsburg","Waghausel","Ettlingen","Bietigheim","Kehl","Berghaupten","Altlussheim","Frickingen","Freudenstadt","SaarbrÃ¼cken","Kemnath","Lindau","Wangen","Rodental","Burgrieden","Schuttorf","Emlichheim","Borger","Neuenhaus","Osterwald","Visselhovede","Scheessel","Harsefeld","Vierhofen","Salzhausen","Hollenstedt","Garlstorf","Egestorf","Asendorf","Hemslingen","Sittensen","Ruspel","Hetzwege","Vierden","Selsingen","Grasberg","Hammah","Edewecht","Harpstedt","Bassum","Holtinghausen","Grossenkneten","Beckstedt","Bosel","Dingstede","Mehr","Bank","Memmingerberg","Hetzlinshofen","Lachen","Zusmarshausen","Stolberg","GÃ¼tersloh","Vellmar","Ennepetal","Neuwerk","Viersen","Korschenbroich","Nidda","Erkrath","Hilden","Isenburg","Biedenkopf","Langenfeld","Rosrath","Monheim am Rhein","Frankenberg","Dreieich","Fulda","DÃ¼ren","Kerpen","Julich","Kreuzau","Espelkamp-Mittwald","Sigmaringen","Schlaitdorf","TÃ¼bingen","Ettenheim","Offenburg","Staufen im Breisgau","Nufringen","BÃ¶blingen","Hildrizhausen","Heidenheim","Rosengarten","Leutkirch im Allgau","Sankt Leon-Rot","Heddesheim","Reichenbach","Talheim","Steinheim am der Murr","Lochgau","Sipplingen","Sulz am Neckar","Ilsfeld","Mosbach","Friesenheim","Durbach","Welzheim","Donzdorf","Dettingen unter Teck","Filderstadt","Ohringen","Rietheim","Tuningen","Karben","Heusweiler","Sankt Ingbert","Illingen","Volklingen","Grossrosseln","Sankt Wendel","Riegelsberg","Quierschied","Saarwellingen","Remmesweiler","Dessau","Bernsdorf","Grimma","Saalfeld","Neumark","Erlenmoos","Vaihingen an der Enz","Erdmannhausen","Weitnau","Bad Waldsee","Kornwestheim","Bad Herrenalb","Loffenau","Weingarten","Wangen im Allgau","Herrischried","Denkingen","Loffingen","Schorndorf","Denzlingen","Eschenbach","Bissingen an der Teck","Eislingen","Unterensingen","Bad Ditzenbach","Neuenburg am Rhein","Walldorf","Laudenbach","Durmersheim","Untergruppenbach","Eberstadt","Bad Rappenau","Raibach","Braunsbach","Heubach","Ladenburg","Bruhl","Plankstadt","Schwaikheim","Kuppenheim","Hirrlingen","Rangendingen","Weikersheim","Pliezhausen","Erbach","Mietingen","Huttisheim","Rottenacker","Zaberfeld","Eisingen","Weil der Stadt","Schlat","Kongen","Walldurn","Niederstetten","Bad Wimpfen","Zweiflingen","Siegelsbach","Brackenheim","Asperg","Aspach","Dusslingen","Hechingen","Grossbettlingen","Herdwangen-Schonach","Schallstadt","Schliengen","Gernsbach","Kuenzelsau","Lautenbach","Kippenheim","Niederstotzingen","Baltringen","Rehburg-Loccum","Stockse","Neustadt am Rubenberge","Husum","Uchte","Dornheim","Premnitz","Ingolstadt","Dachau","Pullhausen","Sochtenau","Rosenheim","Radevormwald","Boostedt","Gross Kummerfeld","Bonebuttel","Ehndorf","Grossenaspe","Bruckberg","Krugzell","Oesterdeichstrich","Kolpien","Numbrecht","Eppingen","Oppenweiler","Wald-Michelbach","Trebur","Tellingstedt","Proseken","Inzell","Aichwald","Hude","Pleckhausen","Velbert","Pulheim","Delitzsch","Westerburg","HÃ¼rth","Solingen","Elz","Quedlinburg","Frankfurt (Oder)","Unterfoehring","Fohren","Ottobrunn","Weil am Rhein","Heimstetten","Schacht-Audorf","Bohmstedt","Rumohr","Probsteierhagen","Schellhorn","Laboe","Lebrade","Schonberg","Flintbek","Wisch","Quarnbek","Felde","Schoenberg","Drelsdorf","Langwieden","Sippersfeld","Morschheim","Fohren-Linden","Altenglan","Perl","Kirchheimbolanden","Schellweiler","Losheim","Saalstadt","Hoppstadten-Weiersbach","Hoheinod","Schiffweiler","Hefersweiler","Battenberg","Lotzbeuren","Pfeffelbach","Gollheim","Hohenollen","Nonnweiler","Herschweiler-Pettersheim","Weingarten","Etschberg","Ayl","Wattenheim","Klingenmunster","Ulmet","Kirchheim an der Weinstrasse","Dillingen","Weitersweiler","Bolanden","Bubenheim","Molsheim","Esselborn","Brucken","Bernstadt","DinkelsbÃ¼hl","Zipplingen","Neresheim","Rammingen","Donaueschingen","Villingendorf","Bad Griesbach","Lahr","Achern","Hambrucken","Eggenstein-Leopoldshafen","Dielheim","Ilvesheim","Guglingen","Abstatt","Grenzach-Wyhlen","Auggen","Wehr","Deizisau","Steinenbronn","Aldingen","Weissach","Bisingen","Vellberg","Schechingen","Eschach","Gartringen","Freudental","Breisach","Freiberg am Neckar","Murrhardt","Weinsberg","Ehingen","Weil im Schonbuch","Offenau","Ortenberg","Hohberg","Gemmrigheim","Baiersbronn","Jettingen-Scheppach","Bosingen","Bad Urach","Dogern","Hilzingen","Oberkirch","Schutterwald","Thalheim","Oberndorf","Langenargen","Weilheim","Hirschberg","Ebersbach an der Fils","Beuren","Deggingen","Notzingen","Neuffen","Karlsdorf-Neuthard","Otigheim","Blaubeuren Abbey","Schnurpflingen","Stockach","Amstetten","Riedlingen","Teublitz","Straubing","Weilmunster","Wehrheim","Hungen","Floha","Klaus","Holzgerlingen","Wurmberg","Treffelhausen","Dettingen an der Erms","MÃ¼llheim","Uhingen","Ohmden","Riedhausen","Denkendorf","Kreuzwertheim","Mossingen","Sindringen","Bad Konig","Heppenheim an der Bergstrasse","Michelstadt","Hochst im Odenwald","Finkenbach","Beerfelden","Langerringen","Unterhaching","Holzheim","Denklingen","Landsberg am Lech","Dillingen an der Donau","Meitingen","Langweid","Schwifting","Rednitzhembach","Schrobenhausen","Schwaig","Seukendorf","Hamminkeln","Ahaus","Heiden","Bad Berka","Ramerberg","Seeon-Seebruck","Pfaffing","Prien am Chiemsee","Artlenburg","Amelinghausen","Oldendorf","Prebberede","Michendorf","Badow","Linow","Gorschendorf","Tieplitz","Fincken","Stolzenhagen","Protzen","Siedenbrunzow","Warin","Neutrebbin","Klotze","Ahrensfelde","Beelitz","Guestrow","Warrenzin","Rovershagen","Ankershagen","Burg bei Magdeburg","Schwaneberg","Zerbst","Steinhagen","Kirchlengern","Vohl","Lugde","Rollshausen","Lengerich","Niederaula","Immenhausen","Blomberg","Grebenstein","Emstal","Rotenburg an der Fulda","Meinerzhagen","Attendorn","Dorentrup","Neuenstein","Eslohe","Warburg","Horn-Bad Meinberg","Medebach","Dulmen","Oelde","Halle","Werdohl","Felsberg","Siegen","Alheim","Beverungen","Petershagen","Kreuztal","Bad Hersfeld","Glandorf","Bramsche","Baunatal","Stelle","Brokdorf","Sulfeld","Bomlitz","Osterrade","Bad Oldesloe","Bosau","Sommerland","Triptis","Wundersleben","Limbach","Mannichswalde","Fuchshain","Wetterzeube","Osterhausen","Mechelroda","Bornitz","Schkolen","Friedrichroda","Meuselwitz","Saara","Sangerhausen","Plaue","Ilshofen","Konigsfeld im Schwarzwald","Bopfingen","Otisheim","Grevenbroich","Radefeld","Domsdorf","Weischlitz","Luebben","Berka","Hohenmolsen","Kodersdorf","Zeithain","Holzhausen","Hohen","Nohra","Hundhaupten","Deiningen","Siegenburg","Mettenheim","Mainburg","Parsdorf","Antdorf","Puchheim","Wolfgang","Taufkirchen","Petersdorf","Neufarn","Pottmes","Weichering","Saal","Steinhoring","Soyen","Hagelstadt","Westendorf","Gersthofen","Mitwitz","Kirchberg","Haselbach","Oberschneiding","Hadamar","Wittlich","Dietzenbach","Sinn","Plein","Asslar","Eschborn","Holzhausen an der Haide","Bad Soden-Salmunster","Berg","Idstein","Dexheim","Butzbach","Koblenz","Massbach","Reiskirchen","Montabaur","Becheln","Obermeilingen","Diefflen","Hundsangen","Glashutten","Neuwied","Udenheim","Waldbrunn","Wolfersheim","Hunfeld","Hunzel","Mandel","Zeitlofs","Mehlingen","Grunberg","Altenstadt","Rodenbach","Sterzhausen","Bad Camberg","Landsberg","Pockau","Ettersburg","Zeitz","Kelbra","Riethnordhausen","Schwerstedt","Naumburg","Oranienbaum","Rechenberg-Bienenmuhle","Berga","Glauchau","Waltershausen","Arensdorf","Waldau","Wilhelmsdorf","Isseroda","Lugau","Eberstadt","Callenberg","Fambach","Erlau","Freyburg","Tanna","Kleinschwabhausen","Lederhose","Unterwellenborn","Grossposna","Kirchhasel","Schleid","Neunheilingen","Goch","Elsdorf","Blankenheim","Kevelaer","Dormagen","Titz","Dinslaken","Bergheim","Nettersheim","Neunkirchen","Heimbach","Zulpich","Wesel","Konigswinter","Gummersbach","Kirchlinteln","Bienenbuttel","Schuby","Blender","Friedrichsholm","Schwienau","Anderlingen","Gommern","Kritzow","Mieste","Ringenwalde","Boldebuck","Gulzow","Nauen","Bastorf","Rehfelde","Rossau","Bautzen","Luckau","Welzow","Pinnow","Grossschirma","Kamenz","Berggiesshubel","Kesselsdorf","Merschwitz","Hoyerswerda","Malschwitz","Pfaffroda","Kurort Hartha","Anzing","Ottenhofen","Irschenberg","Riegsee","Selb","Bolsterlang","Rottenburg an der Laaber","Cham","Wessobrunn Abbey","Moschenfeld","Dietmannsried","Dollern","Berne","Breuna","Eppstein","Girod","Schwalbach","Chiemsee","Pattensen","Gaishofen","Sarstedt","Bad Salzungen","Gerstetten","Laichingen","Essingen","Bobingen","Machtolsheim","Abtsgmuend","Hauzenberg","Wegscheid","Hunxe","Greven","Borken","Linz am Rhein","Hattersheim","Poppenhausen","Eiterfeld","Ranstadt","Kleinkahl","Happurg","Hannover","Streich","Schutzenhof","Markt","Alexander","Breckerfeld","Dolgesheim","Reinhartshausen","Monschau","Simmerath","Hartenstein","Massenheim","Herzfeld","Volkmarsen","Kamp-Lintfort","Mohnesee","Witten","Georgensgmund","Westhausen","Weiltingen","Sontheim an der Brenz","NÃ¶rdlingen","Huttlingen","Tannhausen","Steinweiler","Nachrodt-Wiblingwerde","Herscheid","Grenzau","Dobler","Mulheim-Karlich","Karlstein","Gehrden","Wurselen","Detmold","Altena","Schmolln","Kanzlei","Erika","Ergersheim","Ebermannstadt","Kranenburg","Freund","Hohenhaus","Hirschau","Bruckmuhl","Worfelden","Gronau","Heiligenroth","Roding","Wohlsborn","Butzow","Neu Sanitz","Gremersdorf","Neubukow","Stabelow","Glasewitz","Dettmannsdorf","Wattmannshagen","Tutow","Splietsdorf","Gravenwiesbach","Usingen","Konigstein im Taunus","Urspringen","Eichenbuhl","Konigsberg in Bayern","Theilheim","Schwanfeld","Wurzburg","Knetzgau","Wiesentheid","Dombuhl","Munchaurach","Neunkirchen","Weisendorf","Bubenreuth","Telgte","Limburg an der Lahn","Marbach am Neckar","Kitzingen","Gettorf","Wesselburen","Gross Kreutz","Ochsenhausen","Bad Wurzach","Bissendorf","Berg","Werdau","Berching","Anklam","Much","Hauser","Huglfing","Penzing","Garmisch-Partenkirchen","Rohrmoos","Forstern","Bad Aibling","Krailling","Hohenkammer","Feldkirchen-Westerham","Hohenpeissenberg","Klais","Supplingen","Clausthal-Zellerfeld","Altenau","Sassenburg","Korntal","Offenbach an der Queich","Rheurdt","Moers","Hasloch","Friedberg","Buttenwiesen","Munster","Marxheim","Ziemetshausen","Althegnenberg","Wessiszell","Schmiechen","Langenneufnach","Nordendorf","Leipheim","Fahrenzhausen","Apfeldorf","Peiting","Gaimersheim","Loiching","Rhinow","Wiesenburg","Verl","WipperfÃ¼rth","Geiselbach","Ingelheim am Rhein","Barsinghausen","Oestrich-Winkel","Seebad Bansin","Bayerisch Gmain","Ismaning","Garbsen","Stellshagen","Usedom","Wilhelmsthal","Dornstetten","Dieburg","Mombris","Forsthaus","Albertshausen","Osloss","Tappenbeck","Raubling","Waldfeucht","Dockingen","DonauwÃ¶rth","Monheim","Niederschonenfeld","Ellzee","Aletshausen","Ebershausen","Kettershausen","Oberndorf","Grassau","Maximilian","Bonen","Aschheim","Margertshausen","Memmingen","Beiersdorf","Bingen","Hausen ob Verena","Messkirch","Immendingen","Bondorf","Muhlheim an der Donau","Schwenningen","Bietingen","Leibertingen","Veringenstadt","Emmingen-Liptingen","Grunheide","Jacobsdorf","Hennickendorf","Rauen","Angermunde","Pfedelbach","Kupferzell","Schnelldorf","Untereisesheim","Igersheim","Grosserlach","Wustenrot","Erlenbach","Sulzbach","Katzenstein","Wiesau","Ostseebad Boltenhagen","Eden","Oschersleben","Timmendorf","Lage","Oberboihingen","Lennestadt","Niederzier","Bemerode","Gerbrunn","Mainaschaff","Randersacker","Kleinwallstadt","Zell am Main","Thungersheim","Weibersbrunn","Schollkrippen","Krombach","Haibach","Kohren-Sahlis","Rheine","Frohburg","Thallwitz","Voerde","Raesfeld","Sonsbeck","Schermbeck","Weeze","Rees","Affing","Obergriesbach","Thierhaupten","Wertingen","Finningen","Bissingen","Rain","Mering","Mertingen","Zoschingen","Untermeitingen","Welden","Hainsfarth","Bad Laasphe","Freudenberg","Bad Berleburg","Bergneustadt","Wenden","Schnega","Bodenteich","Ruhen","Warberg","Zernien","Neu Darchau","Meinersen","Vechelde","Kissenbruck","Neetze","Wagenhoff","Bottrop","Neukirchen-Vluyn","Weener","Spetzerfehn","Leezdorf","Detern","Borkum","Leer","Holtland","Firrel","Aschersleben","Jessnitz","Lutzen","Nauendorf","Mansfeld","Abberode","Petersberg","Jessen","Weissenfels","Bad Lauchstadt","Raguhn","Schkopau","KÃ¶then","Wengelsdorf","Bad Bibra","Sandersleben","Wolfen","Allstedt","Grossrinderfeld","Schwegenheim","Billigheim-Ingenheim","Hemsbach","Albersweiler","Steinweiler","Buchen","Kuhardt","Gerolsheim","Sulzfeld","Oberviechtach","Schwarzenbach an der Saale","Tannesberg","Dohlau","Helmbrechts","Fichtelberg","Mehlmeisel","Hohenberg","Thierstein","Marsberg","Anrochte","Schotten","Bad Harzburg","Liebenburg","Steinlah","Ebersberg","Vaterstetten","Garching bei Munchen","Schondorf am Ammersee","Grasbrunn","Feldkirchen","Brunnthal","Oberschleissheim","Giessen","Lich","Hessen","Seeheim-Jugenheim","Pfungstadt","Erzhausen","Griesheim","Bendorf","Lahnstein","Hohr-Grenzhausen","Emmelshausen","Heuchelheim","Lollar","Bad Nauheim","Staufenberg","Marktheidenfeld","Bad Neustadt an der Saale","Niederwerrn","Sennfeld","Zellingen","Hochberg","Bad Kissingen","Fuchsstadt","Leinach","Geldersheim","Schwalbach am Taunus","Kronberg","Raunheim","Ostheim","Vallendar","Albig","Bruchkobel","Veitshochheim","Neu-Anspach","Grossostheim","Nidderau","Sulzbach am Main","Kriftel","Erlensee","Momlingen","Gross-Umstadt","Lorsch","Ober-Ramstadt","Grosswallstadt","Reinheim","Morlenbach","Gross-Bieberau","Rodgau","Bensheim","Zwingenberg","Gross-Gerau","Richen","Sulzbach","Lautersheim","Staudt","Schoneck","Niederzeuzheim","Andernach","Langenselbold","Buhlertal","Rauenberg","Gaggenau","Ostringen","Ubstadt-Weiher","Eningen unter Achalm","Neckartailfingen","Dagersheim","Meckenbeuren","Gottmadingen","Cleebronn","Lauffen am Neckar","Schonborn","Gundelfingen","Waldenbuch","Odenheim","Sinzheim","Bretten","Muhlhausen","Bischweier","Rechberghausen","Ispringen","Waldkirch","Irsee","Schwabmunchen","Traunreut","Traunstein","Sulzberg","Sonthofen","Durach","Oberstdorf","Prutting","Germering","Eching","Karlsfeld","Toging am Inn","Bergkirchen","Grafenau","Aichach","Bad Worishofen","Immenstadt im Allgau","Gessertshausen","Marktoberdorf","Zorneding","Bad Toelz","Schechen","Ergolding","Aresing","Kirchreit","Kissing","Arnstadt","Suhl","Weimar","Eisenach","Schmalkalden","Oschatz","Markranstadt","Markkleeberg","Taucha","Wurzen","Crimmitschau","Wiedemar","Schkeuditz","Meerane","Wilkau-Hasslau","Radeberg","Meissen","Schneeberg","Bad Muskau","GlÃ¼cksburg","Eutin","Falkendorf","Busdorf","Ammerndorf","Rothenbach an der Pegnitz","Kulmbach","Mohrendorf","Bischberg","Veitsbronn","Heisede","Ronnenberg","Nordstemmen","Vieselbach","Nordhausen","Gotha","Greiz","Possneck","Bucha","Soemmerda","Bad Langensalza","Sonneberg","MÃ¼hlhausen","Leinefelde","Mettingen","Quakenbruck","Harsewinkel","Korbach","Buckeburg","Rheda-Wiedenbruck","Ochtrup","Nordhorn","Lotte","Altenbeken","Delbruck","Bad Lippspringe","HÃ¶xter","Bad Salzuflen","Rietberg","Oerlinghausen","Versmold","Rahden","Calden","Hannoversch MÃ¼nden","Hofgeismar","Ibbenbueren","Lippstadt","Borgholzhausen","Neuenkirchen","Hovelhof","Bad Driburg","Duderstadt","Lingen","Salzkotten","Bovenden","Nettetal","Wilnsdorf","Pesch","Kalkar","Mudersbach","Scheuerfeld","Olpe","Betzdorf","Tonisvorst","Gevelsberg","Heiligenhaus","Wuelfrath","Wetter (Ruhr)","Emmerich","Styrum","Oer-Erkenschwick","Eitorf","Rheinberg","Schwalmtal","Wildeshausen","Oyten","Ritterhude","Siegburg","Overath","Bad Honnef","Rommerskirchen","Ubach-Palenberg","Wegberg","Baesweiler","Bornheim","Linnich","Hirzlei","Neunkirchen","Ottweiler","Trier","Gillenfeld","Wasserliesch","Konz","Leeheim","Rossdorf","Eppertshausen","Schaafheim","Birkenwerder","Fredersdorf","Eberswalde","Hennigsdorf","Hohen Neuendorf","Eichwalde","Schwedt (Oder)","Finowfurt","Buckow","Ludwigsfelde","Waldsieversdorf","Rathenow","Halberstadt","Obernburg am Main","Gross-Zimmern","Burgstadt","Grunwald","Bad Neuenahr-Ahrweiler","Hennef","Nassau","Remagen","Grossheubach","Wunstorf","Hagenburg","Alfeld","Lindhorst","Ilsede","Luhden","Obernkirchen","Heuerssen","Bad Salzdetfurth","Seelze","Seesen","Salzgitter-Bad","Sandkrug","Burgdorf, Hanover","Wallenhorst","Hasbergen","Norten-Hardenberg","Bad Lauterberg im Harz","Diekholzen","Bad Munder am Deister","Walkenried","Bueddenstedt","Grunenplan","Visbek","Lengede","Vorden","Bad Grund","Burgwedel","Bad Nenndorf","Hemmingen","Lehre","Schoningen","Loheide","Walle","Osterode am Harz","Dinklage","Wardenburg","Weyhe","Bodenwerder","Holzminden","Stadtoldendorf","Steinfeld","Minsen","Klausheide","Wietmarschen","Lemwerder","Nudlingen","Ostrhauderfehn","Dissen","Rattelsdorf","Neubiberg","Assling","Obertrubach","Schnabelwaid","Putzbrunn","Gmund am Tegernsee","Isen","Wittislingen","Aindling","Langenmosen","Konigsdorf","Eckersdorf","Glonn","Schonbrunn","Hassmersheim","Winden","Neufra","Erlabrunn","Himmelstadt","Guntersleben","Leidersbach","Barth","Poppenlauer","Munnerstadt","Bitterfeld-Wolfen","Friedrichsthal","Stassfurt","Malsch","Dettighofen","Stendal","Besitz","Werther","Dettelbach","Untereuerheim","Werneck","Atteln","Halle","Billerbeck","Stadtlohn","Steinfurt","Coesfeld","Issum","Vreden","Fritzlar","Hessisch Lichtenau","Morshausen","Porta Westfalica","Havixbeck","Westerkappeln","Menslage","Emsdetten","Gescher","Rhede","Eltville","Saint Egidien","Dohna","Forst","Gornsdorf","Eppendorf","Hohenstein-Ernstthal","Grossenhain","Eilenburg","Oberhermsdorf","Bernsdorf","Stolpen","Winkwitz","Meckenheim","Niederkassel","Weilerswist","Burscheid","Sinzig","Bruggen","Langerwehe","Xanten","Luchem","Haan","Barssel","Samern","Niedernhausen","Sondershausen","Mylau","Reichenbach/Vogtland","Puttlingen","Eppelborn","Wittenberg","Merseburg","Leuna","Zeuthen","Mahlow","Bergfelde","Thyrow","Leisnig","Schonebeck","Gnadau","Blankenburg","Wittstock","Kremmen","Furstenwald","Wusterhausen","Flothe","Sehnde","Borgsdorf","Schulzendorf","Horst","Krauschwitz","Burkau","Wachau","Oberlungwitz","Lobau","Cannewitz","Lichtentanne","Uttenreuth","Kosching","Rohrenfels","Neunburg vorm Wald","Langensendelbach","Kronach","Mainleus","Johanngeorgenstadt","Oberwiesenthal","Grunhainichen","Aue","Stollberg","Bach","Wallerfangen","Kaisersesch","Eichenzell","Ehrenfeld","Zollstock","Odenthal","Kendenich","Wachtberg","Merzenich","Ensen","Bayenthal","Wiehl","Mogglingen","Untermunkheim","Magstadt","Birenbach","Pleidelsheim","Kirchberg","Hessigheim","Besigheim","Rust","Zell am Harmersbach","Eberbach","Neulussheim","Kronau","Malsch","Dietingen","Trossingen","Vogtsburg","Trochtelfingen","Meersburg","Orsingen-Nenzingen","Allensbach","Deidesheim","Edingen-Neckarhausen","Herbrechtingen","Sachsenheim","Affalterbach","Neubrunn","Schramberg","Durnau","Hirschhorn","Waldshut-Tiengen","Schworstadt","Botzingen","Oberteuringen","Hopfingen","Mulfingen","Riederich","Grosselfingen","Schonaich","Waschenbeuren","Aichelberg","Titisee-Neustadt","Beimerstetten","Westerstetten","Maselheim","Schwendi","Dellmensingen","Illerrieden","Buch","Moglingen","Birkenlohe","Oberkochen","Forchtenberg","Markgroningen","Erligheim","Pfullingen","Neckartenzlingen","Ofterdingen","Hulben","Munsingen","Niedernhall","Straelen","Herzebrock","Ludinghausen","Sendenhorst","Grefrath","Beesten","Huckelhoven","Bilk","Altenberge","Schlangen","Ahrensbok","Nottuln","Herborn","Vlotho","Schwelm","Schonberg","Wendelstein","Lain","Gemmingen","Gau-Bischofsheim","Nierstein","Waibstadt","Grosskrotzenburg","Buchen","Ebhausen","Liederbach","Waldaschaff","Blankenfelde","Neu Isenburg","Hermsdorf","Zella-Mehlis","Hoppegarten","Kahla","Reilingen","Reinfeld","Hemdingen","Bentwisch","Klein Lichtenhagen","Zingst","Schenefeld","Hittbergen","Doberlug-Kirchhain","Hohenwarthe","Lietzen","Burg Stargard","Treuenbrietzen","Wolmirstedt","Linden","Weiterstadt","Holte","Green","Gendorf","Winnen","Wenzenbach","Geiselhoring","Bad Abbach","Pentling","Pfatter","Bruck in der Oberpfalz","Regenstauf","Neutraubling","Sunching","Stamsried","Wiesenfelden","Wackersdorf","Falkenstein","Zwiesel","Schwandorf in Bayern","Donaustauf","Schrozberg","Eggesin","Altentreptow","Prenzlau","Friedland","Rangsdorf","Fahrland","Pritzwalk","Freckenhorst","Ascheberg","Salzbergen","Worthsee","Strasslach-Dingharting","Raisting","Windach","Diessen am Ammersee","Juterbog","Kleinmachnow","Baruth","Gittelde","Hehlen","Badenhausen","Grossalmerode","Fuldatal","Melsungen","Guxhagen","Klosterhauser","Belzig","Ziesar","Biesenthal","Zechlin Dorf","Leegebruch","Schildow","Glienicke","Fehrbellin","Alt Ruppin","Kaisersbach","Rudersberg","Feldberg","Wredenhagen","Viecheln","Ribnitz-Damgarten","Malchin","Teterow","Leizen","Gnoien","Brussow","Leopoldshagen","Ribnitz","Woldegk","Freden","Eime","Everode","Warmsen","Kemberg","Zahna","Krauschwitz","Coswig","Labejum","Ockenfels","Ransbach-Baumbach","Scharnhorst","Puderbach","Burstadt","Herxheim","Lochau","Erdeborn","Hoya","Wachtendonk","Velen","Sudlohn","Dirmingen","Urweiler","Kleinblittersdorf","Reimsbach","Beckingen","Mettlach","Wadgassen","Merchweiler","Sulzbach","Lebach","Bexbach","Hohenfurch","Rottach-Egern","Gerzen","Willebadessen","Buren","Schloss Holte-Stukenbrock","Steinheim","Brakel","Peckelsheim","Barntrup","Oldendorf","Bad Essen","Hille","Pullach im Isartal","Lingerhahn","Morsfeld","Klein-Winternheim","Bechtolsheim","Eich","Seifhennersdorf","Stukenbrock","Oberderdingen","Monsheim","Illingen","Maulbronn","Wernau","Hankensbuttel","Langeln","Dedelstorf","Lautenthal","Vordorf","Parsau","Winnigstedt","Schladen","Remlingen","Naunheim","Altenkirchen","Brensbach","Messel","Gerau","Gernsheim","Schoppenstedt","Woltersdorf","Evessen","Brome","Destedt","Wittingen","Knesebeck","Cremlingen","Hofbieber","Schwalmstadt","Grebenhain","Schluchtern","Herbstein","Neuhof","Steinau an der Strasse","Oberaula","Alsfeld","Birstein","Bermuthshain","Metzlos-Gehag","Gehaus","Frielendorf","Bad Salzschlirf","Kunzell","Odendorf","Neunkirchen","Bad Munstereifel","Villmar","Gladenbach","Bad Endbach","Niederweidbach","Breidenbach","Niederfischbach","Berod bei Wallmerod","Schoeffengrund","Ewersbach","Kirschhofen","Katzenelnbogen","Rettert","Treffelstein","Stammbach","Munchberg","Nagel","Weissdorf","Erbendorf","Kirchenlamitz","Waldershof","Gefrees","Neustadt an der Aisch","Konigstein","Thurnau","Schonwald","Kastl","Konradsreuth","Hollfeld","Neustadt an der Waldnaab","Weiherhammer","Plossberg","Witzenhausen","Gieboldehausen","Braunlage","Gleichen","Hattorf","Luerdissen","Eschershausen","Moringen","Hardegsen","Ulbersdorf","Moritzburg","Spechtshausen","Neustadt in Sachsen","Schwarmstedt","Steimbke","Oldendorf","Elze","Essel","Hessisch Oldendorf","Horgau","Ichenhausen","Rehling","Fischach","Mottingen","Welden","Klosterlechfeld","Hollenbach","Offingen","Gablingen","Lauingen","Inchenhofen","Nienhagen","Eicklingen","Rodenberg","Coppengrave","Wathlingen","Hohnhorst","Delligsen","Giesen","Rheden","Nienhagen","Marienhagen","Schoneberg","Seelow","Lieberose","Vorland","Alt Buchhorst","Barendorf","Radbruch","Wendhausen","Kolln-Reisiek","Aschendorf","Heede","Marienhafe","Juist","Baltrum","Alttechau","Hohenaspe","Klein Ammensleben","Ilsenburg","Wanzleben","Heringsdorf","Hemmingstedt","Hohenschaftlarn","Manching","Geisenfeld","Wasserburg am Inn","Wessling","Egling","Eurasburg","Pforring","Wilsum","Niederlangen","Sogel","Twist","Engden","Bad Bentheim","Getelo","Solms","Gemunden","Kirchhain","Friedensdorf","Lohnberg","Dreikirchen","Braunfels","Gemunden an der Wohra","Wetter","Nordwalde","Leer","Spelle","Beelen","Sassenberg","Horstmar","Metelen","Geltendorf","Reichertshausen","Greifenberg","Vierkirchen","Walleshausen","Welshofen","Ostbevern","Tecklenburg","Rhade","Beverstedt","Wietzen","Kirchseelte","Rhadereistedt","Horstedt","Scharrel","Ovelgoenne","Carolinensiel","Ovelgonne","Bakum","Dotlingen","Ramsloh","Kirn","Furtwangen im Schwarzwald","Hufingen","Niedereschach","Gaienhofen","Uhldingen-Muhlhofen","Triberg im Schwarzwald","Dahlewitz","Putlitz","Bad Boll","Nattheim","Sievershutten","Seedorf","Hilter","Alfhausen","Neuenkirchen","Bersenbruck","Gehrde","Trittau","Gronwohld","Todesfelde","Todendorf","Wunnenberg","Lichtenau","Weiberg","Etteln","Kruden","Haldensleben I","Hecklingen","Lostau","Biere","Atzendorf","Mahndorf","Igel","Neroth","Urzig","Mastershausen","Sensweiler","Enkirch","Tawern","Herrstein","Idar-Oberstein","Geisfeld","Morschied","Pellingen","Bausendorf","Thomm","Newel","Horbruch","Ralingen","Sonnschied","Pelm","Kenn","Olzheim","Serrig","Steineberg","Pluwig","Feusdorf","Lautzenhausen","Helfant","Iffezheim","Hugelsheim","Gengenbach","Neuried","Lichtenau","Ringsheim","Ottenhofen","Kappelrodeck","Forbach","Meissenheim","Lauf","Dasing","Affaltern","Ahlhorn","Pfaffenhausen","Weiler-Simmerberg","Wertach","Oberrieden","Markt Rettenbach","Buchenberg","Eppishausen","Eggenthal","Waal","Zaisertshofen","Heimenkirch","Waltenhofen","Ruckholz","Sigmarszell","Turkheim","Ascha","Parnsberg","Bodenmais","Kelheim","Strasskirchen","Wolfsegg","Hemau","Mariaposching","Thalmassing","Eichendorf","Pemfling","Bischofsmais","Beratzhausen","Breitenbrunn","Rastenberg","Worbis","Weilar","Blankenhain","Brotterode","Rausdorf","Oechsen","Singenbach","Dorfen","Amerang","Gerolsbach","Ernsgaden","Lenggries","Vohburg an der Donau","Brunsbuttel","Burg-Grambke","Olderup","Pansdorf","Rantzau","Gersheim","Namborn","Weiskirchen","Blieskastel","Marpingen","Kollerbach","Freisen","Siesbach","Rodach","Baunach","Dentlein am Forst","Rothenburg","Uffenheim","Langenzenn","Weismain","Wirsberg","Kasendorf","Vilseck","Topen","Kodnitz","Stockheim","Grafenwohr","Nordhalben","Tirschenreuth","Gossweinstein","Goldkronach","Obernzell","Unterdietfurt","Dingolfing","Untergriesbach","Furstenzell","Spiegelau","Tittling","Stubenberg","Ruderting","Tann","Vilshofen","Fursteneck","Hutthurm","Perlesreut","Ergoldsbach","Frontenhausen","Lindlar","Engelskirchen","Pilsting","Landau an der Isar","Obertraubling","Schnaittenbach","Brunn","Seubersdorf","Maxhutte-Haidhof","Nittendorf","Ringsberg","Teising","Muehldorf","Bischofswiesen","Winhoring","Berchtesgaden","Pleiskirchen","Tittmoning","Kleinrinderfeld","Bastheim","Rottendorf","Gerolzhofen","Rollbach","Schonau","Rothenfels","Karlstadt am Main","Kleinheubach","Zell","Rothhausen","Lutzelbach","Wunsiedel","Trabitz","Hochstadt an der Aisch","Auerbach","Freihung","Wernberg-Koblitz","Stornstein","Pullenreuth","Kirchenthumbach","Rehau","Eilenburg, Berg","Pleystein","Mantel","Mitterteich","Pottenstein","Eslarn","Windischeschenbach","Timmenrode","Budenheim","Gensingen","Schlangenbad","Hausen uber Aar","Langenlonsheim","Heidesheim","Grolsheim","Oppenheim","Ober-Hilbersheim","Ellgau","Thannhausen","Altomunster","Wemding","Dinkelscherben","Eichstaett","Muhr am See","Freystadt","Hirschaid","Oberreichenbach","Oberreichenbach","Waldbockelheim","Merenberg","Schwabenheim","Nastatten","Offstein","Boppard","Hergenfeld","Auen","Gau-Algesheim","Thalheim","Schlema","Eibenstock","Burgstadt","Ehrenfriedersdorf","Zwonitz","Rochlitz","Lengenfeld","Hilbersdorf","Drebach","Crottendorf","Schoenheide","Augustusburg","Stutzengrun","Filsen","Oberhausen","Meckenbach","Kaub","Hahnheim","Kirchzell","Worth","Worth am Rhein","Grettstadt","Obernbreit","Goldbach","Kirchlauter","Elsenfeld","Hammelburg","Miltenberg","Pfarrweisach","Eibelstadt","Hassfurt","Klingenberg am Main","Ettleben","Lohr a. Main","Erlenbach am Main","Wachtersbach","Budingen","Gedern","Ober-Morlen","Bad Orb","Westergellersen","Moisburg","Cadenberge","Wingst","Burweg","Kirchgellersen","Kollmar","Untereglfing","Eichenau","Bruchweiler","Zemmer","Zeltingen-Rachtig","Baumholder","Hermeskeil","Monzelfeld","Nordrach","Aldenhoven","Hellenthal","Nideggen","Heinsberg","Wassenberg","Pahl","Markt Indersdorf","Marienstein","Rottenbuch","Schongau","Bad Feilnbach","Baiern","Holzkirchen","Eschenlohe","Winterbach","Murr","Heringen","Barchfeld","Windehausen","Gerstungen","Stadtilm","Breitungen","Dingelstadt","Ernstroda","Stadtroda","Bischofferode","Ilfeld","Bad Sulza","Mihla","Neuhaus am Rennweg","Kindelbruck","Seligenthal","Urbach","Zottelstedt","Oberhof","Lichte","Mellenbach-Glasbach","Olbersleben","Thale","Meiningen","Heilbad Heiligenstadt","Hohenstein","Wernrode","Walldorf","Crossen","Weida","Bad Lobenstein","Kamsdorf","Eisenberg","Schleiz","Gossnitz","Bocka","Blankenstein","Bad Blankenburg","Zeulenroda","Muhltroff","Remptendorf","Zuhlsdorf","Vogelsdorf","Trebbin","Am Mellensee","Bad Kostritz","Neustadt (Orla)","Munchenbernsdorf","Wadern","Rehlingen-Siersburg","Muehlheim am Main","Zainingen","Grethem","Haste","Salzhemmendorf","Burg","Burladingen","Haigerloch","Lossburg","Grunenberg","Zimmern","Rosenfeld","Rheinsberg","Krummensee","Wildau","Muncheberg","Altlandsberg","Asbach","Alsbach-Hahnlein","Buttelborn","Lindenfels","Einhausen","Kefenrod","Leingarten","Massenbachhausen","Nordheim","Neuenstadt am Kocher","Laubach","Aull","Mittenaar","Ehringshausen","Diez","Wiesenbach","Hassloch","Rieseby","Reher","Tonning","Burg auf Fehmarn","Lensahn","Fehmarn","Kellinghusen","Hohenwestedt","Ahrensboek","Unterschneidheim","Satteldorf","Buhlerzell","Wolpertshausen","Obersontheim","Mainhardt","Twiste","Gudensberg","Schwarzenborn","Wabern","Helsa","Zierenberg","Nieste","Korle","Fuldabruck","Sachsenhagen","Fassberg","Konigheim","Schonfeld","Gernrode","Magdala","Kolleda","Arenshausen","Steinach","Kallstadt","Gundelsheim","Neunkirchen","Wilhelmsfeld","Oberotterbach","Huffenhardt","Bohl-Iggelheim","Jockgrim","Rhein","Aglasterhausen","Beindersheim","Lambrecht","Leinsweiler","Waldhambach","Gonnheim","Hatzenbuhl","Niederkirchen bei Deidesheim","Heiligkreuzsteinach","Neupotz","Graben-Neudorf","Funfstetten","Altenmunster","Forheim","Hirzenhain","Ortenberg","Rosbach vor der Hohe","Schlitz","Mindelstetten","Icking","Tutzing","Krautheim","Osterburken","Glauburg","Neuhausen","Birkenfeld","Kieselbronn","Steinegg","Konigsbach-Stein","Rath","Vetschau","Grossraschen","Neuhausen","Borna","Hartha","Bad Lausick","Schnaittach","Hillersleben","Gross Santersleben","Wedringen","Tangermunde","Samswegen","Elend","Gusten","Moser","Osterwieck","Zielitz","Eilsleben","Tangerhutte","Weferlingen","Flechtingen","Obing","Pittenhart","Rimsting","Waging am See","Flinsbach","Gimbsheim","Mockmuhl","Plochingen","Benningen am Neckar","Illertissen","Holzgunz","Aitrang","Ottobeuren","Gronenbach","Altenstadt","Friesenried","Rieden","Rosshaupten","Unterthingau","Altenstadt","Leopoldshohe","Muhlen","Augustdorf","Rieden","Lemforde","Essen","Lienen","Rehden","Bohmte","Unkel","Rettigheim","Bockenem","Bleckede","Astfeld","Unterluss","Tulau","Lehmke","Eschwege","Bad Arolsen","Waldkappel","Trendelburg","Wanfried","Westerdeichstrich","Schwabstedt","Rodewisch","Geilenkirchen","Hurtgenwald","Juchen","Schleiden","Gangelt","Rutesheim","Kastellaun","Simmern","Eppelsheim","Gau-Odernheim","Miehlen","Rheinbollen","Ustersbach","Waidhaus","Schirnding","Pechbrunn","Vohenstrauss","Marktleugast","Parkstein","Kueps Oberfranken","Gestungshausen","Bad Berneck im Fichtelgebirge","Etzenricht","Gleiritsch","Schauenstein","Leonberg","Marktleuthen","Buchbach","Niederneuching","Haag","Reithofen","Gross Gronau","Hasenmoor","Rethwisch","Stahnsdorf","Schonfliess","Borkheide","Borkwalde","Nennhausen","Gorenzen","Nebra","Wulfen","Bennungen","Bad Schmiedeberg","Goseck","Eckartsberga","Apen","Voslapp","Emstek","Linkenheim-Hochstetten","Forst","Marschacht","Kothel","Weddelbrook","Grossensee","Rausdorf","Krummesse","Niendorf","Ellhofen","Waldenburg","Hohenlinden","Buch am Buchrain","Oberornau","Edling","Mittbach","Gars","Schliersee","Andechs","Velden","Egmating","Herrsching am Ammersee","Seefeld","Bernried","Baldham","Babensham","Hausham","Schwaig","Kirchen","Tabarz","Gorkwitz","Schwabhausen","Grainau","Forstinning","Benediktbeuern","Farchant","Odelzhausen","Hodenhagen","Hoheneggelsen","Kirchhundem","Horgertshausen","Tiefenbach","Berglern","Wartenberg","Winzeln","Schomberg","Durchhausen","Empfingen","Dornhan","Frasdorf","Unterneukirchen","Ruhpolding","Hoslwang","Bad Endorf","Eggstatt","Engelsberg","Kirchweidach","Neuberg","Neuberg","Leimbach","Breitenbach","Homberg","Nentershausen","Jesberg","Bergen","Coppenbrugge","Hofer","Hademstorf","Niedernwohren","Hespe","Dankmarshausen","Tann","Schwalmtal","Sterbfritz","Kirchheim","Obersuhl","Bebra","Heringen","Gilserberg","Hilders","Petersberg","Mottgers","Schenklengsfeld","Philippsthal","Wippershain","Meuro","Plessa","Brauweiler","Vettweiss","Winkelhaid","Uehlfeld","Cadolzburg","Strullendorf","Meeder","Bad Staffelstein","Altdorf","Winkelhaid","Memmelsdorf","Jagstzell","Obermarchtal","Spraitbach","Ingelfingen","Alfdorf","Fichtenberg","Kaldenkirchen","Aach","Bodman-Ludwigshafen","Willstatt","Rheinau","Seelbach","Hornberg","Oppenau","Wolfach","Balve","Saerbeck","Lichtenstein","Bohmenkirch","Schelklingen","Gingen an der Fils","Durlangen","Isny im Allgau","Hattenhofen","Erolzheim","Nellingen","Bad Buchau","Gruibingen","Drensteinfurt","Heek","Ennigerloh","Rattenkirchen","Ubersee","Kraiburg am Inn","Reit im Winkl","Taching am See","Ampfing","Tacherting","Marktl","Siegsdorf","Anger","Ohningen","Moos","Schonach im Schwarzwald","Aftholderberg","Neufrach","Gailingen","Muhlhausen-Ehingen","Ronsberg","Pforzen","Niederrieden","Pfronten","Boos","Jengen","Lautrach","Missen-Wilhams","Westerheim","Kirchdorf","Mulsen","Neuhausen","Klingenthal","Muhlau","Oberschona","Oederan","Hartmannsdorf","Auerbach","Lauter","Taura","Gelenau","Zschopau","Werda","Neckarsteinach","Meckesheim","Helmstadt","Schieder-Schwalenberg","Kurort Steinbach-Hallenberg","Bad Liebenstein","Hattstedt","Friedrichstadt","Dahme","Brokstedt","Erfde","Behrendorf","Suderstapel","Buchwalde","Langenberg","Ehrenburg","Suhlendorf","Driedorf","Haiger","Colbe","Wolframs-Eschenbach","Lichtenfels","Lauterhofen","Petershagen","Arnstorf","Postmunster","Neuhaus","Eggenfelden","Simbach am Inn","Neukirchen am Teisenberg","Pfarrkirchen","Gottfrieding","Neuhaus","Aldersbach","Mallersdorf-Pfaffenberg","Ortenburg","Chostlarn","Falkenberg","Wietze","Eschede","Haenigsen","Laubenheim","Biebelsheim","Norheim","Simmertal","Sommerloch","Windesheim","Welgesheim","Boos","Odernheim","Pfaffen-Schwabenheim","Rudesheim","Altenberg","Bahratal","Klipphausen","Merkendorf","Faulbach","Kutenholz","Bederkesa","Nordholz","Ruhland","Lohsa","Tschernitz","Kolkwitz","Broeckel","Eldingen","Steinhorst","Adelheidsdorf","Bad Fallingbostel","Algermissen","Harsum","Edemissen","Hambuhren","Unteruhldingen","Villingen","Salem","Wiesensteig","Genkingen","Munderkingen","Neukirch","Mochenwangen","Schlier","Eberhardzell","Aitrach","Amtzell","Waldburg","Hettstadt","Eltmann","Donnersdorf","Bad Konigshofen im Grabfeld","Gochsheim","Ochsenfurt","Oberickelsheim","Kirschfurt","Gollhofen","Ebelsbach","Frammersbach","Estenfeld","Munster","Muhltal","Dransfeld","Golmbach","Hardenberg","Duderode","Neuendorf","Brieskow-Finkenheerd","Mixdorf","Steintoch","Bad Freienwalde","Spree","Beeskow","Wendisch Rietz","Gross Lindow","Mark","Bad Saarow","Waldstetten","Westerheim","Geislingen an der Steige","Iggingen","Merklingen","Grabenstetten","Lonsee","Alpen","Lauenau","Muden","Schoneworde","Luechow","Hitzacker","Elbe","Gielde","Baddeckenstedt","Everswinkel","Olfen","Wadersloh","Schoppingen","Kiedrich","Geisenheim","Uhler","Kirchberg","Reichelsheim","Westkirchen","Pflummern","Wain","Lauterach","Jungingen","Kisslegg","Schwarzenfeld","Rosendahl","Arnschwang","Kakenstorf","Wittorf","Gardelegen","Garbek","Siebenbaumen","Berkenthin","Gronau","Schmilau","Rondeshagen","Lucka","Langenbernsdorf","Wurzbach","Leutenberg","Hartmannsdorf","Dobitschen","Kaulsdorf","Pausa","Mohlsdorf","Dahn","Hutschenhausen","Thaleischweiler-Froschen","Weilerbach","Bruchmuhlbach-Miesau","Rammelsbach","Imsbach","Winnweiler","Glan-Munchweiler","Waldfischbach-Burgalben","Rudelzhausen","Tauberfeld","Au in der Hallertau","Wolfersdorf","Fraunberg","Schweitenkirchen","Reitmehring","Allershausen","Ohren","Weilburg","Mengerskirchen","Fleisbach","Weimar","Leun","Seeburg","Adelebsen","Wendeburg","Barwedel","Ruppichteroth","Hausern","Weisweil","Heitersheim","Zell","Gorwihl","Endingen","Eberdingen","Fintel","Neuenkirchen","Affinghausen","Alpirsbach","Winterlingen","Zimmern ob Rottweil","Hohentengen am Hochrhein","Gammertingen","Bitz","Schafflund","Satrup","Jubek","Struxdorf","Bargum","Dorpstedt","Brodersby","Bollingstedt","Schaalby","Kampen","Leutershausen","Burk","Petersaurach","Ornbau","Diebach","Megesheim","Ederheim","Sielenbach","Kaisheim","Ernstthal","Ronneburg","Buttenheim","Neundorf","Haiterbach","Sigmaringendorf","Oschingen","Arnstein","Uettingen","Alzenau in Unterfranken","Kurnach","Giebelstadt","Weisen","Galenbeck","Perleberg","Zerrenthin","Reisbach","Neureichenau","Hinterschmiding","Am See","Waldkirchen","Querfurt","Karsdorf","Mucheln","Nienburg/Saale","Steigra","Elster","Markt Einersheim","Stettfeld","Karbach","Zeil","Iphofen","Roetgen","Lahden","Grossruckerswalde","Schwarzheide","Hainichen","Elterlein","Plettenberg","Osthofen","Geinsheim","Biblis","Dienheim","Bermersheim","Westhofen","Bad Elster","Bernsbach","Kirchberg","Zaulsdorf","Zschorlau","Windsbach","Muhlhausen","Dietersheim","Puschendorf","Litzendorf","Stegaurach","Podeldorf","Gutenstetten","Wiefelstede","Wagenfeld","Wetschen","Egelsbach","Niederdorfelden","Wehlheiden","Willingen","Naumburg","Spangenberg","Mehmels","Romhild","Catterfeld","Linden","Bad Breisig","Ruppach-Goldhausen","Nauort","Mendig","Plaidt","Wassenach","Heinz","Heinzenberg","Langenbach","Neustadt bei Coburg","Pessenburgheim","Ruthnick","Bismark","Kyritz","Langewiesen","Grossbreitenbach","Wallersdorf","Irlbach","Taufkirchen","Grafschaft","Wohnbach","Waldems","Hammersbach","Mengkofen","Rohr","Mauth","Marklkofen","Hohenau","Bad Fussing","Hofkirchen","Kirchham","Rotthalmunster","Deggendorf","Aidenbach","Haidmuhle","Massing","Egglham","Ruhstorf","Neuhaus am Inn","Legden","Burgbernheim","Neuzelle","Fischbach","Mittelneufnach","Kirkel","Horst","Burbach","Bullay","Traben-Trarbach","Klausen","Gondenbrett","Zell","Hallschlag","Prum","Schweich","Schwirzheim","Bernkastel-Kues","Badem","Irmenach","Lieser","Dreis","Rhaunen","Losheim","Seffern","Morbach","Leiwen","Malberg","Daun","Hochscheid","Kordel","Hillesheim","Sehlem","Eschfeld","Osterburg","Schwanebeck","Irxleben","Hohenerxleben","Kroppenstedt","Bismark","Welsleben","Wegeleben","Huckeswagen","Uberfeld","Zorbig","Braunsbedra","Wimmelburg","Pouch","Teutschenthal","Annaburg","Norvenich","Drolshagen","Lehrberg","Burgoberbach","Kottenheim","Hinterzarten","Haimhausen","Wurmsham","Petershausen","Elstra","Radeburg","Konigswartha","Prietitz","Langebruck","Leutenbach","Burgstall","Beilstein","Lowenstein","Calvorde","Stadtallendorf","Friedland","Heltersberg","Horbach","Nalbach","Gerlfangen","Queidersbach","Kallmunz","Leiblfing","Iggensbach","Kirchroth","Abensberg","Haidhof","Morsbach","Nohfelden","Grafenroda","Dippach","Ruhla","Schleusingen","Vacha","Schonwald im Schwarzwald","Lampertswalde","Kreischa","Ostseebad Nienhagen","Seeheilbad Graal-Muritz","Marlow","Glashagen","Vietgest","Schwaan","Blankenhagen","Weitenhagen","Hebertshausen","Gaissach","Greiling","Kirspenich","Heimerzheim","Nortrup","Voltlage","Loningen","Bad Laer","Bad Teinach-Zavelstein","Meschede","Kammerforst","Hohenleimbach","Leubsdorf","Helferskirchen","Kempenich","Bell","Rheinbrohl","Eitelborn","Schmitten","Hepberg","Jetzendorf","Bad Heilbrunn","Singhofen","Freckenfeld","Burgstetten","Thyrnau","Kirchdorf","Triftern","Pfeffenhausen","Freyung","Bad Schwalbach","Nackenheim","Rudesheim am Rhein","Kiefersfelden","Teisendorf","Isselburg","Billigheim","Zwingenberg","Weisenheim am Berg","Krauchenwies","Bevern","Ravenstein","Gaiberg","Seckach","Bammental","Adelsheim","Burbach","Derschen","Erwitte","Mastholte","Arnbach","Ampermoching","Vilsbiburg","Wettstetten","Moorenweis","Datteln","Schonstett","Chieming","Tuszshing","Aschau","Oberneukirchen","Laufen","Ramsau","Schleching","Petting","Vachendorf","Grabenstatt","Breest","Grambin","Carmzow","Torgelow","Wilhelmsburg","Thurkow","Horstel","Dahlem","Dunningen","Oberopfingen","Oberkammlach","Egg an der Gunz","Blaichach","Seeg","Buhlertann","Bonndorf im Schwarzwald","Buchenbach","Schluchsee","Sexau","Bahlingen","Merdingen","Solden","Blankenrath","Fell","Trierweiler","Arenrath","Saarburg","Irrel","Beuren","Longuich","Gerolstein","Osterspai","Bad Honningen","Willroth","Hausten","Hachenburg","Mertloch","Wissen","Cochem","Kruft","Faid","Bad Marienberg","Dernau","Oberelbert","Alpenrod","Welver","Reichertshofen","Karlskron","Bestwig","Schmallenberg","Ruthen","Kervenheim","Treudelberg","Winden","Albbruck","Neuhausen ob Eck","Bad Steben","Seebad Ahlbeck","Hallenberg","Finnentrop","Orbis","Hofen an der Enz","Darstein","Moyland","Borsfleth","Rackwitz","Maierhofen","Waldschlosschen","Kirburg","Mulda","Vollkofen","Spessart","Grosskugel","Weiding","Woltingerode","Eibsee","Schlierbach","Hermannsburg","Wehnrath","Neuental","Kurten","Purgen","Hahn","Festenburg","Stockhausen","Thoma","Teschow","Ballendorf","Hohne","Wentorf","Vettelschoss","Lubmin","Stapelfeld","Klein Offenseth-Sparrieshoop","Hinterm Horn","Altenmedingen","Spalt","Hilpoltstein","Kettenkamp","Haselunne","Jaderberg","Metjendorf","Recke","Salzburg","Basel","Bulow","Buchwaldchen","Wadelsdorf","Beilrode","Schwarz","Grove","Sanssouci","Tegernsee","Anker","Seehof","Kettig","Marschall","Pixel","Flieden","Watzenborn","Delingsdorf","Dorpen","Hennstedt","Drage","Deinste","Melbeck","Estorf","Wankendorf","Heidehof","Horhausen","Dernbach","Selters","Kurtscheid","Kaltenengers","Rengsdorf","Waldesch","Spay","Bassenheim","Breitscheid","Linkenbach","Dierdorf","Mellingen","Komp","Rhein","Ostercappeln","Dorf Doberitz","Gutzkow","Staig","Achstetten","Kirchzarten","Gunningen","Kapellenberg","Bogen","Ehekirchen","Hitzhofen","Kirchweg","Netze","Lohra","Merching","Herringen","Birkenhof","Badenweiler","Bodensee","Bensberg","Stromberg","Ohlsdorf","Walpertshofen","Rothenburg","Gravenbruch","Osch","Wall","Munich","Bad Schachen","Vorbach","Garden","Im Loh","Teistungenburg","Nobitz","Brandl","Heideck","Postbauer-Heng","Berngau","Timmaspe","Gnutz","Wattenbek","Kayhude","Bimohlen","Stephanskirchen","Martinsried","Geisenhausen","Forchheim","Adelsdorf","Hausen","Ihringen","Kenzingen","Altdorf","Rechberg","Erzingen","Altbach","Althutte","Eitensheim","Kutzenhausen","Osburg","Bickenbach","Erbach im Odenwald","Furth","Alzey","Biebesheim","Wallmerod","Partenheim","Harxheim","Laurenburg","Sprendlingen","Friesenhagen","Macken","Bardenberg","Berlin","Uelsen","Suddendorf","Bawinkel","Hoogstede","Georgsdorf","Lage","Furstenau","Freren","Renchen","Hofstetten","Fischerbach","Oberharmersbach","Haslach im Kinzigtal","Schwaibach","Hausach","Hesedorf","Peitz","Bad Liebenwerda","Munchweiler an der Alsenz","Dietrichingen","Eppenbrunn","Rosenkopf","Rockenhausen","Krickenbach","Walshausen","Oberndorf","Alfstedt","Sontra","Bahrenfleth","Neuenbrook","Steinburg","Neuwittenbek","Strande","Danischenhagen","Gleschendorf","Colnrade","Cappeln","Buchlberg","Hebertsfelden","Haarbach","Roehrnbach","Hamb","Gronau","Bruggen","Haina","Breitscheid","Schonecken","Bitburg","Kinheim","Mehring","Neuhutten","Wolsfeld","Berglicht","Binsfeld","Rittersdorf","Murlenbach","Neuerburg","Dettenhausen","Drestedt","Halsenbach","Welterod","Duchroth","Beckedorf","Schellerten","Wollstein","Ober-Olm","Bad Munster am Stein-Ebernburg","Trollenhagen","Hilwartshausen","Lachendorf","Bad Sooden-Allendorf","Malterdingen","Katzenmoos","Oldersum","Langeoog","Neuborger","Nieder-Olm","Bad Sachsa","Harste","Wulften","Lottstetten","Brachbach","Daaden","Dorstadt","Hoitlingen","Brandis","Borsdorf","Roklum","Jelmstorf","Suderburg","Leiferde","Vohringen","Oggelshausen","Reichenbach im Tale","Aichstetten","Frickenhausen","Sehlde","Bieber","Wiggensbach","Buxheim","Halblech","Konigsbruck","Hohnstein","Glashutte","Diepenau","Mauer","Hardheim","Kulsheim","Hopsten","Lembruch","Windhagen","Braubach","Oberrod","Woldert","Selbach","Steimel","Buchholz","Steuden","Britz","Twistringen","Bexhovede","Binzen","Schweringen","Hassel","Schwarme","Stadtprozelten","Weilbach","Sailauf","Riedenberg","Kalbach","Rothlein","Zwesten","Liebenau","Berkheim","Winterrieden","Lauben","Eichelgarten","Waldeck","Herleshausen","Cornberg","Weissenbrunn","Ludwigsstadt","Stadtsteinach","Eystrup","Martfeld","Mudau","Schwarzach","Tessin","Suderholz","Loddin","Hohen Schwarfs","Broderstorf","Ducherow","Horst","Steinhagen","Kritzmow","Volkenshagen","Gribow","Bad Doberan","Brandshagen","Zempin","Dummerstorf","Kassow","Kramerhof","Grammow","Birkheim","Weinsheim","Bacharach","Suckow","Rehna","Crivitz","Banzkow","Cambs","Wardow","Zarrentin","Spornitz","Mecklenburg","Gadebusch","Laage","Lubz","Krakow am See","Eldena","Neu Vitense","Camin","Gross Bengerstorf","Niepars","Wittenberge","Brusewitz","Leezen","Rehhorst","Rettin","Brunstorf","Huttblek","Spangdahlem","Bettingen","Landscheid","Thalfang","Ebenweiler","Wolpertswende","Todenbuttel","Bargenstedt","Altwittenbek","Hanerau-Hademarschen","Warnau","Sankt Peter-Ording","Tetenbull","Witzwort","Oldenswort","Ascheberg","Quarnstedt","Bornhoved","Kasseedorf","Elsdorf-Westermuhlen","Ascheffel","Pellworm","Arlewatt","Bistensee","Hochdonn","Brickeln","Sarlhusen","Schulldorf","Breitenburg","Elisabeth-Sophien-Koog","Schonwalde","Witzhave","Lichtenberg","Warmensteinach","Grafengehaig","Wittenburg","Wenzendorf","Vastorf","Bad Schussenried","Hosskirch","Dieblich","Asbach","Kotterichen","Arzbach","Rennerod","Flammersfeld","Kobern-Gondorf","Niederzissen","Assel","Helmste","Kennenburg","Korb","Freiburg","Brackel","Stadelhofen","Wallenfels","Wonsees","Wagersrott","Taarstedt","Langstedt","Hasselberg","Suderbrarup","Keitum","Borgsum","Rantum","Stolk","Boel","Burgsinn","Mellrichstadt","Pettstadt","Wipfeld","Grossbardorf","Egenhausen","Burgwindheim","Heustreu","Bergrheinfeld","Monchsroth","Gillersdorf","Beinerstadt","Palling","Kienberg","Bernau am Chiemsee","Surheim","Halsbach","Ering","Geratskirchen","Rimbach","Wolfegg","Nersingen","Uttenweiler","Bachingen an der Brenz","Bodenwohr","Kirchdorf im Wald","Schierling","Nabburg","Bernhardswald","Geisling","Tegernheim","Riedenburg","Wiesent","Painten","Metten","Wildenberg","Offenberg","Bayern","Brenz","Altenriet","Blaibach","Eschlkam","Rinchnach","Hunderdorf","Bayerisch Eisenstein","Gotteszell","Plattling","Leinburg","Oettersdorf","Tengen","Eschenbach","Kohlberg","Teuschnitz","Creussen","Roslau","Regnitzlosau","Rimbach","Pfalzgrafenweiler","Hersbruck","Hallerndorf","Durrbrunn","Grafenberg","Hemhofen","Rottenbach","Kirchehrenbach","Finsing","Warngau","Waakirchen","Seeshaupt","Otterfing","Kochel","Kipfenberg","Diepersdorf","Muggendorf","Spardorf","Greding","Leutenbach","Buckenhof","Ottensoos","Grossenseebach","Rechtenbach","Rothenbuch","Hollstadt","Hergolshausen","Bischofsheim an der Rhon","Eussenheim","Stockheim","Oberelsbach","Schillingsfurst","Neuhof","Sonnefeld","Neuhof","Gundelsheim","Adelschlag","Markt Erlbach","Adelshofen","Sesslach","Ahorn","Bellershausen","Dollnstein","Wicklesgreuth","Langenbach","Lenting","Essenbach","Riemerling","Nassenfels","Herrieden","Fatschenbrunn","Lichtenau","Lichtenau","Wilburgstetten","Pleinfeld","Weitramsdorf","Feuchtwangen","Leibelbach","Gerolfingen","Ehingen","Deining","Allersberg","Heimbuchenthal","Gaukonigshofen","Wiesthal","Poppenhausen","Unterpleichfeld","GemÃ¼nden am Main","Frensdorf","Flachslanden","Kammerstein","Kemmern","Obermichelbach","Retzstadt","Rottingen","Butthard","Schonungen","Schollbrunn","Umpfenbach","Bad Bocklet","Schondra","Hafenlohr","Seligenstadt","Mainstockheim","Riedmoos","Tuntenhausen","Emmering","Weyarn","Inning am Ammersee","Uffing","Valley","Rott am Inn","Bad Wiessee","Utting","Groitzsch","Husby","Wyk auf Fohr","Grafrath","Kolbermoor","Kuhbach","Iffeldorf","Oberammergau","Eydelstedt","Barnstorf","Bippen","Badbergen","Berge","Pentenried","Wildenfels","Oberdolling","Rohrbach","Gammelsdorf","Feldafing","Albaching","Wolnzach","Neukeferloh","Rieden","Batzhausen","Aholming","Parkstetten","Schmidmuhlen","Laaber","Moosburg","Wang","Lutau","Grossbeeren","Pfaffenhofen an der Ilm","Munsing","Moosach","Hohenwart","Neuburg an der Donau","Kottgeisering","Attenkirchen","Sulzemoos","Langenpreising","Rachelsbach","Zuchering","Zolling","Tuerkenfeld","Walpertskirchen","Allendorf","Wieseck","Gutmadingen","Stuhlingen","Niederstaufenbach","Kusel","Trippstadt","Rimschweiler","Haschbach an der Glan","Hochspeyer","Bundenthal","Stelzenberg","Otterberg","Nanzweiler","Sembach","Allmannshofen","Genderkingen","Leitershofen","Graben","Villenbach","Fremdingen","Schwaben","Stadtbergen","Monchsdeggingen","Mickhausen","Dielingen","Mahlberg","Rugland","Ehingen","Wallerstein","Bachhagel","Zusamaltheim","Schiltberg","Oettingen in Bayern","Mechelgrun","Beierfeld","Lossnitz","Markneukirchen","Breitenbrunn","Herfatz","Opfenbach","Betzigau","Rettenberg","Schwangau","Untrasried","Eisenberg","Bad Hindelang","Herzlake","Lunne","Hohenstein","Heiningen","Baienfurt","Bunde","Konigseggwald","Bartholoma","Attenweiler","Buhlen","Niedenstein","Emerkingen","Griesingen","Altshausen","Dettingen an der Iller","Owen","Bierlingen","Motzingen","Aichhalden","Bad Rippoldsau-Schapbach","Deisslingen","Sauldorf","Pulsnitz","Olbersdorf","Ostritz","Rohrsdorf","Bad Duben","Nerchau","Belgern","Torgau","Pegau","Oeversee","Leck","Westerland","Kropp","Sollerup","Grossenwiehe","Tetenhusen","Brebel","Heudorf","Altheim","Wyhl","Breitnau","Steinen","Kandern","Ibach","Herbolzheim","Laufenburg","Todtmoos","Ebringen","Eschbach","Sasbach","Uhlingen-Birkendorf","Ballrechten","Utzenfeld","Schalksmuhle","Schomberg","Engelsbrand","Ostelsheim","Gomaringen","Raubach","Munstermaifeld","Stockhausen-Illfurth","Mundersbach","Alsbach","Ulmen","Kleinmaischeid","Neuweiler","Sternenfels","Neugersdorf","Oppach","Goda","Mistelbach","Himmelkron","Luhe-Wildenau","Altenstadt","Speinshart","Partenstein","Heigenbrucken","Bodenkirchen","Hohenbrunn","Dorum","Seefeld","Bichl","Rottleberode","Neukieritzsch","Colditz","Rosswein","Mutzschen","Ottersweier","Oberwolfach","Muggensturm","Kappel-Grafenhausen","Greifenstein","Selters","Niederquembach","Rodheim","Schornsheim","Sulzheim","Mengerschied","Oberhausen-Rheinhausen","Unterliezheim","Asbach","Lutzingen","Gerabronn","Jagsthausen","Burtenbach","Gachenbach","Oberrot","Allmersbach im Tal","Scheuerhalden","Fischbach","Kirtorf","Rasdorf","Hosenfeld","Nennig","Ensdorf","Hirstein","Gusterath","Burgen","Auw","Maring-Noviand","Mandern","Baasem","Eckfeld","Korperich","Sefferweich","Schleid","Platten","Prumzurlay","Lambertsberg","Hilscheid","Altenkirchen","Niederkirchen","Schindhard","Clausen","Heinzenhausen","Konken","Hornbach","Contwig","Medard","Offenbach-Hundheim","Waldmohr","Olsbrucken","Einselthum","Breitenbach","Dittweiler","Wilgartswiesen","Papendorf","Rullstorf","Scharnebeck","Klein-Gerau","Rieneck","Ippesheim","Lautertal","Klein-Zimmern","Billings","Oberstenfeld","Dorzbach","Stimpfach","Schmidthachenbach","Hohen","Oberdiebach","Sankt Georgen im Schwarzwald","Norsingen","Vohrenbach","Waldsassen","Waldalgesheim","Kesselbach","Sargenroth","Pfalzfeld","Pleizenhausen","Engelstadt","Erbes-Budesheim","Abenberg","Walsdorf","Heroldsbach","Burgebrach","Buchenbach","Kinding","Oberwesel","Hochstetten-Dhaun","Kasdorf","Bergen","Geisig","Bornich","Merxheim","Monsheim","Seesbach","Breitscheid","Neubeckum","Mommenheim","Flonheim","Pyrbaum","Priesendorf","Euerdorf","Rimpar","Stadtlauringen","Kolitzheim","Stammheim","Waldbuttelbrunn","Dittelbrunn","Tauberrettersheim","Unterbaldingen","Malborn","Speicher","Oberbillig","Mechenried","Burkardroth","Schlusselfeld","Grafenrheinfeld","Heppdiel","Hofheim","Possenheim","Heinrichsthal","Sand","Neukirchen","Ulrichstein","Kandel","Schmiechen","Berghulen","Steinheim am Albuch","Roigheim","Dirmstein","Minfeld","Eichtersheim","Edenkoben","Lambsheim","Gerlachsheim","Jebenhausen","Laumersheim","Schonau im Schwarzwald","Ruchheim","Neubulach","Aidlingen","Leimersheim","Neckargerach","Hagenbach","Karlshuld","Brannenburg","Oberpframmern","Eicherloh","Eitting","Maikammer","Maxdorf","Roschbach","Neuleiningen","Putbus","Lassentin","Gagern","Prohn","Ostseebad Zinnowitz","Wiek","Obrigheim","Harthausen","Thum","Niederdorf","Neudorf","Sehma","Gersdorf","Erda","Annerod","Rauschenberg","Fronhausen","Eschau","Roden","Monchberg","Rentweinsdorf","Beuern","Herschbach","Allendorf","Altendiez","Hausen","Rummingen","Oberried","Lehmen","Melsbach","Mayen","Gieleroth","Willmenrod","Steinen","Uxheim","Werlau","Kelberg","Oberraden","Bad Gottleuba","Bodenheim","Haide","Neusitz","Ohorn","Hirschfelde","Oberseifersdorf","Dittelsdorf","Spitzkunnersdorf","Grossschonau","Burgsponheim","Schmittweiler","Monzingen","Lauschied","Lindewitt","Goldelund","Suderlugum","Humptrup","Langenweddingen","Oebisfelde","Dardesheim","Stapelburg","Colbitz","Harzgerode","Pfaffenhausen","Uedem","Kagsdorf","Pfaffenhofen","Schneizlreuth","Fridolfing","Hohenbergham","Reichelsheim","Echzell","Lauta","Bad Schandau","Arnsdorf","Klingenberg","Hegge","Haldenwang","Burgberg","Obergunzburg","Harsleben","Wilsdruff","Langenwolmsdorf","Geising","Aukrug","Norderstapel","Hohenlockstedt","Schlettau","Wechselburg","Mildenau","Jahnsdorf","Reinsdorf","Syrau","Lichtenau","Leubsdorf","Dahlenburg","Herrnhut","Doberschau","Wilthen","Mittelherwigsdorf","Bernstadt","Cunewalde","Eibau","Rennersdorf","Obergurig","Holdorf","Unterwossen","Perach","Bergen","Seebruck","Breitbrunn am Chiemsee","Feilitzsch","Neuenmarkt","Trostau","Sandesneben","Wakendorf","Zarpen","Breitengussbach","Thalmassing","Gremsdorf","Neustadt an der Orla","Konigsee","Niederpollnitz","Lehndorf","Salzwedel","Gatersleben","Jerichow","Buden","Luftkurort Arendsee","Neenstetten","Gerbstedt","Dieskau","Aken","Baasdorf","Weissandt-Golzau","Kretzschau","Bobenheim am Berg","Ilbesheim","Neckarbischofsheim","Kirchardt","Lingenfeld","Bad Bergzabern","Wettin","Milzau","Zschornewitz","Rosslau","Dederstedt","Horstdorf","Grafenhainichen","Frose","Helbra","Nachterstedt","Droyssig","Konnern","Lieskau","Langendorf","Niemberg","Seeburg","Helmershausen","Altengottern","Herbsleben","Niederspier","Grossengottern","Georgenthal","Vesser","Bad Frankenhausen","Bleicherode","Bad Tennstedt","Geraberg","Schmiedefeld am Rennsteig","Uder","Laucha","Sollstedt","Greussen","Thalwenden","Wachenroth","Gebesee","Bosleben-Wullersleben","Oberdorla","Hildburghausen","Buttstedt","Wechmar","Elxleben","Niederdorla","Horselgau","Stotternheim","Noda","Kaltenwestheim","Geschwenda","Buch","Essenheim","Waldheim","Grethen","Krostitz","Regis-Breitingen","Mochau","Dommitzsch","Lauta","Heide","Straupitz","Burg","Altdobern","Spremberg","Guben","Schonewalde","Neupetershain","Hellstein","Stegen","Grafenhausen","Wutoschingen","Waldshut","Istein","Feldberg-Ort","Cappel","Gross-Rohrheim","Otzing","Wald","Langquaid","Laer","Birnbach","Heringsdorf","Jarmen","Karlshagen","Gramzow","Mirow","Mallin","Grambow","Saal","Grossenluder","Altengronau","Banteln","Vehlow","Walsleben","Zerf","Dienstweiler","Waxweiler","Dabergotz","Flecken Zechlin","Dreetz","Hohendodeleben","Zerben","Hundisburg","Derben","Egeln","Parey","Eggersdorf","Dedeleben","Bruck","Betzenstein","Mistelgau","Glien","Oberirsen","Friedewald","Wolferlingen","Lonnig","Streithausen","Fachbach","Herdorf","Muschenbach","Halbs","Schonwalde","Beim Kronsberg","Haus","Ankum","Icker","Lathen","Goldenstedt","Lastrup","Toppenstedt","Kuhstedt","Siedenburg","Wischhafen","Osten","Storkow","Rechtenfleth","Elsfleth","Butjadingen","Ohrensen","Elstorf","Hamwarde","Ottersberg","Brieselang","Herzberg","Bad Windsheim","Lychen","Gromitz","Bergen auf Ruegen","Lynow","Dallgow-Doeberitz","Alt Golm","Tutzpatz","Krugsdorf","Paradies","Walheim","Frittlingen","Nusplingen","Kusterdingen","Entringen","Ruppertshofen","Deilingen","Riegel","Silling","Karsbach","Bogenhausen","Gadegast","Blumenthal","Bornstein","Marienburg","Fockbek","Boklund","Tarp","Borgdorf-Seedorf","Wasbek","Fleckeby","Owschlag","Rickert","Padenstedt","Nubbel","Kirchhellen","Neuendettelsau","Stulln","Geithain","Tettau","Konigsfeld","Etterschlag","Spatzenhausen","Leezen","Nakensdorf","Cramonshagen","Domsuhl","Retgendorf","Witzin","Bornsen","Trent","Rambin","Verchen","Neuenkirchen","Grimmen","Neuenkirchen","Dipbach","Benshausen","Weissensee","Bregenstedt","Barby","Dahlen","Mugeln","Ursensollen","Freudenberg","Claussnitz","Klutz","Strohkirchen","Lauenbruck","Wirges","Gershasen","Luckenbach","Burgbrohl","Idenheim","Werlte","Lindern","Oberthulba","Weissenthurm","Ohrdruf","Kranichfeld","Burghaun","Ainring","Lehesten","Gefell","Lonnerstadt","Ellingen","Wellheim","Vahlbruch","Obernfeld","Ostseebad Binz","Wolgast","Erzenhausen","Busenberg","Leimen","Lauterecken","Linden","Bernterode","Schwallungen","Munchhausen","Battenberg","Kirberg","Ballersbach","Teuchern","Jestetten","Bollschweil","Linsburg","Westfeld","Werlaburgdorf","Treuen","Gomadingen","Winzer","Weiler","Bromskirchen","Sickte","Fallersleben","Dannenberg","Sachsenkam","Fischbachau","Neubeuern","Obermoschel","Hirschhorn","Grosskarolinenfeld","Buggingen","Quaal","Pohnstorf","Heilsbronn","Pommelsbrunn","Velburg","Breitenberg","Strohn","Hobeck","Atting","Traitsching","Hohenlimburg","Bellheim","Hochstadten","Wolfmannshausen","Steisslingen","Elsterberg","Kranzberg","Oberaudorf","Sosa","Bruchhausen-Vilsen","Ahausen","Boddenstedt","Bankewitz","Muhl Rosin","Alling","Hofen","Egenhofen","Sotterhausen","Merzalben","Schmalenberg","Bunsoh","Schmalensee","Hundsdorf","Grossmaischeid","Brey","Pesterwitz","Arnbruck","Bayrischzell","Haag an der Amper","Hasselbach","Riede","Hamdorf","Aurach","Domitz","Dreveskirchen","Oelerse","Regen","Walderbach","Morslingen","Munzingen","Grossaitingen","Landensberg","Rogling","Elbingerode","Benneckenstein","Friedrichswerth","Hasselfelde","Nandlstadt","Dingolshausen","Nieder-Beerbach","Gundernhausen","Erlbach","Eschelbronn","Hergisdorf","Hengersberg","Runding","Kollnburg","Lam","Waldsee","Birkenheide","Frankenstein","Rohrbach","Wachenheim an der Weinstrasse","Carlsberg","Hochdorf-Assenheim","Heudeber","Engelthal","Hartenstein","Hausen","Simmelsdorf","Rottenstuben","Offenhausen","Alfeld","Adelsdorf","Hessdorf","Vestenbergsgreuth","Oberhundem","Hohe","Wallertheim","Horrweiler","Friesenheim","Alsheim","Selzen","Horperath","Bretthausen","Marienhausen","Schuld","Pracht","Horressen","Moosinning","Bayersoien","Scheuring","Buch","Steingaden","Griesstatt","Spiesen-Elversberg","Mitterfels","Sankt Englmar","Bad Karlshafen","Soller","Hastenrath","Niederdorf","Bofingen","Hoym","Hettstedt","Neutz-Lettewitz","Neustadt","Altleiningen","Schweigen-Rechtenbach","Prestewitz","Leuthen","Elsterwerda","Otterbach","Ruppertsweiler","Kleinbundenbach","Dellfeld","Guntersblum","Gundersheim","Hochborn","Walluf","Meisenheim","Eimsheim","Laudert","Kisselbach","Bockenau","Fischerhude","Thedinghausen","Fernthal","Oberzissen","Urbar","Steineroth","Lahrbach","Jembke","Wesendorf","Beierstedt","Lommatzsch","Weissenborn","Stromberg","Hatzfeld","Eppenrod","Thomasburg","Schnackenburg","Gohrde","Soltendieck","Schirgiswalde","Waltersdorf","Crostau","Demitz-Thumitz","Hainewalde","Neusalza-Spremberg","Neukirch/Lausitz","Kubschutz","Barenstein","Reinsberg","Oelsnitz","Thermalbad Wiesenbad","Herbertingen","Dirlewang","Hinterhermsdorf","Neumarkt in der Oberpfalz","Dorndorf","Oberweissbach","Effelder","Obergebra","Aspach","Tiefenort","Hohenleuben","Berga","Teichwolframsdorf","Spora","Solkwitz","Dobra","Gossersweiler-Stein","Au am Rhein","Sternberg","Spielberg","Treben","Seeland","Holzweissig","Sandersdorf","Wallhausen","Zwenkau","Kriebstein","Gruna","Belgershain","Altenhasslau","Salm","Garz","Wenddorf","Kladen","Jersleben","Schwarzholz","Gerwisch","Eichstedt","Eichenbarleben","Apenburg","Niederndodeleben","Seehausen","Lenzkirch","Elzach","Heimertingen","Legau","Babenhausen","Erkheim","Fischen","Ottersheim","Lengdorf","Altfraunhofen","Volkenschwand","Sankt Wolfgang","Inning am Holz","Gunthersleben","Wumbach","Wiehe","Rauenstein","Rottach","Kaufering","Rohrdorf","Ettenstatt","Kunreuth","Oberscheinfeld","Munchsteinach","Hiltrup","Ladbergen","Wettringen","Untersiemau","Nennslingen","Ebensfeld","Wettelsheim","Obernzenn","Dorfprozelten","Schneppenbach","Oerlenbach","Falls","Weilbach","Billingshausen","Ermershausen","Erdweg","Neuburg","Bubesheim","Rofingen","Biberbach","Todtnauberg","Hochenschwand","Bad Bellingen","Eichstetten","Todtnau","Gutach im Breisgau","Bamlach","Morscheid","Nittel","Lissendorf","Bous","Rodenbach","Mackenbach","Rutsweiler an der Lauter","Schwedelbach","Gehrweiler","Steinwenden","Obermohr","Herschberg","Niederwuerschnitz","Geyer","Wachtum","Brockum","Ellrich","Schnaitsee","Jesendorf","Marzling","Freimersheim","Mauer","Schonau","Sasbach","Sasbachwalden","Tiddische","Lahm","Oberleichtersbach","Erlenbach bei Marktheidenfeld","Kolbingen","Scheer","Marksuhl","Stutzerbach","Ohlstadt","Burgheim","Elm","Donsieders","Schmelz","Uberherrn","Walhausen","Wiedergeltingen","Ruderatshofen","Auenstein","Weissbach","Michelbach an der Bilz","Wimsheim","Ottrau","Wallhausen","Schwaigern","Baindt","Gutenzell-Hurbel","Deckenpfronn","Bempflingen","Bahrdorf","Oldenburg in Holstein","Reutlingendorf","Oberdischingen","Ertingen","Schaulings","Neuravensburg","Bortlingen","Ersingen","Bellamont","Veltheim","Sohlde","Ramsla","Oldisleben","Wustheuterode","Frankenheim","Kaltennordheim","Grosswechsungen","Sattelstadt","Dermbach","Empfertshausen","Lengerich","Geeste","Obristfeld","Oberhaid","Wassermungenau","Schesslitz","Pappenheim","Scheinfeld","Michelau","Marktgraitz","Ebersdorf","Bockelwitz","Alterhofen","Mamming","Kunzing","Baltmannsweiler","Bedburdyck","Gladbach","Hohn","Eddelak","Herforst","Langweiler","Nattenheim","Bollendorf","Welschbillig","Karlshausen","Piesport","Breit","Wiltingen","Hetzerath","Metterich","Krov","Wistedt","Geversdorf","Handeloh","Arlaching","Reischach","Aindorf","Halbe","Senzig","Gersfeld","Hochkirch","Gelting","Bockhorn","Kloster","Ferchesar","Ketzin","Heinsdorf","Ermke","Strucklingen","Gross Koris","Oberkirchen","Plech","Schonsee","Marktschorgast","Kupferberg","Lubstorf","Passow","Dabel","Carlow","Pinnow","Aumuhle","Wusterhusen","Kropelin","Ostseebad Prerow","Ziesendorf","Gelbensande","Breesen","Rhumspringe","Muldenstein","Farnroda","Breitenbach","Eisfeld","Willmersdorf","Schwansee","Stepfershausen","Wilhelmsthal","Altstadt","Weissen","Spiegelsberge","Rosengarten","Hofgarten","Deutsches Haus","Tonbach","Diana","Dunnwald","Ernst","Linde","Haverkamp","Bad Godesberg","Lausitz","Oberwinter","Wittekindshof","Lehen","Bredeney","Allee","Konigsdorf","Schaumburg","Rodinghausen","Eimeldingen","Nesselwang","Sussen","Mittenwald","Mammendorf","Wustenriet","Rudersdorf","Munchsmunster","Traunwalchen","Weichs","Wangen","Wasserlosen","Hohenberg","Rosenthal","Ellerbek","Velpke","Rosendahl","Hohenhameln","Oppurg","Pauscha","Lalendorf","Rastow","Funfeichen","Harra","Grossharthau","Rauda","Plau am See","Goldewin","Neuhausel","Weiden","Kirchsahr","Altenahr","Gross Twulpstedt","Weiden","Altheim","Unterreit","Buch am Erlbach","Saldenburg","Innernzell","Thannberg","Ruckeroth","Breitenau","Vielbach","Nordhofen","Rentrisch","Otterstadt","Polch","Monreal","Wackernheim","Marnheim","Freirachdorf","Oberthal","Hanhofen","Wittgert","Stadecken-Elsheim","Fusternberg","Holthausen","Niederau","Roxel","Konigsbrunn","Holzheim","Ruckersdorf","Langwasser","Hurlach","Aislingen","Oy-Mittelberg","Vier","Uckendorf","Sindorf","Illschwang","Wartenberg-Rohrbach","Womrath","Wallhausen","Blatzheim","Sachsen","Eggersdorf","Venne","Adlum","Heiningen","Otze","Stadt","Gerichshain","Weede","Ellerdorf","Merzen","Heiligenstedtenerkamp","Nienborstel","Oersdorf","Klein Nordende","Huje","Nindorf","Niederfrohna","Pfaffenweiler","Nienstadt","Deutzen","Naunhof","Ranis","Rieder","Welbsleben","Abtsbessingen","Bad Kosen","Altbelgern","Klostermansfeld","Gangloff","Lauscha","Schwarzhausen","Niederau","Moosthenning","Julbach","Wormstedt","Artern","Kirchworbis","Ichtershausen","Heldrungen","Kleinfurra","Schalkau","Niederorschel","Seebergen","Steinach","Sinzing","Hohenfels","Malgersdorf","Hahnbach","Weyhausen","Stoetze","Wasbuttel","Gross Oesingen","Emmendorf","Mariental","Osingen","Lessien","Nahrendorf","Messstetten","Heinade","Eichenberg","Willensen","Morenhoven","Heinkenborstel","Habersdorf","Gschwend","Lindwedel","Betheln","Helpsen","Almstedt","Beedenbostel","Sibbesse","Furholzen","Dingelstedt","Groeningen","Luttgenrode","Mockern","Ditfurt","Ballenstedt","Schopsdorf","Harmstorf","Seester","Sorup","Niesgrau","Mohrkirch","Wrixum","Wittdun","Gross Rheide","Pommerby","Linden","Friedrichskoog","Damp","Barkenholm","Bockhorst","Neermoor","Furth im Wald","Borne","Eresing","Lengenfeld","Bad Kohlgrub","Rennertshofen","Schwindegg","Au","Todtenweis","Wechingen","Asbach-Baumenheim","Hilgertshausen-Tandern","Marktschellenberg","Gmain bei Weidach","Schonberg","Weissenohe","Vorra","Bredenbek","Kaaks","Wilhelm","Thaden","Bendfeld","Wendtorf","Puls","Oldenburg","Damlos","Waischenfeld","Hiltpoltstein","Buchbach","Furstenberg","Langsur","Koxhausen","Strickscheid","Birkenfeld","Ochtendung","Ruschberg","Herborn","Rinzenberg","Bispingen","Pollhagen","Machern","Posing","Kofering","Altenthann","Gartow","Jameln","Weisenheim am Sand","Limbach","Wilhermsdorf","Sugenheim","Oberkail","Bescheid","Kempfeld","Osann-Monzel","Neumagen-Dhron","Naurath","Graach","Junkerath","Veldenz","Oberstadtfeld","Schwollen","Freudenburg","Longkamp","Bekond","Horath","Alsdorf","Kell","Reuth","Brietlingen","Appel","Neuendorf","Bad Kleinen","Neukloster","Grabow","Sternberg","Oberhof","Gustavel","Herren Steinfeld","Uelitz","Birkenfeld","Wonfurt","Winterhausen","Sulzthal","Marktbreit","Westheim","Weidhausen","Oberneuses","Mitteleschenbach","Emskirchen","Buchberg","Theilenhofen","Sengenthal","Tiefenbronn","Vestenberg","Alesheim","Wassertrudingen","Pollenfeld","Rothenbach","Karweiler","Ahrbruck","Weitersburg","Bad Ems","Insul","Adenau","Bonefeld","Brucktal","Waldbreitbach","Westerhorn","Haseldorf","Leimbach","Hartenfels","Sondheim","Willmars","Weihenzell","Dietfurt","Wittelshofen","Burghaslach","Denkendorf","Zapfendorf","Belecke","Wittighausen","Abtswind","Schneeberg","Sulzfeld","Untergimpern","Knoringen","Fahrenbach","Oberschefflenz","Lehrensteinsfeld","Rot am See","Adelmannsfelden","Ellenberg","Spiegelberg","Unterreichenbach","Zaisenhausen","Reute","Trebendorf","Laubusch","Gehofen","Niendorf","Roseburg","Haffkrug","Oberweimar","Oberndorf","Wolkenstein","Weyerbusch","Harschbach","Elkenroth","Niederwambach","Waldorf","Katzwinkel","Uess","Treis-Karden","Eichen","Hillscheid","Uersfeld","Nickenich","Dietlingen","Radegast","Kuhndorf","Kleinfahner","Dachwig","Gierstadt","Badra","Woffleben","Schnellmannshausen","Wiesenfeld","Kefferhausen","Rohr","Halle Neustadt","Grosslobichau","Vollersroda","Buchfart","Pohl","Mittelbach","Hormersdorf","Annweiler am Trifels","Friedelsheim","Bischheim","Freinsheim","Albisheim","Salgen","Nieder Ohmen","Boxberg","Himbergen","Rummer","Weste","Grafhorst","Danndorf","Barum","Mitterstetten","Pornbach","Elsendorf","Hergolding","Kumhausen","Treia","Sieverstedt","Fahrdorf","Jorl","Lurschau","Grosssolt","Karlum","Klein Wittensee","Langballig","Schlotheim","Mattstedt","Themar","Sundhausen","Possendorf","Furthen","Bannberscheid","Winningen","Mannebach","Mogendorf","Weibern","Fehl-Ritzhausen","Welkenbach","Niederalsen","Marienrachdorf","Vohringen","Warza","Neuhaus-Schierschnitz","Reinstadt","Trusetal","Neudietendorf","Kirchheim","Goritz","Veilsdorf","Ingersleben","Seck","Thur","Weitefeld","Ebernhahn","Dreisbach","Meinsdorf","Kleinbeeren","Diedorf","Albrechts","Othenstorf","Altenkrempe","Malente","Klein Ronnau","Talkau","Hartenholm","Politz","Merzhausen","Schwarzwald","March","Neu Zauche","Schacksdorf","Kasel-Golzig","Drebkau","Axstedt","Bohlen","Schildau","Hattenhofen","Vilsheim","Niederviehbach","Adlkofen","Weihmichl","Neufraunhofen","Trebsen","Bucha","Doberschutz","Rockenberg","Munzenberg","Schwarzach","Tettenwang","Bartow","Medow","Klein Kedingshagen","Ernsthof","Patzig","Vitte","Gross Miltzow","Murchin","Meesiger","Samtens","Sellin","Kluis","Ostseebad Baabe","Hiddensee","Wackerow","Aspisheim","Oelsberg","Beltheim","Schnellbach","Barstadt","Stauchitz","Panschwitz-Kuckau","Groditz","Hirschstein","Hof","Muhlhausen","Ecklingerode","Seega","Bendeleben","Isserstedt","Tonndorf","Bienstadt","Bleckenrode","Neundorf","Mengersgereuth-Hammern","Hauteroda","Wolfis","Grobzig","Wansleben","Bodelshausen","Bermatingen","Merkers","Westhausen","Viernau","Springstille","Seebach","Rotterode","Heyerode","Hetschburg","Hildebrandshausen","Ammern","Elgersburg","Wohnrod","Heidenau","Hilgermissen","Luttum","Wurmannsquick","Rickenbach","Erfelden","Heiligenhagen","Pruchten","Wittichenau","Rietschen","Tettau","Ortrand","Loch","Reichenbach-Steegen","Becherbach","Schneckenhausen","Ransweiler","Reipoltskirchen","Kindsbach","Hettenrodt","Weidenbach","Niederstadtfeld","Wilferdingen","Schmidgaden","Prackenbach","Alteglofsheim","Hardt","Eutingen","Hermaringen","Nehren","Renquishausen","Unterroth","Heimsheim","Knittlingen","Johstadt","Gechingen","Ramsen","Reichartshausen","Neckarzimmern","Neidenstein","Opfingen","Rechtenstein","Durmentingen","Alleshausen","Ebnat","Steinhausen","Lauterburg","Niederbreitbach","Braunlingen","Rappenau","Frankweiler","Erpolzheim","Botersen","Michelfeld","Emtinghausen","Sandbostel","Schonenberg-Kubelberg","Bad Peterstal-Griesbach","Wittgendorf","Steinigtwolmsdorf","Blievenstorf","Lamspringe","Bad Eilsen","Salzstetten","Stetten","Pastetten","Baierbrunn","Ilmmunster","Jemgum","Terborg","Rechtsupweg","Rhede","Esterwegen","Osterbrock","Emsburen","Graveneck","Frankenau","Linden","Bischoffen","Lahr","Ebeleben","Wildbergerhutte","Weddel","Veltheim","Wriedel","Gerdau","Ribbesbuttel","Vogtareuth","Einsbach","Samerberg","Golzow","Wusterwitz","Kiez","Raben","Wenzlow","Niemegk","Milow","Hausen am Tann","Barenthal","Boich","Mutzenich","Osterhofen","Salzweg","Eggebek","Langenhorn","Gammellund","Ulsnis","Bordelum","Klanxbull","Fargau-Pratjau","Delve","Landrecht","Dietersburg","Hohenthann","Greussenheim","Margetshochheim","Euerbach","Vluyn","Suderau","Volkersweiler","Esthal","Bockenheim","Kirchtimke","Neverin","Driftsethe","Wremen","Ueterlande","Bramstedt","Midlum","Mulsum","Tapfheim","Obermeitingen","Ahrensmoor","Albersdorf","Martensrade","Riepsdorf","Selent","Kellenhusen","Loose","Gross Wittensee","Nordhastedt","Wester-Ohrstedt","Sehlen","Tating","Breiholz","Susel","Wesseln","Krumstedt","Satjendorf","Barkelsby","Lohe-Rickelshof","Otterndorf","Belum","Schopfloch","Glatten","Strassberg","Bischofsgrun","Schlammersdorf","Barnau","Glashutten","Fichtenwalde","Ribbeck","Babow","Brieske","Hennweiler","Flacht","Birlenbach","Bergweiler","Dausenau","Liebenscheid","Bach","Hattert","Wieselbach","Lochum","Hochstenbach","Sankt Katharinen","Niederburg","Erpel","Dattenberg","Wincheringen","Riol","Hof","Hohn","Norken","Hellenhahn-Schellenberg","Gutenacker","Forst","Steinmauern","Oberriexingen","Rohrdorf","Borstel","Beckeln","Jeddeloh Eins","Marxen","Tangendorf","Bargstedt","Wilstedt","Elmlohe","Gyhum","Nortmoor","Augustfehn","Molbergen","Neukamperfehn","Westrhauderfehn","Filsum","Heinbockel","Horneburg","Hepstedt","Heeslingen","Lorup","Hasel","Breitenfelde","Nusse","Schiphorst","Labenz","Klein Wesenberg","Bliesdorf","Schulendorf","Kastorf","Duchelsdorf","Lasbek","Kirchheim am Ries","Dischingen","Eging","Hilgert","Helmern","Markt","Norddeich","Juliusburg","Wilster","Schenefeld","Brande-Hornerkirchen","Tharandt","Netzschkau","Marwitz","Arft","Pomster","Herresbach","Ebertsheim","Niederding","Neustadt","Schloss","Weidenhof","Karin","Kreuz","Vegesack","Beaumarais","Klostersee","Ruit","Balgheim","Degerloch","Westeregeln","Plattenburg","Ziegendorf","Osternienburg","Possendorf","Kitzscher","Freiwalde","Dahme","Lindenau","Mittelsaida","Ritschenhausen","Buttelstedt","Rettersen","Blomesche Wildnis","Nortorf","Hollingstedt","Duingen","Barghorst","Simmersfeld","Tennenbronn","Moos","Ober-Erlenbach","Hohenfelde","Kirchweyhe","Poggensee","Wanne-Eickel","Neuhardenberg","Wettenberg","Hemmelzen","Lochhausen","Milbertshofen","Laussnitz","Osede","Rieste","Rugheim","Weil","Weissenfeld","Hopferau","Stetten","Lutzerath","Filzen","Oberporlitz","Lindigshof","Kammerforst","In der Meer","Giesenkirchen","Sulzgries","Hochdorf","Altingen","Barbing","Scheyern","Waffenbrunn","Ihrlerstein","Krumhermersdorf","Hellweg","Felm","Marienfeld","Hohenhorn","Osdorf","Holtsee","Nonnenhorn","Oberpleichfeld","Pleisweiler-Oberhofen","Anrath","Wienhausen","Altersbach","Salmtal","Wolsendorf","Roetz","Bad Gogging","Frauenau","Waldmunchen","Lupburg","Kleinwolmsdorf","Stadt Wehlen","Wisper","Niederneisen","Mudershausen","Niederbrechen","Hahnstatten","Zorge","Sankt Andreasberg","Betzendorf","Hohnstorf","Prebitz","Gattendorf","Eschenbach","Caputh","Ellefeld","Haaren","Golssen","Kraupa","Hohenleipisch","Schlieben","Lebusa","Crinitz","Breddorf","Puchersreuth","Edelsfeld","Meerbeck","Zarrendorf","Pantelitz","Bannemin","Gahlkow","Molschow","Greppin","Schmerz","Niederselters","Wohra","Amoneburg","Eibelshausen","Scherenbostel","Gangkofen","Bayerbach","Windorf","Furstenstein","Niederalteich","Brennberg","Niederwinkling","Kinsau","Anzing","Berzdorf","Paunzhausen","Hohenbocka","Benningen","Kraftisried","Neckarwestheim","Hohenfelde","Wohrden","Windeby","Petersdorf","Langwitz","Mollenhagen","Peetsch","Schossin","Fischingen","Heuweiler","Schackendorf","Neversdorf","Kukels","Wittenborn","Hobbersdorf","Lindhorst","Drubeck","Derenburg","Loderburg","Wienrode","Harmsdorf","Klein-Schlamin","Wotersen","Bentfeld","Unterammergau","Wiesenbach","Pickliessem","Krettnach","Densborn","Neuschonau","Lemberg","Neuried","Dabendorf","Stocksee","Grosshabersdorf","Eggolsheim","Oberpleis","Effeltrich","Poxdorf","Frankisch-Crumbach","Konzell","Simbach","Bobrach","Rattenberg","Geiersthal","Wittenbeck","Roggentin","Reddelich","Neu Kaliss","Boldela","Lubesse","Katlenburg-Lindau","Mielenhausen","Scheden","Fredelsloh","Neckarrems","Kleinsteinhausen","Wahnwegen","Niederalben","Perkam","Aholfing","Deggenhausen","Hagnau","Wollbrandshausen","Kirchdorf am Inn","Aicha vorm Wald","Schuttertal","Weisenbach","Fronhofen","Kestert","Zornheim","Weitersborn","Hungenroth","Lipporn","Wiebelsheim","Ruchsen","Habach","Hemmersdorf","Trulben","Rohrbach","Wustweiler","Warnow","Franzenheim","Sellerich","Dackscheid","Klotten","Aach","Oberpierscheid","Oberweis","Kalenborn-Scheuern","Bleialf","Harburg","Laugna","NuÃŸdorf (Chiemgau)","Oberndorf","Halvesbostel","Embsen","Oberstreu","Neuhutten","Ettringen","Stotten","Lamerdingen","Bad Wilsnack","Hohen Wangelin","Vollrathsruhe","Alt Schwerin","Liepgarten","Satzvey","Tinnum","Rabenkirchen-Fauluck","Grundhof","Meyn","Medelby","Lindenthal","Ipsheim","Wittnau","Wasenweiler","Bernau","Zell im Wiesental","Kirchheilingen","Creuzburg","Schwarzbach","Oelzschau","Wermsdorf","Espenhain","Kossa","Otterwisch","Osterberg","Sontheim","Bodolz","Wolpinghausen","Schlepzig","Zerre","Fichtenberg","Paulinenaue","Friesack","Dessow","Kirschau","Gnaschwitz","Schlegel","Aldekerk","Emmerzhausen","Dungenheim","Siershahn","Oberlahr","Sorth","Oberfell","Bell","Neitersen","Freisbach","Binau","Bornheim","Mertendorf","Reichardtswerben","Wolferode","Farnstadt","Riedbach","Unterschleichach","Riedbach","Uchtelhausen","Prichsenstadt","Allmendingen","Tomerdingen","Titting","Teugn","Hornburg","Melchow","Ivenack","Stockstadt am Rhein","Burgschwalbach","Immenreuth","Neudrossenfeld","Romrod","Breitenbach am Herzberg","Heubach","Furstenberg","Sauensiek","Twielenfleth","Hollern","Beckdorf","Oring","Unterhausen","Oberhausen","Alten","Raschau","Brekendorf","Schwesing","Gutach (Schwarzwaldbahn)","Zuzenhausen","Rechberg","Argenthal","Vendersheim","Lorscheid","Nachtsheim","Auerbach","Angern","Karstadt","Neukirchen","Redefin","Zapel","Bollstein","Romsthal","Dibbersen","Jheringsfehn","Thuine","Dersum","Breddenberg","Walchum","Klein Meckelsen","Habenhausen","Wallendorf","Huffelsheim","Biesingen","Feilbingert","Traisen","Meudt","Wiesbach","Armsheim","Keidelheim","Mutterschied","Theley","Bad Klosterlausnitz","Bann","Gries","Petersberg","Kerzenheim","Merkelbach","Rotenhain","Guckheim","Urexweiler","Bliesmengen-Bolchen","Barbelroth","Obernheim-Kirchenarnbach","Hahnenbach","Munchweiler am Klingbach","Rheinzabern","Gommersheim","Geinsheim","Hargesheim","Kaden","Kerlingen","Jugenheim","Hackenheim","Pretzfeld","Arberg","Flomborn","Eyendorf","Frommern","Reimlingen","Rimhorn","Sereetz","Schongeising","Schenkenzell","Gammelshausen","Holzmaden","Mittelrot","Gurtweil","Lichtenbroich","Deutz","Durbheim","Wilhelmsdorf","Koditz","Berg","Hetzenhausen","Salching","Vilshoven","Altstadt","Gutow","Ebendorf","Insel","Redekin","Born","Boddin","Dahlenwarsleben","Grebbin","Boden","Zimmern","Bothkamp","Grossmonra","Ostramondra","Blankenhain","Graitschen","Kalkreuth","Blankenloch","Dormettingen","Lauterbach/Schwarzwald","Dobel","Weilheim an der Teck","Neidlingen","Teisnach","Gebenbach","Schonthal","Knittelsheim","Platkow","Falkenfels","Birlinghoven","Luft","Seehof","Dotternhausen","Ottenbach","Altdorf","Eisenbach","Ohlsbach","Apfelstadt","Clausthal","Kottweiler-Schwanden","Temmels","Friemar","Schonenberg","Radibor","Zschortau","Grafenthal","Wulfen","Goggingen","Dipperz","Golm","Langenbach","Schadeleben","Alperstedt","Gossel","Flurstedt","Behringen","Liebenstein","Prittriching","Hard","Malsfeld","Bermbach","Wald","Lippe","Joachimsthal","Oderberg","Wiederau","Kayna","Weidenhahn","Niederfell","Eiselfing","Mintraching","Kotzting","Ensdorf","Heiligenthal","Friedrichsort","Langlingen","Dorf","Niedersachswerfen","Einhausen","Neehausen","Holzengel","Kasbach-Ohlenberg","Henfenfeld","Bobbau","Muldenhammer","Murg","Wintersdorf","Bechhofen","Harlachen","Rugendorf","Wacken","Rabke","Ballstadt","Wernersberg","Inzmuhlen","Wilhelmsheim","Krolpa","Wehrbleck","Ellerhoop","Herzogsweiler","Somborn","Schmidt","Oelsen","Petriroda","Hohenroth","Ramsthal","Salz","Mittelberg","Altenmarkt","Stein an der Traun","Weilersbach","Flintsbach","Nussdorf am Inn","Krun","Jettenbach","Reichersbeuern","Trunkelsberg","Hawangen","Reichertshausen","Mitterfelden","Werpeloh","Klein Berssen","Fresenburg","Rastdorf","Lintig","Keller","Gulzowshof","Malsburg","Buborn","Lollbach","Herren-Sulzbach","Abtweiler","Beetzendorf","Vorstetten","Ludersdorf","Dittelsheim-Hessloch","Preith","Jagel","Hartheim","Eisenbach","Schuller","Heilingen","Neuhemsbach","Sack","Plan","Sudheide","Ludersfeld","Neuengors","Volxheim","Sersheim","Oberstadion","Korchow","Traubing","Reichenschwand","Krautheim","Waldenburg","Steudnitz","Seelitz","Kastel","Lutter am Barenberge","Heidekamp","Trimbs","Schwarzenbach am Wald","Schwarzenbach","Runthe","Oberottmarshausen","Mittelstetten","Gundremmingen","Schwabniederhofen","Tussenhausen","Dittenheim","Oberlaindern","Arzbach","Truchtlaching","Garching an der Alz","Biessenhofen","Mauerstetten","Westheim","Elfershausen","Gerach","Untersteinach","Marktrodach","Hesselbach","Altenkunstadt","Schney","Schwebheim","Ebern","Dorfles","Grossheirath","Kirchendemenreuth","Schirmitz","Pirk","Eisingen","Heinersreuth","Bellenberg","Grossmehring","Lautertal","Wildpoldsried","Marxgrun","Schnee","Stahlhofen","Grunenthal","Pressen","Isenburg","Vorbach","Heeg","Vorwerk","Bellenberg","Wachsenburg","Rechtmehring","Jagerhof","Dierkow","Weissenstadt","Sierksdorf","Seehaus","Berlingerode","Linden","Welle","Theissen","Kuhn","Blechhammer","Wasser","Weisel","Gutenberg","Bergbau","Halberg","Gossen","Konigstein","Karlsbad","Dohle","Gehlenbeck","Blume","Kraft","Hohenroda","Rasselstein","Wichte","Kleinsendelbach","Klink","Ostseebad Sellin","Benz","Klinge","Cranz","Ostseebad Ahrenshoop","Autenzell","Schutz","Waschenbach","Buhler","Schillingshof","Lerbach","Ludwigshafen","Wieske","Feldkirchen","Roes","Wiesbach","Buschhausen","Karl","Ostseebad Dierhagen","Seelscheid","Blitzenreute","Langenenslingen","Thulba","Diedersdorf","Oberberg","Todtenried","Lawalde","Erlach","Hallnberg","Eisenbach","Schlossberg","Buhlerhohe","Gleisweiler","Reichenbach","Burgerhof","Zirkow","Gevensleben","Wolsdorf","Hochstrasse","Albeck","Heimbach","Neuburg","Feldrennach","Oberreichenbach","Engelsburg","Grunkraut","Lichtenwald","Otterbach","Oppendorf","Mohren","Werste","Zeiskam","Bach an der Donau","Steinfeld","Blankensee","Dorth","Friedensau","Buschbell","Mailing","Huhnerhof","Munchhausen","Lutz","Maasholm","Laasdorf","Redwitz an der Rodach","Eckartsberg","Osterfeld","Rackith","Lebus","Tauche","Tantow","Werben","Bruch","Abbensen","Weenzen","Ostenfeld","Osterstedt","Landscheide","Jahnshof","Margarethen","Saint Michaelisdonn","Tarbek","Schafstedt","Massenhausen","Aying","Maitenbeth","Giggenhausen","Kapellen-Drusweiler","Lagesbuttel","Geiselwind","Ebrach","Burglauer","Thungen","Rumeltshausen","Esgrus","Sterup","Neckarweihingen","Tailfingen","Schopfloch","Walting","Gerhardshofen","Trautskirchen","Lettenreuth","Scherstetten","Lohnsfeld","Schauerberg","Zuffenhausen","Liebenwalde","Tarmow","Waldlaubersheim","Niederheimbach","Holzbach","Kamp-Bornhofen","Niederlindhart","Elmpt","Windberg","Listerfehrda","Wasungen","Insheim","Hochstadt","Boffzen","Wolfsheim","Lautern","Nebringen","Egesheim","Woltershausen","Wietzendorf","Wenzingen","Pilsach","Kirchhaslach","Lengthal","Adelsried","Ehrenberg","Floss","Trogen","Etzelwang","Issigau","Neusorg","Reitsch","Kulz","Brand","Tiefenbach","Gablenz","Uebigau","Schleife","Schweizerhof","Aschau","Wittenberg","Lechbruck","Querum","Riding","Rothof","Wassersleben","Steglitz Bezirk","Grunhof","Ober-Roden","Birnbach","Stiege","Schlanstedt","Freudenberg","Weidenthal","Meckenheim","Ruppertsberg","Edesheim","Urmitz","Saffig","Helmenzen","Breitscheidt","Ehlscheid","Weinahr","Wilhelmsdorf","Egloffstein","Ochtmersleben","Rosenburg","Zeppernick","Gernrode","Sandberg","Worth am Main","Neuendorf","Benzingerode","Morsleben","Vahldorf","Hotensleben","Arrach","Leukersdorf","Heiligengrabe","Klausdorf","Honebach","Plodda","Krumpa","Stangerode","Tilleda","Tiefenthal","Rorichum","Pewsum","Dalum","Heiligenstadt","Mainbernheim","Riedenheim","Kist","Mittelstreu","Aub","Dietenhofen","Langenfeld","Baudenbach","Spechtsbrunn","Niedereisenhausen","Dauborn","Kirrweiler","Glindenberg","Veckenstedt","Wasserleben","Garz","Behrenhoff","Katzow","Ostseebad Gohren","Kroslin","Gohren","Seebad Heringsdorf","Dranske","Hinrichshagen","Altenkirchen","Gross Kiesow","Lassan","Zussow","Hochwang","Duggendorf","Weigendorf","Joehlingen","Ittersbach","Rosdorf","Wrist","Grosskorbetha","Ruscheid","Stein-Neukirch","Rieden","Buchel","Thalhausen","Oberhonnefeld-Gierend","Weitzschen","Kohra","Hohenfinow","Spreenhagen","Freudenberg","Ziltendorf","Arnsdorf","Dintesheim","Ludwigshohe","Dahnsdorf","Oberporing","Drachselsried","Aufhausen","Niedermurach","Roggenburg","Veringendorf","Konigsheim","Marquartstein","Marsdorf","Muhle","Beucha","Mockrehna","Knobelsdorf","Rotha","Fahrenbach","Strahlungen","Dambeck","Quitzow","Adenbuettel","Schollnach","Gulzow","Parum","Ahrenshagen","Biburg","Oberschweinbach","Hayingen","Bulowerburg","Lohberg","Kapsweyer","Rositz","Schlehdorf","Tieringen","Weixerau","Kriebitzsch","Straussfurt","Gerbershausen","Kieselbach","Geisenhain","Oberbodnitz","Callbach","Dankenfeld","Schammelsdorf","Nieheim","Bruchhausen","Eichen","Haswede","Bonstetten","Beetzsee","Hoppegarten","Breitenworbis","Unterdiessen","Stottwang","Obertaufkirchen","Niederaichbach","Aichtal","Dunzweiler","Weselberg","Holler","Heuchlingen","Lonsingen","Munsterdorf","Alt Bukow","Winsen","Trassem","Engelshof","Winterbach","Neidenfels","Kemerting","Aurachtal","Frankenwinheim","Armstorf"
,"Israel","Lod","Tel Aviv","Jerusalem","Kfar Saba","Or Yehuda","Azor","Bat Yam","Ramat Gan","Holon","Ashdod","Beersheba","Yehud","Rishon LeZion","Hazav","Ness Ziona","Eilat","Rehovot","Herzliya","Nahariya","Haifa","Shave Ziyyon","Ramat HaSharon","Ramat Poleg","Kadima","Karmi'el","Pardesiyya","Netanya","Gan Yavne","Petah Tikwah","Ashqelon","Savyon","Naham","Mazkeret Batya","`Arugot","Ofaqim","Shetulim","Hadera","Qiryat Bialik","Tel Mond","Hod HaSharon","Qiryat Yam","Shelomi","Binyamina","Liman","`Alma","Ramla","Nazareth","Et Taiyiba","Rinnatya","Yavne","Acre","Nazerat `Illit","Baraq","Even Yehuda","Nesher","Pardes Hanna Karkur","Netivot","Tirat Karmel","Or `Aqiva","Kefar Yona","Bet Oren","Haluz","Biriyya","Gan Hayyim","Qiryat Tiv`on","Qiryat Gat","Be'er Toviyya","`En Ayyala","Misgav Regional Council","Safed","Gedera","Dimona","Bet Shemesh","`En HaShelosha","Herut","Mazor","Shamir","Ra'anana","Bat Hadar","Rosh Ha'Ayin","Zoran","Tirat Yehuda","Bareqet","Elyakhin","Hadid","Hadar Ramatayim","Modiin","Hazor Ashdod","Kefar Daniyyel","Newe Efrayim","Talme Menashe","Kefar Netter","Mazliah","Moran","Shoval","Ramat Aviv","Afiqim","Ramat Dawid","Sde Warburg","Magen","Karkur","Qiryat Ata","Maghar","Bet Alfa","Timrat","Elyaqim","Bet Dagan","Ginnosar","Qiryat Mal'akhi","Hadar `Am","maalot Tarshiha","Ahituv","Qiryat Motzkin","Migdal","Bat Hefer","Ben Shemen-Kefar Hano`ar","Emunim","Tiberias","Mikhmoret","Hever","Ramat Yishay","Sderot","Gimzo","Mesillat Ziyyon","Pasuta","Bet She'an","Newe Yamin","Nordiyya","HaKarmel","Gibbeton","Qiryat Ono","Sarid","Nir Zevi","Ramat Ef`al","Bene Ziyyon","Hurfeish","Shefayim","Dabburiya","Rishpon","Mizpe Netofa","Sde Boker","Yaqum","Bahan","Jaffa","Allonim","`Evron","Hazor HaGelilit","Ramot Naftali","Giv`at Hayyim","Urim","Sedot Yam","`Aseret","Nirim","`Amir","Ganne Tiqwa","Ma`agan Mikha'el","Qiryat Hayyim","Kefar Witqin"
,"Sweden","Stockholm","Uppsala","Malmo","Handen","Skaerholmen","Gothenburg","Lidingoe","Vaellingby","Lindome","Solna","OErkelljunga","Bromma","Vallentuna","Vaxjo","Motala","Haegersten","Tyreso Strand","BorÃ¥s","Alta","Sollentuna","Akersberga","NorrkÃ¶ping","Taby","Vaermdoe","Halmstad","Varby","Forsby","Norsborg","Huddinge","Storvreta","Molnbo","Rimbo","Djurhamn","GrÃ¤nna","Trollhattan","Uddevalla","Nodinge-Nol","Skanninge","Nynashamn","EkerÃ¶","Norrtalje","Malma","Graestorp","Flen","Kungsbacka","Moelndal","Asa","Hoerby","Vastra Frolunda","Gabo","Savedalen","Aled","Eskilstuna","Oskarstrom","Ã–rebro","SÃ¶dertÃ¤lje","Nacka","Arloev","Enkoping","Hjo","Kista","Alvsjo","Sigtuna","Hasselby","Billesholm","Upplands Vasby","Mora","Stora","Svedala","Marsta","Skepplanda","NykÃ¶ping","Haerryda","OEdeshoeg","Saro","Tierp","Helsingborg","Partille","Immeln","Kalmar","Rockneby","Krokom","Varberg","Hallstavik","Slottsbron","Halso","Oregrund","LinkÃ¶ping","Romakloster","Bro","Enskede-Arsta-Vantoer","Laxa","Molkom","Mariestad","Marback","SkÃ¶vde","Vaddo","Svangsta","Nysater","Skanor med Falsterbo","Lidkoping","Hollviken","Borgstena","Varnamo","Bergsjoe","VÃ¤sterÃ¥s","SÃ¶lvesborg","Hultafors","Reso","Morrum","Visby","Stenungsund","Ronninge","Stocksund","Danderyd","Bollebygd","Huskvarna","Karlshamn","Lund","Barseback","Vimmerby","Staffanstorp","Solleftea","Hallevadsholm","Stroemstad","Hedekas","Munkedal","KungÃ¤lv","Falkenberg","Gammelstad","LuleÃ¥","Ã–stersund","Gnesta","GÃ¤vle","Djursholm","Tullinge","Spanga","Rydeback","Bara","Tranas","Nynas","Karlstad","Rottne","UmeÃ¥","JÃ¶nkÃ¶ping","Saltsjobaden","Karlskoga","Skallinge","Brunflo","Boden","Lerum","Osterhaninge","Varsta","Skarblacka","Graddo","Hallingsjo","Bjuv","Ludvika","BorlÃ¤nge","Sala","Strangnas","Stenhamra","Vetlanda","Tollarp","Gislaved","Osmo","Gualov","Toereboda","Vagnharad","Arboga","Smedjebacken","Aby","Nykvarn","Falun","Langshyttan","Backa","Vanersborg","Lilla Edet","Ljungby","Saevsjoe","Rotebro","Kaevlinge","Vargarda","Lonashult","Gemla","Kristinehamn","Sundbyberg","Kallered","Alingsas","Kareby","Harestad","Eslov","Kode","Bohus","Ojersjo","Gnosjoe","PiteÃ¥","SkellefteÃ¥","Bromoella","Nodinge","Ornskoldsvik","Lyckeby","Tving","Hjarnarp","Alafors","Ulricehamn","Aseda","Oskarshamn","Ytterby","Jordbro","Sundsvall","Lycksele","Krylbo","Vendelso","Edsbro","Surahammar","Knivsta","Saltsjo-Duvnas","Holo","Vasterfarnebo","Hallstahammar","Akers Styckebruk","Fagersta","Vingaker","Sandviken","Karra","Ullared","Sjomarken","Teckomatorp","Lysekil","Skarpnaeck","Tumba","Johanneshov","Brottby","Orbyhus","Tegeltorp","Oxie","Ingmarso","Bodafors","Hedemora","Furulund","Astorp","Trangsund","Herrljunga","Timra","Ã„ngelholm","Domsjo","Angered","Degerfors","Morgongava","Bjornlunda","Fritsla","Skogas","Stallarholmen","Torshalla","Katrineholm","Dalaro","Ransta","Trosa","Jarna","Laholm","Jokkmokk","Grums","Skurup","Hoganas","Surte","Orsa","Raettvik","Uttran","Skara","Landskrona","Mjolby","Mardaklev","Dals Rostock","Vinninga","Hunnestad","Molnlycke","FalkÃ¶ping","Olofstorp","Langas","Skene","Fjaeras station","Landvetter","Hono","Jonsered","Grabo","Askim","Kullavik","Goetene","Floda","Vargon","Roro","Varobacka","Malsryd","Orby","Ã…hus","Ramdala","Kristianstad","Hoeoer","Paarp","Akarp","Loddekopinge","Ronneby","Tyringe","Ekeby","Sturko","Karlskrona","Sibbhult","Kattarp","Osby","Limhamn","Tagarp","Tingsryd","Simrishamn","Klagstorp","Morarp","HÃ¤ssleholm","Smedstorp","Vinslov","Klippan","Asarum","Sjoebo","Svaloev","Trelleborg","Navlinge","Fjalkinge","Hyllinge","Bjarnum","Listerby","Billeberga","Ystad","Harby","Vankiva","Olofstroem","Bjarred","Nattraby","Haljarp","Vastra Ramlosa","Delsbo","Forslov","Obbola","Tvaralund","Bygdsiljum","Byske","Jarved","Taberg","Moelle","Villan","Restad","Mullsjoe","Faerjestaden","Oxelosund","Lindesberg","Bergshamra","Ransater","Viken","Kungshamn","Vansbro","Bengtsfors","Getinge","Sennan","OEsthammar","OEckeroe","Leksand","Deje","Torslanda","Gimo","Forshaga","Uddeholm","Ekshaerad","Stollet","Tidan","Stenstorp","Tidaholm","Likenas","Hagfors","Ambjornarp","Henan","Ljungskile","Edsvalla","Torup","Harplinge","Kilafors","Bollnas","Lanna","Knivsta","Overlida","Sexdrega","Munkfors","Harmanger","Alno","Bergeforsen","Hudiksvall","Savsjostrom","Avesta","Mariefred","Vidsel","Stenkullen","Varekil","Liden","Hebo","Rengsjo","Vallsta","Arbra","Segersta","Billdal","Vellinge","Balsta","HÃ¤rnÃ¶sand","Veinge","Ockelbo","Torsaker","Svartinge","Nasum","Haesselby","Vaxholm","Holmsund","Bjorkoby","Kage","Ursviken","Burtraesk","Burea","Nassjo","Mellbystrand","Knared","Finspang","Vaennaes","Ojebyn","Hemmingsmark","Tavelsjo","Froso","Tvaaker","Kungsaengen","Alvesta","Karlsborg","Molltorp","Svenljunga","Taftea","Sjotofta","Ed","Fristad","Dalstorp","Sodra Sunderbyn","Grebbestad","Hofors","Svanesund","Rydboholm","Faergelanda","Jamshog","Agunnaryd","Kyrkobyn","Glommen","Kramfors","Edsele","Svardsjo","Grycksbo","Arjeplog","Bygdea","Robertsfors","Bastad","Lagan","Valdemarsvik","Sodra Sandby","Alvangen","Romelanda","Norsholm","Soederkoeping","Garsnas","Kivik","Sankt Olof","Hammenhog","Tomelilla","Vitaby","Kopingebro","Tenhult","Lomma","Vissefjarda","Bralanda","Mellerud","Frandefors","Ucklum","Jorlanda","Stora Hoga","Nybro","Jaemjoe","Torsas","Smalandsstenar","Asarna","Oviken","Fjardhundra","Amal","Gusum","Bunkeflostrand","Markaryd","Haparanda","Vaxtorp","Eldsberga","Skummeslovsstrand","Genevad","Munka-Ljungby","Grillby","Paskallavik","VÃ¤stervik","Blentarp","Borrby","Brosarp","Kimstad","Stra","Ostra Ryd","Johannishus","Kallinge","Hovas","Hammerdal","Harbo","OEstervala","Tarnsjo","Forserum","Tallberg","Kisa","Anderstorp","Svenstavik","Ã…re","Vittaryd","Elloes","Kiruna","Lit","Hyltebruk","Kolmarden","Billingsfors","Perstorp","Ashammar","Ankarsvik","Arvika","Amotfors","Klassbol","Charlottenberg","Guldsmedshyttan","Gusselby","Fellingsbro","Borensberg","Asensbruk","Vinberg","GÃ¤llivare","Rosersberg","Valskog","Nashulta","Harslov","Alandsbro","Vato","Arholma","Stravalla","Kungsoer","Rekarne","Sunne","Gullspang","Timmersdala","Skoldinge","Svartsjo","Malmkoping","Halleforsnas","Valla","Aneby","Ormaryd","Flisby","Malmback","Grimstorp","Hajom","Horred","Kinna","Skee","Moensteras","Tygelsjo","Glimakra","Broby","Killeberg","Hastveda","Tormestorp","Finja","Sosdala","Vittsjo","Ballingslov","Hasslo","Oxaback","Viskafors","Ljustero","Haellefors","Grythyttan","Storfors","Vintrosa","Gyttorp","Skaerhamn","Edsbyn","Alfta","Kristdala","Atvidaberg","Vikingstad","Nykil","Saeffle","Skinnskatteberg","Hoernefors","Saevar","Hjaerup","Kopparberg","Alunda","Osterbybruk","Bankeryd","Nora","Malmberget","Kvissleby","Tanumshede","Insjon","Asbro","Kolback","Degeberga","AElvdalen","Vannasby","Iggesund","Skoghall","Marma","Nasviken","Soderhamn","Ljusne","Siljansnas","Djura","Almunge","Skultuna","Loberod","Storuman","Haknas","Enviken","Stoby","Bollstabruk","Helgum","Langsele","Nyland","Bjartra","Kopmanholmen","Mjallom","Gidea","Bjasta","Langviksmon","Overhornas","Sjalevad","Bjorna","Husum","Sidensjo","Moliden","Eksjoe","Klintehamn","Farnas","Veddige","Varing","Ronnang","Vara","Orsundsbro","Valbo","Kalix","Kil","Ljungsbro","Tungelsta","Sjuntorp","Frillesas","Skogstorp","Alunda","Hallsberg","Storvik","Hede","Sveg","Sifferbo","Mantorp","Vislanda","Mala","Glommerstrask","Bullmark","Dalby","Vreta Kloster","Sturefors","Hedesunda","Norrsundet","Ljusdal","Farila","Jaervsoe","Tibro","Fagersanna","Ostra Karup","Vejbystrand","Vastra Karup","Hoegsby","Ekenassjon","Nossebro","Sollebrunn","Stromsbruk","Sorsele","Vilhelmina","Bjurholm","Asele","Garpenberg","Ska","Koping","Skondal","Hogsjo","Vindeln","Sandarne","Hova","Norsjoe","Stensele","Dorotea","Dikanaes","Nordmaling","Lavsjo","Botsmark","Matfors","Soderala","Norrala","Bergvik","Stratjara","Holmsveden","Fjugesta","Brakne-Hoby","Backaryd","Hammaro","Gustavsberg","Enebyberg","Arjaeng","Valberg","Toere","Norrahammar","Vaggeryd","Odensbacken","Trekanten","Dalsjofors","Garphyttan","Finnerodja","Gronskara","Gnarp","Jarbo","Indal","Soraker","Bramhult","Bredared","Ljung","Seglora","Unnaryd","Rydobruk","Gunnilse","Rejmyre","Klagshamn","Gustafs","Atorp","Palange","Alem","Dala-Floda","Genarp","Bjoringe","Storebro","Langasjo","Alsterbro","Mockfjard","Farlov","Grangesberg","Odakra","Hok","Saeter","Vallda","Figeholm","Mansarp","Enanger","Hemse","Emmaboda","Slite","Ostansjo","Morlunda","Filipstad","Erikslund","Fagelfors","Atran","Torsby","Ryd","Malung","Balinge","Transtrand","Askersund","Satila","Eriksmala","Linneryd","Kinnarp","Bjorkvik","Bettna","Hammarstrand","Braecke","Sjovik","Tollered","Dala-Jarna","Vasterljung","Gamleby","Ostra Hindalebyn","Kinnared","Grisslehamn","Hunnebostrand","Bjorneborg","Tystberga","Stanga","Drottningholm","Vadstena","Bjorklinge","Overum","Hacksvik","Forsa","Ostra","Faro","Stalldalen","Gullbrandstorp","Kvicksund","Hallsta","Lottorp","Norberg","Agnesberg","Rostanga","Skillingaryd","Vretstorp","Tranemo","Backefors","Ingelstad","Kumla","Uddebo","Branno","Borgholm","Moerbylanga","Riddarhyttan","Nyhammar","Rangedala","Hultsfred","Sandby","Axvall","OEverkalix","Ranea","Kvibille","Lycke","Uppharad","Floby","Askloster","Hanaskog","Ramvik","Dals Langed","Knutby","Nygard","Kungsgarden","AElvsbyn","Rodeby","Vikmanshyttan","Lerberget","Norrfjarden","Skruv","Dio","Glanshammar","Stora Mellosa","Malilla","Larv","Hedared","Vegby","Gards Kopinge","Reftele","Veberod","Soederbaerke","Skillinge","Boxholm","Lerdala","Mellansel","Hamburgsund","Arnasvall","Sodergard","Ankarsrum","Kosta","AElmhult","Havdhem","Rosson","Frufallan","Langhem","Aspered","Styrso","Hortlax","Jarpen","Vintrie","Edshultshall","Slutarp","Raa","Ramsele","Vattholma","Bjursas","Stora Skedvi","Frovi","Ange","Fransta","Ljungaverk","Torpshammar","Kagerod","Nyvang","Saxtorp","Mariannelund","OEsterbymo","Zinkgruvan","Katthammarsvik","OEvertornea","Orrefors","Maleras","Bockara","Linghem","Lidhult","Lovikka","Soderakra","Vassmolosa","Stjarnhov","Vase","Fagervik","Sorberge","Overkovland","Ljustorp","Njurundabommen","Duved","Morsil","Sloinge","Ramnas","Kolsva","Virsbo Bruk","Toecksfors","Hovmantorp","Grimslov","Jarlasa","Utansjo","Sand","Smoegen","Grundsund","Dingle","Brastad","Allerum","Strovelstorp","Vessigebro","Kvidinge","Vega","Rolfstorp","Sorombacken","Lima","Fredriksberg","Ludvigsborg","Dosjebro","Kvanum","Lodose","Nyhamnslage","Joern","Gallo","Follinge","Stroemsund","Pilgrimstad","Skarplinge","Soderfors","Mankarbo","Aplared","Svaneholm","Ganghester","Mullhyttan","Skollersta","Harads","Stode","Skelleftehamn","Ljungbyhed","Skanes Fagerhult","Traryd","Vedum","Limmared","Yngsjo","Varsas","Bjuraker","Sundsbruk","Garsas","Osterskar","Bottnaryd","Vikarbyn","Vartofta","Svensbyn","Sundborn","Lindas","Ugglarp","Larbro","Aspas","Valadalen","Anderstorp","Hillerstorp","Ostra Frolunda","Norrhult","Karesuando","Junosuando","Lannavaara","Stigen","Nissafors","Vastra Torup","Simlangsdalen","Knislinge","Klagerup","Stehag","Rydsgard","Skivarp","Musko","Taljo","Hallabro","Karna","Grasmyr","Roback","Kattilstorp","Backe","Myresjo","Sandhem","Donso","Ljungbyholm","Vallakra","Arla","Skyllberg","Ringarum","Moheda","Pajala","Djuras","Korpilombolo","Soderby","Orno","Sandhult","Tingstade","Forsbacka","Blattnicksele","Blasmark","Taenndalen","Brokind","Graso","Marieholm","Marstrand","Halta","Skane","Vollsjo","Sovde","Grangarde","Ulrika","Almeboda","Korsberga","Hillared","Stigtomta","Hjalteby","Fagered","Follinge","Pixbo","Hindas","Gagnef","Sagmyra","Ravlanda","Kulla","Furuvik","Arvidsjaur","Fors","Alsen","Glostorp","Korskrogen","Ramsjo","Tallasen","Los","Stugun","Virserum","Holmsjo","Sommen","Horn","Rimforsa","Borghamn","Holsbybrunn","Tolg","Hammar","Flyinge","Taernaby","Hokerum","Grimsas","Holsljunga","Olsfors","AElvkarleby","Asmundtorp","Gallstad","Sunnemo","Lessebo","Hasselfors","Hallekis","Gota","Odeborg","Glumslov","Stora Vika","Bergkvara","Eneryda","Klavrestrom","Lammhult","Aryd","Ryssby","Vittaryd","Svenshogen","Morup","Timmele","Onnestad","Stromsholm","Malma","Timmernabben","Berga","Hasslarp","Tun","Stromsnasbruk","Navekvarn","Boliden","Osterbybruk","Lenhovda","Lonsboda","Aspero","As","Fengersfors","Hoviksnas","Moholm","Lysvik","Fageras","Skattkarr","Dyltabruk","Vackelsang","Urshult","Konga","Sodra Vi","Braas","Vrena","Fallfors","Trehorningsjo","Arsunda","Undersaker","Loderup","Blackstad","Hamneda","Kallby","Njutanger","Gryt","Lekeryd","Vastra Amtervik","Ovanaker","Viksjofors","Jonaker","Bredaryd","Rydaholm","Bjorbo","Orviken","Asenhoga","Kulltorp","Byske","Hogsaters","Lovanger","Billinge","Rundvik","Lovestad","Bofors","Sparsor","Traslovslage","Anderslov","Alstermo","Grondal","Fagerhult","Nyland","Lugnvik","Kristineberg","Skaraborg","Varmland","Fleninge","Jude","Bua","Halland","Grimeton","Ansvar","Hagglund","Fiskeby","Storlien","Ingarp","Talje","Holmen","Fagerberg","Travad","Otterbacken","Gamla stan","Hackas","Altersbruk","Barkarby","Hakkas","Bjorkhaga","Torekov","Vaeja","Traslovslage","Farna","Brunnby","Ljungsarp","Lillpite","Nordingra","Hyssna","Gargnas","Hallberg","Rinkaby","Hestra","Svarta","Beddinge Lage","Hjartum","Landfjarden","Bor","Forsheda","Spekerod","Sandared","Landeryd","Skyttorp","Landsbro","Rorvik","Stockaryd","Marieholm","Horndal","Rosvik","Farbo","Kallo","Vaderstad","Saevast","Hallestad","Annelov","Huarod","Arkelstorp","Roke","Tjornarp","Hallarod","Nykroppa","Koppom","Hamrangefjarden","Segmon","Hallestad","Ring","Ruda","Karl Gustav","Herrangen","Annerstad","Palsboda","Varnhem","Ljugarn","Vastervik","Barsebackshamn","Myggenas","Svaneholm","Lotorp","Ljusfallshammar","Gunnebo","Sunnansjo","Kladesholmen","Klovedal","Nalden","Koskullskulle"
,"Italy","Ferrara","Sarnano","Rome","Gabicce Mare","Sasso Marconi","Sarno","Collegno","Fasano","Bitritto","Bitetto","Bari","Florence","San Filippo","Giardini-Naxos","Augusta","Messina","Carlentini","Troina","Piaggine","Tito","Lampedusa","San Mango Piemonte","Mercato San Severino","San Chirico Raparo","Gesualdo","Taranto","Torricella","Cicognolo","Pedaso","Cesena","Casorezzo","Brescia","Loreto","Vaiano Cremasco","Milan","Monza","Monterosso Calabro","Pesaro","Militello Rosmarino","Floridia","Rionero in Vulture","San Giorgio del Sannio","Modena","Reggio nell'Emilia","Vicenza","Rimini","Piacenza","Saronno","Ancona","Verona","Asti","Legnano","Castellanza","Massa e Cozzile","Montecatini Terme","Pescara","Bergamo","Bollate","San Donato Milanese","Termoli","Turin","Pisa","Pioltello","Gallarate","Varese","Gaeta","Parma","Teramo","Busto Arsizio","Padua","Naples","Catania","Novara","Bologna","Sestri Levante","San Giovanni Valdarno","Sesto San Giovanni","Cinisello Balsamo","Genoa","Bitonto","ForlÃ¬","La Spezia","Latina","Segrate","Peschiera Borromeo","Treviso","Ravenna","Rho","Rosignano Solvay-Castiglioncello","Rosignano Marittimo","Fondi","Formia","Carpaneto Piacentino","Petacciato","Como","Siena","Iglesias","Gerano","Pogno","Vicolungo","Corzano","Albenga","Pero","Pieve Ligure","Domaso","Sarnico","Verdellino","Melegnano","Alessandria","Pavia","Racconigi","Perosa Argentina","Moncalvo","Vigevano","Rivoli","Brandizzo","Castellamonte","Gorgonzola","Ghedi","Tradate","Clusone","Alzano Lombardo","Cremona","Curno","Ovada","Arenzano","Savona","Sanremo","Viareggio","Brugherio","Novate Milanese","Cesano Maderno","Abbiategrasso","Arona","Chieri","Pinerolo","Nichelino","Vigliano Biellese","Romagnano Sesia","Biella","Settimo Torinese","Rivalta di Torino","Domodossola","Piossasco","San Carlo","Terlan","Tolentino","Casalecchio di Reno","Casier","ScorzÃ¨","San Giovanni in Persiceto","Cento","Borgonovo Val Tidone","Albinea","Vascon","Rivignano","Grado","Asolo","Annone Veneto","San Michele all'Adige","Illasi","San Giovanni Lupatoto","Garda","Volpago del Montello","Trivignano Udinese","Cavallino","Zero Branco","Castello di Godego","Sedico","Alberoni","La Valle Agordina","Pasian di Prato","Tavagnacco","Brugnera","Ponzano Veneto","Mira","Ponte di Piave","Marcon","Porcia","Dosson","Pravisdomini","Pianiga","Sagrado","Turriaco","Roncade","Vittorio Veneto","Trieste","Chioggia","Venice","Spinea","Udine","Mogliano Veneto","Pordenone","Legnago","Bolzano","Trento","San Bonifacio","Bussolengo","Isola della Scala","Belluno","Bovolone","Portomaggiore","CittÃ  di Castello","Dozza","Budrio","Imola","Sassuolo","Bastia umbra","Monghidoro","Cervia","Formigine","Castel San Pietro Terme","Santarcangelo di Romagna","Perugia","Schio","Rovigo","Malo","Sarcedo","Somma Lombardo","Erba","Casalpusterlengo","Cermenate","Luino","Solbiate Olona","Codogno","Mariano Comense","Bresso","Lodi","Cologno al Serio","Cologno Monzese","Moncalieri","Grugliasco","Casale Monferrato","Aosta","Gessate","Brivio","Calolziocorte","Parabiago","Zelo","Albiate","Lomagna","Venegono Superiore","Lainate","Villa Cortese","Locate di Triulzi","Inzago","Besana in Brianza","Biassono","Osnago","Gorla Maggiore","Triuggio","Cerro Maggiore","Cornate d'Adda","Binasco","Broni","Lurago d'Erba","Vaprio d'Adda","Calizzano","Mezzanego","Carcare","Azzate","Missaglia","Giussano","Paderno Dugnano","Seveso","Villasanta","Lentate sul Seveso","Corsico","Avezzano","Senigallia","San Benedetto dei Marsi","Massa","Arezzo","Forlimpopoli","Pontedera","Livorno","Formello","Anzio","Frascati","Guidonia","Aprilia","Sansepolcro","Sesto Fiorentino","Pistoia","Prato","Montecarlo","Riccione","Castelfiorentino","Arconate","Varedo","BarzanÃ²","Trezzano sul Naviglio","Usmate Velate","Lonigo","Occhiobello","Albignasego","Cittadella","MaserÃ  di Padova","Longiano","Rovereto","Spoltore","Figline Valdarno","Palermo","Benevento","Alcamo","Trecastagni","Syracuse","Giarre","Acireale","Monreale","Alba","Rapallo","Albissola Marina","Cuneo","Magenta","Novi Ligure","Mortara","Ivrea","Alpignano","Pianezza","Valenza","Tortona","Lungavilla","Olgiate Molgora","Arcore","Garlasco","San Martino in Strada","Cislago","Landriano","Limbiate","Vermezzo","Siziano","San Genesio ed Uniti","Liscate","Fombio","Campertogno","Trezzo sull'Adda","Lugagnano","Trescore Balneario","Mantova","Pieve","Vertova","Darfo","Chiari","Seriate","Travagliato","Cene","Gussago","Urgnano","Casnigo","Saluzzo","Orbassano","Gattinara","Borgosesia","Carmagnola","Fidenza","Bagnolo Cremasco","Ventimiglia","Desio","Cornaredo","Vimercate","Rozzano","Milanesi","Favria","Giaveno","MondovÃ¬","Fossano","San Michele MondovÃ¬","Lessona","Sandigliano","Oglianico","Omegna","Bricherasio","Castelnuovo Don Bosco","Rivarolo Ligure","Occhieppo Inferiore","Varallo Sesia","Varallo Pombia","Momo","San Giovanni","Finale Ligure","Calusco d'Adda","Marano Ticino","Gressoney-Saint-Jean","San Martino di Lupari","RosÃ ","Tricesimo","Sant'Ilario d'Enza","Zola Predosa","Peschiera del Garda","Tregnago","San Pietro in Casale","Maranello","Camposampiero","Abano Terme","Brixen","Marostica","Civezzano","Arco","Portogruaro","Crema","Lecco","Camparada","Massa Lombarda","Savignano sul Panaro","Baricella","Castelfranco Emilia","Comacchio","Masi Torello","Cotignola","Mordano","Montecchio Emilia","Bagnacavallo","Bagnolo in Piano","Copparo","Pianoro","Savignano sul Rubicone","Finale Emilia","Rosolina","Ficarolo","Brugine","Oppeano","Marano Vicentino","San Pietro in Gu","Villadose","Agna","Noventa Vicentina","Villaggio Montegrappa","Castelmassa","Altavilla Vicentina","Tezze sul Brenta","Vescovana","Teolo","Vigonza","Zevio","Recoaro Terme","Sterzing","Castel","Sanguinetto","Sommacampagna","Maniago","Casinalbo","Felino","Mirandola","MansuÃ¨","Martellago","Motta di Livenza","Azzano Decimo","Urbisaglia","Lâ€™Aquila","Notaresco","Civitanova Marche","Castorano","Montegranaro","Folignano","Lettomanoppello","Maiolati Spontini","Cupello","Urbania","Agugliano","Manoppello","Mondolfo","Castelbellino","Orsogna","Ascoli Piceno","Montesilvano Colle","Casalbordino","Porto San Giorgio","Sant'Angelo in Pontano","Chieti","Polverigi","Oratino","Frosinone","Silvi Paese","Iesi","San Benedetto del Tronto","Porto","Lucca","Empoli","Ferentino","Sermoneta","Santa Marinella","Fiumicino","Ardea","Castel Madama","Ischia di Castro","Bassano Romano","Mineo","Bronte","Capo d'Orlando","Motta San Giovanni","Aci Sant'Antonio","Melilli","Piedimonte Etneo","Leonforte","Agira","Patti","Pedara","Biancavilla","Nicosia","Spadafora","Cardito","Torre del Greco","Pomigliano d'Arco","Telese","Giugliano in Campania","Belmonte Mezzagno","Termini Imerese","Salve","Andrano","San Marco Argentano","Reggio Calabria","Novoli","Cosenza","Triggiano","Trapani","Aci Catena","Sant'Agata di Militello","Castenedolo","Iseo","Candiolo","Candelo","Zimone","Sestriere","Cogoleto","Borgomanero","Porlezza","Pontevico","Zogno","Belforte","Piazza Brembana","Rudiano","Nerviano","Montemurlo","Pomezia","Cisterna di Latina","Nettuno","Civitavecchia","Campagnano di Roma","Rieti","Calcata","Sabaudia","Genazzano","Pontinia","Viterbo","Olevano Romano","Cerveteri","Sacrofano","Nepi","Monte Porzio Catone","Veroli","Ladispoli","Fornaci di Barga","Signa","Cascina","Porcari","Pescia","Corciano","Fucecchio","Colle di Val d'Elsa","Grosseto","Capannoli","Quarrata","Montelupo Fiorentino","Magliano","Cervaro","Sarroch","Villaurbana","Elmas","Muravera","Sassari","Sorso","Arbus","Atzara","Soleminis","Olmedo","Gonnostramatza","Terralba","Villanovafranca","Marrubiu","Masainas","Ussana","Alghero","Ossi","Villa San Pietro","Oristano","Musei","Samassi","Villaputzu","Siniscola","Cusano Milanino","San Giuliano Milanese","Grandate","Bareggio","Seregno","Cantu","Baranzate","Colico","Merate","Romano di Lombardia","Fiorenzuola d'Arda","Sarezzo","Stresa","Forno Canavese","Chivasso","Crevalcore","Granarolo dell'Emilia e Viadagola","Cervignano del Friuli","Conegliano","Novellara","Assisi","Foligno","Dolo","Cadelbosco di Sopra","Gualdo Tadino","Vignola","Faenza","Valdobbiadene","Monterenzio","Novi di Modena","Medicina","Palau","Villaspeciosa","Cagliari","Quartu Sant'Elena","Guasila","Castelfidardo","Ostra Vetere","San Giovanni","Macerata","Vasto","Osimo","Fabriano","Chiaravalle","Campobasso","Recanati","San Casciano in Val di Pesa","Montespertoli","Genzano di Roma","Bagno a Ripoli","Piombino","Poggibonsi","Loro Ciuffenna","Bocchignano","Bracciano","Foggia","Melfi","Caivano","Ariano Irpino","Avella","Portici","Caserta","Catanzaro","Andria","Santeramo in Colle","Terlizzi","Altamura","Caltagirone","Piazza Armerina","Niscemi","Lentini","Caltanissetta","Palma di Montechiaro","Piano di Sorrento","Manduria","Acquaviva delle Fonti","Pieve d'Olmi","Misinto","Torre","Zerfaliu","Lacchiarella","Mirano","Tivoli","Villetta","Lido","UrtijÃ«i","Fiume Veneto","Olivetta","Airole","Quart","Vallecrosia","Rovello Porro","Moso","Villagrazia","Piemonte","Antico di Maiolo","Romana","San Miniato","Afragola","Cava de' Tirreni","Ragusa","Ferrari","Torgiano","Anna","Silvano d'Orba","Pineta","Cola","Modugno","San Raineri","San Giorgio","Salerno","Campagna","San Cipriano Picentino","Brunella","Rosa","Fantina","San Giorgio","San Francesco","Piove di Sacco","Gioia","Gazzo Veronese","Corona","Vado Ligure","Zanetti","Bruno","Bianco","Sale","Altofonte","Salsomaggiore Terme","Monteverde","Marco","San Michele al Tagliamento","Sestu","Positano","Ravanusa","Lecce","Portoscuso","Ranieri","Casali","Forte dei Marmi","Nogarole Rocca","Crescentino","Rivanazzano","Taglio di Po","Filottrano","Cairo Montenotte","Sesto al Reghena","Cernusco sul Naviglio","Dello","Vitorchiano","Modica","Lanusei","Bassano del Grappa","Angolo Terme","Bagheria","Piedimonte Matese","Sant Angelo","Cortenova","Bomporto","Pozzo di Gotto","Braccagni","Cassino","San Vendemiano","Carpeneto","Monticello","Mestre","Cerasolo","Ronchi dei Legionari","Colorno","San Giovanni in Marignano","San Martino Buon Albergo","Castel Guelfo di Bologna","Monselice","Aviano","Thiene","Coriano","Adria","FossÃ²","Vas","Bertinoro","Podenzano","Caldogno","Zoppola","Cesenatico","Argelato","Sandon","San Pietro","Brendola","Cordenons","Pescantina","Roverbella","Paese","Carpi","Sacile","Cividale del Friuli","Staranzano","Latisana","Misano Adriatico","Campodarsego","Fogliano Redipuglia","Correggio","Castelfranco di Sopra","Cadoneghe","Dozza","Ala","Marzabotto","Casale sul Sile","Borgo San Lorenzo","Santa Vittoria d'Alba","Zanica","Magliano Alpi","Ronco Scrivia","Moniga del Garda","Canelli","Castel Mella","Baldissero Torinese","Vercelli","Ortovero","Barlassina","Castano Primo","Calcinato","Verdello","Varazze","Cascine Maggio","Cossato","Uscio","MuggiÃ²","Vignate","Treviglio","Sedriano","Roncadelle","Quarona","Nova Milanese","Castiglione Olona","Sesto Calende","Rovagnate","Chiavari","Besozzo","Olgiate Olona","Pavone Canavese","Ponte Nossa","Melzo","Crispiano","Agropoli","Scalea","Toritto","Pozzallo","Manfredonia","Corridonia","Montecorvino Rovella","Ripe","San Donaci","Villaricca","Nocera Superiore","Misterbianco","Aversa","Trentola-Ducenta","Battipaglia","Saviano","San Giovanni la Punta","Vico Equense","Laterza","Mazara del Vallo","Palo del Colle","Torano Castello","Castellammare di Stabia","Veglie","San Giorgio a Cremano","Marcianise","Barletta","Trani","Ercolano","Frattamaggiore","San Tammaro","Falconara Marittima","Brindisi","Ceglie Messapica","NardÃ²","Matera","Molfetta","Partinico","Balestrate-Foce","Carmiano","Noicattaro","Giovinazzo","Grumo Nevano","Scorrano","Ischia","Castelvenere","San Severo","Sant'Arpino","Potenza","Pagani","Regalbuto","Casapulla","Acerra","Casoria","Terni","Crespina","Raiano","Sulmona","Ariccia","San Donato","Marino","Saltocchio","Morlupo","Monterotondo","Assemini","San Salvo","Nazzano","Scandicci","Sora","Montemassi","Vetralla","Santa Croce","Fonni","Castelnuovo di Garfagnana","CittÃ  Sant'Angelo","Monteroni d'Arbia","Mentana","Cecina","Olbia","Le Castella","Giulianova","Nuoro","Silvi","Ficarazzi","Piana degli Albanesi","Civita Castellana","Luco dei Marsi","Licata","Acri","Rignano sull'Arno","Truccazzano","Spotorno","Villalago","Vicari","Monopoli","Sandrigo","Gusti","PatÃ¹","Montecchio Maggiore","Pramaggiore","San Giuseppe Vesuviano","Corbetta","Offanengo","Lancenigo-Villorba","Andorno Micca","Vimodrone","Cassano d'Adda","Campi Bisenzio","Tavullia","Cellamare","Millesimo","Ardesio","Recco","Ponte San Pietro","Sarzana","Carate Brianza","Nave","Bovisio-Masciago","Castegnato","Poirino","Malnate","Cava Manara","Bra","Imperia","Monte","San Mauro Torinese","Castelnuovo Nigra","Lomazzo","Baratte","Trofarello","Carnate","Garbagnate Milanese","Appiano Gentile","Concorezzo","Canegrate","Opera","Mozzanica","Desenzano del Garda","Robassomero","Crespiatica","Acqui Terme","Grosio","Torre Boldone","Carrara","Massa","Velletri","Serravalle Pistoiese","Paliano","Bosa","Campomarino","SenorbÃ¬","Cortona","San Gemini","Camaiore","Calcinaia","Roseto degli Abruzzi","Riano","Santa Giusta","Fiano Romano","Impruneta","Grottaferrata","Marina di Cerveteri","San Sebastiano al Vesuvio","San Gregorio di Catania","Scafa","Nola","Caccamo","Fano","Martina Franca","Santa Maria a Vico","Salemi","Cerignola","Agrigento","Riposto","Atripalda","Cittanova","Pineto","Calcinelli","Lizzano","Fermo","Santo Pietro","Cicciano","Sant'Agata de' Goti","Nocera Inferiore","Favara","Mugnano del Cardinale","Villarosa","Qualiano","Caltavuturo","Erice","Ruvo di Puglia","Poli","Mussomeli","Villa Castelli","Avellino","Alvignano","Mercogliano","San Giuseppe Jato","San Nicola","Boscoreale","Belpasso","Urbino","Lissone","Ozzero","Travedona Monate","Gavirate","Santo Stefano","Beinasco","Saint-Vincent","Fossalta di Portogruaro","San Martino","Rovato","GambolÃ²","Stradella","Trecate","Fino Mornasco","Venaria Reale","Aquileia","Valdagno","Asiago","San Lazzaro di Savena","Limana","Lavis","Castel d'Ario","Cormons","Curtarolo","Feltre","Rubano","Bardolino","ZanÃ¨","Farra di Soligo","Castelnuovo Rangone","Castelvetro di Modena","Noale","Pievepelago","Castelfranco Veneto","San Dona","Selvazzano Dentro","Merano","Palmanova","Villafranca di Verona","Collecchio","Montechiarugolo","Massa","Casalgrande","Cappella Maggiore","Gattatico","San DonÃ  di Piave","Preganziol","Castenaso","Decima","San Giovanni in Croce","Nervesa della Battaglia","Toirano","Voghera","Cardano","Cameri","Oggiono","Lonate Pozzolo","Dairago","Villastellone","Montoggio","Vicoforte","AlmÃ¨","Vittuone","Caselle Torinese","Altessano","Altare","Carugate","Sondrio","Agrate Brianza","Spino d'Adda","Pietrasanta","Monte","Segni","Terranuova Bracciolini","Monsummano Terme","Labico","Grottammare","Palestrina","Putignano","Marano di Napoli","Pozzuoli","Sant'Anastasia","Angri","Cercola","Sciacca","Auletta","Ortona","Fiumefreddo di Sicilia","Sant'Elpidio a Mare","San Michele Salentino","Matelica","Casaluce","Grammichele","Statte","Martinsicuro","Capurso","Maderno","Casamassima","Bisceglie","Mariglianella","Castiglione di Sicilia","Cotronei","Tortora","Petrosino","Pergola","Cervino","Lioni","Mascalucia","San Prisco","Brusciano","Camposano","Rende","Offida","Piana","Adro","Santo Stefano Ticino","Arluno","Fagnano Olona","Monterosso al Mare","Grumello Cremonese","Certosa di Pavia","Castiglione Chiavarese","Bussoleno","Savigliano","Solaro","Stezzano","Belgioioso","Monte Compatri","Celano","Lamporecchio","Francavilla al Mare","Albano Laziale","Fregene","Castel Viscardo","Morciano di Romagna","Casina","Romano Canavese","Cesiomaggiore","Porto Viro","Nogaredo al Torre","Villaverla","Quinto Vicentino","Mandello del Lario","Cizzago-Comezzano","Manerbio","Campofranco","Gadoni","Carema","San Martino Siccomario","Pontecchio Polesine","Apricena","Legnaro","Alviano","San Mauro Pascoli","Guarda Veneta","Golasecca","Forenza","Cerveno","Campodimele","Piancogno","Cepagatti","Ailoche","Suzzara","Vailate","Bassano Bresciano","Valeggio sul Mincio","Gera Lario","San Martino Dall'Argine","Arabba","Casale di Scodosia","Murano","Posta Fibreno","Carceri","Cortina","Isola Vicentina","San Daniele del Friuli","San Giorgio","Este","Falcone","Telgate","Crotone","Castel Maggiore","Mercato Saraceno","Pomarance","Sirignano","Rosolini","Comiso","Costa","Santa Maria di Licodia","Covo","Santa Eufemia Lamezia","San Severino","San Gimignano","Serramazzoni","Farnese","Castiglione della Pescaia","Carapelle","Belvedere di Spinello","Montecarotto","Marotta","Arcevia","Calcara","Milano","Bibbiano","Bellagio","Palombara Sabina","Pavona","Anagni","Zagarolo","Lograto","Colloredo di Prato","Gravedona","Vogogna","Gorno","Gignese","Monte di Malo","Felitto","Manta","Vigone","Monastero","Castelletto","None","Montignoso","Verzuolo","Demonte","Sarsina","Sovicille","Gaiole in Chianti","Soliera","Borgoricco","Barrali","Monterosi","Calamandrana","Mezzomerico","Cerea","Gazzaniga","Ambrogio","Lignano Sabbiadoro","Arre","Orio Litta","Cedessano","Todi","Cannara","Stefania","Massignano","Pioraco","Contigliano","San Giorgio Piacentino","Campolongo Maggiore","Montaldo","Borgo San Dalmazzo","Susa","Sant'Angelo Lodigiano","Castelli Calepio","Casa Paradiso","Camponogara","Roncoferraro","Collalto","Carbonera","Pico","Mirabella","Cattolica","Russo","San Niccolo","Parigi","Lurate Caccivio","Ospedaletto-Expopisa","Morgano","Campiglio","Mestrino","Noventa di Piave","Cimadolmo","Leno","Sumirago","Pontecchio","Ponsacco","Mirabella Eclano","Carosino","Castelfranco di Sotto","Pietrabbondante","Bojano","Montemurro","Monserrato","Gela","Passetto","Bruneck","Trappeto","Montebelluna","Crocetta del Montello","San Fior","Frassineto Po","Casteggio","Fortunago","Villanova MondovÃ¬","Valle","Gioia Tauro","Stella Cilento","Sava","Pozzuolo del Friuli","Montanaro","Balangero","Benna","Caluso","Andezeno","Feletto","Tollegno","Cassano","Vigolo Vattaro","Caldaro sulla Strada del Vino","Costabissara","Orgiano","Roncegno","Quarto d'Altino","Riva del Garda","Pedemonte","Laives","Calenzano","Lanciano","Arsago Seprio","Vergiate","Casorate Sempione","Torri di Quartesolo","Chiampo","Monticello Conte Otto","Gandino","Marnate","Carnago","Albino","Artogne","Santa Giustina","Oderzo","Vedelago","Rubiera","Acquasparta","Ruda","Comerio","Zibido San Giacomo","Arese","Robbiate","Meda","Ospedaletto Euganeo","Malcesine","Valenzano","Palagiano","San Giorgio Ionico","Adelfia","San Vito dei Normanni","Costa","CuorgnÃ¨","Vignale Monferrato","Casanova","Selci","Castelnuovo Scrivia","Bubbio","Bellinzago Novarese","Trino","Madonna","Paullo","Cenaia","Lucino","Casazza","Ponte San Nicolo","Locri","Laigueglia","Lerma","Nembro","Predosa","Bobbio","RiccÃ² del Golfo di Spezia","Saluggia","Valperga","Grignasco","Pozzolo Formigaro","San Piero a Sieve","Trebaseleghe","Castelluccio Inferiore","Fontaniva","Lucito","Storo","Alfonsine","Montebello","Fauglia","Ripa-Pozzi-Querceta-Ponterosso","Sannicandro Garganico","Ponzone","Levanto","Maresca","Ponte San Giovanni","Vittoria","Gorgo al Monticano","Revigliasco","Pederobba","Carobbio","Fontana","Castelvecchio","Castelnuovo","Santa Maria degli Angeli","Carbonara di Bari","Albuzzano","Plan da Tieja","San Giorgio in Bosco","Santa Giustina in Colle","Casalvecchio Siculo","Fossombrone","Azzano San Paolo","Marmirolo","Frontone","Colmurano","Castelplanio","Orciano di Pesaro","San Marcello","Montemarciano","Deruta","Antea","Certaldo","Fastello","Montenerodomo","Guardiagrele","Pretoro","Colledimezzo","Resana","Navacchio","Trissino","Fumane","Palmi","Milazzo","Eboli","Asciano","Marineo","Casalvieri","Pietra Ligure","Mareno di Piave","Bagnolo","Zoldo Alto","Veneto","Costa di Rovigo","Affi","Vaglia","Tomba","Tredozio","Venetico","Caccuri","Mendicino","Tempio Pausania","Porto Torres","Macomer","Sennori","Mezzano","Bozzolo","Barberino di Mugello","Greve in Chianti","Fiesole","Casarano","Bagnoli del Trigno","Cavriglia","Castilenti","Collecorvino","Carpenedolo","Santo Stefano di Magra","Negrar","Piasco","Barbarasco","Asso","Belvedere","Seravezza","San Piero in Bagno","Monteprandone","Monteveglio","Grumello del Monte","Cazzago San Martino","Monticelli","Paderno Franciacorta","Scafati","Calvizzano","Sant'Antimo","Vietri sul Mare","Sant'Antonio Abate","Sant'Antonio","Marigliano","Boscotrecase","Pompei","Pugliano","Sorrento","Casalnuovo di Napoli","Frattaminore","Atella","Casandrino","Torre Annunziata","Ottaviano","Appiano sulla strada del vino","Amaro","Piano","Pozza-San Marco","Casto","Ruviano","Arielli","Torrita Tiberina","Castelnuovo di Verona","Allerona","Pellezzano","Procida","Montalbano Jonico","Nova Siri","Avigliano","San Giorgio","Soave","Filiano","Cologna Veneta","Mafalda","Aquino","Vicopisano","Mezzolombardo","CiriÃ©","Gozzano","Ghemme","Chiomonte","San Giorgio di Piano","Case Franchini","Valdengo","Bagnolo Mella","Palazzolo sull'Oglio","Roccavione","Bosconero","Volpiano","Silea","Pofi","Grotte di Castro","Anghiari","Carini","Collesano","Agerola","Province of Messina","Ispica","Rutigliano","Gioia del Colle","Arnesano","Sant'Angelo Muxaro","Padula","Anzano del Parco","Olginate","Olevano sul Tusciano","Miravalle","Il Ciocco","Fontanella","Torri","Aurelia","Villanova","Monaco","BascapÃ¨","Cuggiono","Viola","Diamante","Carpegna","Uggiate Trevano","Orio al Serio","Nizza Monferrato","Quattordio","Nonantola","Ozzano Monferrato","Crespellano","Minerbio","Bentivoglio","Colbordolo","Monte San Pietro","Montefiore Conca","Saludecio","San Leo","Lugo","Magreta","Montese","Montecchio","Pratola Serra","Berlingo","Castagneto Po","Strambino","AgliÃ¨","Centallo","Bagnolo Piemonte","Morozzo","Rocca","Lanzo Torinese","Almese","Scalenghe","Volvera","Sommariva del Bosco","Quargnento","Cassano Spinola","Lonate Ceppino","Olgiate Comasco","Verrone","ErbÃ¨","Pomponesco","Castel Goffredo","Serravalle Sesia","Valduggia","Coggiola","Agrano","San Maurizio d'Opaglio","Casaleggio Novara","Mottalciata","Masserano","Poncarale","Buscate","Fabbri","Dueville","Seglia San Bernardo","Fornace di Miramare","Busalla","Valentina","Rizzi","Rino","Guido","Nicola","Saline","Manzoni","Pellegrino","Poviglio","San Pietro","Pace","Riviera","Venafro","Ciciliano","Baglio Rizzo","Aragona","San Giuseppe","Atena Lucana","Venturina","Mariano","Lipari","Corno","Fontevivo","Paola","Sasso","Ameglia","Centrale","Portofino","San Francesco","Castelletto","Fabbrico","Villanova Monferrato","Lido di Ostia","Marina di Carrara","Sant'Oreste","Melicucco","Gemona","Fiumicello","Rottofreno","Ittiri","Sedilo","Villasalto","Ploaghe","Selegas","Cornuda","Nurachi","PaternÃ²","Aci Castello","Sinnai","Dolianova","Siliqua","Carbonia","Selargius","Sant'Antioco","Villacidro","Capoterra","Quartucciu","Alleghe","Bagno di Romagna","Ballabio","Baveno","Castronno","San Zenone degli Ezzelini","Salara","Carlazzo","Ternate","Premosello-Chiovenda","Campi","Santa Lucia","Gravellona Toce","Prevalle","Cirimido","Breganze","Borgo Ticino","Pallanza-Intra-Suna","Oliveto Lario","Canzo","Caprino Veronese","Montagnana","San Zeno","Gurro","Cambiago","Brembilla","Castello","Livigno","Sondalo","Trecenta","Falze-Signoressa","Pasturo","Cannobio","Mel","Bianzone","Rancio Valcuvia","Barni","Rosate","Camisano Vicentino","Altopascio","Vecchiano-Nodica","Passarella","Minerbe","Asola","Piazza","Pallerone","Pianello Val Tidone","San Giuliano Terme","Sutri","Anguillara","Sala Bolognese","Montalto delle Marche","Vigolzone","Fontanellato","Gallicano nel Lazio","Caerano di San Marco","Follonica","San Salvatore","SanthiÃ ","Cavallirio","Comun Nuovo","Caravaggio","Dalmine","Coccaglio","Sabbioneta","Pergine Valsugana","Cavareno","Taufers im MÃ¼nstertal","Mori","Dervio","Cogorno","Santa Margherita Ligure","Gazzada Schianno","Gropello Cairoli","Robecchetto con Induno","Godiasco","Aulla","Angera","Cumiana","Ariano nel Polesine","Castiglione delle Stiviere","Vigodarzere","Torreglia","Stanghella","Campo San Martino","Limena","Roveredo","Taggia","Villa Faraldi","Montalto Dora","Azeglio","Mombercelli","Burolo","Villafranca Piemonte","Santa Margherita d'Adige","San Francesco al Campo","Samone","Torre Pellice","Corio","Dogliani","Gradisca d'Isonzo","Monfalcone","San Vito al Tagliamento","Muggia","Cortina d'Ampezzo","Vigasio","Militello in Val di Catania","Noto","San Martino in Rio","Montesarchio","Bisaccia","Dugenta","Capannori","Valmontone","Tossicia","Tolfa","Corato","Nogara","Ronco all'Adige","Santa Lucia di Piave","Braone","Isola Dovarese","Villa Vicentina","Povegliano Veronese","Serravalle Scrivia","Galliate","Ciserano","Cisano Bergamasco","Galbiate","Viadana","Guidizzolo","Ceresara","Orzivecchi","Taio","Castelnuovo Magra","Licciana Nardi","Capriate San Gervasio","Vanzago","San Colombano al Lambro","Tromello","Spineto","Palazzo Canavese","Calimera","Piovene Rocchette","Guastalla","Cengio","Loano","Candia Canavese","Mercenasco","Pessinetto","Verolengo","Rivara","Fontanafredda","Spilimbergo","Basiliano","Arzene","Spresiano","Codroipo","Solagna","Sona","CefalÃ¹","Camporeale","Montelepre","Granitola Torretta","Altavilla Irpina","Piane Crati","Scandiano","Spilamberto","Pavullo nel Frignano","Polesine Parmense","Medesano","Sant'Agata Bolognese","Mirabello","Morrovalle","Sannicandro di Bari","Massafra","Celico","San Gregorio d'Ippona","Villasmundo","Ramacca","Roccalumera","Dipignano","San Demetrio Corone","Calci","San Marco Evangelista","Villa Literno","Caiatia","Monte di Procida","Santa Maria Capua Vetere","Villamagna","Somma Vesuviana","Marsala","Campobello di Licata","Squinzano","Alessano","Casacalenda","San Giovanni","Sigillo","Mesagne","Cellino San Marco","Soleto","Torchiarolo","Narni","Passignano sul Trasimeno","Vernole","Trepuzzi","Cartoceto","Scauri","Sezze","Camerano","Cerreto d'Esi","Pulsano","Ostuni","Palma Campania","San Lucido","Marina di Campo","Terracina","Barga","Mondavio","Ripe San Ginesio","Servigliano","Ostra","Traversetolo","Ponte dell'Olio","Porto Sant'Elpidio","Acerno","Moliterno","Acquaviva Picena","Trinitapoli","Sammichele di Bari","Castelpagano","Santa Croce Camerina","Mazzarino","Castrovillari","Giffoni Valle Piana","Torregrotta","Casole d'Elsa","San Quirico d'Orcia","Cesa","Amalfi","Bacoli","Corleone","Colledara","Spinete","Sambuceto","Jolanda di Savoia","San Vito Lo Capo","Pontenure","Orte","Filettino","Barbiano","Stazione Ponte Rio","Gallipoli","Morro d'Alba","Ponte a Evola","Ripatransone","Baldichieri d'Asti","Caorso","Gatteo a Mare","Cavarzere","Ormea","Bellaria-Igea Marina","Scarlino","Garlenda","Montichiari","Montelparo","Rezzato","Apiro","Castelnuovo dei Sabbioni","Bondeno","Valguarnera Caropepe","Margherita di Savoia","Racalmuto","Sant'Egidio alla Vibrata","Priolo Gargallo","Prizzi","Villa San Sebastiano","Isernia","Barrafranca","Capri","Controguerra","Carinola","Almenno San Bartolomeo","Solbiate Arno","Medolago","Vercurago","Casaglia","Sabbio Chiese","Portoferraio","Jesolo","Arcade","Lancenigo","San Salvatore","Strevi","Oleggio","Pontecurone","San Pellegrino Terme","Valmadrera","Vadena","Dorno","MontÃ¹ Beccaria","Rescaldina","Borghetto Santo Spirito","Alassio","Cona","Bolzano Vicentino","Casalgrasso","Saliceto","Vallo","Lentiai","Cinto Caomaggiore","Grezzana","Calalzo di Cadore","Cantagallo","Puianello","Marghera","Milena","Santa Flavia","Pieris","Pradamano","Paluzza","Pressana","Tarcento","Maserada sul Piave","Castro dei Volsci","Borgo Vercelli","Suno","Mongrando","Castelleone","Gallignano","Mapello","Palazzo","Vezzano Ligure","Bolano","Cologne","Toscolano-Maderno","Ospitaletto","Ceto","Gazoldo degli Ippoliti","Cembra","Cencenighe Agordino","Lozzo di Cadore","Arosio","Dicomano","San Giorgio di Lomellina","Santa Maria","Candia Lomellina","Lodi Vecchio","Motta Visconti","Maslianico","Rondissone","Maddaloni","Montoro","Tombolo","Castellarano","Ceriale","Casalmaiocco","Busca","Druento","Cogne","Castelnuovo","Bibione","Romans d'Isonzo","Trichiana","Gruaro","Migliarino","Gioiosa Marea","Francavilla di Sicilia","Massarosa","Canossa","Fiorano Modenese","Montefalcione","Montecalvoli","Bazzano","Castello di Serravalle","Gallo","Bovino","Monte Urano","Camerino","San Costanzo","Mola di Bari","San NicolÃ² d'Arcidano","Grumo Appula","Taormina","Valverde","Nizza di Sicilia","Casale","Roccapiemonte","Castel Volturno","Montevarchi","Scarperia","Solofra","Baselice","Meta","Calatafimi","Paceco","Sant'Angelo d'Alife","Castellalto","Spoleto","Gualdo Cattaneo","Recale","Montelabbate","Piglio","Cinisi","Capena","Pontecorvo","Colleferro","Gatteo","Rocca San Casciano","Punta Marina","Montecastrilli","Taviano","Aradeo","Sannicola","Chiusi della Verna","Vaiano","Fossato di Vico","San Vincenzo","Soragna","Serino","Capua","San Ginesio","Cingoli","Gravina in Puglia","San Giorgio la Molara","Cassano delle Murge","Solarino","Maletto","San Fratello","Squillace","Roccella Ionica","Calangianus","Vinci","Sinalunga","Pimonte","Monte San Giovanni Campano","Grumento Nova","Menfi","Nereto","Ciminna","Monte San Savino","San Gregorio","Campo Tizzoro","Arzano","Minturno","Trevignano Romano","Galatone","Vitigliano","Tricase","Anacapri","Leporano","Catenanuova","Brolo","San Ferdinando","Grazzano Badoglio","Gavardo","Castelverde","Levico Terme","Feldthurns","Klausen","Cles","Lierna","Abbadia Lariana","Lavagna","Varano","Cavacurta","Casatenovo","Albano Sant'Alessandro","Busto Garolfo","Cesana Torinese","Miradolo Terme","Mozzate","Comazzo","Villanova d'Asti","Pettorazza Grimani","Castelnuovo","Tavernola Bergamasca","Capaci","Foglizzo","San Maurizio Canavese","San Maurizio","Gassino Torinese","Rocca Canavese","Valle Mosso","Castelnuovo","Anguillara Veneta","Morbegno","Ossona","Isorella","Marina di Gioiosa Ionica","Casal Velino","Galdo","Gibellina","Falconara","Altomonte","Lovere","Pontestura","Sotto il Monte Giovanni XXIII","Colle","Capergnanica","Volta Mantovana","Borgo di Terzo","Terzo","Camogli","Pieve Albignola","Rovellasca","Castelnuovo","Gaggiano","Mason","Villanova del Ghebbo-Valdentro","Torricella","Vedano Olona","Caprie","Ovaro","San Rocco","Paterno","Cutrofiano","Morano Calabro","Sogliano Cavour","Maglie","Porretta Terme","Torre San Patrizio","Lesignano de' Bagni","Molinella","Calderara di Reno","San Benedetto Val di Sambro","San Cesareo","Bellocchi","Grottazzolina","San Pietro in Lama","Conversano","San Marcello Pistoiese","Belvedere Marittimo","Fontana Liri","Centuripe","Scordia","Riva","Scaletta Zanclea","Serra d'Aiello","Vibo Valentia","San Casciano dei Bagni","Terzigno","Montesano sulla Marcellana","Vairano Patenora","Baronissi","Ripa Teatina","San Vito Chietino","Trevi","Castiglione","Fisciano","Lake Bolsena","Corleto Perticara","Grottaglie","Specchia","Castrolibero","Atessa","Altino","Rio Saliceto","Cortemaggiore","Gossolengo","Ribera","Santa Margherita di Belice","Alberobello","Poggiomarino","Sant'Agnello","Calatabiano","Acate","Acquaro","Pizzo","Cetraro","Bibbiena","CittÃ  della Pieve","Scanzano","Alessandria della Rocca","Castelvetrano","Rosciano","Mosciano Sant'Angelo","Otricoli","Magione","San Venanzo","Monte Sant'Angelo","Toffia","Torrice","Fragagnano","Ruffano","Diano Marina","Susegana","Cassacco","Cernobbio","Sassoferrato","Porto Potenza Picena","Vestone","Colle Umberto","Montegrotto Terme","Canale","Spinetoli","Villafrati","Pula","Gioiosa Ionica","Cellole","Sicignano degli Alburni","San Cassiano","Castrignano del Capo","Besnate","Civitella del Tronto","Falciano","Lariano","Gragnano","Cantalupo in Sabina","Castel Frentano","Fagagna","Montebello Vicentino","Castiglion Fibocchi","Castel San Giovanni","Incisa in Val d'Arno","Fermignano","Magliano in Toscana","Santa Maria a Monte","Fumone","Agliano","Tronzano Vercellese","Occhieppo Superiore","Riva presso Chieri","Palosco","Villa di Serio","Chiavenna","Vobarno","Calvatone","SalÃ²","Mezzocorona","Lerici","Campo Ligure","Serra RiccÃ²","Lago","Zeme","Zelo Buon Persico","Cassina de' Pecchi","Mornago","Trezzano Rosa","Carmignano di Brenta","Front","Cervere","Sant'Ambrogio di Torino","Gonars","Chions","San Gregorio da Sassola","Rapagnano","Lastra a Signa","Contursi Terme","Lanuvio","Agordo","Castel San Pietro Romano","Cerano","Spigno Saturnia","Martinengo","Dongo","Colere","Calascibetta","Lonato","Ospedaletto","Calliano","Ortonovo","Guamaggiore","Canneto Pavese","Lana","Campione","Cavagnolo","Pastrengo","ArquÃ  Petrarca","Loreggia","Trequanda","Cocquio-Trevisago","Albano Vercellese","Rignano Flaminio","Trevignano","Postioma","Teggiano","Rapolla","San Giovanni Rotondo","Saponara","San Sosti","Badolato","Rubbiano","Casale di Mezzani","Noceto","Anzola dell'Emilia","Porto Garibaldi","Monzuno","Noci","Mogoro","Serrenti","Narcao","Enna","Santa Venerina","Santa Teresa di Riva","Santa Caterina Villarmosa","StalettÃ¬","Civitella in Val di Chiana","Rufina","Camerata Picena","Macerata Campania","Abbasanta","Bucchianico","Bellante","Canistro","Penne","Castiglione del Lago","Novafeltria","Corfinio","Riccia","Oppido Lucano","San Martino","Torella dei Lombardi","Marcellina","Allumiere","Mazzano Romano","San Cesario di Lecce","Parabita","Striano","Cancello ed Arnone","Amorosi","Francavilla in Sinni","Amelia","Castellabate","Bova Marina","Sorbolo","Reno","Falerone","Colli del Tronto","Castel Colonna","Cisternino","Polignano a Mare","Domusnovas","Alife","Itri","Antrodoco","Itala","Piraino","Rometta","Castellina in Chianti","Cerreto Guidi","Reggello","Poggio","Leverano","Castellana Sicula","Gubbio","Nicotera","Ripafratta-Farneta","Priverno","Cittaducale","Poiana Maggiore","Santorso","Costermano","Ampezzo","Rivarolo Mantovano","Cimego","CavagliÃ ","Frascaro","Esino Lario","Trescore Cremasco","Pisogne","Arcene","Rovetta","Prata Camportaccio","Pizzighettone","Pegognaga","Villa Lagarina","Lasino","Castelletto sopra Ticino","Verolavecchia","Airuno","Valle","Ornago","Peglio","Rubiana","Chambave","Cherasco","Sant'Albano Stura","Gorizia","Dignano","Musile di Piave","Borgo","Monforte d'Alba","Pompiano","Cavaion Veronese","Tolmezzo","Cordovado","Sospirolo","Samarate","Pandino","Bottanuco","Sergnano","Buscoldo","Bovezzo","Villa Guardia","Trivero","Quinto di Treviso","Brembate","Magnago","Saletto","Stra","Pontedassio","Cigliano","Ceres","Peveragno","VerrÃ¨s","Alimena","Casarsa della Delizia","Buia","Cerete","Monte San Vito","Cologna","Domanico","Sommatino","Altavilla Silentina","Palazzolo Acreide","Monteodorisio","Stornarella","Cassine Superiore","Turi","Ales","Scilla","Soverato Marina","Mesoraca","Bovalino","Marina","San Pietro a Maida","Trebisacce","Castelpoto","Quarto","Morrone","Barra","Bracigliano","Sgurgola","Sessa Aurunca","Escalaplano","Codaruina","Orvieto","Russi","Vitulazio","Salice Salentino","Zollino","Puglianello","Ailano","Arienzo","Medolla","Guardavalle","Bientina","San Gavino Monreale","Baunei","Ozieri","Erchie","Muro Leccese","Gimigliano","Chiesina Uzzanese","Santa Caterina dello Ionio","Morcone","Buccino","Norcia","Narni Scalo","Spello","Ceccano","Artena","Rocca Massima","Muros","Reggiolo","Roccastrada","Romentino","Zumaglia","Ornavasso","Cressa","Buronzo","Creazzo","Villafranca in Lunigiana","Suardi","San Giovanni Bianco","Sermide","Sirmione","Welsberg-Taisten","Coseano","Menaggio","Casargo","Carasco","Caravino","Rivalba","Villafranca di Forli","Crespino","San Biagio di Callalta","Celle Ligure","Carignano","Avigliana","LeinÃ¬","Bagnara Calabra","Manzano","Torri del Benaco","Verucchio","Giavera del Montello","Santa Maria di Sala","Izano","Amandola","San Giorgio di Nogaro","Gaiarine","Capistrano","San Cataldo","Salvirola","Brignano","Ponte","Borno","Passirano","Dimaro","Livinallongo del Col di Lana","ArsiÃ¨","Subiaco","Borzonasca","Castello","Cavenago di Brianza","Zerbo","Gavi","Laveno-Mombello","Domegliara","Grumolo delle Abbadesse","Paderno d'Adda","Vahrn","Margarita","Badia Calavena","Stretti","Castellana Grotte","Rivello","Altavilla Milicia","Cascia","Roccaromana","Zangarona","Boretto","Langhirano","Ferriere","Piandimeleto","Monte San Giusto","Sorgono","Pietraperzia","Zambrone","Vernio","Chiusano di San Domenico","Tagliacozzo","Palagonia","Mondragone","Ponte Buggianese","Poggiardo","Isola del Giglio","Volterra","Taurianova","Africo Nuovo","Porto","Cugnoli","Gissi","Villafranca Tirrena","Francofonte","Serra Pedace","San Gennaro Vesuviano","Serre","Picerno","Frasso Telesino","Concordia sulla Secchia","Vacri","Tortoreto","Buggiano","Pignataro Interamna","Santi Cosma e Damiano","Tuglie","Zanca-Sant'Andrea","Sulzano","Bruino","Marone","Brusnengo","San Benigno Canavese","Origgio","Marignano","Selva","Bastiglia","Ravarino","Tirrenia","Palmas Arborea","Colliano","Cavallino","San Piero Patti","Casamarciano","Montefredane","Manocalzati","Sortino","Golfo Aranci","Serramezzana","Airola","Roccabernarda","Filadelfia","Soveria Mannelli","Caldarola","Vizzini","Ponte a Moriano","Santa Fiora","Podenzana","Santo Stefano d'Aveto","San Colombano CertÃ©noli","Moneglia","Mignanego","Campofilone","Petritoli","Colle","Mantovana","Montanara","Alcara li Fusi","Seminara","Moglia","Acquafredda","Gualtieri","Gottolengo","Orzinuovi","Bronzolo","Aldeno","Dro","Bosisio Parini","Casaloldo","Rivarolo del Re ed Uniti","Mesola","Piano di Coreglia-Ghivizzano","Viserba","Robecco sul Naviglio","Marsciano","Nanto","Chiusanico","Feroleto della Chiesa","Valdieri","Montalenghe","Cintano","Costigliole d'Asti","Pessione","Casalmaggiore","Nimis","Lizzola","Piadena","Rodeneck-Rodengo","Auronzo di Cadore","Santa Lucia","Tarquinia","Terrasini","Castelraimondo","Pontida","Fontanella","Carenno","Casalromano","Poggio Rusco","San Vito di Cadore","Cassolnovo","Casorate Primo","Robbio","Viagrande","Torrebelvicino","San Nazario","Salzano","Vellezzo Bellini","Bressana Bottarone","La Morra","Bollengo","Badia Polesine","Mereto di Tomba","Campoformido","Cagliari","Inveruno","Berceto","Guiglia","Roncalceci","Barano d'Ischia","San Felice sul Panaro","Ferrara","Galliera","Vigarano Pieve","Bari Sardo","Corigliano d'Otranto","Francavilla Fontana","Riesi","Chiaravalle Centrale","Esperia","Partanna","Capistrello","San Giustino","Giove","Montefranco","Alatri","Norma","San Felice Circeo","Ugento","Caggiano","Roccamonfina","Locorotondo","Grimaldi","San Rufo","Scanzano Jonico","Castelbuono","Misilmeri","Cave","Stagno","Ribolla","San Pancrazio Salentino","Davoli","Castiglion Fiorentino","Brancaleone","Vallefiorita","Prata","San Mango d'Aquino","Casaratta","Volla","Minervino Murge","Canosa di Puglia","Altidona","Vezzano sul Crostolo","Monte Vidon Corrado","San Ferdinando di Puglia","Thiesi","Silanus","Adrano","Spezzano Albanese","Tropea","Civitella Marittima","Barberino Val d'Elsa","Seano","Aiello del Sabato","Cattolica Eraclea","Atri","Rio Marina","Blera","Fusignano","Talsano","Riolo Terme","Castelnovo di Sotto","Migliarino","Bernate Ticino","Murlo","Cusano Mutri","Buonabitacolo","Bompietro","Montorio al Vomano","Castiglione di Garfagnana","Bagnara di Romagna","San Pietro Vernotico","Passo Corese","Montalto Uffugo","Pontecagnano","Vieste","Butera","Siderno","Spezzano della Sila","Lauro","Montevago","Vanzaghello","Saturnia","Civitella San Paolo","San Secondo Parmense","Pietracuta","Arquata Scrivia","Pogliano Milanese","Flero","Caorle","Mortegliano","Villanuova sul Clisi","Cairate","Sant'Antonino","Monteriggioni","Ponso","Corno Giovine","Mascali","Rossano","Rocca di Papa","Polla","Poggio Mirteto","Sant'Andrea","Corigliano Calabro","Futani","San Cipirello","Sala Consilina","Torviscosa","Quinto Vercellese","Mergozzo","Livorno Ferraris","Breno","Arignano","San Gillio","Moretta","La Salle","Foiano della Chiana","Borgaro Torinese","Trana","Chianciano Terme","Ospedaletti","Soncino","Dubino","Vescovato","Bienno","Acquafredda Inferiore","Prad am Stilfser Joch","Pignone","Campomorone","San Fiorano","Confienza","Canaro","Ozegna","Gaggio Montano","Collepasso","Lugnano in Teverina","Sangano","Carlino","Loria","Bagnolo San Vito","La Salute di Livenza","Custonaci","Porto Empedocle","Roasio","Beinette","Edolo","Neumarkt","Naturns","Bertonico","Turbigo","Filighera","Giussago","Senago","Follina","San Germano Vercellese","Buriasco","Oulx","San Lorenzo Isontino","San Quirino","Marina di Ragusa","Tramonti","Sibari","Praia a Mare","Rogliano","Codigoro","Altedo","Serra San Quirico","Curcuris","Scicli","Baiano","Villa San Giovanni","Casteldaccia","Santo Stefano di Briga","Pianella","Moscufo","Lettopalena","Giove","Caianello","Lauria","Lari","Lugagnano Val d'Arda","Santa Sofia","Latiano","Troia","Nicolosi","Casal di Principe","Voghenza","Benestare","Monastir","Tertenia","Masullas","Formicola","Zafferana Etnea","Canicattini Bagni","Siculiana","Miglianico","San Giovanni Suergiu","Vigarano Mainarda","Rocca Priora","Carpineto Romano","Sant'Agata sul Santerno","Gambara","Serraglio","Cimitile","Popoli","Cortandone","BianzÃ¨","Terruggia","Barzana","San Severino Marche","San Lorenzo","Sexten","Avio","Figino","Cozzo","Caravate","Copiano","Valle Lomellina","Arqua Polesine","Lombardore","Scarmagno","Borgone","San Pietro di Cadore","Montegaldella","Arzignano","Lendinara","Fara Gera d'Adda","Montalbano","Graglia","San Carlo","Pezzana","Ghisalba","Calvisano","Corte Franca","Villastrada","Lajen","Cittiglio","Caselle Lurani","Pantigliate","Conselve","Bevilacqua","Cervo","Moimacco","Ponte nelle Alpi","Ponte","Agnone","Castelfranci","Paternopoli","Villamar","Barumini","Rizziconi","Cinquefrondi","Montemiletto","Pelago","Buti","Ancarano","Larino","Arrone","Castagneto Carducci","Lido di Camaiore","Castelnuovo di Val di Cecina","Marlia","Vasanello","Lenola","Camerlona","Tufino","Rovito","Muro Lucano","Moio della Civitella","Bellona","Strongoli","Loiano","Mergo","Bernalda","Verbicaro","Longobardi","Pontassieve","Sant'Andrea di Conza","Ventimiglia di Sicilia","Corropoli","Ponza","Policoro","Monteiasi","Mottola","Calcio","Roveredo in Piano","Bovolenta","Corsano","Dronero","Farra d'Alpago","Balvano","Panaro","Druogno","Traona","Filo","Ascoli Satriano","Circello","Fornovo di Taro","Argenta","Monteforte Irpino","Avola","Milo","Fossacesia","Abbadia San Salvatore","Locati","Santo Stefano Quisquina","Sant'Omero","Castello","Castelnuovo di Porto","Carovigno","Malalbergo","Montegiorgio","Torre de' Passeri","Loreto Aprutino","Monsampolo del Tronto","Rivalta","Cadeo","Ghiffa","Castellar Guidobono","Valfenera","Camisano","Gazzuolo","Comano","Sale Marasino","Longarone","San Marco","San Giorgio Canavese","Ala di Stura","Montecassiano","Buttrio","Favaro Veneto","MÃ¼hlbach","Caldonazzo","Ponte Basso","Calitri","San Mango","Nocera Terinese","Armeno","Gardone Val Trompia","Gonzaga","Toblach","Villafranca d'Asti","Bornasco","Lomello","Arcugnano","Pocenia","Moiano","Triggianello","Nuraminis","Nurri","Chiaramonte Gulfi","Borgia","Laureana di Borrello","Laino Borgo","Castel San Lorenzo","Pisticci","Raffadali","Bagni di Lucca","Arce","Lesina","Surbo","Alliste","Poggio Moiano","Cerreto Laziale","San Filippo","Pianella","Potenza Picena","Ricadi","Poggio a Caiano","Aquilonia","Colonnella","Mugnano","Atina","Campi Salentina","San Giovanni al Natisone","Neive","Castagnole","Crespano del Grappa","Molazzana","Ottiglio","Issime","Cavriana","Tresenda","Grigno","Rossiglione","Mede","Rognano","Vernate","Solesino","Ceregnano","Cuceglio","Torrazza","CarrÃ¹","San Martino al Tagliamento","Revine","Pian Camuno","Zimella","Taverna","Poggio Berni","Gambettola","Sant'Angelo in Vado","Venarotta","San Marco in Lamis","Fluminimaggiore","Cavriago","San Giorgio a Liri","Biancano","San Marco","Gallese","Portico di Caserta","Santa Elisabetta","Vallo della Lucania","Cappelle sul Tavo","Baschi","Vajont","Camino","Barile","Diecimo","Campiglia Marittima","Castel Giorgio","Galatina","Goito","Oliva","Anfo","Sant'Antonino di Susa","Fontanarosa","San Pietro Viminario","Annicco","Pianezze","San Martino","Bellariva","Bedollo","Bosco Chiesanuova","Spin","Rivodutri","Poggio Nativo","Fara in Sabina","Cantalice","Battaglia Terme","Fiera","Regina","Pian-Fossal","Gabbiano","Postiglione","Abetone","Roccella","Montorso Vicentino","Coppe","San Polo","Medea","Lapio","Fiesso d'Artico","San Vittore","Sotto Castello","Gorle","Varese Ligure","Rocchetta di Vara","Gazzola","Sernaglia della Battaglia","Cordignano","Pero","Pieve del Cairo","Villetta","Capriolo","Poggio Renatico","Spineda","San Giorgio della Richinvelda","Scaldasole","Rodigo","Mathi","Duino-Aurisina","Villa Bartolomea","Bagnoli di Sopra","Numana","Ceprano","Minori","San Miniato Basso","Lercara Friddi","Castello","Renazzo","Ramiseto","San Giovanni in Fiore","Robecco d'Oglio","Pozzonovo","Villa Verucchio","Gardone Riviera","Tassullo","Agliana","Piancastagnaio","Roseto Valfortore","Villa Basilica","Roccarainola","Niederdorf","Venegono Inferiore","Valli del Pasubio","Marcallo con Casone","San Lorenzo al Mare","Cavallermaggiore","Montecchio","Martignacco","Gonnesa","Revello","Castellengo","Torre del Lago Puccini","Orta Nova","Castellammare del Golfo","Cuglieri","Ripi","Umbertide","San Sperate","Bonea","Torre Santa Susanna","Monteroni di Lecce","Isola del Liri","Briatico","Porano","Ticengo","Montafia","Ginosa","Sassetta","Bussi sul Tirino","Ronciglione","Vistrorio","Cicagna","Cesara","Fiuggi","Liveri","Torre di Ruggiero","Valganna","Vena di Maida","Casa Bartolacelli-Stella","Arcole","Piegaro","Novalesa","Torrile","Polverara","Molino","Soresina","Casalbuttano ed Uniti","Cignone","Ripalta Cremasca","Pescarolo ed Uniti","Cappella de' Picenardi","Garibaldi","Doria","Riese Pio X","Giuliana","Inverigo","Cantalupo Ligure","Alice Castello","Pallanzeno","Briga Novarese","Garlate","San Zenone al Lambro","Zocca","Tessera","Castellazzo Bormida","Cremolino","Beura-Cardezza","Pagazzano","Sanluri","Lenna","Roccafranca","Villanterio","Casaletto Spartano","Montappone","Belmonte Piceno","Santa Maria","Vicchio","Ceppaloni","Gaggi","Isola del Gran Sasso","San Sossio Baronia","Montegrosso d'Asti","Castel Bolognese","Roncone","Borgo San Giacomo","Montanaso Lombardo","Algund","Strada San Zeno","Pontelongo","Bordighera","Casarile","Terricciola","Remanzacco","Casteltermini","Castel del Piano","Cropani","Torrita di Siena","Poppi","Ocre","Castiglione di Cervia","Paciano","San Marzano sul Sarno","Carentino","Madignano","San Lazzaro degli Armeni","Morter","Taino","Biandronno","Lavena Ponte Tresa","Felegara","Campogalliano","Villa","Casalserugo","Piombino Dese","Pecetto","Venaus","Strigno","Raldon","Campodenno","Guspini","Montemaggiore al Metauro","Assoro","Fornaci","Curinga","Montalcino","Pago Veiano","Campobello di Mazara","Catignano","Oriolo Romano","Tuscania","Roviano","Stimigliano","Erve","Cividate Camuno","Settimo Vittone","Lallio","Leffe","Salorno","Canneto sull'Oglio","Cornedo Vicentino","Sillavengo","Barbarano Vicentino","Grantorto","Eraclea","La Maddalena","Frascineto","Tolve","Santa Maria","Scerni","Meldola","Cori","Calcinate","Foresto","Marcaria","Seniga","Castellucchio","Costa Volpino","Bellano","Viscone","Ossago Lodigiano","Carpineti","Piazzola sul Brenta","Terzorio","Dego","Dolceacqua","Bardonecchia","Crevacuore","Pollein","Sgonico","Sutrio","Lazise","Appignano","San Lorenzo in Campo","Case Catania","Sant'Arcangelo","Coppito","Stia","San Zaccaria","Castellina Marittima","Vallerano","San Donato","Monsano","Gradara","San Benedetto Po","Gerenzago","Chiarano","Maccagno","Corteolona","Fiesso Umbertiano","Deiva Marina","Terrarossa","Premariacco","Bianconese","Basaldella","Lamon","Settimo San Pietro","Escolca","Santo Stefano di Rogliano","Sersale","Croce","Sarteano","Prata Sannita","Mas","Giuliano Teatino","Larciano","Gagliano del Capo","Faggiano","Alezio","Carvico","Capaccio","Offlaga","Pacentro","Fosdinovo","Cavenago d'Adda","Paratico","Torriana","Lesa","Cavour","Tarvisio","Pinzano al Tagliamento","Pollenza","Montefortino","Levane","Castignano","Valle Agricola","Vallata","Sala Baganza","Campegine","Bucine","Guagnano","Roccadaspide","Galliera Veneta","Sant'Agostino","Mazzo di Valtellina","Villasor","Paulilatino","Gabbro","Sindia","Regina Margherita","Flussio","Gavoi","Santo Stefano Belbo","Migliaro","Vo","Sorisole","Manziana","Valentano","Guardamiglio","Bettola","Perinaldo","Brosso","Codevigo","Fanna","Tuili","Pratovecchio","Vignanello","Massa d'Albe","Montenero di Bisaccia","Panicale","Cupramontana","Cagli","Vallombrosa","Tavarnelle Val di Pesa","Massa","Borrello","Avigliano Umbro","Ravi","Ortelle","Gordona","Esine","Arcola","Pellegrino Parmense","Campodoro","Villa","Vergato","Settimo","Flaibano","Folgaria","Boffalora sopra Ticino","Albizzate","Monticiano","Castel Gandolfo","Envie","Busseto","Virgilio","SÃ«lva","Schiavon","Motta San Guglielmo","Baia","Gazzo","Melara","Dossobuono","Neviano degli Arduini","Compiano","Piano","Neirone","Osiglia","Borghetto di Vara","Caravonica","Localita della Chiesa","San Bartolomeo","Diano San Pietro","Lacco Ameno","Arborio","Cambiano","Cerredolo","Pian di ScÃ²","Rassina","Chitignano","Altavilla","Buttigliera Alta","San Giovanni","Coredo","Pannarano","Francolise","San Cesario sul Panaro","Salvaterra","Corvara","Deutschnofen","Marche","Frattocchie","Villa Minozzo","Gonnosfanadiga","Arborea","Albaredo","Saint-Pierre","Istrana","Pont-Saint-Martin","Castiglione","Lavello","Uzzano","Montale","Tribiano","Simaxis","Codrongianos","Isili","Siapiccia","Orsenigo","Castello","Nave","Tione di Trento","San Lorenzo del Vallo","Caulonia","Vidigulfo","Fontanelle","Santa Barbara","Santi","Selvino","San Martino Canavese","Brebbia","Tenno","Seborga","Caminetto","Tina","Castiglione","Albaredo d'Adige","San Pietro Mosezzo","Marini","Maggio","Palazzolo dello Stella","Meran","Grotta","Narbolia","Posta Vecchia","Castello","Rose","Fontanelle","San Luca","Tornaco","Limatola","Viano","Baiso","Montefiorino","Maser","Voltago","Vigo Rendena","Predazzo","Vigo di Fassa","Ronco","Torre de' Busi","Villavesco","Pilcante","Quistello","Rossano Veneto","Antignano","Cerrione","Campagnola","Caselle","Villanova","Cavaria con Premezzo","Castello","Brissago-Valtravaglia","Lozzo Atestino","Soldano","Castellaro","Santa Vittoria di Libiola","ChÃ¢tillon","Breda di Piave","Delianuova","Lungro","Corinaldo","Lucera","Castroreale","Fuscaldo","Castiglione Cosentino","Corea Castelluccia San Paolo","San Giovanni a Piro","Prezza","Lucugnano","Quero","Concordia Sagittaria","Tarzo","Burano","Bogliasco","San Polo di Piave","Castione della Presolana","Castions di Strada","Mossa","San Polo","Ponti","Ponte di Barbarano","Monteroduni","Borgosatollo","Villapiana","Osoppo","Sant'Agata Feltria","Monterubbiano","Montefano","Siamaggiore","Usellus","Carmignano","Roccavivi","Roccasecca","Solarolo","Vattaro","Verolanuova","Strona","Cedrasco","Breguzzo","Portovenere","Sparanise","Calice al Cornoviglio","Cisano sul Neva","Airasca","San Pietro di Feletto","Nuvolento","Ferno","Stroppiana","Schlanders","Canazei","Riomaggiore","Santa Giuletta","Riva Ligure","Tarantasca","Salassa","Viguzzolo","Borgo Val di Taro","Rolo","Castiglione dei Pepoli","Appignano del Tronto","Uta","Girifalco","Campo","Forio","Campolieto","San Vito Romano","Gradoli","Patrica","Otranto","Cerreto Sannita","Terranova da Sibari","Cupra Marittima","Laterina","Serrara Fontana","Siano","Castello","Grottolella","Piedimonte San Germano","Civitella di Romagna","Presicce","Castelcucco","Piavon","Capriva del Friuli","Pieve di Cadore","San Biagio","Conco","Provesano","Deggiano","Sizzano","Tres","Marola","Correzzola","Nove","Ceva","Sparone","Caselette","Montefiascone","Melissano","Luzzano","Capodrise","Staffolo","Santadi","Librizzi","Oliveri","Chiusi","San Lorenzello","Isola delle Femmine","Tornareccio","Valfabbrica","Senerchia","Torre Orsaia","Maratea","Castell'Arquato","Brescello","Piangipane","Subbiano","Condofuri","Crosia","Polistena","Montepaone","Trasacco","Roccavivara","Stigliano","Porto Azzurro","Paglieta","Arsita","Fabrica di Roma","Boves","Calvenzano","Monzambano","Spinazzola","Campofelice di Roccella","Massa Marittima","Naro","Castel San NiccolÃ²","Casalmorano","Soave","Lesegno","Calendasco","Volpedo","Serramanna","Fontanelice","Casa Pace","Fara Filiorum Petri","Lappato","Melendugno","Casale Corte Cerro","Caselle","Gargnano","Fiano","LoranzÃ¨","Isola","Villar","Forno Alpi Graie","Caraglio","Rivolta d'Adda","Bonavicina","San Damiano d'Asti","Monasterolo del Castello","Acquaviva","Trevenzuolo","Bovegno","Qualso","Riccovolto","Castel d'Aiano","Mandas","Siamanna","Guardia Piemontese","Taurano","Lugnano","Santa Maria Codifiume","Capoliveri","Rotondi","Basilicanova","Amantea","San Marco dei Cavoti","Marzano di Nola","Volturara Irpina","Caronia","Porto Ercole","Palaia","Castrocaro Terme","Conselice","Mercatino Conca","Torre a Mare","Arpino","Orani","Arpaia","Foiano di Val Fortore","Delia","Pescina","Trevico","Giarratana","Falconara Albanese","Palizzi Marina","Capodimonte","Sperlonga","Pennabilli","Monterchi","Sassinoro","Tramutola","Ponte","Pistrino","San Mariano","Marzano","Palagianello","Luzzi","Lama Mocogno","Predore","Tiriolo","Ghilarza","Cercepiccola","Forano","Vivaro","Masera","Cartura","Innichen","Visinale","Castelgomberto","San Paolo","Gavinana","Bivongi","Nusco","San Giovanni Gemini","Berbenno di Valtellina","Paderno Ponchielli","Santo Stefano di Cadore","Noli","Buttapietra","Ispra","Charvensod","Pescocostanzo","Castellaneta","Montepulciano Stazione","Ronchi","Pieve","Povegliano","Tusa","Monteforte d'Alpone","Meolo","Loro Piceno","Prata di Pordenone","Ratschings","Torrenova","San Marzano di San Giuseppe","Greci","Pellestrina","Pettinengo","Orotelli","Pettoranello del Molise","Santo Stino di Livenza","Panzano","Marina di Castagneto Carducci","Valle","Lingotto","Albina","San Pietro","Bosco","Fiore","Corte","Porta","Pavia di Udine","Collefontana-Fontana Liri Inferiore","Torre","Brenner","Mora","Bosco","Rocco","Amato","Meduna di Livenza","Fossalta di Piave","Giuliano","Fosco","Rossi","Bagnoli Irpino","Albergo","Castelli","Palazzo","Carcereri","Luca","Giardini","Palladio","La Gala","Aiello","Villaggio","Trabia","Ai Palazzi","Cecchini","Palazzina","Borghetto","Luciana","Certosa","Grottaminarda","Sabatino","Mariae","Sacco","Boville Ernica","Attimis","Macello","Barge","La Loggia","Ramponio","Casate Raffa","DolcÃ¨","Premana","Ormelle","Furore","Giungano","Pollica","Sordevolo","Vespolate","Tirano","Zoagli","PalÃ¹","Cese","Belvedere Ostrense","Villa Marina","San Secondo","Cannella","San Gregorio","Martignano","Roiano","Borgo Tossignano","Agugliaro","Sossano","Sand in Taufers","Termeno","Rignano Garganico","Castelnuovo della Daunia","Volturino","Carpignano Sesia","Colombaro","Limite","Perfugas","Ferrero","Guardialfiera","Novate Mezzola","Pieve Vecchia","Endine Gaiano","Giano Vetusto","Castelliri","Campoli Appennino","Scansano","Decollatura","Nocelleto","Rivergaro","Mairano","Ferrandina","Castelvecchio Pascoli","Ceggia","Vignacastrisi","Tratalias","Serra","Marina di Andora","Romanengo","Casirate d'Adda","Carbonara al Ticino","Mulazzano","Agazzano","Malgrate","San Fedele","Brunate","Brignano Gera d'Adda","Trigolo","Campagnola Emilia","Monticelli d'Ongina","Madonna di Campiglio","Pieve di Soligo","Longare","Vigonovo","Etroubles","Limone Piemonte","Stazzano","Terenzo","Nurallao","Capranica","Ficulle","Albanella","Bisacquino","CanicattÃ¬","Alanno","Modigliana","Treia","Campli","Serra de' Conti","Serracapriola","Rodi Garganico","San Donato di Lecce","Solopaca","Pignataro Maggiore","Pachino","Guarrato","Perdasdefogu","Riparbella","Orbetello","Rodano","Soriano nel Cimino","Santa Maria","Miglionico","Latronico","Magliano Sabina","Isola del Cantone","Costarainera","Condove","Frigento","Montecosaro","Montescudo","Carloforte","Villabate","Attigliano","Antella","Serrano","Maltignano","Polesella","Quaregna","Cison di Valmarino","Cavalese","Badia","Morolo","Castiglione d'Adda","ViggiÃ¹","Vicarello","Montepulciano","Tavarnuzze","Lezzeno","Induno Olona","Benetutti","Bonarcado","Alpette","Ostigliano","Quiliano","Pieve di Cento","Veronella","TortolÃ¬","Ceriano Laghetto","Sovere","Azzano","Capralba","Quinzano d'Oglio","Mirabello Monferrato","Parre","Francenigo","Castelnuovo Berardenga","Marciana Marina","Soci","Arcidosso","Centola","Gragnano Trebbiense","Ronchis","Puos d'Alpago","Cariati","Montalto di Castro","Sonnino","Torri in Sabina","Borgo Priolo","Besano","Levata","Berzo Demo","Revere","Pieve San Giacomo","San Giusto Canavese","Ameno","Omignano","Foglianise","Bassano in Teverina","Lunamatrona","Moricone","Camburzano","Sasso d'Ombrone","Martiniana Po","San Pietro","Sassello","Fara Novarese","Copertino","Carolei","Maccarese","Pirri","Santo Spirito","Sapri","Venosa","Basciano","Cellino Attanasio","Lastra","Montecchia di Crosara","Monteviale","FiavÃ¨","Lago","Pertosa","Ronco-Chiesa","Pray","Carpinello","Lago","Luciano","Camisa","Sommariva Perno","Boschetto","Ville","Casa Gherardi","MalÃ¨","Rovere","Giardinetto Vecchio","Pellegrini","Bettolle","Leonessa","Chiara","Spinetta Marengo","Balzola","Lustra","Bressanvido","Gangi","Benevello","Perteole","Cusino","Torre d'Isola","Frugarolo","Teglio Veneto","San Valentino Torio","Baruchella","Cilavegna","Vidardo","Montemarano","Marta","Germagnano","Lutago","Bargagli","San Prospero","Mozzecane","San Mauro","Montesano Salentino","Ponticelli","Camporosso","Porto d'Ascoli","Monforte San Giorgio","Quarto Inferiore","Zermeghedo","Bolzano","Faiano","Orgosolo","Piobesi Torinese","Bonassola","Peschici","Fonzaso","Mistretta","Petriano","Courmayeur","Serradifalco","Roggiano Gravina","Riola Sardo","Guardia Sanframondi","Pietrapaola","Falerna","Civitanova Alta","Sedegliano","Savio","Cellio","Pozzo","Castel Gabbiano","Sospiro","San Giacomo","Trovo","Villa Estense","Boara","Villa Santa Lucia","Binanuova","Pombia","Medole","Ostiano","Pozza di Fassa","Pinzolo","Bucciano","Pratola Peligna","Santa Maria Imbaro","Chiusavecchia","Mirabella Imbaccari","Montescaglioso","Bonorva","Trivignano","Sarmede","San Martino in Pensilis","San Giacomo degli Schiavoni","Rota Greca","Vado","Villamassargia","Cabras","San Vito","Perdaxius","Collinas","Martirano","Grassano","Castrofilippo","Mozzagrogna","Scanno","Contrada","Piazza al Serchio","Magliano","Piazza Roma","Mignano Monte Lungo","Villanova","Petilia Policastro","Montepiano","Pauli Arbarei","Riva","Campodipietra","Parghelia","Matino","Castri di Lecce","Roccabianca","Santa Maria","Montelanico","Arizzano","Gais","Zambana","Canonica","Sannazzaro de' Burgondi","DonorÃ¬","Alvignanello","Ponte Lambro","Mogliano","Oliena","San Teodoro","Meana Sardo","Sperone","Lammari","Campora","Forino","Melito di Porto Salvo","Peccioli","Ravello","Gallicano","Casperia","Solato","Chiavazza","Welschnofen","Casola di Napoli","Cannero Riviera","Lurago Marinone","Lenno","Nocciano","Grisignano di Zocco","Quattro Castella","Ragogna","Piumazzo","Castello","Ischitella","Grazzanise","Cagnano Varano","Montopoli in Val d'Arno","Arzachena","San Dorligo della Valle","Corno di Rosazzo","Zelarino","Pietra","Zinasco","Tonezza del Cimone","Vitulano","San Martino Sannita","Sturno","Rotello","Santa Maria Nuova","Magliano di Tenna","Boccheggiano","Maierato","Monasterace","San Fili","Roseto Capo Spulico","Segariu","Varapodio","San Sisto","San Nicola Arcella","Pastene","Pozzilli","Trivento","Ficarra","Mammola","Apice","Melizzano","Praiano","Borgo Sabotino-Foce Verde","Solto Collina","Caprino Bergamasco","Meano","Porpetto","Cancello","Morro d'Oro","Santa Vittoria in Matenano","Bitti","Armento","Taranta Peligna","Ferrazzano","Castello d'Argile","Racale","Cavezzo","Montefiore dell'Aso","Stroncone","Acquappesa","Passo di Treia","Caspoggio","Capalbio","Ururi","Castagnaro","Torgnon","San Salvatore Monferrato","Pralungo","San Martino","Vidiciatico","San Martino","Varzo","Moena","Magno","Forno","Case","San Pietro","Pinarella","Milano Marittima","Barisciano","Scoppito","Casignana","Frabosa Sottana","Pontremoli","Santo Stefano al Mare","Ostiglia","Villa di Tirano","Castello dell'Acqua","Metaponto","Paruzzaro","Champdepraz","Pancalieri","Pievebovigliana","Petruro","Novi Velia","Perdifumo","Montecorice","Piano-Vetrale","Scuola","Casalzuigno","Orta San Giulio","Sartirana Lomellina","Stazione Castelguelfo","Toro","Larderello","Belsito","Ripa","Bossolasco","San Vero Milis","Poggio di Roio","Belfiore","Alvito","San Lorenzo","Lido","Candiana","Cornaiano","Casei Gerola","Pozzolo","Santa Cristina","Cisliano","Crodo","Pogliano","Castelseprio","Acquapendente","Vicovaro","Corchiano","Borgorose","Ponzano","Canino","Supino","Castello di Annone","Caprese Michelangelo","Limiti di Greccio","Godo","Monticelli","Filetto","Lestizza","Godega di Sant'Urbano","Begliano","Paderno","Villa del Conte","Maerne","Sottomarina","Sambruson","Nociglia","Palmariggi","CirÃ²","Drapia","Pezze di Greco","Lizzanello","Martano","Mareo","Enemonzo-Quinis","Valle di Cadore","Faedis","Borgetto","Giardinello","Grotte","Montodine","Cumignano sul Naviglio","Zandobbio","Gergei","Castiadas","Santu Lussurgiu","Oria","Transacqua","Cocconato","Pralormo","Garessio","Fenile","Paesana","Prato Sesia","Quagliuzzo","San Bernardino","Vaprio d'Agogna","Volano","Ripoli","Celenza Valfortore","Carpiano","Fanano","Solignano Nuovo","Santa Ninfa","Bagnara","Pignola","Villa Morelli","Secondigliano","Furci Siculo","Randazzo","Palazzolo","Senise","San Salvatore Telesino","Pisciotta","Quindici","Scala","Montecchio","Porto Recanati","Tuoro sul Trasimeno","Monsampietro Morico","Frisa","Civitella Roveto","Carsoli","Garrufo","Casoli","Mercato","Agnadello","Collazzone","Monte Castello di Vibio","Spina","Collelungo","Saccolongo","Vergano-Villa","Casciana Terme","Mottafollone","Serle","Arta Terme","Rotella","Monte Giberto","Capitignano","Montereale","Fossa","Castel di Judica","Gessopalena","Quadri","Massa Fiscaglia","Villa Ottone","Casalvolone","Albareto","Carbonara di Po","Albano di Lucania","Aglientu","Travo","Simone","Agro","Poggio San Lorenzo","Mauro","Sinopoli","Tursi","Pantano","Field","Capo Rizzuto","Lardirago","Novello","Solarolo","Pollina","Mezzolara","Pozzolengo","Dosolo","Castel di Casio","Teglio","Sori","Sant'Angelo dei Lombardi","Piateda","Marina di Ginosa","Lajatico","Morgex","Pitigliano","Lagosanto","Ariano Ferrarese","Gallio","Pozzoleone","Stienta","Massa Martana","RoncÃ ","San Bassano","Isola Sant'Antonio","Maruggio","Corbola","Albettone","Gambellara","Calvanico","Montereale Valcellina","Pedavena","Feletto Umberto","Piobbico","Torrevecchia Teatina","Baselga di PinÃ¨","Taibon Agordino","Orosei","Usini","Santa Teresa Gallura","Serra San Bruno","Tricarico","Porto Tolle","San Zenone al Po","Bettona","Borgo","Vigo di Cadore","Biancade","Lazzaro","Casaccia II","Paganica","Dovadola","San Michele Prazzo","Pont","Molise","Ramon","Pont-Canavese","Maddalena di Cazzano","Galeata","Sassa","Corti","Marsico Nuovo","Baragiano","Ruoti","Castelgrande","Bella","Vaglio Basilicata","Cantarana","Cunico","Casalborgone","Camino","Canosa Sannita","Castiglione Messer Raimondo","Capannelle","Fontaneto d'Agogna","Perignano","Bibbona","Borgonovo","Sant'Angelo Romano","Cameriano","Pertengo","Caresana","Offagna","La Villa","Malonno","Badia","Mals","Natz-Schabs","Casateia","Sarnthein","Ponte Galeria-La Pisana","Minervino di Lecce","Neviano","Morciano di Leuca","Monte Roberto","Treglio","Casacanditella","Mojo Alcantara","MÃ¼hlwald","Terenten","Resia","Anterselva di Mezzo","Solda","Polinago","San Venanzio","Pernumia","Castel Focognano","Bagni","Spirano","Salento","Molinari","Colonna","Cinecitta","Borgo a Mozzano","Brossasco","Salmour","Malcontenta","Baluello","Loreo","Pieve Fosciana","Campoleone","Casa Zola","San Lorenzo","Torretta","Sella","Bagnasco","Fabbrica","San Nicolo","San Nicola","Ambra","Oliveto","Passo","Casavecchia","Santa Severa","Torrecuso","Coltura","Antonimina","Genivolta","Crotta d'Adda","Oliveto Citra","Prarolo","La Via","Radda in Chianti","Riale"
,"Netherlands","Amsterdam","The Hague","Zoetermeer","Helmond","Beek","Breukelen","Almere","Enschede","Alphen aan den Rijn","Dordrecht","Leeuwarden","Rotterdam","Geldrop","Son en Breugel","Vianen","Heerenveen","Sint-Oedenrode","Dronten","Groningen","Veendam","Vught","Sevenum","Asten","Gemert","Bakel","Erp","Eindhoven","Greup","Ede","Burgum","Hilversum","Haarlem","Bleskensgraaf","Nunspeet","Valkenswaard","Arnhem","Apeldoorn","Vlaardingen","Hellevoetsluis","Voorthuizen","Westervoort","Nijmegen","Hoofddorp","Diemen","Sliedrecht","Alkmaar","Zaandam","Oud-Beijerland","Puttershoek","Strijensas","Drachten","'s-Gravendeel","Maasdam","Twello","Zuilichem","Zutphen","Huissen","Spijkenisse","Purmerend","Vaassen","Groesbeek","Lelystad","Wageningen","Warnsveld","Druten","Amersfoort","Renkum","Deest","Oude-Tonge","Duiven","Koog aan de Zaan","Bleiswijk","Hengelo","Schiedam","Heerhugowaard","Waardenburg","Woerden","Valkenburg","Brunssum","Egmond aan Zee","Oudega","Emmeloord","Breda","Wellerlooi","Huizen","Raalte","Utrecht","Loenen","Amstelveen","De Cocksdorp","Silvolde","Op den Bosch","Leek","Ulft","Terborg","Megchelen","Netterden","Heerde","Haalderen","Mildam","Uddel","Abcoude","Nederweert","Liessel","Barneveld","Deurne","Numansdorp","Mijnsheerenland","Veldhoven","Ospel","Bussum","Putten","Ermelo","Ridderkerk","Velddriel","Papendrecht","Valburg","Westzaan","Wijchen","Tiel","Wolfheze","Roden","Moordrecht","Waddinxveen","Mook","Heythuysen","Beek","Hellendoorn","Hoorn","Domburg","Wassenaar","Zierikzee","Petten","Hardenberg","Bergen","Oirschot","Kinderdijk","Udenhout","Dalfsen","Lemiers","Horn","Flushing","Ouddorp","Winschoten","Rockanje","Nieuwkoop","Wormerveer","Gilze","Rijswijk","Venlo","Bergeijk","De Lutte","Nieuwerkerk aan den IJssel","Voorburg","Haamstede","Baarn","Dokkum","Nes","Zwolle","Rheden","Schijndel","Waalwijk","Hapert","De Westereen","Kollum","Buren","Nieuwegein","Mijdrecht","Zeist","Dieren","Oosterhout","Norg","Veghel","Gulpen","Scherpenzeel","Middelburg","Roermond","Heesch","Renesse","Sellingen","Epen","Eethen","Rozenburg","Oostvoorne","Leiden","Maastricht","Bodegraven","Witteveen","Badhoevedorp","Oudenbosch","Nieuwkuijk","Schinnen","Dijk","Heiloo","Nootdorp","Herten","Bilthoven","Naaldwijk","Leusden","Veenendaal","Bergharen","'s-Hertogenbosch","Sint Anthonis","Soest","Soesterberg","Woudenberg","Beuningen","Elst","Zevenaar","Best","Ommen","Deventer","Ewijk","Molenhoek","Vragender","Duivendrecht","Dirksland","Bergschenhoek","'s-Graveland","Krommenie","West-Knollendam","Zaandijk","Beekbergen","Zwijndrecht","Wehl","Assendelft","Wittem","Bladel","Tilburg","Oranje","Delft","Overasselt","Noordwijk-Binnen","Velden","Lies","Delfzijl","Someren","Zevenbergen","Oostwold","De Steeg","Krimpen aan den IJssel","Bergen op Zoom","Kaatsheuvel","Uithoorn","Arcen","Wognum","Boxmeer","Edam","Vleuten","Etten","Baars","Overloon","IJsselstein","Enkhuizen","Haarlemmerliede","Assen","Hummelo","Borger","De Bilt","Foxhol","Wolvega","Zoutelande","Centrum","'s-Gravenzande","De Lier","Wateringen","Maassluis","Hendrik-Ido-Ambacht","Gouda","Borculo","Geesteren","Hilvarenbeek","Schipluiden","Aalsmeer","Malden","Harderwijk","Biest","Doorn","Kudelstaart","Poortugaal","Maasdijk","Culemborg","Maasland","Honselersdijk","Monster","Kwintsheul","Delfgauw","Pijnacker","Rhoon","Leidschendam","Velp","Landsmeer","Geldermalsen","Nederhemert","Uitgeest","Doorwerth","Den Helder","Voorschoten","Meppel","Oss","Weert","Posterholt","Spaubeek","Lievelde","Volendam","Rijswijk","Palemig","Limbricht","Beneden-Leeuwen","Heerlen","Ulvenhout","Goes","Lisse","Rodenrijs","Sassenheim","Velsen","Krimpen aan de Lek","Staphorst","Urmond","Kerkrade","Annen","Retranchement","Hedel","Aagtekerke","Eersel","Roosendaal","Born","Noordwelle","Roelofarendsveen","Sittard","Eibergen","Harkema","Surhuisterveen","Heemstede","Middelharnis","Barendrecht","Lochem","Epse","Heerjansdam","Doetinchem","Nieuwe-Tonge","Brummen","Biddinghuizen","Doesburg","Rixtel","Waalre","Wezep","Boven-Leeuwen","De Zilk","Hoek van Holland","Hurdegaryp","Leuth","Winssen","Bennekom","Eerbeek","Voorst","Winterswijk","Nuenen","Hoogvliet","Duin","Hoge Donk","Oostzaan","Oudehorne","Afferden","Puiflijk","Grou","Steensel","Akkrum","Oosterbeek","Wintelre","Aalten","Kekerdom","Soerendonk","Weesp","Erichem","Berlicum","Heinenoord","Giesbeek","Bemmel","Nieuwendijk","Aalst","Heukelum","Boven-Hardinxveld","Muiderberg","Hallum","Steenbergen","Sluis","Moergestel","Den Burg","De Koog","Slenaken","Vierhouten","IJmuiden","Coevorden","Almelo","Laren","Axel","Zaamslag","Terneuzen","Hoek","Westdorpe","Hulst","Koewacht","Oostburg","Arnemuiden","Oudelande","Hoedekenskerke","Clinge","'s-Heerenhoek","Koudekerke","Westkapelle","Sint Annaland","Tholen","Sint Philipsland","Scherpenisse","Noordgouwe","Bruinisse","Oosterland","Rilland","Kruiningen","Yerseke","Oost-Souburg","Eede","Schore","Wemeldinge","'s-Gravenpolder","Drunen","Capelle aan den IJssel","Sluiskil","Kapelle","Giessendam","Bosch en Duin","Oudemirdum","Schagen","Blaricum","Zeewolde","Anloo","Houten","Venhuizen","Pieterburen","Zandvoort","Emmen","Langedijk","Wieringerwerf","Grootebroek","Rhenen","Hoenderloo","Garderen","Buitenpost","Montfoort","Ezinge","Sneek","Joure","Boesingheliede","Ossendrecht","Hoogerheide","Hoogland","Didam","Munstergeleen","Oijen","Herwijnen","Tweede Exloermond","Noordwijkerhout","Sprang","Lage Mierde","Elburg","Oosterend","Oirsbeek","Rozenburg","Holthone","Biervliet","Hoogeveen","Neede","Beilen","Boerakker","Simpelveld","Wijk bij Duurstede","Opheusden","Sint Annaparochie","Kesteren","Overberg","Epe","Eelderwolde","Alblasserdam","Gemonde","Smilde","Overdinkel","Uden","Espel","De Meern","Zetten","Hedel","Buren","Hollandsche Rading","Engelen","Beverwijk","Noord-Scharwoude","Reeuwijk","Ankeveen","Philippine","Dongen","Oegstgeest","Damwald","Hoensbroek","Hoogkarspel","Gorinchem","Zuidoostbeemster","Haren","Westerbork","Bavel","Heijningen","Dinteloord","Loon op Zand","Sint Joost","Nieuwe Pekela","Roodeschool","Boelenslaan","Oud-Alblas","Kerk-Avezaath","Sint Odilienberg","Dalen","Loozen","Oosterbierum","Lutten","Nieuw-Lekkerland","Rosmalen","Dinxperlo","Gorssel","Den Dolder","Toldijk","Tynaarlo","Borne","Wervershoof","Heemskerk","Cuijk","Oldebroek","Zoeterwoude","Leiderdorp","Almere Haven","Swalmen","Goor","Nijkerk","Terheijden","Vilt","Baarle-Nassau","Schoonhoven","Nederhorst den Berg","Beugen","Waarland","Hazerswoude-Dorp","Volkel","Bellingwolde","Kantens","Nieuwolda","Diepenheim","Augustinusga","Appelscha","Oldemarkt","Tytsjerk","Zuidland","Groot-Ammers","Achthuizen","Maarn","Belfeld","De Wijk","Ens","Ane","Heeten","Raamsdonksveer","Brielle","Klundert","Holtum","Tegelen","Kessel","Grathem","Maarssen","Geleen","Westmaas","s-Heerenberg","De Horst","Geervliet","Meerssen","Haaften","Zaltbommel","Lathum","IJzendoorn","Gemeente Rotterdam","Fijnaart","Aalden","Harich","Dodewaard","Olst","Beek","Warmond","Nijverdal","Rijnsburg","Driebruggen","Ravenstein","Middenbeemster","Monnickendam","Vinkeveen","Zevenbergschen Hoek","Zelhem","Eefde","Schalkhaar","Veenoord","Bunschoten","Spakenburg","Lichtenvoorde","Heino","Tricht","Boskoop","Mierlo","Luyksgestel","Muiden","Beesd","Jubbega","Swifterbant","Gendringen","Rekken","Budel-Dorplein","Suwald","Heelsum","Riethoven","Stiens","Ameide","Tolkamer","Earnewald","Noardburgum","Garyp","Reusel","Dronryp","Kerkdriel","Ingen","Hoogeloon","Varik","Rozendaal","Drogeham","Twijzelerheide","Molenhoek","Drempt","Britsum","Strijen","Lent","Budel","Goudswaard","Beusichem","Klaaswaal","Millingen aan de Rijn","Oudorp","Sumar","Sommelsdijk","Gameren","Maarheeze","Ellecom","Marrum","Baambrugge","Gaanderen","Goutum","Ouderkerk aan de Amstel","Pernis","Lieshout","Zwartebroek","Plasmolen","Gytsjerk","Lienden","Stellendam","Sterksel","Lexmond","Santpoort-Noord","Mookhoek","Broek op Langedijk","De Glind","Baexem","Yde","Haaksbergen","Werkendam","Holten","Andijk","Colmschate","Zeddam","Bunnik","Poeldijk","Asperen","Chaam","Balk","Noordwolde","Kootstertille","Denekamp","Oldenzaal","De Hoef","Naarden","Dwingeloo","Ter Apel","Eemnes","Linschoten","Venray","Dedemsvaart","Huis ter Heide","Boeicop","Zevenhoven","De Waal","Westerwijtwerd","Boxtel","Zwaag","Katwijk","Gendt","Nieuwerbrug","Hoogezand","Broekhin","Oranjewoud","Hillegom","Hierden","Ederveen","Genemuiden","Valkenburg","Markelo","Borsele","Velsen-Noord","Sint Agatha","Den Hoorn","Feanwalden","Walterswald","Anjum","Oosternijkerk","Nieuw-Vennep","Vogelenzang","Sambeek","Vlijmen","Enschot","Halsteren","Lutjebroek","Leersum","Maurik","Melick","Enter","Haaren","Hooghalen","Bathmen","Veen","Lunteren","Ten Boer","Gieten","Schipborg","Grijpskerk","Gasselte","Herpen","Amstenrade","Delden","Einighausen","Eys","Joppe","Willemstad","Erica","Lottum","Montfort","Maasbree","Berkhout","Vijfhuizen","Eext","Losser","Vaals","Kortenhoef","Heteren","Achtmaal","Vlagtwedde","Ureterp","Partij","'t Zand","Groet","Hartwerd","Haelen","Aerdenhout","Moerkapelle","Herkingen","Hernen","Berkenwoude","Bredevoort","Oene","Ingelum","Abbekerk","Eexterzandvoort","Bocholtz","Gronsveld","Bierum","Farmsum","Appingedam","Spijk","Oude Pekela","Muntendam","Noordbroek","Meeden","Zuidbroek","Rottum","Winsum","Zandeweer","Warffum","Bedum","Eenrum","Ulrum","Vriezenveen","Vries","Zuidlaren","Buinerveen","Tubbergen","Albergen","Wierden","Uithuizermeeden","Daarle","Geesteren","Fleringen","Haarle","Vroomshoop","Manderveen","Vasse","Ysbrechtum","Weidum","Woudsend","Nijland","IJlst","Heeg","Hennaard","Jutrijp","Wommels","Burgwerd","Hoogersmilde","Lemmer","Hemelum","Echtenerbrug","Koudum","Oosterwolde","Haule","Wijckel","Bakhuizen","Loppersum","Schildwolde","Stedum","Zeerijp","Oosterzee","Workum","Hindeloopen","Hoogkerk","Bovensmilde","Rolde","Hijken","Wijster","Tilligte","Westerhaar-Vriezenveensewijk","Delden","Hengevelde","Kamperland","Rietveld","Rossum","Wilnis","Roggel","Wilp","Spaarndam","Castricum","Poortvliet","Helenaveen","De Kwakel","Bosschenhoofd","Sint Willebrord","Rucphen","Stampersgat","Sprundel","Oud-Gastel","Putte","Liempde","Bunde","Appeltern","Oudeschild","Geertruidenberg","Nieuw-Buinen","Elsloo","Steenwijk","Hout","Zwartemeer","Balgoij","Kampen","Doornspijk","Peize","Oudehaske","Dreumel","Rivierenwijk","Oudendijk","Wormer","Oisterwijk","Leerdam","Made","Guttecoven","Stadskanaal","Kerkenveld","Wijhe","Rijssen","Vlodrop","Steijl","Sloterdijk","Schoondijke","Hoofdplaat","Kats","Brouwershaven","Wissenkerke","Kortgene","Colijnsplaat","Gapinge","Breskens","Sint Maartensdijk","Serooskerke","Oostkapelle","Sint Jansteen","Heikant","Vogelwaarde","Sas van Gent","Wolphaartsdijk","Kloetinge","Aardenburg","Bruchem","Arkel","Moerdijk","Genderen","Stompwijk","Hoornaar","Nieuwveen","Ter Aar","Galder","Prinsenbeek","Teteringen","Giessenburg","Hoogblokland","Meeuwen","Noordeloos","Lopik","Ammerstol","Bergambacht","Hank","Sleeuwijk","Neer-Andel","Harmelen","Driebergen","Odijk","Renswoude","Tull","Maartensdijk","Nieuwer-Ter-Aa","Zijderveld","Elsendorp","Everdingen","Voorhout","Katwijk aan Zee","Oud-Zuilen","Loosdrecht","Noordwijk aan Zee","Zevenhuizen","Hooglanderveen","Craailo","Berg","Achterveld","Zuidhorn","Overveen","Berghem","Maasbommel","Bitgum","Kamerik","'s-Heer-Hendrikskinderen","Merkelbeek","Hattem","Holthees","Gasselternijveen","Wijk aan Zee","Oosthuizen","Rinsumageast","Groessen","Nuth","Koudekerk aan den Rijn","Oudkarspel","Uithuizen","Millingen","Rijen","Goirle","'s Gravenmoer","Waspik","Heeswijk","Aalburg","De Moer","Haren","Schinveld","Obbicht","Sweikhuizen","Voerendaal","Klimmen","Jabeek","Schimmert","Puth","Eygelshoven","Hulsberg","Eijsden","Rijsbergen","Zundert","Kruisland","Nieuw-Vossemeer","Wouwsche Plantage","Oudemolen","Heerle","Nuland","Helvoirt","Cromvoirt","Nistelrode","Heusden","Sint-Michielsgestel","Den Dungen","Maaskantje","Herkenbosch","Beesel","Echt","Ittervoort","Maasbracht","Reuver","Wessem","Stevensweert","Susteren","Stein","Buchten","Dieteren","Nieuwstadt","Roosteren","Meijel","Panningen","Beringe","Grashoek","Helden","Egchel","Blerick","Baarlo","Well","Groeningen","Vierlingsbeek","Rijkevoort","Grave","Zeeland","Maashees","Vortum-Mullem","Wanroij","Haps","Schaijk","Escharen","Mill","Stevensbeek","Margraten","Banholt","Wijlre","Terblijt","Noorbeek","Cadier en Keer","Mechelen","Milsbeek","Nieuw-Bergen","Ven-Zelderheide","Wanssum","Merselo","Bergen","Ottersum","Grubbenvorst","Blitterswijck","Siebengewald","Almkerk","Woudrichem","Heijen","Meerlo","Tienraij","Horst","America","Diessen","Molenschot","Barchem","Beinsdorp","Buurse","Kraggenburg","Zonnemaire","Tjerkwerd","Nieuw-Balinge","Nieuwdorp","Vuren","Erm","Hengelo","Gees","Tijnje","Ursem","Varsseveld","Maarssenbroek","Limmen","Finsterwolde","Slochteren","Anna Paulowna","Ruurlo","Halle","Mastenbroek","Uitwellingerga","Nuis","Ulicoten","Ulestraten","Gouderak","Sint Pancras","Bovenkarspel","Lithoijen","Milheeze","IJzendijke","Valthermond","Papekop","Heeze","Zwartsluis","Weurt","Kalenberg","Kockengen","Sappemeer","Angeren","Purmerland","Hazerswoude-Rijndijk","Nijbroek","Winkel","Nijkerkerveen","Ter Apelkanaal","Hoevelaken","Dorst","Den Hout","Wijdenes","Hem","Twisk","Nibbixwoud","Oostwoud","Benningbroek","Hoorn","Benthuizen","Katwoude","Oterleek","Obdam","Stompetoren","Tweede Valthermond","De Rijp","Schermerhorn","Beets","Broek in Waterland","Wijdewormer","Jisp","Westbeemster","De Goorn","Avenhorn","Schellinkhout","Hensbroek","Blokker","Medemblik","Hauwert","Middenmeer","Den Oever","Hoogwoud","Opmeer","Spanbroek","Spierdijk","Keijenborg","Nieuw-Beijerland","Stad aan 't Haringvliet","Gelselaar","Werkhoven","Gennep","Driemond","Heveadorp","Nigtevecht","Wamel","Tuitjenhorn","Zieuwent","Langezwaag","Stoutenburg","Boekel","Hooge Zwaluwe","Woerdense Verlaat","Nederasselt","Waarder","Surhuizum","Wapenveld","Marienberg","Batenburg","Marum","Mortel","Nieuwpoort","Bergentheim","Koedijk","Marknesse","Bloemendaal","Homoet","Huijbergen","Doornenburg","Warder","Leimuiden","Emst","Westbroek","Noordhorn","Oostendam","Neer","Kootwijkerbroek","Brucht","Stolwijk","Vreeland","Gorredijk","Garmerwolde","Slijk-Ewijk","Woltersum","Haulerwijk","Enspijk","Ophemert","Ilpendam","Nieuwleusen","Beerzerveld","IJsselmuiden","Uitdam","Eckart","Breugel","Rips","Brakel","Elst","Ochten","Randwijk","Hellouw","'t Harde","Lekkerkerk","Rhenoy","Lijnden","Wildervank","Vledder","Rossum","Zorgvlied","Ferwert","Bemelen","Callantsoog","Princenhof","Cadzand","Alem","Broekhuizen","Kaag","Ootmarsum","Groot-Agelo","Oudewater","Vrouwenpolder","Houtakker","Ugchelen","Molenaarsgraaf","Hekelingen","Tinte","Zwartewaal","Heenvliet","Vierpolders","Pannerden","Lobith","Babberich","Aerdt","Groenlo","Meerkerk","Alde Leie","Westerhoven","Rooth","Wierum","Ballum","Alphen","Hoogmade","Woubrugge","Noorden","Wagenberg","Lage Zwaluwe","Amerongen","Breukeleveen","Tienhoven","Stationsbuurt","Beegden","Nunhem","Ell","Julianadorp","Breezand","Oudesluis","Zoutkamp","Steggerda","Mussel","Gieterveen","Garsthuizen","Kropswolde","Aduard","Briltil","Oldekerk","Kommerzijl","Grootegast","Valthe","Pieterzijl","Opeinde","Glimmen","Scharmer","Harkstede","Eelde-Paterswolde","Enumatil","Tolbert","De Wilp","Noordlaren","Paterswolde","Onnen","Diepenveen","Lettele","Nieuw-Schoonebeek","Schoonebeek","Noord-Sleen","Emmer-Compascuum","Klazienaveen","Oosterhesselen","Nieuwlande","Noordscheschut","Stuifzand","Zuidwolde","Zwinderen","Hollandscheveld","Gramsbergen","Kloosterhaar","Slagharen","Sibculo","Vorstenbosch","Linne","Kolham","Beerta","Scheemda","Siddeburen","Havelte","Oosterwolde","Giethoorn","Koekange","Ruinerwold","Frederiksoord","IJhorst","Diever","Den Bommel","Ooltgensplaat","Lienden","Heilig Landstichting","Berg en Dal","Stroe","Herveld","Franeker","Zuidermeer","Budel-Schoot","Oud-Ade","Nieuweschoot","'t Kabel","Baken","Halfweg","Zuid-Beijerland","Piershil","Hulshorst","Zaanstad","Bolsward","Ammerzoden","Laag-Soeren","Ressen","Dorp","Venhorst","Bourtange","Vlieland","Zwaagdijk-Oost","Zuidzande","Otterlo","De Punt","Cruquius","De Klomp","Makkum","Fluitenberg","Buitenkaag","Terschuur","Rijckholt","Nijnsel","Oeffelt","Zalk","Schiermonnikoog","Akersloot","Schin op Geul","Holwierde","Den Deijl","Heeswijk-Dinther","Taarlo","Ruinen","Witharen","Vorden","Oldehove","Nijhuizum","Amstelhoek","Driel","Meer","Burum","Ovezande","Beetsterzwaag","Dirkshorn","Keldonk","Sint Hubert","Limmel","Waterland","Burgerveen","Anderen","Wijngaarden","Nieuw-Namen","Kuitaart","Rijpwetering","Oude Wetering","Nieuwe Wetering","Nieuwehorne","Den Ilp","Schoorl","Ten Post","Wagenborgen","Legemeer","Sint Nicolaasga","Exloo","Veenhuizen","Doenrade","Wijnandsrade","Middelbeers","Achterberg","Zuiderpark","Woensdrecht","Hollum","Hantum","Oudwoude","De Falom","Hantumhuizen","Baarland","Harlingen","Wijnaldum","Herbaijum","Tzummarum","Oldeberkoop","Lippenhuizen","Ravenswoud","Sintjohannesga","Rottum","West-Terschelling","Echten","Midlum","De Blesse","Oldeholtpade","Kimswerd","Wons","Pingjum","Hippolytushoef","Slootdorp","Kolhorn","Nieuwe-Niedorp","Zuid-Scharwoude","Hasselt","Urk","Rutten","Lemele","Lemelerveld","Blokzijl","Schagerbrug","Sint Maarten","Warmenhuizen","Groenveld","Sleen","Nieuw-Amsterdam","Nieuw-Dordrecht","Bennebroek","Rijsenhout","Aalsmeerderbrug","Abbenes","Zwaanshoek","Zwanenburg","Egmond-Binnen","Lutjewinkel","Wieringerwaard","Driehuis","Saasveld","Weerselo","Lewenborg","Ooij"
,"Greece","Athens","Ekali","Thessaloniki","Chalcis","Aegina","Rhodes","Kos","Rafina","Voula","Vouliagmeni","Alimos","Glyfada","Corinth","Servia","Kozani","Serres","Panorama","Katerini","Larisa","Elassona","Komotini","Alexandroupoli","Metaxades","Marathon","Filothei","Paiania","Tinos","Psychiko","Megalochari","Kallithea","Pallini","Nikaia","Ioannina","Loutraki","Aliartos","Argos","Kilkis","Lamia","Heraklion","Cholargos","Agrinio","Markopoulo Mesogaias","Piraeus","Keratsini","Aigaleo","PÃ¡trai","Aigio","Messolonghi","Karditsa","Corfu","Lefkada","Chania","Veroia","Giannitsa","Vergina","Ptolemaida","Xanthi","Kavala","Sparta","Moires","Kalamata","Nea Peramos","Chios","Perama","Attica","Magoula","Elliniko","Nafplion","Salamina","Ayios Stefanos","Galatsi","Kymi","Elefsina","Aspropyrgos","Nea Ionia","Kifissia","Farsala","Amaliada","Pefki","Nea Makri","Alexandreia","Melissia","Volos","Sindos","Kalamaria","Goumenissa","Kastoria","Florina","Vari","Skala","Chania","Kaisariani","Igoumenitsa","Ierapetra","Ialysos","Patmos","Kassiopi","Anavyssos","Koropi","Trikala","Varkiza","Andravida","Kranidi","Hydra","Xylokastro","Nea Kios","Tripoli","Ano Liosia","Peristeri","Orestiada","Keratea","Kouvaras","Porto Rafti","Paloukia","Dafni","Eretria","Thebes","Pyrgos","Rio","Mandra","Megara","Peristeri","Argyroupoli","Thermi","Arta","Lefkimmi","Parga","Preveza","Litochoro","Naxos","Spata","Nea Smyrni","Mytilene","Zakynthos","Argostoli","Lixouri","Nafpaktos","Oropos","Drama","Kalymnos","Kalamos","Mesagros","Skiathos","Skala Oropou","Makrygialos","Samothraki","Ormylia","Pella","Pylaia","Rethymno","Filippiada","Nea Alikarnassos","Lykovrysi","Nea Filadelfeia","Pikermi","Kamatero","Gonnoi","Agioi Anargyroi","Archaia Nemea","Polichni","Platy","Dionysos","Kryonerion","Symi","Agios Nikolaos","Tavros","Leontario","Naousa"
,"Spain","Valencia","Riola","Barcelona","MontornÃ¨s del VallÃ¨s","Begues","Terrassa","Sant Cugat del VallÃ¨s","l'Hospitalet de l'Infant","Vallirana","Blanes","el Prat de Llobregat","CornellÃ  de Llobregat","Sant Just Desvern","Gava","PallejÃ ","Castelldefels","Madrid","LeganÃ©s","Villaviciosa de Odon","AlcorcÃ³n","Valdemoro","Mostoles","Cobena","Getafe","Aranjuez","Humanes de Madrid","Las Rozas de Madrid","Arroyomolinos","Colmenar Viejo","Santa Cruz","Majadahonda","Fuenlabrada","Arucas","Las Palmas de Gran Canaria","Badalona","Collado Villalba","Villamanta","Alcobendas","AlcalÃ¡ de Henares","Torrelodones","Illescas","Sesena","Mataelpino","Villalbilla","Pinto","Moralzarzal","Ciempozuelos","San SebastiÃ¡n de los Reyes","Galapagar","Parla","Toledo","San Martin de la Vega","Coslada","Arganda","Hoyo de Manzanares","Los Hueros","Los Molinos","Torres de la Alameda","Tarragona","les Borges del Camp","Jesus","Reus","Santa Coloma de Queralt","Cambrils","Cartagena","Murcia","Lorca","Balsicas","Villafranca","Boadilla del Monte","Valdilecha","Villanueva del Pardillo","Portillo de Toledo","Villanueva de la Canada","Grinon","El Alamo","Torrejon de la Calzada","Monte","Brunete","Cerceda","ChinchÃ³n","Sevilla La Nueva","L'Hospitalet de Llobregat","Cervello","Granollers","Navalcarnero","Pozuelo de AlarcÃ³n","Robledo de Chavela","El Escorial","Campo Real","Nuevo Baztan","TorrejÃ³n de Ardoz","Perales del Alfambra","Becerril de la Sierra","Colmenarejo","San Martin de Valdeiglesias","Colmenar del Arroyo","Batres","Las Ventas de Retamosa","Las Matas","RubÃ­","Gelida","Badajoz","MÃ©rida","Olivenza","Telde","GÃ¡ldar","Candelaria","Alta","Arona","MondragÃ³n","Ermua","Girona","Sant Bartomeu del Grau","Olula del Rio","Garrucha","AlmerÃ­a","Vera","Huercal de Almeria","Nijar","El Ejido","Albox","Los Gallardos","Cuevas del Almanzora","Viator","Aguadulce","Roquetas de Mar","Tijola","Huercal Overa","Arboleas","Tabernas","Vicar","Sant Joan de Vilatorrada","Sitges","Vilanova del CamÃ­","Dosrius","Ametlla","Vallgorguina","Valles","Vall de Almonacid","Lucena del Cid","Manresa","Roda de Bara","Piera","Olesa de Montserrat","Igualada","Sant Pere de Ribes","Mijas","MÃ¡laga","Fuengirola","Huelva","Mazagon","Los Marines","Aracena","Hinojos","Bonares","Ãšbeda","JaÃ©n","Alcala la Real","Santiago","Linares","Jodar","Sabiote","Bilbao","Guadix","Oria","Irun","San SebastiÃ¡n de La Gomera","Zumarraga","San Sebastian","Fuentes de Leon","Burguillos del Cerro","Azuaga","San CristÃ³bal de La Laguna","Santa Cruz de Tenerife","La Orotava","La Higuerita","Playa","Adeje","Sabadell","Marbella","Torremolinos","Antequera","El Moral","Rincon de la Victoria","LogroÃ±o","Valle","Las Navas del Marques","MatarÃ³","Taradell","Rupit","Canovelles","Tacoronte","Granadilla de Abona","La Vera","Santa Cruz de La Palma","Santa Ãšrsula","Puerto de la Cruz","Icod de los Vinos","La Victoria de Acentejo","San Isidro","Tigaiga","Valverde","Tegueste","Los Cristianos","Zamora","Corrales","Seville","CÃ¡ceres","Santa Maria de CorcÃ³","Valldoreix","Tortosa","Malgrat de Mar","Villena","Vilassar de Mar","Algete","El Astillero","Lucena","Puebla de Alfinden","Loeches","Mollet del VallÃ¨s","Algeciras","Azuqueca de Henares","La Alameda de la Sagra","Creixell","Fuentelapena","Torroella de Montgri","Mahon","Tona","Artes","TorellÃ³","Vic","San Juan","Mojacar Pueblo","CastellÃ³n de la Plana","Cuevas de Vinroma","Cadiz","Cordova","Segura","Villanueva del Arzobispo","Alginet","Santa Pola","San Julian de Muskiz","Betera","MorÃ³n de la Frontera","Poboa de San Xulian","Marchena","Ãguilas","La Puebla de Cazalla","Alicante","Granada","Lugo","Amorebieta","Tortella","VÃ©lez-MÃ¡laga","Corchuela","Onda","Chiva","Beniparrell","Almenara","Brenes","Jerez de la Frontera","Los Barrios","Alsasua â€“ Altsasu","Orcoyen","Santander","Manzanares","Castro Urdiales","Santa Eulalia Bajera","Villanueva de Villaescusa","Ribadeo","Jijona","Elche","Errenteria","Zaragoza","Tolosa","Valladolid","Santa Lucia","Moana","LeÃ³n","Vitoria-Gasteiz","Zafra","La Red de Valdetuejar","Mairena del Aljarafe","Pedreguer","Trujillo","Los Alcazares","Pilar de la Horadada","Almoradi","Hortichuela","Puerto Real","Cartama","Cullera","Guadalajara","Esquivias","Cervera","La Pobla de Lillet","Ourense","Roldan","Torre-Pacheco","San Pedro del Pinatar","Torrevieja","San Miguel","Real","Acala del Rio","Vigo","Pontevedra","Cangas do Morrazo","Nigran","Valdemorillo","San Fernando de Henares","El Escorial","Segovia","Llosa de Ranes","La Guancha","Pamplona","Estella-Lizarra","Atarrabia","Berriozar","Baranain","Tudela","Burlata","A CoruÃ±a","Ferrol","NarÃ³n","Sada","Ames","Fene","Verin","Palencia","Villamuriel de Cerrato","Viveiro","Vivero","Toro","Parets del VallÃ¨s","la Garriga","Cardedeu","Polinya","Palafolls","Pineda de Mar","Santa Coloma de CervellÃ³","Calella","Castellar del Valles","Ibiza","Santa EulÃ ria des Riu","Moratalla","Totana","Las Torres de Cotillas","Cieza","Palma de Mallorca","Capdepera","Inca","PollenÃ§a","MarratxÃ­","Premia de Mar","Vilanova de SegriÃ¡","Moia","Ripoll","Plegamans","Manlleu","Alboraya","Sagunto","Paterna","Torrent","Benisano","San Antonio","Gandia","La Seca","Molina de Segura","Alcantarilla","La UniÃ³n","Jabali Nuevo","Ceuti","Los Garres","Alcoy","Villanueva de Castellon","Alfafar","Corbera de Llobregat","Vilanova i la GeltrÃº","Molins de Rei","Cabrils","Torrelles de Llobregat","Calafell","Castellet","Sant Vicenc de Castellet","Terrassa","MontmelÃ³","Abrera","els Hostalets de Pierola","Silla","Margarida","La Llagosta","Martorell","el Masnou","Tiana","Sallent","Santa Perpetua de Mogoda","Santa Margarida","Montseny","Port de Sagunt","Palmera","Bormujos","Bollullos de la Mitacion","Salamanca","San Javier","Anora","Penarroya-Pueblonuevo","Galvez","Muro del Alcoy","La Llacuna","Los Palacios y Villafranca","Capellades","Iznate","Nerva","La Galera","Hellin","Baza","Sayalonga","Monterrubio de la Serena","Urda","Tomelloso","Villar del Arzobispo","Alzira","Mislata","Albolote","Atarfe","Dos Hermanas","Oasis (La Marina)","Hernani","Orihuela","Rojales","Laredo","Elexalde","Pucol","Rafelbunyol","Blanca","Archena","Mondujar","BenalmÃ¡dena","Coin","Yecla","Ferreries","Campos","San Juan de Moro","Montellano","Oliva","Olvera","La Roda","Almagro","Librilla","Villaverde del Rio","Benicassim","Argentona","Alhaurin de la Torre","El Pozo de los Frailes","GijÃ³n","Mogente","l' Argentera","Nules","Punta UmbrÃ­a","Aizoain","Silleda","Almoster","Torres de Berrellen","Casar de Caceres","Aliseda","Rute","Tomares","Legazpia","Villacanas","Rielves","Milagro","Boiro","Sobarzo","Zumaia","Muriedas","Santiago Pena","Rebordanes","Castalla","Castilleja de la Cuesta","Santpedor","Cambre","Villalar de los Comuneros","Cheste","Durango","Petrel","Arbo","Balaguer","Cabrera de Almanza","Llafranc","Ponferrada","Elda","Onil","Mejorada del Campo","La Puebla del Rio","Albacete","Hoya-Gonzalo","Villaricos","Adra","Somo","Arenys de Munt","Fuensalida","Falset","Lleida","Maspalomas","Cuenca","Alhaurin el Grande","El Puerto de Santa MarÃ­a","Manacor","Culleredo","Ribadavia","Burgos","Aspe","Palafrugell","Villarrobledo","Pozoblanco","Cruce de Arinaga","Monforte de Lemos","Oviedo","Las Vegas","Alcorisa","Castilblanco de los Arroyos","Tomino","Biar","el Morche","Serracines","Navalperal de Pinares","Benidorm","Villamiel de Toledo","Ripollet","Meis","Catarroja","Jaraiz de la Vera","Llanera","AvilÃ©s","Pina de Ebro","Jaca","Villanueva del Rosario","Vergel","El Palmar","Cobatillas","Gallarta","Langreo","Sant Joan les Fonts","El Papiol","Couso de Salas","Ribeira","L'Alcudia","Algemesi","Melilla","La Guardia de Jaen","Los Villares","Vilches","La Carlota","Utrera","Las Cabezas de San Juan","San Juan de Aznalfarache","Santa Pau","Bescano","Cabanes","Baena","Cortiguera","Cenes de la Vega","Carlet","Salinas","Barakaldo","Ribarroja","Vinalesa","Churriana de la Vega","Santiago de Compostela","Vilanova d'Escornalbou","Marchamalo","Vaciamadrid","Torrelavega","Limpias","Ampuero","Los Corrales de Buelna","Liencres","Maliano","Colindres","Santona","Guarnizo","Cabezon de la Sal","Santiago de Cartes","Santa Cruz de Bezana","Liano","Entrambasaguas","Termino","Soto de la Marina","Renedo","CalviÃ ","LlubÃ­","Santa Maria del Cami","Felanitx","ses Salines","Muro","Ibi","Vila-real","Novelda","l'Alcora","Paradas","Chiclana de la Frontera","Valencina de la Concepcion","San Pedro","Rafelguaraf","Paterna del Campo","Casabermeja","Cambados","Arrecife","Ã‰cija","La Roda de Andalucia","Rioja","Lloret de Mar","Benitachell","Mengibar","Pilas","Alcossebre","Puerto del Carmen","Carrion de los Cespedes","Soller","Puig","Cocentaina","Miramar","Campillo","Aznalcazar","Herrera","Burriana","Salteras","Chucena","Alovera","Olot","Alcoletge","Subirats","Villabona","Erandio","Portugalete","Usurbil","Lekeitio","Urtuella","Eibar","Ondarroa","Huesca","San Fernando","Quart d'Onyar","Moncada","L'Eliana","Rocafort","Godella","Laguna de Duero","Cisterniga","Porrino","Ogijares","Motril","Albal","Vilagarcia de Arousa","Daganzo de Arriba","Canals","Cantillana","Puerto","PeÃ±Ã­scola","Mirador","Almodovar del Rio","Capela","Madrigalejo","Estepa","Bocairent","Don Benito","Aranda de Duero","Ledana","Fuente del Maestre","Oleiros","Foz","Lalin","As Pontes de Garcia Rodriguez","Rianxo","Oroso","Teo","Carballo","Mino","A Estrada","Estrada","Brion","Ordes","Arzua","Betanzos","Burela de Cabo","O Carballino","O Barco de Valdeorras","Gondomar","Rairiz de Veiga","Redondela","Curtis","Friol","Bergondo","Trives","Caion","Muro","Laracha","Garcia","Arino","Villafranca del Campo","Cabra","Campillos","La Rambla","Rota","Alanis","SanlÃºcar de Barrameda","Ronda","Tordera","Valls","Baga","Castellbell i el Vilar","Cubelles","Camargo","Pradejon","Arce","La Alberca","Denia","Almassora","Moja","Sant Andreu de la Barca","Viladecans","Santa Coloma de Gramenet","Algorta","Los Navalucillos","Estepona","Idiazabal","Puertollano","el Campello","Calpe","Javea","Sant Feliu de GuÃ­xols","Celra","Pau","Vila","Lardero","La LÃ­nea de la ConcepciÃ³n","Amposta","El Vendrell","Bueu","Plasencia","Paiporta","Santa Maria","Gines","la Vall","Irura","Frailes","Montesquiu","Salceda","Ciudad Real","Muchamiel","Mancha Real","Huetor Vega","Maracena","Costa","Santurtzi","Talavera de la Reina","Entrevias","Sant Sadurni d'Anoia","Gurb","Berga","Altea","Pola de Siero","Mieres","Utebo","Calatayud","Casetas","PalamÃ³s","Armilla","Cala del Moral","Casares","Arroyo de la Miel","Andujar","Monzon","Churra","Beniajan","Salou","Calahorra","AlmuÃ±Ã©car","Martos","Medina del Campo","Nerja","AlcalÃ¡ de Guadaira","Villajoyosa","Zarautz","La Rinconada","Carmona","Montcada i Reixac","Figaro","Bargas","Miguelturra","Santa Maria de Palautordera","Alella","Zaramillo","Moguer","Mairena del Alcor","Santomera","Gernika-Lumo","Cala Millor","Churriana","San Agustin de Guadalix","Requena","Teulada","Alameda","Palma del Rio","Fuentes de Andalucia","CehegÃ­n","San Vicent del Raspeig","Almonte","Valverde del Camino","Caravaca","Las Islas","Guardo","Trobajo del Camino","Armunia","San Andres del Rabanedo","Miranda de Ebro","Montearagon","Albarreal de Tajo","Anchuelo","Alberic","Priego de Cordoba","Mora de Rubielos","La Fresneda","Ateca","Andorra","Ceuta","Espartinas","Villares de la Reina","Noain","Mutilva Baja","Huarte-Araquil","Alguazas","Incio","Tordesillas","Pedrajas","Artana","Elizondo","Urdiain","Mayor","Noja","Saron","Mugardos","Garriguella","Godelleta","Argamasilla de Alba","Medina-Sidonia","Socuellamos","Guadarrama","Monserrat","Huertas","Firgas","Meliana","Catral","Benejuzar","Covaleda","Canet de Mar","Balenya","Corralejo","Escalonilla","Villasequilla de Yepes","La Puebla de Montalban","Navata","Vilajuiga","Bas","CadaquÃ©s","MÃ³ra d'Ebre","Alcanar","Ventallo","Ontigola","Alumbres","San Roque","Santa Lucia","Arenys de Mar","Loja","Cijuela","La Algaba","Piedrabuena","Simancas","Ajofrin","Vilanova","Santalla","Chantada","Malpartida de Caceres","Arroyo","Egues-Uharte","Castejon","Corella","Arcicollar","Olias del Rey","El Viso de San Juan","Cistierna","Palomares del Rio","San Miguel","Lomo de Arico","Aldeatejada","Alhendin","Navalcan","Labajos","Poblete","Prado del Rey","Artajo","Arroyo de la Luz","Montehermoso","Vinaros","Borriol","BenicarlÃ³","Cala","Breda","La Bisbal","Sant Pere de TorellÃ³","Vilabertran","Joanetes","Serra","Turia","Arges","La Canonja","Taboada","Trujillanos","Busturi-Axpe","Barcarrota","Salvatierra de los Barros","Berja","Duenas","Reyes","Navarrete","Quel","Portocolom","Algaida","Riells i Viabrea","Navarcles","Masquefa","Lepe","Aljaraque","Cabana","Cacheiras","Sils","Bellvis","Sabinanigo","Fraga","Teguise","Ugijar","Sant Joan de les Abadesses","Villarrubia de Santiago","Almenar","Alcarras","el Palau d'Anglesola","Els Monjos","Beniganim","Agullent","Albaida","Matadepera","Alcantara","Madrigal de la Vera","Mestanza","Ãvila","Cardenosa","Soria","La Flecha","Villalba de los Alcores","Puente-Genil","Navarres","Collbato","Lasarte","Valencia de Don Juan","Cea","Pomar de Cinca","Fruiz","Ubrique","Guadiaro","La Mojonera","San Cristobal de Entrevinas","Castello","Villablino","Basauri","Priego","La Figuera","Paracuellos de Jarama","AlcaÃ±iz","Lledo","Toreno","Villaconejos","Ibarra","CintruÃ©nigo","Valdemaqueda","Hernansancho","Navaconcejo","Galaroza","Castrillon","Arriate","El Saler","Santisteban del Puerto","Ibros","Durcal","Vilamalla","Arnedo","Quer","Haro","Escatron","Reocin","NÃ¡jera","Cabanillas del Campo","Igualeja","Zalamea la Real","Cartaya","Minas de Riotinto","GuÃ­a de Isora","La Puerta de Segura","Bailen","Ataun","Alcala de Xivert","Nambroca","Mocejon","Puerto de Gandia","Amurrio","Villamalea","Plasenzuela","Jerte","Villafranca de Cordoba","Venta","San Pedro","Valladolises","La Cavada","Parbayon","Baeza","Oyon","Eneriz","San Sebastian de los Ballesteros","Algar","Mediona","Conil de la Frontera","Manises","El Barco de Avila","Cabrerizos","Villabanez","Valencia","Gilet","Cazorla","AgÃ¼imes","Numancia de la Sagra","Collado Mediano","Boltana","Sojuela","Oliana","La Torre","Escalona","Villaluenga","Iznajar","TeiÃ ","Castro","Reinosa","Yeles","Enguera","La Batlloria","Carranque","Lantadilla","Coiros","Torreaguera","Alquerias","Aiguafreda","Meco","Coria","Sierra de Fuentes","Balerma","Zubia","Graus","Gandesa","Guadalix de la Sierra","Gerena","Chelva","San Nicolas","Yepes","Ocana","Cercedilla","Posadas","Tarancon","Carinena","Ã“rgiva","Odena","La Robla","La Llosa","Pals","Begur","FernÃ¡n NÃºÃ±ez","Montilla","Cangas de Onis","Torrijos","Valdepenas","El Medano","Horta de Sant Joan","Finestrat","Montemayor de Pililla","Boecillo","Huecas","Palol","Sarria","Hinojosa del Duque","Huelves","Villar de Olalla","El Sauzal","Urroz","El Vellon","Jimena de la Frontera","Arcos de la Frontera","La Yedra","La Abadilla","Viveda","Alava","La Puebla de Hijar","Beniarres","Ahigal","Paracuellos","Axpe","Arbizu","Carcar","Pueyo","Serranillos del Valle","El Molar","Arcade","el Poal","Beas","Pola de Laviana","Bolvir","Toral de los Vados","Aguilar de Campoo","Saldana","Selva","Capileira","Osuna","Villa del Prado","Ribes de Freser","El Real de la Jara","Sorbas","Lopera","Barbastro","AlcÃºdia","Cortegana","Isla Cristina","Arama","Arafo","Rivabellosa","Aravaca","Alpedrete","AlarÃ³","Monistrol de Calders","La Virgen del Camino","Viana","Formentera de Segura","Arjona","Beas de Segura","Ciutadella","Andoain","Pescueza","Casas del Monte","Palau","Benahavis","Gallur","Morata de Jalon","Quintanar del Rey","Utiel","Villarcayo","Valderrey","Villafranca de los Caballeros","Parcent","Robledillo de la Vera","HervÃ¡s","Albalat dels Tarongers","Aizarnazabal","Nubledo","Montgat","Penagos","Sopela","Villasana de Mena","Gironella","Olesa de Bonesvalls","La Rapita","Castellvell del Camp","Santa Barbara","Albalate de Cinca","El Grado","Porto","Cerdeda","Camarinas","Oliva de Plasencia","Villanueva de la Serena","Marin","Peligros","Frigiliana","Lerin","Tamames","Celanova","Torrecaballeros","Carpio","Mojados","Penafiel","Chipiona","La Caridad","Solares","Torreperogil","Altafulla","Santa Oliva","Pego","l'Ametlla de Mar","El Espinar","San Esteban del Valle","Vinales","Vinaixa","Alfaro","Casla","Archidona","Dumbria","Valdesogo de Abajo","l'Estartit","Torresandino","Sant Josep de sa Talaia","Benameji","Villarquemado","Espejo","Valdecabras","Quintana de Raneros","Alaejos","Pedrajas de San Esteban","Hontanares de Eresma","Laguardia","Coca","Segovia","Huercanos","Tormantos","Autol","Cenicientos","Bermeo","Tarazona de la Mancha","Almensilla","Sant Pere, Santa Caterina i La Ribera","Carrion de los Condes","Alforja","Torreblascopedro","Cobisa","Bernuy","Falces","Villamayor","Portonovo","Torrejon del Rey","Tortola de Henares","Lugones","Candas","Playa Blanca","Galapagos","Polop","San Juan de Alicante","Coristanco","Villarta de San Juan","Hontoria del Pinar","Traslavina","El Burgo de Osma","Villamayor","Mecina Fondales","Purchil","Gelves","Velez de Benaudalla","La Almunia de Dona Godina","Aguilar del Rio Alhama","Jumilla","Herrera de Pisuerga","Fuente Vaqueros","Grado","Beriain","El Ballestero","Salobre","Vedra","Corme-Porto","Pozuelo del Rey","Binefar","Abanto","Los Narejos","Alberite","Elburgo","Son Curt","Derio","La Oliva","Villamediana de Iregua","Daya Vieja","Sotrondio","Villafranca de los Barros","Anorbe","Puerto","Casas del Castanar","Navalmoral de la Mata","Santa Coloma de Farners","Nanclares de la Oca","Medinya","Manzanares el Real","Torremenga","Cuarte de Huerva","BuÃ±ol","Portus","Pedrezuela","Ingenio","Camarenilla","Sarria de Ter","Salas de los Infantes","Guitiriz","Arrigorriaga","Zamudio","Elorrio","La Muela","Mariola","Quijorna","Masdenverge","Ajalvir","Villatuerta","Madridejos","Dosbarrios","Consuegra","Ugena","Cubas","Pinoso","L'Arboc","Guadiana del Caudillo","Robledillo de Gata","Garrovillas","Las Galletas","Salt","Luanco","Pravia","Illas","Riudellots de la Selva","els Pallaresos","Cunit","L' Espluga de Francoli","Pedro Abad","Val de Santo Domingo","Miraflores de la Sierra","Riudoms","el Morell","La Adrada","La Guardia","Cabanas de la Sagra","Guadamur","La Pueblanueva","Petres","Cubas","Perales del Puerto","Los Navalmorales","La Orden","Llagostera","El Garrobo","Consell","Huelma","Benavente","Huete","Langa de Duero","Ares","Villares del Saz","Ayamonte","Alosno","Sant Carles de la Rapita","Beniarjo","Moya","La Roca del Valles","Avia","Villaviad","Cecenas","San Felices","Lamadrid","Navia","Capella","Bellpuig","Villar de Gallimazo","Valdepolo","Carcastillo","Miranda del Castanar","Santa Marta de Tormes","Malpica","La Calzada de Oropesa","Torre del Mar","Sufli","Casas Viejas","Sestao","Galdakao","Alhama de Granada","Villacarrillo","NavÃ s","Olite","Illora","Artesa de Segre","Luzaide","Colmenar de Oreja","Vallbona d'Anoia","Gata de Gorgos","Alcover","Deba","Constanti","Aguilar","Candeleda","Manilva","San Martin","Yunquera de Henares","Ador","Amer","Castejon del Puente","Santa Fe","Santa Eulalia","Brea de Aragon","Santiago de la Ribera","PadrÃ³n","Flix","Calasparra","Villafranca","la Nucia","Berango","Macanet de la Selva","Mula","Luyando","Torrefarrera","Casarrubios del Monte","Soto","Lebrija","Valleseco","Los Yebenes","Salcedo","Castellbisbal","Neda","Espiel","Recas","Santa Brigida","Balsareny","Humanes","Alcazar de San Juan","Lagartera","Carbajal de la Legua","Teruel","Ezcaray","Tafalla","Alora","Torrox","Sotopalacios","La Pobla de Claramunt","Cardona","Camponaraya","Cortes de la Frontera","La Vinuela","Velilla de San Antonio","La Selva","Verges","Mira","Llerena","Belgida","Navaridas","La Codosera","Pinos del Valle","Sanlucar la Mayor","Los Montes","Espirdo","La Calzada","Mondonedo","Orellana la Vieja","Olvega","Villaquilambre","Castillo del Romeral","Sabucedo","Llinars del Valles","Mora","Huetor-Tajar","Albatera","Figueras","Monteagudo","Sueca","Sedavi","Esplugues de Llobregat","Tarrega","Torredembarra","La Riba","Alfondeguilla","Altet","La Puebla de Almoradiel","Herencia","Zaratamo","Chauchina","Esteiro","Botorrita","Chiclana de Segura","Urnieta","Renedo","Villacastin","Hornachuelos","Mallen","Cogollos","Quincoces de Yuso","Odon","Rosell","Sancti Spiritus","Santiurde de Toranzo","Bujaraloz","Belicena","Almendralejo","Trillo","Villamayor","La Torre","San BartolomÃ© de Tirajana","Castelseras","La Palma del Condado","la Bisbal del Penedes","Llano","Mondariz","Monterroso","Hinojosa del Valle","Guimar","Guarena","Otero","Ribera del Fresno","Cruz","Mezalocha","S'Arenal","Perillo","Guardamar del Segura","Valderrobres","Sesena Nuevo","Talamanca de Jarama","Puerto del Rosario","Uceda","Alfambra","La Arena","Calo","Orpesa/Oropesa del Mar","Abaran","Luarca","Olazagutia","Yuncler","Igueste","Zarzalejo","Villa","MonÃ²ver","Lucillos","Villacondide","La Antilla","Zarzuela","Pereiro de Aguiar","Muros de Nalon","Cati","Arnedillo","La Paz","La Carolina","El Tablero","Ojen","La Granja","Teror","Marmolejo","Mollina","MazarrÃ³n","Diezma","Limones","Bornos","Los Santos de la Humosa","Malpartida de Plasencia","Santa Maria del Campo","Palos de la Frontera","Roales","Benatae","Olmedo","Guadalcazar","Maside","La Florida","Ricla","Estellencs","Artajona","Fitero","Fortuna","Tudela de Duero","El Toro","Quintes","Cangas del Narcea","Corbera","Villarejo","Molina de Aragon","Alegria","Arenas de San Pedro","Villamayor de Santiago","Mercadal","Higuera la Real","Villanueva de la Torre","Sabero","La Fuente de San Esteban","Albujon","Membrilla","Almodovar del Campo","Pola de Lena","Cruilles","Asteasu","Tobarra","Useras","SalobreÃ±a","Algadefe","Lliria","Baina","Monesterio","Benagalbon","Astigarraga","Alhama de Murcia","Cerro Muriano","Faura","Gata","Cuadros","Palmeira","El Corrillo","Santa Marta de Ortigueira","Sierra","Plan","Plentzia","Moriscos","Barbate","Santa Cruz de la Zarza","Benissa","Galdames Beitia","Herrera del Duque","Santa EugÃ¨nia de Berga","Cifuentes","Montijo","Paradela","Alcanadre","Pinseque","Cantimpalos","La Secuita","la Febro","Ouces","Vilafant","Mura","Torrecilla de Alcaniz","Tuineje","Ibarruri","Cuntis","Cedillo del Condado","Yaiza","Ledrada","Terradillos","Camas","Muros","Malpica","Villarrubia de los Ojos","Sant Andreu de Llavaneres","Fornells de la Selva","Vejer de la Frontera","Agaete","Guamasa","San Luis de Sabinillas","Comares","La Serna","Villaralbo","Navatejera","La Granada","Albuixech","Museros","Massamagrell","La Plana","Torrent","Aldaia","Villarreal de Alava","Vilavella","Burjassot","Benimodo","La Mancha Blanca","Berastegui","Zuazo de Vitoria","Olaberria","Mendaro","Anoeta","Orio","Berriz","La Puebla de Arganzon","Gizaburuaga","Moraleja de Enmedio","Villacarriedo","San Jorge","Lucena del Puerto","San Martino","El Raal","Cenicero","Fuenmayor","Santo Domingo de la Calzada","Berriobeiti","Marcilla","Aduna","Fuentes de Ebro","Vilamaniscle","Navacerrada","Santa Maria del Paramo","Norena","Brafim","Cabanas","Monzalbarba","Rincon","Cabezo de Torres","Garachico","Fasnia","Segura de la Sierra","Riba","Anglesola","Juneda","Barranda","la Nou de Bergueda","Caldelas","Catoira","Lillo","Allariz","Coles","La Seu d'Urgell","Azagra","Campohermoso","Maria de la Salut","Coria del RÃ­o","Aldealsenor","Golmayo","Bigues i Riells","Torrelletas","Cidones","San Feliz de Torio","Medrano","PremiÃ  de Dalt","Guenes","Tombrio de Arriba","SamalÃºs","Yebes","Grove, O","Encinasola","Sevares","Valverde del Fresno","Martin","Zahara de los Atunes","Fortia","Mutiloa","Illana","Checa","Rios","Montfulla","Torres de Segre","Llanes","Carrascal de Barregas","Martinet","San Anton","Suances","Selaya","Sotogrande","Azpeitia","Crevillent","Morro del Jable","Albalat dels Sorells","Sepulveda","La Virgen del Pilar","Costur","Andeiro","La Pedrera","Valdezufre","Puigpelat","Aldeanueva de Ebro","La Campana","Marugan","Pantoja","Puerto Lumbreras","Navamorcuende","Santa Uxia de Ribeira","La Perdoma","Casillas de Coria","Urduna","Motilla del Palancar","Henares","San Juan del Puerto","Trazo","Villanueva de Gallego","El Perello","Villaverde de los Cestos","Calders","Almonacid de Zorita","Ipazter","Alonsotegi","San Pedro","Villanueva de Gomez","Los Dolores","Benavarri / Benabarre","Sixto","Agoncillo","Santovenia de Pisuerga","Cuellar","Tias","Lago","Fuente el Saz","Oliva de Merida","Sant Jordi","El Viso del Alcor","Pedralba","Benisuera","Tarazona","Anguciana","Algezares","Cervera del Rio Alhama","Castellar de la Frontera","Mombeltran","La Granja de San Vicente","Bicorp","Umbrete","Losar de la Vera","Traiguera","Chilches","Getaria","Aielo de Malferit","CassÃ  de la Selva","Chiloeches","Valdeaveruelo","Verdu","Perafort","Castillo de Locubin","O Grove","Cilleros","Lobios","L'Olleria","Gamiz","AvinyÃ³","Arteixo","Madronera","Grijota","Perdiguera","Cazalegas","Garciaz","Canillas de Albaida","Son Servera","Torija","Moscas del Paramo","Corrales","ArtÃ ","Ejea de los Caballeros","la Riera de Gaia","Pauels","Antigua","Almargen","Piedra","Pontos","Encinas Reales","Elgorriaga","Pajara","Caldes de Malavella","Agullana","Bullas","Alba de Tormes","Carrizo de la Ribera","Pont de Molins","Sagra","Benavides","Casillas del Angel","Vilacolum","Los Rosales","Penaflor","Callosa de Segura","Itza","Vallada","Babilafuente","Aldeaseca de Armuna","L'Albir","Madridanos","Aldeamayor de San Martin","Briviesca","Fabero","Catral","Vicolozano","Fresno de la Vega","Puentenansa","Ramales de la Victoria","Camarma de Esteruelas","Genoves","Nivar","Montagut","Portillo","Ondara","Olocau","Jorba","Tineo","Navas del Rey","Corvera","Puebla del Maestre","Corvera","Fuente-Alamo","Valsequillo de Gran Canaria","Camos","Pruvia","Dolores","Argamasilla de Calatrava","Magan","Torres","El Abrigo","Villasevil","Cruces","BonmatÃ­","Almansa","Mont","Pulgar","Antas","Almazcara","Sarinena","Barros","Rasines","Almudebar","Trespaderne","Jerez de los Caballeros","Puentelarra","Begis","Morella","Argonos","Porto Cristo","Ferreira","San BartolomÃ©","Dalias","Jabaga","Yuncos","Nalda","Villanueva de Cordoba","Cubillos del Sil","Infantes","Carabana","Begijar","Talarn","Agramunt","Villamartin","Sarroca de Lleida","Rodonya","Morata de Tajuna","Castandiello","San Blas","Matapozuelos","La Espina","Caso","Broto","Mata","Zubiri","Carral","Meano","Borox","Novallas","Laudio-Llodio","Mentrida","Mutriku","Grazalema","Berantevilla","Corral de Almaguer","Hostalric","Abanilla","Alburquerque","Rafelcofer","Lorqui","Gaceta","Pelayos de la Presa","San Clemente","Gojar","Sant Marti de Malda","Cabanaquinta","Torre del Campo","Chinchilla de Monte Aragon","La Penilla","Castellvi de Rosanes","Seva","Planes","La Pedraja de Portillo","Zuera","Alagon","Corgo","Torredonjimeno","Ron","Avinyonet del Penedes","Les Fonts","Alfara de Algimia","Siguenza","Brihuega","Castrogonzalo","Calamonte","Fuensanta de Martos","Aldeanueva","Lajares","Torrelaguna","Monachil","Vitigudino","Horcajo de las Torres","Nestares","Somahoz","San Miguel de las Duenas","Alfarrasi","Sax","Berriatua","La Garganta","Bellcaire d'Emporda","San Rafael","Tijarafe","Amavida","San Isidro","Bollullos par del Condado","Periedo","Oruna","Ajo","Ortiguero","Cudillero","SangÃ¼esa","Echarri-Aranaz","Pozo de la Serna","Campo de Criptana","Pedro Munoz","Villar","Sant Pere de Riudebitlles","Viladrau","Aranguren","Llofriu","Andosilla","Lezama","Platja d'Aro","Albendin","Canete de las Torres","Pueyo de Santa Cruz","Esplus","Arico","AnglÃ¨s","Pinar","Villa del Rio","AlmadÃ©n","Cox","Jacarilla","Bogajo","Cornellana","Villaseca de la Sagra","Quintanar de la Orden","Villamanrique","Santa Cruz de Mudela","Chozas de Canales","Mosqueruela","Zorraquin","Zaratan","La Canada de San Urbano","La Arena","Aznalcollar","l'Escala","Benidoleig","Burguillos","Cueto","Villanueva de la Reina","Matamorosa","Cadiar","Monda","Bembibre","Villanueva del Ariscal","Bedmar","Capmany","Santa Olalla","Pezuela de las Torres","Beranga","Collado","Sigueiro","Carcabuey","el Catllar","Masllorenc","SÃºria","La Frontera","Escurial","Cicero","Bolanos de Calatrava","Torralba de Calatrava","Malagon","Belvis de Jarama","Puebla de la Calzada","Montefrio","Torrenueva","Xunqueira de Espadanedo","Aguilafuente","Olula de Castro","Benahadux","Torremocha del Campo","Albelda de Iregua","Tremp","Arevalo","Boimorto","Berguenda","El Arahal","Terrer","Sarria","Molinos de Duero","Luzmela","Riaza","Pasaia","Trasona","Illueca","Touro","Vilanova de Arousa","Lodosa","San Adrian","Legasa","Cizur Menor","Bara","Mungia","Medina de Pomar","Abadino","Usansolo","Ciriza","Gorriti","Villacuende","Revellinos","Bustarviejo","La Victoria","Millares","Sollana","Nino Perdido","Caserio El Campello","Forua","Landa","Villanueva","Villafranqueza","Santo Angel","Pedro","Palmones","Los Barrios","La Canada","Valverde","San Roman","Ontinyent","La Nora","Guadalupe","Balazote","Bejar","Ciudad Rodrigo","Astorga","Montesa","L'Alcudia de Crespins","Manuel","Quart de Poblet","Caudete","Mortera","Valdecilla","Ontur","Naquera","Loriguilla","Fuentealbilla","Benijofar","Daimiel","el Camp de Mirra","Orce","Galera","Mequinensa / Mequinenza","Salinas","Solsona","Padul","Campo","Sangonera la Verde","Calig","Santa Maria","Gelsa","Pedrola","Torralba de Oropesa","Venturada","Pomar","Alfajarin","Canet d'En Berenguer","Trebujena","Espera","Benifato","Tamaraceite","San Cristobal","La Felguera","La Baneza","Cigales","Fuentes de Valdepero","Linyola","Olivella","Cerdanyola del VallÃ¨s","Cebolla","Villaviciosa","Sotillo de la Adrada","Cuevas de San Marcos","Cajar","La Herradura","Huetor Santillan","Dodro","Oleiros","Sodupe","Placencia","Legorreta","Elgoibar","Landa","Azkoitia","Compostela","Rendar","Orial","Berron","Villaviciosa","Ribadesella","Obanos","Peralta â€“ Azkoien","Cadreita","Betelu","Mollo","Serrateix","Bellver de Cerdanya","Siete Iglesias de Trabancos","San Martin de Unx","Lazagurria","Eltzaburu","Tordillos","Valcabado","Garrigas","Guijuelo","Robleda-Cervantes","Trevino","L'Ampolla","Bordils","Pedrosillo de Alba","Gozon de Ucieza","Mataluenga","la Pobla de Montornes","Santa Fe de Mondujar","Tarifa","Bajamar","Alozaina","La Playa de Arguineguin","Salvatierra","Marzagan","Tejina","Sierra de Luna","La Rambla","Gamonal","Las Hortichuelas","El Puerto","Nueva","GibraleÃ³n","El Sotillo","Fuentes","Aceuchal","Villanueva de Perales","Real de Gandia","Venta de Banos","Orusco","Rajadell","San Nicolas del Puerto","Tenteniguada","Pescador","Santa Eulalia","Hornachos","Velilla","Borben","Guejar-Sierra","Valdepenas de la Sierra","Valderrubio","El Torno","Brazatortas","Granja de Rocamora","Almazan","Guadalupe","La Solana","Competa","Pruna","Tous","Castellar de Santiago","Almassera","Villarrubia","Calonge","Montillana","Montejicar","Sancibrian","Elechas","Pontejos","Colinas de Trasmonte","Lanaja","Pioz","Calahonda","Moncofar","Botarell","La Calzada de Calatrava","Cabezarrubias del Puerto","Astrain","Ullastrell","Garraf","Los Angeles","Gautegiz Arteaga","la Baronia de Rialb","La Torre","Castell de Ferro","Alpicat","Cabeza del Buey","Navezuelas","Capsec","Ponts","La Pola de Gordon","Valdeavero","Sarandones","Miono","Hinojedo","Los Silos","Titulcia","Villabalter","Campanario","Beniarbeig","Calaf","Berrobi","Horche","Miranda de Arga","Castropol","Astudillo","Daroca","Agreda","Vallmoll","El Burgo de Ebro","Pozo de Guadalajara","Campuzano","Ruente","Barcena de Cicero","Montmajor","Benifairo de les Valls","Abegondo","Maceira","Santo Domingo","La Aljorra","Riumors","Santa Cristina de Aro","Camprodon","CampdevÃ nol","Llers","Peratallada","Vila-seca","Fuente el Fresno","Benamargosa","Lerma","San Pedro","Colera","Ordis","Gordon","Outes","Posadas","El Palmar de Troya","Guillena","Villanubla","Fuentes de Jiloca","Rincon de Soto","El Provencio","Constantina","La Puebla de los Infantes","Los Llanos de Aridane","Altura","Rubielos de Mora","Valmojado","Can Picafort","San Juan","Galizano","Puente Viesgo","Nembro","Valverde del Majano","Banugues","Langa","Arrubal","Curro","Villanueva de Azoague","Las Navas de la Concepcion","Perafita","la Granadella","Serena","Gaucin","Villanueva del Rio","San Ildefonso","Peralejo","Ourense","Cartelle","Pastrana","El Casar","Lanjaron","Herrera","Maria de Huerva","Villarluengo","Cebreros","Iniesta","Dilar","Redovan","La Raya","Montroy","Para","Pasai San Pedro","Benacazon","Monforte del Cid","Agost","Barbarroja","Castilleja de Guzman","Esparreguera","Espinardo","Roses","Los Palacios","Torrefeta","Bellvei","San Vicente","Arnuero","Ayegui","Almuna","Chapela","Salvatierra de Mino","Luou","Vilasantar","A Pobra do Caraminal","Camarassa","Arroyal","Alza","Lezo","Golmes","Central","Ministerio","El Pedernoso","Villalpardo","Hondon de las Nieves","Rus","Huerto","Panillo","Pinos Puente","Otura","Astrabudua","Fuenterrabia","Catadau","Cala Ratjada","Carbajosa de la Sagrada","El Grao","Carpesa","Rafal","Celeiros","Santiponce","Pedrosillo el Ralo","Lijar","Santa Cristina","Adrall","Benicolet","Beniel","Belvis de la Jara","Parres","Santa EulÃ lia de Riuprimer","Hernialde","Poboleda","Comillas","Paredes de Nava","Calatorao","Hondon de los Frailes","Castuera","Alfara del Patriarca","Poris de Abona","Isora","Illa","Navas de Riofrio","Cetina","Valpalmas","Senija","Tahiche","San Fernando","Artenara","San Vicente de Alcantara","Cervo","Pulianas","Panticosa","Turis","La Cabrera","Oza de los Rios","Alcala del Obispo","Villanueva del Fresno","Sant JuliÃ  de Vilatorta","Mota del Marques","Fregenal de la Sierra","Segorbe","Montalban de Cordoba","Alhambra","Villanueva de la Jara","Miguel Esteban","Pozoamargo","s'ArracÃ³","Sardina","Querol","La Lantejuela","Villamanrique de la Condesa","Isla Becoa","Montealegre del Castillo","Sudanell","Tora de Riubregos","Madrigueras","Redes","Soto de Cerrato","Campina","Torroella de Fluvia","Saamasas","Negreira","Navahermosa","Medio","Campins","Salobral","Caspe","La Torre","Puebla de Don Fadrique","La Canalosa","Busot","Alhama de Aragon","PulpÃ­","Bitem","Hijar","Guzman","Padilla del Ducado","Arca","Buenache de Alarcon","Noves","Valdetorres","Vilatenim","Sant Feliu de Llobregat","la Pobla de Mafumet","PuigcerdÃ ","Algodonales","Mejorada","Algarrobo","La Mamola","Velez-Rubio","Rebolledo","AlcalÃ¡ de los Gazules","El Hoyo de Pinares","Valle de Oro","Macael","Colonia de San Pedro","Soneja","Sobradiel","Hurchillo","Villa de Don Fadrique","El Alamo","O Mazo","Quintana de la Serena","Ontinena","Moreda","Nuez de Ebro","Hospital","Cardenal","Canar","Neda","Celeiro","Boceguillas","La Matanza de Acentejo","San Vicente de Leon","Seoane","Deustu","Arroyo del Ojanco","Canal","Vilaplana","Olivares","la Vall del Bac","Domingo Perez","Santa Marina del Rey","Tiagua","Nava de la Asuncion","Meira","Zahinos","Trabada","Villahermosa","Miajadas","Teba","Caneja","Bigastro","Los Corrales","Las Ventanas","Epila","Luceni","Grisen","Aroche","El Cuervo","El Coronil","Sobremazas","Valdetorres de Jarama","A Cidade","Argelaguer","La Floresta Pearson","Villalonga","Espolla","Lousame","Segura","Polan","Los Rios","Guevejar","Caborana","Ujo","Ziga","Nora","La Gineta","Triana","Blancos","Parada","Lama","Gargallo","Borja","La Luisiana","Huevar","Beznar","Fuensanta","Lires"
,"Austria","Vienna","Kapfenberg","Kirchham","Hohenzell","Gmunden","Molln","Judendorf","Ebersdorf","Hinterstoder","Sarleinsbach","Sankt Michael im Burgenland","Bad Ischl","Salzburg","Linz","Fieberbrunn","Graz","Seiersberg","Hohenau","Brixen im Thale","Schwaz","Maria Enzersdorf","Tulln","Hartkirchen","Hermagor","Imst","Tarrenz","Jerzens","Plangeross","Wilhelmsburg","Melk","Korneuburg","Giesshubl","Stockerau","MÃ¶dling","Mondsee","Saalfelden am Steinernen Meer","Weiz","Weinburg am Sassbach","Feldbach","Waidhofen an der Ybbs","Seitenstetten Markt","Schweiggers","Weitra","Wallern an der Trattnach","Neumarkt im Hausruckkreis","Sankt Florian","Wartberg an der Krems","Taufkirchen an der Trattnach","Zell an der Ybbs","Kopfing im Innkreis","Pottendorf","Weigelsdorf","Klosterneuburg","Vosendorf","Markgrafneusiedl","Munchendorf","Pillichsdorf","Pichling bei Stainz","Zettling","Stainz","Frohnleiten","Lannach","Deutschlandsberg","Unterrohr","Pischelsdorf in Steiermark","Kindberg","Fehring","Neunkirchen","Oberkohlstaetten","Wiener Neustadt","Grunbach am Schneeberg","Ternitz","Pitten","Marktl","Parndorf","Ollern","Schonkirchen","Strasshof an der Nordbahn","Traiskirchen","Mauerbach","Pettnau","Schwoich","Aschau","Aldrans","Jochberg","Obernberg am Brenner","Wels","Rubring","Enzenkirchen","Lochen","Aschach an der Donau","Klagenfurt","Woelfnitz","Obsteig","Kirchbichl","Innsbruck","Schoenberg im Stubaital","Fulpmes","Freistadt","Walding","Ried im Innkreis","Luftenberg an der Donau","Feldkirch","Bregenz","Hochst","Lustenau","Wallsee","Pochlarn","Wieselburg","Horn","Leoben","Weisskirchen in Steiermark","Obdach","Muerzhofen","Gross","Dietersdorf am Gnasbach","Stein an der Enns","Fohnsdorf","Murfeld","Stainz bei Straden","Gratkorn","Villach","Heimschuh","Wolfsberg","Althofen","Buchkirchen","Neumarkt an der Ybbs","Gunskirchen","Neumarkt im Muhlkreis","Zipf","Eferding","Wernstein am Inn","Gurten","Esternberg","Niederneukirchen","Neuhofen","Attnang-Puchheim","Schardenberg","Kirchschlag bei Linz","Steyr","Aistersheim","Pettenbach","Siezenheim","Neukirchen am Walde","Hochleithen","Ringelsdorf","Baernbach","Koflach","Krems","Amstetten","Weitersfeld","Amaliendorf","Emmersdorf an der Donau","Grafenworth","Kienberg","Neudorf bei Staatz","Waldenstein","Poelten","Kalsdorf bei Graz","Wagna","Muerzzuschlag","Lanzenkirchen","Bad Fischau","Kilb","Wiesmath","Eisenstadt","Kufstein","Hatting","Oberperfuss","Telfs","Bad Goisern","Strobl","Hallein","Hard","Dornbirn","Rankweil","Lauterach","Klosterle","Zirl","Admont","Hartberg","Prabach","Trieben","Grossweikersdorf","Laa an der Thaya","Gaflenz","Dietach","Altenberg bei Linz","Engerwitzdorf","Ulrichsberg","Ried in der Riedmark","Feldkirchen an der Donau","Mehrnbach","Scharnstein","Oehling","Oberrohrbach","Sommerein","Horsching","Werfenweng","Seefeld in Tirol","Bad Gleichenberg","Lech","Serfaus","Muerzsteg","Sieghartskirchen","Harbach","Kaindorf","Gleisdorf","Purkersdorf","Markt Allhau","Deutschfeistritz","Sebersdorf","Straden","Lassnitzhohe","Unterwaltersdorf","Jois","Feldkirchen in Karnten","Feistritz","Stein im Jauntal","Strasswalchen","Anif","Tiefgraben","Perchtoldsdorf","Schwarzenau","Himmelreich","Gaaden","Horbranz","Hopfgarten im Brixental","Tirol","Ernst","Grimmenstein","Bergheim","Ansfelden","Herzogenburg","Schwechat","Hollabrunn","Unterlamm","Gnas","Weibern","Hohnhart","Aurolzmunster","Puch bei Hallein","Fugen","Brunn am Gebirge","Rannersdorf","Ainet","Traun","Hof am Leithaberge","Weikersdorf am Steinfelde","Zillingtal","Zillingdorf","Hall","Absam","Hall in Tirol","Tribuswinkel","Gablitz","Breitenfurt bei Wien","Reith im Alpbachtal","Worgl","Ellmau","Thaur","Kirchberg in Tirol","Rum","Kramsach","Mayrhofen","Stattegg","Bad Voslau","Altach","Gotzis","Altenhof am Hausruck","Gallspach","Bad Schallerbach","Grieskirchen","Schwanenstadt","Ohlsdorf","Pichl bei Wels","Baden bei Wien","Vocklabruck","Leonding","Ampfelwang","Scharding","Perg","Unterjoch","Holzhausen","Natternbach","Bad Gastein","Wals","Saalbach","Anthering","Sankt Johann im Pongau","Bad Hofgastein","Hinterglemm","Obertauern","Zell am See","Stubach","Lavant","Tristach","Sillian","Waidring","Lermoos","Vent","Oberau","Matrei in Osttirol","Rinn","Berwang","Pettneu","OEtztal-Bahnhof","Bruggen","Pertisau","Kuehtai","Finkenberg","Ischgl","Ried im Zillertal","Zell am Ziller","Nauders","Alpbach","Walchsee","Ehrwald","Gschnitz","Riezlern","Wald am Arlberg","Schoppernau","Galtur","Gargellen","Bludenz","Bartholomaberg","Krumpendorf","Mittelberg","Neustift","Bizau","Im Brand","Schrems","Bad Pirawarth","Eggenburg","Sankt Polten","Baumgarten im Burgenland","Wundschuh","Glan","Poertschach am Woerthersee","Oberaichwald","Doebriach","Maria Saal","Millstatt","Kleinkirchheim","Bodensdorf","Velden am Woerthersee","Sirnitz","Grafenstein","Sankt Ulrich bei Steyr","Sipbachzell","Ennsdorf","Pucking","Neusiedl bei Guessing","Raab","Reichendorf","Miesenbach","Ebbs","Wangle","Hofen","Poysdorf","Untersiebenbrunn","Sitzenberg","Obersiebenbrunn","Purgstall","Wurmbrand","Asperhofen","Axams","Steinach am Brenner","Nussdorf","Gallneukirchen","Klein-Harras","Kirchberg am Wagram","Schwadorf","Oberkirchbach","Bisamberg","Wiener Neudorf","Oberneukirchen","Kremsmunster","Seewalchen","Oberkappel","Andorf","Schiefling am See","Voelkermarkt","Landskron","Purgg","Leutschach","Ebenthal","Arriach","Gosdorf","Hohenems","Mader","Schruns","Rohrau","Kierling","Oed","Oggau","Hainburg an der Donau","Reisenberg","Steinhaus am Semmering","Steinabruckl","Donnerskirchen","Bruck an der Leitha","Wulkaprodersdorf","Gols","Aichbach","Lindenberg","Vocklamarkt","Lichtenberg","Micheldorf in Oberoesterreich","Grein","Mairhof","Gross-Enzersdorf","Hinterbruehl","Tattendorf","Traboch","Spielberg bei Knittelfeld","Tauplitz","Ramsau im Zillertal","Grosspesendorf","Passail","Hohenburg","Knittelfeld","Bruck an der Mur","Enns","Ungenach","Asten","Oftering","Laakirchen","Weissenbach am Lech","Pfunds","Graen","Mathon","Haiming","Panzendorf","Scheffau am Wilden Kaiser","Schoenau","Saint Anton","Hochgurgl","Wenns","KitzbÃ¼hel","Hoehe","Maurach","Solden","Leutasch","Vorderlanersbach","Lienz","Niederachen","Hinterthiersee","Achenkirch","Kossen","Bichlbach","Uderns","Sierndorf","Altlengbach","Langenlois","Schongrabern","Litschau","Guntramsdorf","Afritz","Friesach","Faak am See","Latschach","Aifersdorf","Bleiberg ob Villach","Sankt Martin am Techelsberg","Ossiach","Winkl","Seeboden","Annenheim","Ostermiething","Rauris","Bramberg am Wildkogel","Filzmoos","Pichl","Heissingfelding","Plankenau","Karteis","Grossarl","Reitdorf","Grodig","Kremsdorf","Moosburg","Strau","Mutters","Maildorf","Arnoldstein","Viktring","Petersdorf","Markt Neuhodis","Liezen","Mank","Sankt Georgen am Ybbsfelde","Oberndorf an der Melk","Boheimkirchen","Pyhra","Randegg","Karlstetten","Lichtenau","Erlauf","Maiersdorf","Ebergassing","Grafenbach","Neudorfl","Neckenmarkt","Sollenau","Langenzersdorf","Katzelsdorf","Krottendorf bei Ligist","Sankt Lorenzen im Muerztal","Unterpurkla","Falkenburg","Geras","Spitz","Heidenreichstein","Rotenbach","Petronell-Carnuntum","Kirchschlag","Grieselstein","Gattendorf","Kottingbrunn","Asparn","Sankt Wolfgang","Untergrub","Sankt Wolfgang","Schwertberg","Fuerstenfeld","Wettmannstatten","Tschagguns","Warth","Sankt Gallenkirch","Kreuz","Lochau","Gaschurn","Rottenmann","Guglwald","Haag am Hausruck","Burgkirchen","Werndorf","Grossraming","Thalheim bei Wels","Asberg","Pasching","Krenglbach","Haid","Ottensheim","Mitterdorf im Muerztal","Loipersbach","Unterweitersdorf","Pottenbrunn","Hohenberg","Gumpoldskirchen","Wollersdorf","Markt Piesting","Pfaffstatten","Laxenburg","Himberg","Neudorf bei Landsee","Leobendorf","Turnitz","Pressbaum","Biedermannsdorf","Wolfsgraben","Rekawinkel","Tullnerbach-Lawies","Gramatneusiedl","Maria Lanzendorf","Zwolfaxing","Hennersdorf","Trumau","Hofstetten","Unterradlberg","Muckendorf an der Donau","Ganserndorf","Hainfeld","Trautmannsdorf an der Leitha","Bad Radkersburg","Waltersdorf an der March","Lutzmannsburg","Gotzendorf an der Leitha","Westendorf","Oberwart","Weiden am See","Unterpullendorf","Am See","Winden am See","Purbach am Neusiedlersee","Oslip","Mattersburg","Kundl","Lenzing","Stadl-Paura","Abtenau","Radstadt","Eben im Pongau","Leogang","Gallbrunn","Lilienfeld","Maria Taferl","Ybbs an der Donau","Gosing","Bernstein","Rappoltenkirchen","Zuers","Dechantskirchen","Gnadenwald","Mieming","Getzersdorf","Marchtrenk","Fiss","Feuchten","Oberweis","Mauthausen","Reichenau im Muhlkreis","Hagenberg im Muhlkreis","Leibnitz, Styria","Bruck an der Grossglocknerstrasse","Uttendorf","Fusch an der Glocknerstrasse","Kaprun","Altenberg","Piesendorf","Maria Alm am Steinernen Meer","Werfen","Sulzau","Gaisberg","Goldegg","Lend","Schwarzach im Pongau","Tamsweg","Margarethen am Moos","Burmoos","Seeham","Ebensee","Mattsee","Seekirchen am Wallersee","Thalgau","Hof bei Salzburg","Koppl","Eugendorf","Ebenau","Tiefenbach","Elixhausen","Oberndorf bei Salzburg","Kuchl","Golling an der Salzach","Lungotz","Altenmarkt im Pongau","Flachau","Wagrain","Sankt Veit im Pongau","Oberalm","Henndorf am Wallersee","Fuschl am See","Lamprechtshausen","Sausenstein","Deutsch-Wagram","Obergurgl","Zams","Landeck","Neusiedl am See","Rohrbach am Steinfelde","Laab im Walde","Statzendorf","Gerasdorf am Steinfelde","Walbersdorf","Reichenau an der Rax","Felixdorf","Mollersdorf","Hirtenberg","Kennelbach","Parschlug","Hausmannstatten","Wolfurt","Koblach","Klaus","Fussach","Muntlix","Elsbethen","Mariazell","Leobersdorf","Hofstatten an der Raab","Grobming","Innermanzing","Enzesfeld","Hohentauern","Maria Worth","Rosenbach","Freienstein","Wattens","Leitring","Ligist","Stiegl","Kaltenbrunn","Gratwein","Eggersdorf bei Graz","Strassengel","Ferndorf","Wildon","Spittal an der Drau","Sankt Veit an der Glan","Weiler","Raaba","Voitsberg","Lofer","Haidershofen","Unterrohr","Neukirchen an der Vockla","Frankenburg","Oberaich","Sankt Michael in Obersteiermark","Petzenkirchen","Edelschrott","Mannsworth","Garsten","Kirchdorf an der Krems","Sulz","Hadersfeld","Wolkersdorf im Weinviertel","Berndorf","Leisach","Reith bei Seefeld","Bad Hall","Wiesing","Kritzendorf","Riedenthal","Hornstein","Biberbach","Langenstein","Vorchdorf","Puchenau","Bad Kreuzen","Traunkirchen","Neukirchen","Judenburg","Scheifling","Murau","Teufenbach","Apfelberg","Kapfing","Barwies","Tumeltsham","Hinterwaldberg","Passthurn","Sankt Lorenzen","Aigen","Hipping","Eberndorf","Turrach","Sankt Andrae","Augsdorf","Hirschegg","Bezau","Miesenbach","Schwarzau am Steinfelde","Semmering","Pirka","Bad Gams","Steinerkirchen an der Traun","Leonfelden","Soll","Igls","Haimingerberg","Gerlos","Patsch","Kappl","Kematen in Tirol","Oetz","Jungholz","Stein an der Donau","Glinzendorf","Liebenfels","Wieting","Vordernberg","Kobenz","Lieboch","Krieglach","Ludesch","Nuziders","Au","Zistersdorf","Guntersdorf","Ort im Innkreis","Weilbach","Hellmonsodt","Eberschwang","Altheim","Labach","Lembach im Muhlkreis","Sulz im Wienerwald","Zwentendorf","Schleinbach","Gerasdorf bei Wien","Hintersdorf","Mettmach","Ach","Alberndorf in der Riedmark","Dellach","Wilhering","Gaspoltshofen","Scharten","Waxenberg","Alkoven","Meggenhofen","Sankt Pankraz","Freilassing","Desselbrunn","Plescherken","Flattach","Gailitz","Kleinbergl","Gruner Baum","Steyregg","Isper","Huetten","Sernau","Niederwolz","Schwanberg","Haller","Finsing","Sankt Oswald","Kleinstubing","Leiten","Obertrum am See","Stans","Strassen","Moos","Sankt Valentin","Spratzern","Keutschach am See","Rohrmoos","Schladming","Stuhlfelden","Mittersill","Hollersbach im Pinzgau","Vigaun","Dorf","Krispl","Tadten","Drassmarkt","Riedlingsdorf","Wallern im Burgenland","Siegendorf im Burgenland","Pottsching","Sankt Andra am Zicksee","Mannersdorf an der Rabnitz","Reutte","Kappern","Weisskirchen an der Traun","Regau","Sankt Georgen im Attergau","Kefermarkt","Neuhofen an der Krems","Ebreichsdorf","Peuerbach","Bruendl","Ternberg","Innerkrems","Sankt Kanzian","Stadelbach","Kuehnsdorf","Sachendorf","Eisenberg","Sauerbrunn","Payerbach","Hohenwarth","Bad Tatzmannsdorf","Stegersbach","Waidmannsfeld","Roppen","Mosern","Meisten","Schlins","Fischbach","Weissenkirchen in der Wachau","Altwaidhofen","Kaumberg","Hausbrunn","Zwettl Stadt","Laaben","Liesfeld","Sankt Ruprecht an der Raab","Sierning","Neukirchen an der Enknach","Gramastetten","Edlitz","Kittsee","Stoob","Sankt Martin am Ybbsfelde","Michelbach Markt","Watzelsdorf","Dross","Gfohl","Judenau","Konigstetten","Lobenstein","Opponitz","Freinberg","Waizenkirchen","Thalling","Rothis","Schwarzach","Wordern","Frauenkirchen","Purbach","Grafenschlag","Gostling an der Ybbs","Steinakirchen am Forst","Ulmerfeld","Gmund","Redlham","Sankt Agatha","Ernstbrunn","Puchberg am Schneeberg","Arbesthal","Fuernitz","Steindorf am Ossiacher See","Traunstein","Gerersdorf","Niederland","Tweng","Dorfgastein","Hinterburg","Madseit","Motz","Emberg","Mellach","Spital am Pyhrn","Eggendorf","Waltersdorf in Oststeiermark","Schonbuhel an der Donau","Wienerherberg","Tannheim","Grafenweg","Schwaigs","Haldensee","Hintertux","Oepping","Weng im Innkreis","Gurtis","Heiterwang","Siebenhirten","Maria-Anzbach","Knappenberg","Launsdorf","Lavamund","Vols","Brandberg","Braunau am Inn","Hofkirchen im Traunkreis","Feldkirchen bei Mattighofen","Feldkirchen bei Graz","Hollenthon","Pottelsdorf","Nenzing","Egg","Lichtenworth","Theresienfeld","Gunselsdorf","Vorau","Unterpremstatten","Lebring","Weissbriach","Eisbach","Peggau","Zeiselmauer","Kapelln","Frattingsdorf","Neumarkt in Steiermark","Kroatisch Minihof","Enzenreith","Gloggnitz","Furthof","Dalaas","Blindenmarkt","Zellerndorf","Grossebersdorf","Grossrussbach","Orth an der Donau","Ulrichskirchen","Engersdorf","Schoerfling","Neuzeug","Perwang am Grabensee","Attersee","Achensee","Gotzens","Inzing","Ernsthofen","Ebenfurth","Klingfurth","Potzneusiedl","Weppersdorf","Tobaj","Aspang Markt","Wurflach","Hausleiten","Herrnbaumgarten","Fliess","Sistrans","Nassereith","Telfes im Stubai","Pfons","Egg am Faaker See","Eberstein","Rangersdorf","Moellbruecke","Eisentratten","Koestenberg","Gaal","Ardning","Pinkafeld","Anger","Schwarzenberg am Boehmerwald","Buch bei Jenbach","Flinsdorf","Konigswiesen","Schalchen","Mauerkirchen","Neumarkt am Wallersee","Frankenmarkt","Mallnitz","Schutzen am Gebirge","Trausdorf an der Wulka","Deutschkreutz","Breitenbrunn","Edelstal","Mistelbach","Bad Blumau","Pregarten","Rosental","Dobersberg","Neulengbach","Poggstall","Weiten","Pinggau","Purgstall","Rudersdorf","Stuhlsdorf","Grossklein","Diepoltsham","Pinsdorf","Schlierbach","Eggendorf im Thale","Trofaiach","Heissberg","Jennersdorf","Berg","Satteins","Ehrenhausen","Thal","Riegersburg","Kollmitzberg","Gresten","Pernegg an der Mur","Aigen im Muehlkreis","Nesselwangle","Rotholz","Pillberg","Wimpassing im Schwarzatale","Niederalm","Leopoldsdorf","Bach","Erpfendorf","Gries","Lanersbach","Blumau","Kumberg","Neudau","Edt bei Lambach","Gugging","Mannersdorf am Leithagebirge","Wampersdorf","Obervellach","Zemendorf","Guessing","Bruckneudorf","Oberpullendorf","Zurndorf","Going","Mitterndorf an der Fischa","Thoerl","Breitenwang","Lechaschau","Bauer","Prinzersdorf","Nickelsdorf","Neufeld an der Leitha","Enzersdorf an der Fischa","Tschoeran","Toeschling","Durnstein","Eibiswald","Krumbach","Hernstein","Kanzelhoehe","Maglern","Troepolach","Hallstatt","Karl","Maria Buch","Paldau","Birgitz","Hoflein","Gaweinstal","Loimersdorf","Weikendorf","Bosendurnbach","Pischeldorf","Loosdorf","Marbach","Allhartsberg","Waidhofen an der Thaya","Traisen","Ruden","Feistritz an der Drau","Rosegg","Bruckl","Fernitz","Fladnitz im Raabtal","Wies","Polfing","Altendorf","Offenhausen","Herzogsdorf","Taufkirchen an der Pram","Niederdorf","Feld am See","Pattergassen","Taxenbach","Nussdorf am Haunsberg","Zell am Moos","Huttschlag","Vitis","Jagenbach","Altendorf","Hoheneich","Eisgarn","Steinhaus","Ried im Traunkreis","Obernberg","Munzbach","Waldzell","Munzkirchen","Gampern","Haibach ob der Donau","Dorfla","Heiligenkreuz am Waasen","Krumegg","Stubenberg","Marchegg","Aichdorf","Langenrohr","Steinerberg","Jeging","Alland","Sinabelkirchen","Rohrbach am Kulm","Mooskirchen","Unzmarkt","Bernhardsthal","Eckartsau","Bockfliess","Biedermann","Altmunster","Tieschen","Rieding","Grabelsdorf","Mandling","Ottenheim","Strass","Aggsbach","Nestelbach bei Graz","Wimpassing an der Leitha","Pottenstein","Ampass","Biberwier","Gosau","Schneeberg","Sankt Peter","Absdorf","Abtsdorf","Kirchdorf in Tirol","Schwendau","Stadtschlaining","Lichtenegg","Wolfau","Fischerndorf","Unterberg","Aufhausen","Eichgraben","Mollram","Schwarzau im Gebirge","Sankt Margarethen im Burgenland","Riefensberg","Windischgarsten","Kraig","Maria Elend","Haag","Naarn im Machlande","Maria Ellend","Wilfleinsdorf","Bad Deutsch-Altenburg","Raabs an der Thaya","Neidling","Gutau","Pram","Enzersfeld","Altenmarkt an der Triesting","Rauchenwarth","Steinfeld","Sachsenburg","Lendorf","Niederndorf","Gries am Brenner","Schmirn","Matrei am Brenner","Hadres","Maissau","Hochburg","Oberwolbling","Hadersdorf am Kamp","Atzbach","Maria Schmolln","Obergruenburg","Piberbach","Engelhartszell","Rohrbach in Oberosterreich","Ottendorf bei Gleisdorf","Doren","Sibratsgfall","Bad Erlach","Oberwaltersdorf","Staatz","Altenburg","Neutal","Monchhof","Katsdorf","Utzenaich","Poetting","Niederleis","Unterparschenbrunn","Auersthal","Baumkirchen","Thaya","Eggendorf","Ebendorf","Winzendorf","Piringsdorf","Kobersdorf","Klostermarienberg","Poysbrunn","Erpersdorf","Bleiburg","Ybbsitz","Kaltenleutgeben","Reifnitz","Burgschleinitz","Traismauer","Stams","Radfeld","Maria Lankowitz","Wartberg","Buch","Puch","Sankt Stefan im Rosental","Dobersdorf","Landegg","Stumm","Viktorsberg","Gortipohl","Krumbach Markt","Hochneukirchen","Marz","Seckau","Altlichtenwarth","Bergau","Gotzendorf","Pischelsdorf am Engelbach","Pabneukirchen","Rosental","Doblbach","Obritzberg","Gansbach","Schattendorf","Halbturn","Rosenau am Hengstpass","Grambach","Langeck im Burgenland","Waldkirchen am Wesen","Zeltweg","Ober-Grafendorf","Steg","Forst","Studenzen","Kottmannsdorf","Preding","Neuhofen an der Ybbs","Schachendorf","Pernitz","Goedersdorf","Geinberg","Reichraming","Rottenbach","Rutzenmoos","Mitterkirchen im Machland","Lassee","Nochling","Stettenhof","Warth","Hirm","Sankt Kathrein am Hauenstein","Wang","Zeillern","Gutenstein","Adnet","Muhlbach am Manhartsberg","Spillern","Watzendorf","Oberort","Grafendorf bei Stainz","Grafendorf","Zobing","Moosdorf","Bruck am Ziller","Regelsbrunn","Sooss","Wolfpassing","Hautzendorf","Hart","Lambrechten","Volders","Guttaring","Griffen","Foederlach","Koetschach","Haag","Japons","Gofis","Tal","Gollersdorf","Niederkreuzstetten","Toesenssteinach","Schlitters","Meiningen","Bludesch","Thuringen","Sulzberg","Inzersdorf im Kremstal","Semriach","Gaming","Pachfurth","Drassburg","Fischamend Dorf","Kremsbruecke","Niederwaldkirchen","Loretto","Trasdorf","Horersdorf","Friedburg","Grafendorf bei Hartberg","Steinberg bei Ligist","Deutsch Goritz","Kirchbach in Steiermark","Kainach bei Voitsberg","Jenbach","Virgen","Stummerberg","Gross-Siegharts","Ardagger Markt","Gars am Kamp","Haslau an der Donau","Siebenhirten","Gobelsburg","Oberhofen im Inntal","Ziersdorf","Glaubendorf","Baldramsdorf","Reith","Feuersbrunn","Oberschutzen","Goesselsdorf","Jagerberg","Sinnersdorf","Mauterndorf","Eisenerz","Weng bei Admont","Haus","Veitsch","Sankt Marienkirchen am Hausruck","Lohnsburg","Gasthof","Heiligenblut am GroÃŸglockner","Hochsoelden","Hatzendorf","Silz","Gallzein","Gross-Schweinbarth","Klam","Baumgartenberg","Dobldorf","Oberhausen","Obersdorf","Alberschwende"
,"United Kingdom","Pershore","Rowley Regis","Stroud","Birmingham","Worcester","Smethwick","Alcester","Dudley","Gloucester","Solihull","Tamworth","Bidford-on-Avon","Tewkesbury","Oldbury","Coleford","Stourbridge","Cheltenham","Redditch","Malvern","Stonehouse","Bromsgrove","Mitcheldean","Erdington","Halesowen","Rugby","Walsall","Llandrindod Wells","Sutton Coldfield","Evesham","Stratford-upon-Avon","Bristol","Plymouth","Fareham","Newquay","Wells","Swanage","Bournemouth","Frome","Burnham-on-Sea","Liskeard","Verwood","Redruth","Weymouth","Devizes","Poole","St Austell","Trowbridge","Christchurch","Bath","Torquay","New Milton","Warminster","Southampton","Bradford-on-Avon","Bideford","Pontypridd","Swansea","Cardiff","Abertillery","Caerphilly","Blackwood","Aberdare","Hengoed","Maesteg","Mountain Ash","Usk","Carmarthen","Bargoed","Newport","Penarth","Neath","Rhondda","Llanelli","Tonypandy","Bridgend","Salisbury","Porth","Porthcawl","Ammanford","Ebbw Vale","Caldicot","Leicester","Nottingham","Coalville","Grantham","Coventry","Burton-on-Trent","Heanor","Northampton","Lutterworth","Bourne","Buxton","Ilkeston","Atherstone","Derby","Barrow upon Soar","Loughborough","Gainsborough","Prestwick","Edinburgh","Dalkeith","Kilsyth","Maybole","Dunbar","Falkirk","Livingston","Bonnybridge","Largs","St Andrews","Kilmarnock","Ayr","Penicuik","Kilwinning","Kennoway","Leven","Darvel","Larbert","Clydebank","Irvine","Kilbirnie","Troon","Fochabers","Stirling","Crieff","Aviemore","Carluke","Kinross","Carlisle","South Shields","Newcastle upon Tyne","York","Middlesbrough","Farnham","Crawley","Sandhurst","Southsea","Westerham","Uxbridge","Woking","Bexhill","Uxbridge","Aldershot","Reading","Chichester","Byfleet","Portsmouth","Petersfield","Horsham","South Hayling","Faversham","Guildford","Leatherhead","Kent","Basingstoke","Gillingham","Ryde","Whitstable","Billingshurst","Camberley","Fleet","Newport","Dover","Aberdeen","Glasgow","Musselburgh","Alloa","Dunfermline","East Kilbride","West Linton","Ballynahinch","Strathaven","Broxburn","Paisley","Lanark","Belfast","London","Chelmsford","Hove","Eastbourne","Hastings","New Cross","Shoreham-by-Sea","Uckfield","Royal Tunbridge Wells","Crowborough","Rochester","Henfield","Littlehampton","Polegate","Emsworth","Newhaven","Hailsham","Brighton","Hassocks","Sevenoaks","Waterlooville","Belvedere","Barnet","Enfield","Greenford","Rickmansworth","Stanmore","Wickford","Royston","Abbots Langley","Wembley","Edgware","Ruislip","Hatfield","Borehamwood","Braintree","Hertford","Harrow","Heckmondwike","Bradford","Sheffield","Leeds","Wetherby","Keighley","Barnsley","Ripon","Wakefield","Halifax","Bridlington","Huddersfield","Birstall","Castleford","Scarborough","Knottingley","Dewsbury","Leigh-on-Sea","Loughton","Rayleigh","Upminster","Walton-on-the-Naze","Ilford","Gravesend","Romford","Ipswich","South Ockendon","Grays","Maidstone","Maldon","Hornchurch","Basildon","Colchester","Billericay","Tonbridge","Sheerness","Tilbury","Banstead","Tadworth","Dartford","Beckenham","Croydon","Worcester Park","Surbiton","Acton","Sutton","Thornton Heath","Orpington","Malden","Burgess Hill","Bexleyheath","Milton Keynes","Dunstable","Hitchin","Wellingborough","Wootton","Kidlington","Luton","Chipping Norton","Towcester","Chacombe","Abingdon","Market Harborough","Oxford","Kings Langley","Daventry","Flitwick","Wallingford","Biggleswade","Ware","Corby","Bedford","Manchester","Warrington","Cheadle","Upton","Oldham","Stockport","Chester","Liverpool","Salford","Colne","Colwyn Bay","Leyland","Bacup","Bolton","Urmston","Runcorn","Bury","Sale","Northwich","Wallasey","Mochdre","Flint","Wigan","Lymm","Jarrow","Darlington","Durham","Sunderland","Hartlepool","Ashington","Gateshead","North Shields","Redcar","Blaydon","Seaham","Newton Aycliffe","Whitley Bay","Brandon","Prudhoe","Rowlands Gill","Spennymoor","Crook","Peterlee","Bedlington","Shildon","Corbridge","Houghton-le-Spring","Chester-le-Street","Bishop Auckland","Billingham","Consett","Bognor Regis","Huntingdon","Kettering","Wymondham","Bungay","Mildenhall","Saint Neots","Brigg","Haverhill","Sandy","March","Skegness","Kings Lynn","Long Melford","Boston","Waltham","Oakham","Peterborough","Attleborough","Grimsby","Halstead","Holt","Sudbury","Norwich","Wattisfield","Spalding","Stowmarket","Wrawby","Lincoln","Bury","Clacton-on-Sea","Cambridge","Saxtead","Graveley","Southport","Morecambe","Blackpool","Ellesmere Port","St Helens","Preston","Darwen","Poulton le Fylde","Chorley","Lytham","Clitheroe","Skelmersdale","Rawtenstall","Blackburn","Hyde","Birkenhead","Accrington","Dalton in Furness","Ormskirk","Killamarsh","Worksop","Rotherham","Wrexham","Doncaster","Alfreton","East Retford","Mansfield","Barrow in Furness","Chesterfield","Llanfair-Dyffryn-Clwyd","Slough","Southall","Sunbury-on-Thames","Redhill","Kingsbridge","London Borough of Hounslow","Shepperton","Hayes","Feltham","Brentford","Chard","Shaftesbury","Honiton","Martock","Sidmouth","Marlow","Wokingham","Exeter","Ottery St Mary","Exmouth","Newbury","Welshpool","Telford","Wolverhampton","Stoke-on-Trent","Tipton","Nantwich","Stafford","Newent","Willenhall","Lichfield","Broseley","Cannock","Winsford","Crewe","Kingswinford","Hereford","Macclesfield","Oswestry","Kidderminster","Bilston","Congleton","Newport","Uttoxeter","Shrewsbury","Cradley","Wem","Ossett","Biggin Hill","Boxley","Wotton-under-Edge","Burntwood","Droitwich","Stourport On Severn","Ledbury","Cirencester","Dursley","Brierley Hill","Dukinfield","Farnworth","Rochdale","Littleborough","Heswall","Rhyl","Knutsford","Hinckley","Kenilworth","Warwick","Belper","Twickenham","Ilminster","Richmond","Barnstaple","Colyton","Taunton","Dawlish","Seaton","Thatcham","Totnes","Tadley","Blandford Forum","Wishaw","Alexandria","Woodford Green","Worthing","Chatham","Greenhithe","Forfar","Peterhead","Glossop","Southminster","Harwich","Brentwood","Epping","Aylesford","Barking","Cramlington","Morpeth","Penrith","Ferryhill","Blyth","Galashiels","Stanley","Hexham","Dumfries","Wallsend","Cockermouth","Stockton-on-Tees","Haslemere","Haywards Heath","Newick","Wadhurst","Saint Leonards-on-Sea","Havant","Edenbridge","Catford","Ilkley","Driffield","Sowerby Bridge","Pudsey","Hebden Bridge","Barnoldswick","Harrogate","Wath upon Dearne","Holmfirth","Selby","Mirfield","Southwell","Buckley","Pontefract","Ashfield","Bakewell","Newark on Trent","Matlock","Herne Bay","Horley","Ashford","Margate","Winchester","Eastleigh","Staines","West Cowes","Sandown","Cranleigh","Canterbury","Warden","Carnforth","Lancaster","Cleveleys","Burnley","Bebington","Nelson","Glastonbury","Wroughton","Saltash","Penryn","Ringwood","Weston-super-Mare","Launceston","Par","Swindon","Newton Abbot","Westbury","Penzance","Bushey","Saffron Walden","Banbury","Bicester","Royal Leamington Spa","Cheshunt","Tring","Hoddesdon","Broxbourne","Tottenham","Watford","Harpenden","Pyle","Merthyr Tydfil","Pontypool","New Tredegar","Milford Haven","Kidwelly","Tredegar","Barry","Fishguard","Llangattock","Treorchy","Tenby","Woodstock","Stevenage","Rushden","Leighton Buzzard","Lidlington","Corsham","Aylesbury","Swindon Village","Thame","Kilbride","Burntisland","Perth","Bathgate","Ashby de la Zouch","Saint Bees","Bishop's Stortford","Potters Bar","Hemel Hempstead","Dromore","Palmers Green","Pinner","Witham","Baldock","Shefford","Wickham Bishops","Dagenham","Rainham","St Albans","Harlow","Shipley","Mitcham","Epsom","Godalming","Covent Garden","East Grinstead","Lavant","Wallington","Tiverton","Northolt","Reigate","Isleworth","High Wycombe","Ashford","Wellington","Lyndhurst","Henstridge","Great Torrington","Sturminster Newton","Redhill","Bewdley","Quinton","Tenbury Wells","Southam","Ludlow","Middlewich","Stone","Bridgnorth","Armitage","Newcastle","Louth","Holywell","Brook","Clevedon","Tetbury","Wilmslow","Bangor-is-y-coed","Stalybridge","High Peak","Chepstow","Hamble","Bodmin","Helston","Milford on Sea","Tavistock","Dorchester","Truro","Bridgwater","Todmorden","Kingston","West Wittering","Bracknell","Weybridge","Drayton Saint Leonard","Alton","Farnborough","Hook","Shanklin","Kendal","Craigavon","Bury St Edmunds","Hayes","Felixstowe","Great Yarmouth","Liversedge","Batley","Brighouse","Washington","Wednesbury","Dundee","Ashton-under-Lyne","Ely","Wisbech","Mauchline","Hackbridge","Carshalton","Queensferry","Axminster","Crewkerne","Yeovil","Widnes","Diss","Perranporth","Lydney","Prestatyn","Langport","London Borough of Bromley","Harleston","Halesworth","Thetford","Wimborne Minster","Buckie","Longton","Ascot","Buckfastleigh","East Stour","Folkestone","Hedgerley","Bisley","Montrose","Heywood","Denbigh","Bagillt","Caernarfon","West Calder","Grangemouth","Glenrothes","Bo'ness","Berwick-Upon-Tweed","Linlithgow","Kirkcaldy","Beaconsfield","Windsor","Maidenhead","Lancing","Seaford","Lochgelly","Ferndale","Gelligaer","Lisburn","Portadown","Cowdenbeath","Altrincham","Hurstpierpoint","Mexborough","Coppull","Leek","Ramsgate","Elgin","Inverness","Dereham","Brough","East Ham","Erith","Sandbach","Kidsgrove","Bingley","Southend-on-Sea","Redbourn","Chesham","Newtownabbey","Thornaby","Whyteleafe","South Benfleet","Cromer","Wadebridge","Cwmbran","Wimbledon","West Wickham","West Drayton","Colnbrook","Freshwater","Wargrave","Crowthorne","Menai Bridge","Moreton","Hawley","Snodland","Scunthorpe","Hornsea","Walthamstow","Stuartfield","Antrim","Stamford","Tranent","Gosport","Gorleston-on-Sea","Abergavenny","Morden","Welling","Pendlebury","Risca","Newry","Old Malton","Conway","Brandon","Wicken","Saint Ives","Burry Port","Addlestone","Calne","Prescot","Wrea Green","Caterham","Lingfield","Old Colwyn","Lowestoft","Sompting","Cullompton","Rosyth","Carrickfergus","Stanton Fitzwarren","Downham Market","Stanford","Bangor","Andover","Swadlincote","Rugeley","Magherafelt","Hockley","Keith","Cumnock","Chippenham","Cookham","Weedon Bec","Shipston on Stour","Ashton in Makerfield","Larne","West Bromwich","Girvan","Denny","Haslingden","Llandudno Junction","Camborne","Newton-le-Willows","Newmarket","Ardrossan","Oakley","Goole","Egham","Teddington","Port Talbot","Londonderry","Strabane","Bellshill","Fraserburgh","Drayton Bassett","Bishopstoke","Dumbarton","Crossgar","Ballymena","Millom","Berkhamstead","Motherwell","Saltcoats","Sittingbourne","Birchington","Hamilton","Edmonton","Nuneaton","Ulverston","Newtownards","Waltham Abbey","Huyton","Melton Mowbray","Gretna Green","Irlam","Cleckheaton","Coleraine","Fulham","Shotton","Paignton","Haltwhistle","Hackney","Dronfield","Chipping Ongar","Heathfield","St Asaph","Rochford","Dalry","Cowbridge","Rathfriland","Carterton","Prestonpans","Northwood","Woolwich","Atherton","Hayle","Houghton on the Hill","Llandudno","Holywood","Didcot","Westgate on Sea","Blackwood","Chapel en le Frith","North Berwick","Whitburn","Grendon","Teignmouth","Ilfracombe","Hull","Draycott in the Moors","Sidcup","Welwyn Garden City","Chatteris","Streatham","Tarleton","Warfield","Cumbernauld","Saltburn-by-the-Sea","Bonnyrigg","Ormiston","Longfield","Yarm","Northallerton","Trimdon","Clapham","Berkeley","Bishops Cleeve","Drybrook","Highworth","Leominster","Ross on Wye","Faringdon","Broadstairs","Oxted","Iver","Woodbridge","Kirkliston","Fleetwood","Walton on the Hill","Esher","Ellon","Rhoose","Chartham","Deal","Teynham","Bedworth","Catterick","Cam","Shrivenham","Sedgefield","Lewes","Newcastle-under-Lyme","Lossiemouth","Invergordon","Molesey","Bourne End","Johnstone","Well","Gorebridge","Currie","Limavady","Banbridge","Hendon","Mold","Oswaldtwistle","Renfrew","Coatbridge","Newport Pagnell","Chessington","Eastwood","Abergele","Kenley","Otford","Kirkintilloch","Syston","Frodsham","Haydock","Bridgemary","Manningtree","Frinton-on-Sea","Portchester","Leigh","Nelson","Royston","Betchworth","Cobham","Hungerford","Hillingdon","Hanwell","Calverton","Eastington","Egremont","Tweedmouth","Ponteland","Rothbury","Countess Wear","Maryport","Barton upon Humber","Beccles","Warlingham","Chislehurst","Askam in Furness","Gillingham","Richmond","Halewood","Blairgowrie","Cupar","Thurso","Kinghorn","Ruthin","Crickhowell","Oundle","Somersham","Sherborne","Caersws","Brackley","Great Gransden","Airdrie","Clovenfords","Stromness","Gosberton","Biddenden","Roydon","Knaresborough","Shepton Mallet","Helensburgh","Bolney","Curdridge","Llandeilo","Tenterden","Fakenham","Aberaeron","Market Drayton","Holyhead","Clun","Wigton","Bowes","Brecon","Neston","Treforest","River","Granby","Melbourne","Arnold","Meldreth","Hessle","Beverley","North Ferriby","Cottingham","Anlaby","Elloughton","Hillside","Hursley","Newton Stewart","Carlton","Pickering","Bedale","Thornton-in-Craven","Settle","Manor","Fauldhouse","Sleaford","Duffield","Monmouth","Coupar Angus","Wick","Chipstead","West Kirby","Magheralin","Alnwick","Haverfordwest","Holmewood","Winslow","Ampthill","Hillsborough","Dunmurry","Thirsk","East Hagbourne","Rhayader","Newport","Abberton","Sandwich","Much Wenlock","Laugharne","Clunderwen","Churchill","Finchampstead","Godstone","Howden","Stanford","Tregarth","Pembroke Dock","Newtown","Ely","Rye","New Romney","Coulsdon","Dorking","Newham","Cliffe","Goring","Molesey","Hampton","Pewsey","Marlborough","Croston","Elland","Pocklington","Witney","Padbury","Radstock","Holt","Alva","Gourock","Greenock","Stanwell","Craven Arms","Bucknell","Ferryside","Treharris","Lampeter","Lauder","Malton","Crowland","Whittlesey","Llanfyrnach","Weston","Budleigh Salterton","Ashington","Llanishen","Battle","Minehead","Liphook","Chertsey","Ingatestone","Brasted","Headley","Arundel","Axbridge","Amlwch","Hawick","Alness","Auchinleck","Anstruther","Cross","Ballycastle","Portrush","Woodhall Spa","Southwold","Totternhoe","Wantage","Walmer","Falmouth","Milnathort","Skipton","Great Dunmow","Brechin","Birtley","Bildeston","Papworth Everard","Wrangaton","Fordingbridge","Bagshot","Earley","Bolsover","Bromyard","Stokesley","Tillicoultry","Haddington","Armadale","Romsey","Draycott","Sedbergh","Otley","Meanwood","Market Rasen","East Boldon","Workington","Llandovery","Rutherglen","Peebles","Horwich","Ballyclare","Buckingham","Purley","Kings Sutton","Okehampton","Stone Allerton","Yelverton","Blackford","Wedmore","Ashtead","Hill","Omagh","Barnard Castle","Appleby","Frithville","Caythorpe","Swaffham","Milnthorpe","Kelso","Shinfield","Swinton","Buntingford","Holbeach","Sunningdale","Somerset","East Molesey","Sheringham","Caistor","Gretton","Whitby","Kilmacolm","Stow on the Wold","North Walsham","Dromara","Aughnacloy","Whitchurch","Liss","Stone","Dinnington","Sutton in Ashfield","Chinley","Braunstone","Ibstock","Heath","Deptford","Denham","Bootle","Burslem","Broughton","Bulkington","Barwell","Stocksbridge","High Peak Junction","Chadwell","Attleborough","Perivale","Tunstall","Whitefield","Brierfield","Balerno","Speldhurst","Knighton","Wick","Leeds","Eltham","Amersham","Iwerne Courtney","Tollard Royal","Dartmouth","Cookstown","Burscough","Aston","Lerwick","Kelbrook","Knebworth","Sawbridgeworth","Bridge","Toddington","Hammersmith","Crymych","Sutton on the Hill","Letchworth","Redland","New Ferry","Walton on Thames","Levenshulme","Choppington","Normanton","Dungannon","Armagh","Eastchurch","Beckton","Woodford","Rawreth","Stansted","Lymington","Robertsbridge","Croxley Green","Biggar","Uppingham","Hotham","Partridge Green","Burythorpe","Derwen","Studley","Ripley","Wareham","South Brewham","Thornton","Aberford","Melksham","Golborne","Patchway","Valley","Stoke upon Tern","Llantrisant","Woodsetts","Markfield","Finchley","Wigston","Back","Islington","Ruddington","Send","Seale","Grove","Hindhead","Long Eaton","Bawtry","Turnberry","Morley","Overton","Victoria","Eastcote","Harefield","Seven Kings","Newlands","Kilkeel","Princethorpe","Beaumont","Hurworth","London Borough of Wandsworth","Corringham","Marsham","Porthleven","Sandwell","Shardlow","Stoneleigh","Star","Bluntisham","Minchinhampton","Chiswick","Fairford","Ickenham","Chigwell","Clifton","Pulborough village hall","Laurencekirk","Watlington","Cheddar","Woodhouse","Wilden","Arlesey","North Weald","Mill Hill","Castle Donington","Castlereagh","Ifield","Kirby Cross","Waltham Cross","Caddington","Reddish","Bransgore","Stretford","Timperley","Wythenshawe","Wales","Seaton","Standlake","Lower Brailes","Takeley","Long Buckby","Great Missenden","Selsey","Hedon","Market Weighton","Withernsea","Burnham","Winnersh","Aintree","Crediton","Formby","Carnoustie","Silsden","Swanscombe","Northfleet","Aveley","Strood","Heston","Albrighton","Chapeltown","Filey","Sunninghill","Bickenhill","Christleton","Pembury","East Horsley","Upton","Burton","Blackford","Swalwell","Broughton","Bramley","Skelton","Crick","Mayfair","Whisby","Willaston","Buxted","Duxford","Moreton in Marsh","Three Legged Cross","Hunstanton","Radlett","Broadway","Winnington","Corwen","Cooksbridge","Shoeburyness","Drumchapel","Larkhall","Higham Ferrers","Steeton","Farnham Royal","Chandlers Ford","Ashley","Twyford","Farningham","Wrangle","Forest Row","Horrabridge","Portishead","Hadleigh","Bishops Waltham","Brightlingsea","Cuckfield","Steyning","Southwick","Ivybridge","Kirton in Lindsey","Treuddyn","Tewin","Ramsbottom","Tynemouth","Spilsby","Denby","Henley","Hartley","Box","Ripe","Thurleigh","Alresford","Little Hulton","Halton","Dunoon","Port Glasgow","Bishopton","Trent","Streatley","Hythe","Wilmington","Wickham","Eastham","Thames Ditton","Little Paxton","Meggies","Merton","Bookham","Cottenham","Earls Court","Immingham","Barrow upon Humber","Bingham","Broadstone","Southbourne","Biddulph","Bridport","Beer","Thornton","Huntspill","Isham","Thrapston","Queenborough","Stornoway","Postling","Cranbrook","Fillongley","Kirriemuir","Elstree","Slinfold","Wombwell","Linton","Buckhurst Hill","Cosham","Catherington","Broughton","Burley","Beauly","Teddington","Twyford","Midsomer Norton","Uddingston","Ambleside","Alford","Low Ham","Barton on Sea","Wethersfield","Hindley","Pelsall","Darlaston","Gnosall","Newbiggin-by-the-Sea","Bromborough","Highbridge","Ashbourne","Aberystwyth","Windsor","Hopwood","Woodham Ferrers","Auchterarder","Chinnor","Checkley","Heathrow","Knowsley","Minsterley","Clarbeston Road","Lee-on-the-Solent","Pinxton","Alderley Edge","Gorton","Padiham","The Hyde","Downpatrick","Cuffley","Wolstanton","Worsley","Tilehurst","Guisborough","Westgate","Clifton","Shirebrook","Kirkby in Ashfield","Houghton Regis","Hapton","Mount Bures","Rothwell","Clifton","Maulden","Sutton on Trent","West Byfleet","Mansfield Woodhouse","Frimley","Ravenstone","Shepshed","Old Buckenham","Desborough","Rainhill","Fitzwilliam","Garstang","Dulwich","Pilton","Tile Hill","Llanidloes","Eaglesham","Whitchurch","Pwllheli","Blakeney","South Petherton","Stutton","Melton Constable","Jedburgh","Fishburn","Corfe Mullen","Hartwell","Ketley","Radcliffe","Fort William","Galston","Arbroath","Strathmiglo","Clackmannan","Beaulieu","Plockton","Voe","Inveraray","Kinglassie","Buckland","Purleigh","Beaminster","Easingwold","Llanymynech","Newburgh","Fintry","Alford","Aberchirder","Callander","Aberlour","Cotgrave","Great Chesterford","Lyme Regis","Longstanton","Shotts","Unstone","Brewood","Whitwick","Somerton","Stockbridge","Lyminge","Broughton","Gunnislake","Saint Agnes","Easington","Garston","Church Gresley","West Kilbride","Normandy","Rainham","Milton","Keswick","Etchingham","Saxmundham","Anstey","Saint Brides Major","Ventnor","Hindon","Weston under Lizard","Bishop's Castle","Kinnerley","Barkway","Hurstbourne Tarrant","Westbury-sub-Mendip","Dolwyddelan","Talybont","Castleton","Northleach","Chipping Campden","New Quay","Ottershaw","Petworth","Bedminster","Caston","Selston","Effingham","Brixham","New Southgate","Ashwell","Totton","Bletchley","Winterbourne Dauntsey","Southwater","Blakeney","Llangefni","Staplehurst","Great Fransham","Pencarreg","Benenden","Limekilns","Leyburn","Great Gidding","Hemingstone","Chaddesden","Little Kimble","Seascale","Exminster","Loanhead","Atworth","Brixton Hill","Datchet","Middleton One Row","Middleton","Tollerton","Much Hadham","More","West Horsley","Ulceby","Myton on Swale","Lindfield","Nairn","Northrepps","Church Stretton","Shifnal","Dyserth","Arthog","Malmesbury","Wincanton","Silloth","Weobley","Kirkwall","Carlton le Moorland","Broom","Cinderford","Rogiet","Offord Cluny","Pevensey","Eyemouth","Carbrooke","Kimbolton","Giggleswick","Cobham","Leysdown-on-Sea","Oare","Banchory","Hinton St George","Ashburton","Windermere","Whitehaven","Saundersfoot","Compton","Crumlin","Whitbourne","Fulmer","Pencader","Shotley Gate","Fressingfield","Corfe Castle","Melrose","Innerleithen","Whiteparish","Zeals","Holsworthy","Pitlochry","Lockerbie","Seend","Burghclere","Drayton","Insch","Inverness-shire","Gargunnock","Port Erroll","Llanbedr","Beckley","Symington","Wymeswold","Banff","Nordelph","Hartfield","Bayford","Greensted","Dulverton","Bickleigh","Oakamoor","Beckingham","Dymock","Tadcaster","Wragby","Gosforth","Narberth","North Moreton","Hawes","New Barnet","Stratford","Burstwick","Aldeburgh","Mablethorpe","Beith","Tiptree","Watton","Bridgham","Drighlington","Inverurie","Connahs Quay","Dinas Powys","Soham","Leiston","Gosfield","Wootton","Stonehaven","Moston","Muir of Ord","Codsall","Stretton on Fosse","Barnwell","Llangollen","Herstmonceux","South Milford","Bottesford","Gaerwen","Montgomery","Cynwyd","Broadwas","Talgarth","Great Ryburgh","Wyverstone","Sheering","Meifod","Brampton","Machynlleth","Kirkby","Auchtermuchty","Mark","Lifton","Polperro","South Molton","Alfold","Birnam","Strathyre","Cardigan","Lechlade","Clavering","Gayton Thorpe","Malpas","Longdown","Ramsey","Piddington","Newport-On-Tay","Blunham","Wilburton","Dumbleton","Owslebury","Easton","Bruton","Aycliffe","Angmering","Henley-on-Thames","Cricklade","Edwalton","Harlaxton","South Normanton","Chingford","Clipstone","Tansley","Princes Risborough","Stock","Waterbeach","Ormesby","Leyton","Bishopbriggs","Portslade-by-Sea","Goodmayes","Stanford","Lowton","Chalgrove","Studham","Botley","Denton","Kempston","Lewisham","Market Deeping","Rainworth","Swavesey","Hucknall Torkard","Droylsden","Sawley","Keynsham","Sidlesham","Harrow Weald","Brockworth","Hebburn","Theydon Bois","Burbage","Crayford","Hersham","Balloch","High Blantyre","Thornbury","Yate","Norwood","Winlaton","Studley","Whickham","Salfords","Maghull","Neasden","Hanworth","Comrie","Purfleet","Houston","Baildon","Nailsea","Polmont","Walton on the Hill","Norbury","Addington","Cheam","Boldon Colliery","Chelsfield","Sedgley","Edgbaston","Freckleton","Honingham","Northfield","Holmes Chapel","Much Hoole","Bowdon","Middleton","East Linton","Charfield","Gipping","Milton on Stour","Greenfield","Moulton St Michael","Chilbolton","Histon","Bothwell","Barton-le-Clay","Square","Burnopfield","Aston Clinton","Langstone","Whitchurch","Nettleton","Waldringfield","Greenwich","Rosslea","Chryston","Skilgate","Chalfont Saint Peter","Waddesdon","Horley","Grantown on Spey","Ben Rhydding","Oban","Chestfield","Stoke Poges","East Harling","Eye","Thorrington","Burnham on Crouch","Sanderstead","Stallingborough","Rustington","Binsted","Steventon","Heysham","Torpoint","Worle","Wick","Blidworth","Stonesfield","Laxton","Billesley","Uphall","Hilton","Oadby","Cowley","Lubenham","Lambourn","West Malling","Willington","Pencaitland","Lochmaddy","Whitland","Willington","West Mersea","Wentworth","Painswick","Donnington","Hatch","Turvey","Haddenham","Millbrook","Pembroke","Chellaston","Bletchingley","Balham","Tonyrefail","Carnmoney","East Dulwich","Irthlingborough","Puckeridge","Wheathampstead","Briton Ferry","Westhoughton","Cheadle Hulme","Yeadon","Bulford","Godmanchester","Henlow","Coseley","Humberston","Stotfold","Horndean","Tongham","Elderslie","Sandiacre","Marske","North Hykeham","Tyldesley","Olney","Sheldon","Cambuslang","Thornaby","Ash Vale","Sonning","Willesden","Bealings","East Cowes","Wootton","Durrington","Blaenavon","Dunchurch","Horsmonden","Brixworth","Harwell","Bugbrooke","Cleator Moor","Steeple Claydon","Rothesay","Headington","Dovercourt","Tarporley","Greenisland","Carlton","Coalisland","Hagley","Brimscombe","Pulloxhill","Welwyn","Kingston Seymour","Binfield","Royal Wootton Bassett","Newcastle","Monifieth","Duffus","Llantwit Major","Stewarton","Dunblane","South Killingholme","Itchen Abbas","West Raynham","Kirkby Stephen","Stillington","Inverkeilor","Glenshee","Kingussie","Campbeltown","Leitholm","Prees","Bala","Dunkeld","Longniddry","Sutton Courtenay","Wix","Yoxford","Leigh","Spetisbury","Kingskerswell","Looe","Upwell","Pampisford","Tain","Marden","Penn","Horsted Keynes","East Bergholt","Westcott","Stocksfield","Oldmeldrum","Canewdon","Winterborne Kingston","Kirkconnel","Mayfield","Norton","Haydon Bridge","Horam","Little Gaddesden","Stanbridge","Turriff","Lochgilphead","East Tilbury","Storrington","Hathersage","Macduff","Dingwall","Farmborough","Gullane","Bozeat","Crosby","Wick","Glasdrumman","Llanrwst","Hadleigh","Warrenpoint","Enniskillen","Fivemiletown","Ellington","Selkirk","Ringmer","Hawkhurst","Barnham","Bude","Prestwich","Ashdon","Cogenhoe","Portree","Aultbea","Enstone","Finedon","Grange","Frant","High Halden","Lochwinnoch","Arrochar","Winkleigh","Watchet","Beaworthy","Doune","Stiffkey","Bonar Bridge","High Bentham","Edgefield","Gargrave","Glentham","North Kilworth","Ramsbury","Lyng","Heckington","Lowdham","Lydbury North","Dolgelly","Blaenau-Ffestiniog","Barmston","Whittlebury","Llanwrtyd Wells","Nutley","Cardross","Harlech","Brede","Hilborough","Portmadoc","Penshurst","Templecombe","Moira","Flordon","Yatton","Milton","Slapton","Kelty","Dollar","Braunton","South Cerney","Horncastle","Dornoch","Rowhedge","South Carlton","Grendon Underwood","Grateley","Pentraeth","Llwyngwril","Mollington","Little Barningham","Trehafod","Martley","Ellesmere","Warton","Little Canfield","Bradwell on Sea","Tackley","Dunkeswell","Nutfield","Dunning","Abergynolwyn","Westhay","Huntly","Baslow","Bowness-on-Windermere","Chulmleigh","Charmouth","Llanfairfechan","New Buckenham","Tarbert","Wyton","Rock Ferry","Alderholt","Odiham","Calstock","Benburb","Bangor","Hemsworth","St Ives","Templepatrick","Higher Bebington","Boscastle","Castlederg","Helens Bay","Marhamchurch","Snettisham","Besthorpe","Midhurst","Stow","Banham","Great Waldingfield","Norton","Kilbarchan","Claygate","Gorslas","Mytholmroyd","Presteigne","Upton upon Severn","Amesbury","Drumahoe","Juniper Green","Horndon on the Hill","Barrow","Aghalee","Ruabon","Ramsey Saint Marys","Wirksworth","Peterculter","Kingswood","Fladbury","Callington","Napton on the Hill","Tayport","Wing","Hingham","Hermitage","Wellington","Littleport","Anstey","Biddenham","Inverkeithing","Fowey","Conon Bridge","Marple","Hednesford","Saint Columb Major","Newcastle Emlyn","Aberkenfig","North Tawton","Great Milton","Matching","Taynuilt","Shalford","Great Glemham","Northop","Froggatt","Brandesburton","Masham","Birdbrook","Landrake","Trusthorpe","Reydon","Darfield","Whimple","Elstead","Widdrington","Lambeth","East Peckham","Taplow","Benllech","Bramford","Kibworth Harcourt","Byfield","Kimberley","Keresley","Barton under Needwood","Clare","Pilham","Patrington","Helmsley","Leconfield","Roxwell","Mickleton","Bow","Henham","Sherfield upon Loddon","Kirkcudbright","Duddington","Tetsworth","Naseby","Akeley","Nettlebed","Harrold","Colyford","Blewbury","Loddington","Aylsham","Cranfield","Totteridge","Maghera","Deighton","Gresford","Southgate","Ballingry","Newton on Trent","Lisnaskea","Ballymoney","Newport","Harworth","Eccleshall","Annesley","Oxshott","Randalstown","Moneymore","East Budleigh","Tandragee","Stawell","Silverstone","Long Ditton","Windlesham","Monkswood","Sedgeberrow","Mendlesham","Selborne","Lustleigh","Talsarnau","Avoch","Stockcross","Kelmarsh","Gamlingay","Stanton","Lostwithiel","Westleton","Corpach","Belbroughton","Thorpe St Peter","Broughton","Seaview","East Barnet","Falkland","Kelsall","Minster Lovell","Shireoaks","Forres","Wombourne","Claverdon","Measham","Rotherfield","Wingate","Menheniot","Radcliffe on Trent","Blackwater","Earnley","Kedington","Camelford","Newbridge","Barmouth","Bledlow","Llanfyllin","Cowden","Staindrop","Kingham","Cockerham","Frizington","Silverdale","Willingham","Laxfield","Butterton","Blaenwaun","Barton in Fabis","Ashen","Burbage","Eynsham","Weston","Llanwrda","Betws","Elsworth","Ufford","Kirtlington","Faulkland","Hatherleigh","Scalby","Cullen","Fringford","Grasmere","Hightown","Hambleton","Friskney","Stoke Climsland","Clifton Hampden","Horbling","Marcham","Guiseley","Wroxall","Frensham","Avonmouth","Trefonen","East Challow","Rhos-on-Sea","Stevenston","Addington","Castlewellan","Maiden Newton","Rowlands Castle","Boroughbridge","Linton upon Ouse","Nafferton","Coalbrookdale","Lower Darwen","Mells","Inverkip","Meopham","Roath","Broughty Ferry","Sileby","Widmerpool","North Waltham","Doagh","Saint Erme","Harold Wood","Dorney","Brockenhurst","Fairlight","Goring","Morriston","Alsager","Wemyss Bay","Murton","Bodelwyddan","Ticehurst","Alveston","Garrison","Skelmorlie","Roehampton","Bacton","Nassington","Wraysbury","Castle Cary","Capel","Four Marks","Llansantffraid-ym-Mechain","Aldridge","Caister-on-Sea","Bordesley","Shalford","Godmersham","West Clandon","Brownhills","Linton","Edenfield","Rothwell","Builth Wells","Cross in Hand","Wanstead","Bembridge","High Legh","Empingham","Hever","Arley","Pontesbury","Water Orton","Wolverley","Tisbury","Harlesden","Paddock Wood","Sully","Llwynypia","Carrowdore","Burwash","Chilton","Loudwater","Theale","Renton","Langley","Pittenweem","Moulton St Michael","Englefield Green","Halstead","Cheadle","Lapworth","South Cave","Marnhull","Blackwater","Brimpton","Risley","Wooburn","Broughton","Crofton","Whetstone","Kensington","Ardmillan","Powfoot","Girton","Kennington","Rainford","Bredbury","Beach","Brenchley","Pennington","Littlebury","Clayton West","Kirkham","Staple","Kelvedon","Spratton","Bramhall","Bloomsbury","Brook","Martin","City of London","Bourton on the Water","Charlwood","Croughton","Southgate","Hennock","Old Windsor","Laindon","Walkden","Barnes","Norton Lindsey","Eversholt","Horton Kirby","Wilshamstead","Crookham","Bermondsey","Castle Douglas","Neilston","Whitwell","Longridge","East Leake","Alvechurch","Eccles","Ashmore","Loughor","Hampton Lucy","Tattershall","Ystalyfera","Kinmel","Merthyr Mawr","Milford","Llangennech","Epping Green","Preesall","Ewelme","Whittlesford","Mountsorrel","Ripley","Hoylake","Willington Quay","Pathhead","Framlingham","East Hanningfield","Donaghadee","North Elmsall","Milltimber","Askern","Oldbury","Pontycymer","Great Baddow","Dollis Hill","Slawitt","Glenboig","Colne","Portlethen","Little Lever","Bulwell","Felbridge","Poplar","Shenfield","Northenden","Threlkeld","Ullesthorpe","Stanton","Goostrey","Walgrave","Berwick","Halwell","Mallaig","Ticknall","Bentley","Kneeton","Tatsfield","Broughton","Millbrook","Stalham","Cleator","Gretna","Lenham","Ewhurst","Sacriston","Melton","Caversham","Wickham Market","Penwortham","Grimsargh","Cambusnethan","Litherland","Gatwick","Bromham","Lurgan","North Petherton","East Hoathly","Manton","Rawmarsh","Draperstown","Otterburn","Kilbride","Lavendon","Lee","Leek Wootton","Potton","Mobberley","Swynnerton","South Hetton","Pontardawe","Hucknall under Huthwaite","Weston in Gordano","Needingworth","Partington","Portstewart","Dungiven","Swaythling","Handforth","Caxton","Hadlow Down","Harrow on the Hill","Weaverham","Bidston","Abercynon","Lawrencetown","Stranraer","Bollington","Pencoed","Woodley","Maerdy","Whaley Bridge","Stony Stratford","Abergwynfi","Nantyglo","Dorridge","Astley","Shirehampton","Raynes Park","Kings Norton","Maida Vale","Chipping Sodbury","Wrington","Hawkwell","Menston","Poynton","Port Sunlight","Clapham","Hanley","Horbury","Bignor","Altham","Oxenhope","Sandycroft","Llantwit Fardre","New Mills","St. Dogmaels","Higham on the Hill","Elmley Lovett","Aberfeldy","Earlston","Charlestown","Carrbridge","Spondon","Shaw","Hatton","West Rudham","Whitton","Tillingham","Pleshey","Botesdale","Willingale Doe","Coed-Talon","Beaumaris","Alston","Woore","Bosbury","Tadmarton","Brigstock","Clutton","Mere","Highcliffe","Burton Pidsea","Middleton","Withernwick","North Somercotes","Wold Newton","Tideswell","Fangfoss","Porlock","Loppington","Powick","Diddington","Saint Annes on the Sea","Woolacombe","Chilcompton","Stanstead","Ponders End","Borough Green","Buckden","Birtley","Little Eaton","Dundonald","Hawarden","Barrowford","Mundesley","Sutton on Hull","Shawbury","Oulton","Methil","Langho","Burgh le Marsh","Lakenheath","Lesmahagow","Midgham","Parbold","Long Stratton","Brandon","Sanquhar","Longhope","Portaferry","Tempo","Waringstown","Rowde","Whitchurch","Watchfield","Whalley","Moulton","Mattishall","Metheringham","Duns","Aboyne","Heybridge","Great Staughton","Smarden","Shilton","Ridingmill","Walker","Cawston","Farndon","Conisbrough","Sarratt","Leuchars","East Malling","Llanddulas","Clydach","Wheatley","Islip","West Ashby","Stifford","Ilchester","Padstow","Tywardreath","Roche","Camberwell","Goodwick","Treherbert","Radnage","Cublington","Chilton","Llanharan","Ripponden","Gaydon","Chasetown","Bilsthorpe","Gomersal","Wendover","Groombridge","Weare","Upper Beeding","Coggeshall","Heriot","Appleford","Belcoo","Belleek","Kingswood","Blaina","Gordon","Norton","Appleton","Moorsholm","Roffey","Kingston","Seacroft","Daresbury","Babraham","Hornsey","Reed","Birchanger","Smalley","Edwinstowe","Monyash","Friern Barnet","Newhall","Stockton","Seghill","Adlingfleet","Plumstead","Keele","Eagle","Bishopstrow","Temple","Rimington","West Wickham","South Brent","Isleham","Annan","Upton","Sutton Bridge","Plaistow","South Elmsall","Potterspury","Newtonmore","Stepps","Dalbeattie","Keston","Rottingdean","Crosshouse","Cricklewood","Rogerstone","Bovey Tracey","Kingsteignton","Ryton","East Preston","Rayne","Kirk Ella","Sturmer","Stisted","Egton","Appley Bridge","Hartford","Oakford","Paul","Bayble","Pitsford","Rock","Guthrie","Lympsham","Medstead","Midford","Comber","Mid Calder","West Row","Hemswell","Speke","Whitnash","Capenhurst","Itchen","Brompton","Jordanstown","Southwark","Bishop Burton","West Drayton","Wotton Underwood","Dawley","Benson","Upper Slaughter","Worth","Bekesbourne","Stoke","Medmenham","Brookland","Hooke","Nuffield","Failsworth","Newbold","Ballybogy","Annalong","Gifford","Writtle","Newbridge","Newham","Bradfield St George","Lindal in Furness","Ardingly","Mickleton","Ovingdean","Stranmillis","Walford","Askham","Heythrop","Charing Cross","City of Westminster","Llandrillo","Gorseinon","North Newton","Lupton","Egerton","Stoke Newington","North Leigh","Repton","Tendring","Great Billing","Cromwell","Bampton","Marr","Cranford","Wyke","Felsted","Clare","Stoke by Nayland","Thurston","Herriard","Crathorne","Dyce","Kelly","Chilwell","Theale","Belmont","Hambleden","Mossley","Woldingham","Charlton on Otmoor","Brockley Green","Eton","Barley","Ford","Moss","Dean","Ball","Hartpury","Holborn","Bournville","Llanon","Highbury","Humbie","Cardonald","Stow","Anniesland","Havering atte Bower","Greenhead","Handsworth","Waltham","Salthouse","Inchinnan","Longport","Milton","Holywell","Beaufort","Earls Colne","Wealdstone","Weedon","Burwell","Warmington","Surrey","Hazelwood","Wilnecote","Hellesdon","Weald","Reepham","Eaglesfield","Maryhill","Portglenone","Broad Blunsdon","Scapa","Wheaton Aston","Church","Myddle","Penkridge","Woodhouse","Rivington","Stanground","Sidcot","Monkton","Wootton","Spittal","Plymstock","Stowe","Witley","Ratcliffe on Soar","Hadlow","Huish","Paston","Otley","East Down","Cadbury","Alton","Sparsholt","Hilderstone","Nash","Burton","Kingsland","Meesden","Stratfield Mortimer","Sprowston","Moseley","Earlham","Ashby de la Launde","Mayfield","Bettws","Lytchett Minster","Hampton","Roade","Wednesfield","Stanhope","Abersychan","Highway","Cross Keys","Cottered","East Keal","Kyle of Lochalsh","Killin","Great Barton","Dingestow","Headcorn","Plaitford","Whitehouse","Great Amwell","Boreham","Quedgeley","Swanland","Ushaw Moor","Worminghall","Ash","Old Basing","Ystrad Mynach","Moorside","Aldermaston","Beeston","Bainton","Rushden","Shadoxhurst","Hardham","Stoke Prior","Shelford","Boston Spa","Fownhope","Criccieth","Ystradgynlais","Church Leigh","Drymen","Little Milton","Barbaraville","Oakhill","Bierton","Droxford","Ulcombe","Oving","Kinloch Rannoch","Llantrisant","Thakeham","Staverton","Woburn Sands","Essendon","Saint Clears","Crossgates","Lower Beeding","West Grinstead","Bransford","Privett","Woodmancote","Aberfoyle","Douglas","Augher","Hazel Grove","Bloxwich","Linthwaite","Silsoe","Sundon Park","Goudhurst","Brooke","Compton Dundon","Beal","Coppenhall","Garth","Minster","Brayton","Snaresbrook","Norham","Mount Hamilton","Penrice","Westfield","Chilton Trinity","Downend","Urchfont","Winton","Withington","Wickersley","Burford","Childwall","Hitcham","Westleigh","West Langdon","Handcross","Blackheath","Alrewas","Clapham","Harby"
,"Belgium","Mortsel","Wilrijk","Kontich","Vise","Brussels","Wetteren","LiÃ¨ge","Antwerp","Mechelen","Puurs","Braine-le-Chateau","Namur","Sint-Michiels","Brasmenil","Bruges","Lives-sur-Meuse","Seraing","Pepinster","Beaufays","Hannut","Argenteau","Angleur","Hollogne","Hognoul","Crisnee","Fexhe-Slins","Lixhe","Marche-en-Famenne","Ougree","Awans","Mons","Huy","Ans","Modave","Wanze","Flobecq","Beyne-Heusay","Magnee","Oupeye","Herstal","Grez-Doiceau","Holland","Turnhout","Ghent","Waregem","Heverlee","Kortrijk","Zwijndrecht","Merksem","Sint-Genesius-Rode","Hasselt","Eupen","Wemmel","Vilvoorde","Strombeek-Bever","Kraainem","Wilsele","Duffel","Dworp","Linkebeek","Jemeppe-sur-Meuse","Franiere","Chenee","Jette","Ixelles-Elsene","La Hulpe","Rixensart","Evere","Overijse","Hoeilaart","Sint-Niklaas","Zaventem","Denderleeuw","Destelbergen","Lochristi","Wachtebeke","Kalken","Zaffelare","Gentbrugge","Merelbeke","Appelterre-Eichem","Haaltert","Ninove","Nederhasselt","Outer","Gijzegem","Viane","Idegem","Geraardsbergen","Grimminge","Opbrakel","Nieuwenhove","Nederbrakel","Everbeek","Waasmunster","Temse","Beveren","Melsele","Zottegem","Sint-Amandsberg","Herzele","Erpe","Hamme","Buggenhout","Bornem","Londerzeel","Malderen","Essene","Aalst","Opwijk","Dendermonde","Sint-Gillis-bij-Dendermonde","Baasrode","Lokeren","Eksaarde","De Pinte","Meldert","Moerzeke","Lebbeke","Belsele","Sint-Martens-Latem","Kruibeke","De Klinge","Wondelgem","Oostakker","Zelzate","Stekene","Bazel","Steendorp","Sint-Gillis-Waas","Schendelbeke","Ressegem","Deftinge","Schellebelle","Berlare","Zele","Burcht","Mespelare","Sint-Amands","Heusden","Laarne","Erembodegem","Iddergem","Sint-Lievens-Houtem","Welle","Nieuwerkerken","Herdersem","Asse","Hofstade","Moerbeke","Vlekkem","Overmere","Meerbeke","Pollare","Denderhoutem","Moorsel","Mariakerke","Drongen","Kapellen","Sint-Pauwels","Kemzeke","Eeklo","Evergem","Zwijnaarde","Deurle","Oppuurs","Oudegem","Appels","Schoonaarde","Hingene","Hekelgem","Wichelen","Sint-Denijs-Westrem","Afsnee","Erondegem","Verrebroek","Teralfene","Borsbeke","Elversele","Zeveneken","Beervelde","Merendree","Berchem","Grembergen","Drogenbos","Anderlecht","Perwez","Landelies","Villers-la-Ville","Fleurus","Thuin","Montignies-sur-Sambre","Gembloux","Wavre","Chapelle-lez-Herlaimont","Marcinelle","Presles","Charleroi","Gilly","Lodelinsart","Roux","Labuissiere","Le Tilleul","Cour-sur-Heure","Ham-sur-Heure","Nalinnes","Bierges","Tamines","Chatelineau","Rochefort","Jemelle","Chatelet","Godarville","Forchies-la-Marche","Falisolle","Mont-sur-Marchienne","Obaix","Fontaine-Valmont","Ransart","Trazegnies","Marchienne-au-Pont","Courcelles","Jumet","Haine-Saint-Paul","Peronnes","Leval-Trahegnies","Hyon","Gosselies","Ruiselede","Lede","Mouscron","Tervuren","Dilbeek","Ohain","Waterloo","Groot-Bijgaarden","Sint-Agatha-Berchem","Uccle","Schepdaal","Sint-Pieters-Leeuw","Erps-Kwerps","Beersel","Huizingen","Meise","Grimbergen","Ganshoren","Itterbeek","Zellik","Alsemberg","Boutersem","Tubize","Arlon","Melle","Quievrain","Meslin-l'Eveque","Loupoigne","Frasnes-lez-Buissenal","Erbaut","Barry","Montignies-lez-Lens","Ellezelles","Dison","Soumagne","Lontzen","Beez","Jambes","Etalle","Gesves","Profondeville","Dave","Verviers","Andenne","Jauche","Sprimont","Thimister","Saint-Georges-sur-Meuse","Vielsalm","Zeebrugge","Romsee","Wezembeek-Oppem","Loncin","Manhay","Hamoir","Erpent","Gerpinnes","Transinne","Steenokkerzeel","Woluwe-Saint-Pierre - Sint-Pieters-Woluwe","Brecht","Liedekerke","Wezemaal","Roeselare","Vorselaar","Denderbelle","Deurne","Berchem","Borsbeek","Wuustwezel","Havre","Geel","Mol","Dessel","Balen","Wijnegem","Bonheiden","Aartselaar","Nijlen","Zemst","Sint-Katelijne-Waver","Onze-Lieve-Vrouw-Waver","Keerbergen","Elewijt","Willebroek","Tremelo","Brasschaat","Westerlo","Kalmthout","Stabroek","Veerle","Hoevenen","Wommelgem","Itegem","Booischot","Heist-op-den-Berg","Wiekevorst","Schoten","Schilde","Ekeren","Zoersel","Arendonk","Poppel","Meerle","Vlezenbeek","Kortenberg","Izegem","Leuven","Kampenhout","Gavere","Scherpenheuvel","Paal","Lanaken","Eksel","Zonhoven","Alken","Maasmechelen","Overpelt","Sint-Truiden","Bilzen","Bunsbeek","Zandhoven","Aalter","Diksmuide","Kuurne","Oudenaarde","Deinze","Gistel","Deerlijk","Zedelgem","Hever","Ranst","Oosterzele","Grobbendonk","Pulderbos","Ravels","Borgerhout","Vosselaar","Beerse","Bouwel","Westmalle","Aarschot","Hoboken","Tisselt","Weelde","Kapelle-op-den-Bos","Haacht","Essen","Oud-Turnhout","Boechout","Rumst","Reet","Muizen","Herenthout","Berlaar","Hulshout","Rotselaar","Putte","Herentals","Morkhoven","Retie","Wechelderzande","Beerzel","Halle","Lembeek","Wolvertem","Lennik","Sterrebeek","Humbeek","Beigem","Ternat","Lot","Merchtem","Etterbeek","Herne","Vollezele","Tienen","Hoegaarden","Woluwe-Saint-Lambert","Buizingen","Forest","Nossegem","Schaarbeek","Gooik","Galmaarden","Machelen","Werchter","Herent","Olen","Lille","Gierle","Kasterlee","Waarloos","Tongerlo","Rijmenam","Hombeek","Leest","Boortmeerbeek","Muizen","Lint","Edegem","Hove","Koningshooikt","Anzegem","Ingooigem","Tielt","Meulebeke","Ingelmunster","Dentergem","Veldegem","Middelkerke","Westende","Ostend","Oostrozebeke","Ledegem","Assenede","Jabbeke","Oudenburg","Nevele","Kaprijke","Lovendegem","Rumbeke","Moorslede","Zonnebeke","Dadizele","Beveren","Maldegem","Adegem","Wingene","Sint-Laureins","Knesselare","Waarschoot","Park","Nameche","Yvoir","Molenbeek-Saint-Jean","Anseroeul","Ittre","Chievres","Manage","Arsimont","La LouviÃ¨re","Sirault","Kain","Dampremy","Corroy-le-Grand","Jemeppe-sur-Sambre","Tournai","Bonlez","Chercq","Wasmes","Chaumont-Gistoux","Court-Saint-Etienne","Nodebais","Nethen","Wanfercee-Baulet","Bousval","Mont-Saint-Guibert","Lommel","Niel","Boom","Hofstade","Ciney","Wepion","Celles","Vremde","Goor","Jupille-sur-Meuse","Waremme","Rocourt","Montegnee","Grivegnee","Saint-Leger","Faimes","Loppem","Ronse","Assebroek","Warneton","Fleron","Massemen","Herseaux","Landegem","Aartrijke","Esneux","Bastogne","Genval","Rosieres","Schelle","Helchteren","Strepy-Bracquegnies","Oud-Heverlee","Hollain","Heusden","Bissegem","Engis","Incourt","Frameries","Burst","Couvin","Sint-Stevens-Woluwe","Nazareth","Estaimpuis","Auderghem","Fayt-lez-Manage","Lambermont","Saint-Symphorien","Houdeng-Goegnies","Cuesmes","Nil Saint-Vincent","Binche","Pont-a-Celles","Haut-Ittre","Relegem","Andrimont","Butgenbach","Wierde","Clavier","Erezee","Ferrieres","Wanne","Torhout","Bellem","Ohey","Marchin","Villers-sur-Semois","Theux","Bavikhove","Tessenderlo","Moha","Henri-Chapelle","Alleur","Haccourt","Richelle","Horion-Hozemont","Trooz","Kessel-Lo","Peer","Marais","Anderlues","Tertre","Sankt Vith","Morlanwelz-Mariemont","Bocholt","Hamont","Achel","Genk","As","Bree","Opglabbeek","Kinrooi","Maaseik","Begijnendijk","Ham","Dilsen","Stokkem","Elen","Opgrimbie","Hoeselt","Riemst","Tongeren","Kaulille","Baal","Tielt","Lubbeek","Nieuwrode","Kortrijk-Dutsel","Gingelom","Borgloon","Nieuwerkerken","Klein-Gelmen","Heers","Zutendaal","Rosmeer","Munsterbilzen","Halen","Leopoldsburg","Zolder","Lummen","Heppen","Neerpelt","Hechtel","Geetbets","Zoutleeuw","Attenhoven","Landen","Budingen","Kersbeek-Miskom","Langdorp","Ramsel","Rillaar","Herselt","Diest","Houthalen","Sint-Lambrechts-Herk","Boorsem","Gruitrode","Neerlinter","Hoeleden","Blanden","Molenstede","Averbode","Zichem","Kuringen","Diepenbeek","Opoeteren","Opitter","Meeuwen","Herk-de-Stad","Melkwezer","Bekkevoort","Haasrode","Meensel-Kiezegem","Wellen","Velm","Ulbeek","Kozen","Holsbeek","Betekom","Pellenberg","Linden","Testelt","Stevoort","Kortessem","Beringen","Beverlo","Koersel","Schulen","Meerlaar","Kwaadmechelen","Ham","Oostham","Rekem","Eigenbilzen","Vliermaalroot","Kermt","Vliermaal","Wolfsdonk","Assent","Glabbeek","Baarle-Hertog","Poederlee","Lichtaart","Hemiksem","Sinaai","Minderhout","Merksplas","Hoogstraten","Meersel","Oelegem","Kessel","Rijkevorsel","Pulle","Heindonk","Eppegem","Schriek","Hallaar","Loenhout","Berendrecht","Terhagen","Wespelaar","Tildonk","Blankenberge","Buvrinnes","Bierset","Saive","Remicourt","Hodeige","Braives","Flemalle-Grande","Ramet","Vivegnis","Flemalle-Haute","Neuville-en-Condroz","Boncelles","Saint-Nicolas","Vottem","Juprelle","Bassenge","Melen","Saint-Remy","Fexhe-le-Haut-Clocher","Amay","Comblain-au-Pont","Thulin","Aubel","Goutroux","Herlaimont","Chastre","Viesville","Loverval","Couillet","Luttre","Velaine-sur-Sambre","Thimeon","Auvelais","Pont-de-Loup","Farciennes","Fontaine","Fontaine-l'Eveque","Isnes","Wagnelee","Louvain-la-Neuve","Braine-l'Alleud","Lillois-Witterzee","Herve","Ath","Casteau","Bernissart","Quevaucamps","Floreffe","Bovesse","Malonne","Saint-Servais","Membach","Spa","Lambermont","Aubange","Mettet","Hotton","Hampteau","Gourdinne","Xhoris","Filot","Ampsin","Naast","Nivelles","Houtain-le-Val","Remersdaal","AnhÃ©e","Messancy","Bressoux","Vedrin","Roeulx","Aywaille","Sclayn","Bilstain","Grand-Rechain","Eghezee","Ecaussinnes-Lalaing","Braine-le-Comte","Baisy-Thy","Stembert","Rhisnes","Battice","Blegny","Donceel","Chaudfontaine","Limbourg","Embourg","Haneffe","Bredene","Oostkamp","Wevelgem","Marke","Staden","Knokke","Oordegem","Vance","Emptinne","Gelrode","Borchtlombeek","Eke","Koksijde","Wolkrange","Duisburg","Vaux-sous-Chevremont","Olne","Verlaine","Flawinne","Florenville","Kettenis","Walhorn","Malmedy","Montzen","Izel","Tilff","Astenet","Lisogne","Natoye","Cerexhe-Heuseux","Nandrin","Belle Fontaine","Jemappes","Saint-Ghislain","Jodoigne","Baudour","Villers-le-Bouillet","Coret","Saint-Gilles","Quaregnon","Lessines","Flenu","Boussu","Hermee","Plainevaux","Houffalize","Gellik","Leerbeek","Neerharen","Ghlin","Limal","Pipaix","Ottignies","Limelette","Hornu","Dour","Leuze","Hautrage","Jurbise","Leernes","Sart Melin","Watermael-Boitsfort","Xhendremael","Huldenberg","Warsage","Fallais","Baelen","Othee","Stavelot","Ressaix","Estinnes-au-Val","Nimy","Mont-Sainte-Aldegonde","Obourg","Maisieres","Waudrez","Warquignies","Awirs","Bouillon","Avelgem","De Panne","Zulte","Wortegem","Eernegem","Ruisbroek","Humbeek","Sart-lez-Spa","Ciplet","Damme","Ertvelde","Agimont","Barchon","Virton","Heusy","Nokere","Vichte","Vlierzele","Laken","Ways","Plancenoit","Charneux","Walhain","Hooglede","Beernem","Colfontaine","Sart-Dames-Avelines","Ledeberg","Diegem","Tohogne","Bierbeek","Sainte-Ode","Chiny","Dorinne","Brugelette","Dottignies","Oostende","Hamme-Mille","Pamel","Peutie","Vossem","Veltem-Beisem","Everberg","Leefdaal","Bertem","Neerijse","Wijgmaal","Saint-Jean-Geest","Winksele","Korbeek-Dijle","Sint-Agatha-Rode","Ruisbroek","Elingen","Brussegem","Korbeek-Lo","Oostmalle","Meerhout","Broechem","Emblem","Ramsdonk","Blaasveld","Bevel","'s-Gravenwezel","Recht","Latinne","Hermalle-sous-Argenteau","Waleffe Saint-Georges","Enghien","Thisnes","Heure-le-Romain","Housse","Beauvechain","Glimes","Souvret","Monceau-sur-Sambre","Wangenies","Welkenraedt","Geer","Goe","Assesse","Voroux-Goreux","Momalle","Florennes","Morialme","Ecaussinnes-d'Enghien","Belgrade","Ligny","Nouvelles","Dalhem","Dinant","Ham-sur-Sambre","Carnieres","Ophain","Bouge","Basecles","Stoumont","Lincent","Ensival","Dongelberg","Louveigne","Orp-le-Grand","Soignies","Saint-Josse-ten-Noode","Haren","Saint-Sauveur","Gages","Hensies","Gobard","Herinnes","Sombreffe","Chaussee-Notre-Dame-Louvignies","Tongre-Notre-Dame","Rode","Mariekerke","Maurage","Sleidinge","Mariembourg","La Hestre","Rance","Bois-d'Haine","Velaines","Renlies","Knokke-Heist","Lippelo","Bertrix","Houtaing","Rebaix","Sart-en-Fagne","Havay","Attre","Saint-Mard","Retinne","Oedelem","Wieze","Parike","Zandbergen","Mere","Kruishoutem","Zingem","Schorisse","Etikhove","Klemskerke","Zuienkerke","Menen","Westouter","Poperinge","Kortemark","Astene","Heist","Dudzele","Kanegem","Oeselgem","Harelbeke","Kortenaken","Rummen","Letterhoutem","Toernich","Jamioulx","Fosse des Loups","Ster","Tilleur","Ellignies-Sainte-Anne","Couthuin","Seilles","Anthisnes","Varsenare","De Haan","Ruien","Zwartenbroek","Petegem","Stene","Sijsele","Vlissegem","Ursel","Zomergem","Hansbeke","Vinderhoute","Bassevelde","Watervliet","Oosteeklo","Nukerke","Werken","Bovekerke","Koekelare","Bavegem","Scheldewindeke","Sint-Andries","Ypres","Elverdinge","Langemark","Zwevegem","Aalbeke","Heule","Markegem","Ooigem","Houthulst","Boezinge","Woesten","Reninge","Alveringem","Lauwe","Wervik","Comines","Houthem","Rekkem","Ploegsteert","Lichtervelde","Vladslo","Ruddervoorde","Meigem","Wakken","Sint-Baafs-Vijve","Wielsbeke","Aarsele","Oostvleteren","Passendale","Geluwe","Ichtegem","Nieuwpoort","Nieuwpoort","Zwevezele","Kachtem","Pervijze","Desselgem","Loker","Voormezele","Moen","Tiegem","Otegem","Heestert","Ramskapelle","Sint-Maria-Latem","Middelburg","Outrijve","Lendelede","Gullegem","Pittem","Zarren","Overheide","Molenbeek","Grand-Reng","Erquelinnes","Stree","Chimay","Feluy","Sablon","Ghislenghien","Post","Melsbroek","Sint-Pieters op de Dijk","Grand","Libramont","Veurne","Vaux","Gentinnes","Orbais","Grand-Leez","Biercee","Seneffe","Thynes","Warchin","Okegem","Ardooie","Leffinge","Avekapelle","Leisele","Adinkerke","Lissewege","Serskamp","Sint-Kornelis-Horebeke","Impe","Lotenhulle","Haasdonk","Lanklaar","Schalkhoven","Thy-le-Chateau","Lobbes","Beloeil","Gouy-lez-Pieton","La Calamine","Chevron","Saintes","Neder-Over-Heembeek","Oppem","Arquennes","Banneux","Burdinne","Marche-lez-Ecaussinnes","Heffen","Houtvenne","Lier","Schaffen","Kerkhove","Gits","Wenduine","Dranouter","Poelkapelle","Kerksken","Quenast","Arbrefontaine","Forrieres","Freylange"
,"United Arab Emirates","Abu Dhabi","Sharjah","Dubai","Dayrah","Al Ain","Fujairah","Ras al-Khaimah","Ar Ruways","As Satwah","Al Khan"
,"Kazakhstan","Almaty","Oral","Kostanay","Qaskeleng","Karagandy","Temirtau","Astana","Taldykorgan","Talghar","Pavlodar","Ekibastuz","Atyrau","KÃ¶kshetaÅ«","Aksay","Taraz","Petropavl","Shymkent","Serebryansk","Ridder","ShemonaÄ«kha","Semey","AqsÅ«","Kyzylorda","AqtÃ¶be","KhromtaÅ«","Aqtau","Taldyk","ZhangaÃ¶zen","Karagandy","Dzhezkazgan","Baikonur","Kyzyl","Koktem","Dostyk","Sonaly","Kentau","Rudnyy","Turgen'","Esil","Vostok","Qaraghandy","Uritskiy","Kazakh","Stepnogorsk","Ust-Kamenogorsk","LÄ«sakovsk","Aksoran","Zyryanovsk","Aqtas","BÃ¶rili","Lomonosovka","Turkestan"
,"Portugal","Amarante","Sanfins do Douro","Vilarinho das Paranheiras","Chaves","Boticas","Braganca","Vila Real","Miranda do Douro","Carrazedo","Vilarinho de Arcos","Mirandela","Macedo de Cavaleiros","Vinhais","Peso da RÃ©gua Municipality","Lamego","Tabuaco","Penafiel","Dalvares","Santa Marta de Penaguiao","Torre de Moncorvo","Viana do Castelo","Moncao","Caminha","Paredes de Coura","Braga","Ponte da Barca","Vila Praia de Ancora","Castelo","Arcos de Valdevez","PaÃ§os de Ferreira","Maia","Castelo de Paiva","Santo Tirso","Paredes","Carvalhosa","Porto","Sobrado de Paiva","Sobrosa","Lousada","Marco","GuimarÃ£es","Vila Nova de Gaia","Olival","Ponte de Lima","Paredes da Beira","Tarouca","Mesao Frio","Coimbra","Mira","Cernache","Condeixa-a-Nova","Alfarelos","Soure Municipality","Ceira","Montemor-o-Velho","Coimbra","Granja do Ulmeiro","Carapinheira","Sao Joao do Campo","Miranda do Corvo","Viseu","Arganil","Tondela","Castelejo","Ãgueda Municipality","Campia","Nelas","Satao","Sao Vicente de Lafoes","Parada de Gonta","Mangualde","Santa Comba Dao","Mamouros","Murtede","Cantanhede","Mortagua","Oliveira do Bairro","Mealhada","Poiares","Anadia","Vilarinho do Bairro","Ovar","Oliveira de AzemÃ©is","Esmoriz","Sao Roque","Cucujaes","Feira","Sao Joao da Madeira","Arouca","Vale de Cambra","Santiago de Riba-Ul","Aveiro","Vagos","Aguada de Cima","Palhaca","Estarreja","Mourisca do Vouga","Arrifana","Sao Joao de Ver","Romariz","Sao Joao","Vale","Caldas de Sao Jorge","Nogueira do Cravo","Matosinhos Municipality","Vieira de Leiria","Porto","Baguim do Monte","Guarda","Seia","Gouveia","Vilar Formoso","Trancoso","Lagarinhos","Sao Vicente da Beira","Silvares","Castelo Branco","Lisbon","Covilha","Fundao","Paul","Carvalho","Valverde","Serta","SantarÃ©m","Vale da Pinta","Rio Maior","Almeirim","Ponte de Sor","Vila Cha de Ourique","Cartaxo","Pinheiro de Azere","LousÃ£","Penacova","Ferrel","Caldas da Rainha","Nadadouro","Benedita","Atouguia da Baleia","Alcobaca","NazarÃ©","Peniche","Obidos","Casal da Areia","Tomar","Abrantes","Entroncamento","Minde","Ourem","Amiaes de Cima","Constancia","Alcanena","Salvaterra de Magos","Mafra","Azueira","Torres Vedras","Ericeira","Sobreiro","Sobral de Monte Agraco","Carregado","Samora Correia","Vila Franca de Xira","Sacavem","Alenquer","Cercal","Pombal","Leiria","Figueira da Foz Municipality","Avelar","Costa de Lavos","Carrico","Alvaiazere","Marinha Grande","Porto de Mos","Calvaria de Cima","Maceira","Juncal","Souto da Carpalhosa","Pedreiras","Garruchas","Batalha","Pataias","Amor","Martinganca","Serpins","Carvalhal","Murteira","Obidos","Vila Nova da Barquinha","Pontevel","Praia do Ribatejo","Torres Novas","Aveiras de Cima","Lavos","Figueiro dos Vinhos","Vermoil","Graca","Zambujal","Regueira de Pontes","Benavente","Guia","Gondomar","Espinho","Senhora da Hora","Soito","Vila Nova de Famalicao","Riba de Ave","Marinha","Porto Alto","Sao Romao do Coronado","Portimao","Cesar","SetÃºbal","Almada","Massama","Alcochete","Felgueiras","Vila do Conde","Rio Tinto","Mem Martins","Oeiras","Cacem","Queluz","Alfragide","Amora","Moita","Pedroucos","Vizela","Barreiro","Faro","Bouca","Barcelos","Bombarral","Celorico de Basto","Angra do HeroÃ­smo","Pinhal Novo","Oliveira do Douro","Silveira","Moscavide","Rio de Mouro","Ferradosa","Turcifal","Prime","Vizela","Amadora","Cacela","Palmela","Macieira da Lixa","Ponta Delgada","Funchal","Estoril","Beja","Recarei","Cascais","Povoa de Lanhoso","Almancil","Amoreira","Bucelas","Albufeira","Quejas","PÃ³voa de Varzim","Odivelas","Valongo","Caparica","Loures","Gafanha da Nazare","Amares","Carnaxide","Colmeias","Fafe","Povoa de Santa Iria","Caxias","Vila Nova","Gandra","Leca da Palmeira","Acores","Varzea do Douro","Vale","Moure","Roriz","Vialonga","Seixal","Paco de Arcos","Alcabideche","Alges","Sintra","Monte Estoril","Galiza","LourinhÃ£","Seixal","Olivais","Alhos Vedros","Montijo","Loule","Tavira Municipality","Sao Bras","Quarteira","Tercena","Agualva","Pevidem","Rana","Praia do Almoxarife","Parede","Sao Pedro do Estoril","Sao Domingos de Rana","Famoes","Costa de Caparica","Lagos","Lagoa","Parchal","Olhao","Cavaleiros","Santa Iria da Azoia","Quinta","Marinhais","Boliqueime","Palhais","Sobralinho","Samouco","Porto Salvo","Frielas","Linda a Velha","Portela","Alhandra","Santo Antao do Tojal","Carcavelos","Silves","Santo Antonio","Vila Nogueira de Azeitao","Castanheira do Ribatejo","Porto da Cruz","Santo Antonio da Charneca","Pinhal","Sarilhos Grandes","Pinheiro","Sesimbra","Trancoso de Baixo","Lousa","Alverca","Montemor-o-Novo","Evora","Alandroal","Redondo","Sao Juliao do Tojal","Torre da Marinha","Ramada","Elvas","Dona Maria","Alter do Chao","Manique de Baixo","Lagoa","Colares","Charneca","Venda do Pinheiro","Ourique","Estremoz","Sao Joao dos Montes","Milharado","Pontinha","Sao Bras de Alportel","Alportel","Almodovar","Alfornelos","Rinchoa","Aldeia de Paio Pires","Barcarena","Caldas de Vizela","Aguiar da Beira Municipality","Anta","Sao Mamede de Infesta","Lourical","Runa","Penha Garcia","Atalaia","Zibreira","Reguengo Grande","Ilhavo","Madeira","Alcains","Chao de Couce","Vila Franca do Rosario","Golega","Arruda dos Vinhos","Alpiarca","Gandara dos Olivais","Ponte de Vagos","Boavista","Lago","CÃ¢mara de Lobos","Vila Nova","Cabecudos","Felgueiras","Povoa do Forno","Canical","Canico","Santa Cruz","Oliveira","Cortegaca","Pragal","Corroios","Ferro","Santo Andre","Baleia","Sanguedo","Arraiolos","Vendas Novas","Vidigueira","Sao Francisco","Carvoeiro","Pardilho","Valado de Frades","Assumar","Valega","Argoncilhe","Mozelos","Belmonte","Roque","Portel","Canedo","Silva","Portalegre","Oliveira do Hospital","Sabugal","Quinta do Anjo","Gulpilhares","Lordelo","Queluz de Baixo","Malveira","Taveiro","Linho","Damaia","Cruz Quebrada","Canecas","Lavradio","Vilar do Pinheiro","Machico","Estombar","Monchique","Mexilhoeira Grande","Castro Verde Municipality","Estoi","Poceirao","Pegoes Velhos","Santa Barbara de Nexe","Pero Pinheiro","Almargem","Bicesse","Campo Maior","Praia do Carvoeiro","Algoz","Benafim","Pechao","Santana","Casal","Cano","Armacao de Pera","Castro Marim","Altura","Alvarinhos","Ponta do Sol","Porto Moniz","Tires","Lajes","Igreja Nova","Abobada","Cabeco de Vide","Cacilhas","Vila Alva","Tunes","Santa Clara-a-Velha","Cabrela","Nisa","Arronches","Olhos de Agua","Ribeira Grande","Ermidas","Santiago do Cacem","Sines Municipality","Serpa","Aljustrel","Vila Nova","Cuba","Grandola","Santiago","Campanario","Vila de Porto Santo","Viana do Alentejo","Monsaraz","Penteado","Sobreda","Praia da Vitoria","Reguengos de Monsaraz","Sao Joao das Lampas","Paderne","Montelavar","Canhas","Arco da Calheta","Monforte","Vila Real de Santo AntÃ³nio","Porto","Lourel de Baixo","Souzel","Bobadela","Cidade","Algueirao","Belas","Moura","Moura","Outeiro","Campinho","Vimieiro","Fogueteiro","Odemira","Escoural","Povoa da Galega","Buraca","Borba","Aljezur","Poco Barreto","Canedo","Vila Verde","Trofa","Canelas","Marco de Canaveses","Santa Marta","Felgueiras","Vermelha","Vidago","Travanca","Grijo","Lavra","Alfena","Azurem","Creixomil","Godim","Escapaes","Leca do Bailio","Guimaraes","Brito","Porto","Esposende","Fao","Joane","Vilela","Pedroso","Granja","Vila Cha","Muro","Sendim","Paredes","Moreira de Conegos","Lousado","Forte","Vila Nova","Massarelos","Sao Marcos","Manique do Intendente","Sardoal","Bico","Trafaria","Malveira da Serra","Fanzeres","Bemfica","Sobrado","Sao Felix da Marinha","Sul","Praia de Mira","Sangalhos","Arcozelo","Infesta","Baguim","Caldas das Taipas","Aldeia dos Fernandes","Penela","Povoa de Santo Adriao","Freamunde","Camarate","Talaide","Polima","Sao Joao da Talha","Entroncamento","Riachos","FÃ¡tima","Mira","Azoia","Alcoentre","Foz do Sousa","Valbom","Rio de Moinhos","Milhazes","Santa Catarina","Proenca-a-Nova","Teixoso","Canidelo","Santiago","Piedade","Vilar de Perdizes","Montes","Cinfaes","Seroa","Vila Boa de Quires","Touguinha","Fradelos","Ribeirao","Ferreira","Cabeceiras de Basto","Alcanede","Vale de Acor","Gradil","Sao Pedro da Cadeira","Encarnacao","Folgados","Linhaceira","Igreja Nova","Santa Catarina da Serra","Figueira de Lorvao","Vila Nova de Cerveira","Valenca","Mocarria","Constance","Albergaria-a-Velha","Oia","Monsanto","Neiva","Amorim","Agucadoura","Povoa","Povoa","Nine","Macas de Caminho","Dossaos","Modivas","Rebordosa","Ota","Margaride","BaiÃ£o","Nespereira","Lourosa","Paraiso","Avintes","Prazins","Basto","Salto","Ronfe","Mesao Frio","Guardizela","Gemunde","Jovim","Prado","Alvelos","Tamel","Santiago da Guarda","Olivais","Landim","Vila Nova de Paiva","Vieira do Minho","Montalvo","Marteleira","Barrosas","Avanca","Darque","Pinheiro da Bemposta","Nogueira","Soalheira","Tocha","Sandim","Cadaval","Parada do Bispo","Sever do Vouga","Calvao","Campo","Cavaloes","Avidos","Quinchaes","Negrelos","Lagoa","Vilar do Paraiso","Ponte","AlijÃ³ Municipality","Arazede","Ponta","Arvore","Dois Portos","Samil","Vale","Beira","Ramo","Caramulo","Terena","Alqueidao da Serra","Alcacer do Sal","Vila do Bispo","Ortiga","Sete Rios","Pereira","Cabanelas","Montes","Telhado","Real","Apulia","Baltar","Palmeira","Quinta","Lagoas","Ribeira Brava","Castro Daire","Catraia de Sao Paio","Salreu","Aldeia do Meio","Ferreira do Alentejo","Tourais","Eixo","Penedono","Nogueira da Regedoura","Fiaes","Maceda","Caldas","Treixedo"
,"Saudi Arabia","Riyadh","Dammam","Safwa","Al Qatif","Dhahran","Al Faruq","Khobar","Jubail","Sayhat","Jeddah","Ta'if","Mecca","Al Hufuf","Medina","Rahimah","Rabigh","Yanbu` al Bahr","Abqaiq","Mina","Ramdah","Linah","Abha","Jizan","Al Yamamah","Tabuk","Sambah","Ras Tanura","At Tuwal","Sabya","Buraidah","Madinat Yanbu` as Sina`iyah","Hayil","Khulays","Khamis Mushait","Ra's al Khafji","Najran","Sakaka","Al Bahah","Rahman","Jazirah","Jazirah"
,"Denmark","Copenhagen","Frederiksberg","Bronshoj","Albertslund","HillerÃ¸d","FrederiksvÃ¦rk","Vasby","Elsinore","Roskilde","Brande","Vejle","Viborg","KÃ¸ge","Herlev","Aarhus","Randers","Uldum","Egtved","Galten","Hammel","HÃ¸rsholm","BirkerÃ¸d","Hvidovre","Ganlose","Hedehusene","RÃ¸dovre","IshÃ¸j","Frederikssund","Tarm","Haderslev","Soborg","RÃ¸nne","Vordingborg","Fakse","RingkÃ¸bing","Assens","Odense","Niva","Olstykke","Lemvig","Holstebro","Fensmark","JÃ¦gerspris","Jyllinge","KorsÃ¸r","Naestved","Holbaek","Karup","Karlstrup","Kongens Lyngby","Hundested","Farum","Snekkersten","Allerod","Skaering","Ega","Hornslet","Hjortshoj","Skodstrup","Lystrup","Hinnerup","DragÃ¸r","Gentofte","Ronde","VallensbÃ¦k","Risskov","Kokkedal","Kirke Hvalso","Ballerup","Fredericia","Humlebaek","Nakskov","NÃ¸rre Alslev","Glostrup","Ikast","Malov","Fredensborg","Stenlose","Skovlunde","Kirke-Hyllinge","Kirke Saby","Lejre","Tune","Havdrup","Solrod","Viby","Sonderso","Faaborg","Marstal","Langeskov","Kerteminde","Middelfart","Ejby","Arslev","RudkÃ¸bing","Svendborg","Tommerup","Silkeborg","Ans","Herning","Aabenraa","Ribe","Christiansfeld","Karlslunde","SÃ¸nderborg","Augustenborg","Vojens","Skanderborg","Braedstrup","Horsens","Odder","Kolding","Vamdrup","Stenderup","Juelsminde","Bredballe","Lunderskov","Hampen","Ejstrup","Gedved","Brejning","Ostbirk","Ry","Snedsted","Nykobing Mors","Hurup","Baekmarksbro","Struer","Roslev","Thisted","Vinderup","Skive","Hellerup","Charlottenlund","Klampenborg","Greve","Slagelse","Dalmose","Bagsvaerd","Ringsted","Gilleleje","Helsinge","Graested","Slangerup","Tollose","Kalundborg","Vig","Hadsten","Viby","Marslet","Hojbjerg","Ledoje","Soro","Haslev","Borup","Harlev","Tureby","Ruds-Vedby","Olsted","Vejby","HjÃ¸rring","Vadum","BrÃ¸nderslev","Frederikshavn","Vra","Sindal","Strandby","Norre Bindslev","Gandrup","Hirtshals","Kastrup","Liseleje","Virum","Hornbaek","Espergaerde","Holte","Gislinge","Ugerlose","Farevejle","Follenslev","Taastrup","PrÃ¦stÃ¸","Lundby Stationsby","Knebel","Havndal","GrenÃ¥","Morke","Virring","Hasselager","Tilst","Malling","Abyhoj","Vaerlose","Stege","Aalborg","Stovring","Ringe","SakskÃ¸bing","VidebÃ¦k","Nykobing Falster","Idestrup","Brovst","Aabybro","Morkov","Svinninge","Dianalund","Hals","Lasby","Skjern","Bjerringbro","Vedbaek","Rungsted","Naerum","LÃ¸gstÃ¸r","FarsÃ¸","Gistrup","Norresundby","Storvorde","Hadsund","Hobro","Terndrup","Haderup","Oster Assels","Erslev","Frostrup","Svaneke","Hojby","Herfolge","Lille Skensved","RÃ¸nnede","Vissenbjerg","Svanninge","Ã†rÃ¸skÃ¸bing","Nyborg","Asnaes","Jelling","Brabrand","Gadstrup","Askeby","Tappernoje","Maribo","Nysted","StubbekÃ¸bing","Eskilstrup","RÃ¸dby","Vemb","SkÃ¸rping","Norager","Lynge","Gadbjerg","Them","Vejen","Aars","Hedensted","Harpelunde","Rodvig","Frederiksberg","Brondby Strand","Tagerup","Skibby","Ejby","Vivild","Esbjerg","Norre Snede","Skaelskor","Horve","Regstrup","Jyderup","HÃ¸ng","Stroby","Store Heddinge","Bjaeverskov","Stenlille","Gammel Svebolle","Snertinge","Vemmelev","Grevinge","Munke Bjergby","Stokkemarke","Sollested","Guldborg","Mern","Karrebaeksminde","Bogo By","Kettinge","RÃ¸dekro","Spentrup","Gudbjerg","TÃ¸nder","Randbol","Bramming","LÃ¸gumkloster","Varde","Ã˜lgod","Vorbasse","Krusa","Nordborg","Oksbol","Rodding","Billund","Hemmet","Aller","Ullerslev","Gislev","Mariager","Baelum","Ranum","Alestrup","Nibe","Tranebjerg","Ulstrup","Orbaek","Torring","Allingabro","Tjaereborg","Henne","Sherrebek","Holsted","Gram","Tistrup","Brorup","Nordenskov","Padborg","Agerskov","Bredebro","Vandel","Broager","Kjargaard","Daugard","Losning","Vestbjerg","Tylstrup","Suldrup","Vodskov","Sjolund","Almind","Glumso","Hovedgard","Ebeltoft","Hjallerup","Dronninglund","Tars","Give","Arre","Brenderup","Auning","Jerslev","Tisvildeleje","Kvistgard","Alsgarde","Bredsten","Gording","Otterup","Lokken","Alslev","Fuglebjerg","Store Merlose","Ferritslev","Tranbjerg","Kirke Eskilstrup","Hundslund","Sandager","Saltum","Jerslev","Asa","Fjerritslev","Gjol","Saeby","Dybvad","Ostervra","Skagen","Pandrup","Akirkeby","Vekso","Jorlunde","Svenstrup","Avlum","Gorlose","Harlev","Gudme","Harby","Kibaek","Klarup","Munkebo","Norre Aby","SkÃ¦vinge","Solbjerg","Vildbjerg","Vipperod","Arup","Gelsted","Glamsbjerg","Ryslinge","Stensved","Strib","Bovrup","Tornby","Morud","Oure","Klemensker","Gudhjem","Bogense","Frorup","Trige","Logstrup","Ryomgard","Kejlstrup","Kolind","Engesvang","Hojslev","Kjellerup","Tinglev","Gredstedbro","Egernsund","Blokhus","Ulfborg","Grindsted","GÃ¸rlev","Orsted","Farup","Langa","Klovborg","Ale","Bryrup","Nykobing Sjaelland","Sandved","Agedrup","Vejstrup","Sabro","Tarbaek","Vaeggerlose","Kastrup","Hanstholm","Hornsyld","Norre Nebel","Jerup","Sunds","Thorso","Hellebaek","Moldrup","Hosterkob","Skamby","Lyngby","Nodebo","Skarup","Ebberup","Fovling","Beder","Arden","Ostermarie","GrÃ¥sten","Sulsted","Sonder Omme","Fjenneslev","Harndrup","Borkop","Albaek","Ornhoj","Gladsaxe","Horning","Karise","Toftlund","Hejnsvig","Hesselager","Vester-Skerninge","Stenstrup","Hoje Tastrup","Agerbaek","Alslev","Herlufmagle","Koldby","Laurbjerg","Dannemare","Ansager","Refsvindinge","Sorring","Orum","Blommenslyst","Slet","Norre Asmindrup","Lambjerg","Hoptrup","Stakroge","Bandholm","Bovlingbjerg","Harboore","Spottrup","Farvang","Gjern","Hvide Sande","Rodkaersbro","Lemming","Lem","Bording Stationsby","Vester Hassing","Hou","Trustrup","Gjerlev","Balle","Kongerslev","Vebbestrup","Nexo","Allinge","Soby","Humble","Marslev","Rude","LangebÃ¦k","Borre","Store Fuglede","Oddesund Syd","Hasle","Blavand","Omme","Kolsen","Bedsted","Skodsborg","Himmelev","Sundby","Jordrup","Baekke","Gesten","Viuf","Stouby","Sonder Stenderup","Barrit","Hejls","Bjaert","Trelde","Millinge","Nordby","Odsted","Veflinge","Brobyvaerk","Baring","Verninge","Osby","Glesborg","Frederiksdal","Rynkeby","Asperup","Kvaerndrup","Skals","Astrup","Holme-Olstrup","Holeby","Flemming","Salten","Stoholm","Sanderum","Vantinge","Toreby","Horbelev","Vesterborg","Glyngore","Tjebberup","Eskebjerg","Nygard","Nimtofte","Melby","Boeslunde","Klippinge","Tim","Hammershoj","Nim","Greve Strand","Ramlose","Ferslev","Soesmarke","Tullebolle","Tranekaer","Klokkerholm","Laeso","Spjald","Sorvad","Hodsager","Dronningmolle","Bylderup-Bov","Norreballe","Sommersted","Glejbjerg","Janderup","Branderup","TRUE","TÃ¥rnby","Vinkel","Bolderslev","Torring","Borum","Arslev","Bruunshab","Kvols","Tikob","No","Hyllinge","Kalvehave","BrÃ¸ndby","Horslunde","Torrig","Flauenskjold","Anholt","Tejn","Vestervig","Hjerm","Vederso","Vils","Kaldred","Dong","Holme","Henne Strand","Jystrup","Rebaek","Bevtoft","Martofte","Naesby","Errindlev"
,"Slovenia","Velenje","Ljubljana","Smartno ob Paki","Radovljica","Begunje na Gorenjskem","Sencur","Bevke","Kamnik","Lesce","Bled","Å½irovnica","Prebold","Tisina","Jesenice","Bohinjska Bela","Crensovci","Mojstrana","KoÄevje","Piran","SeÅ¾ana","Nova Gorica","Cerknica","Ig","Zgornje Gorje","Kranj","Gornja Radgona","Ptuj","Gorisnica","Markovci","Lendava","Beltinci","Sredisce ob Dravi","Naklo","Breginj","LaÅ¡ko","Novo Mesto","Velika Loka","Zgornje Hoce","Prevalje","Å entjur pri Celju","RogaÅ¡ka Slatina","Mozirje","Mezica","Slovenj Gradec","Stahovica","Murska Sobota","Kranjska Gora","Koper","Breznica","Maribor","Cirkovce","Pernica","Krajna","DomÅ¾ale","Dob","Dobrova","Grosuplje","Trbovlje","Ilirska Bistrica","Vrhnika","Logatec","Prestranek","Horjul","Globoko","Stari Trg pri Lozu","Izola","Spodnji Ivanjci","Hrusica","Kidricevo","Komenda","Å entjernej","Medvode","KrÅ¡ko","Dolenjske Toplice","Pesnica pri Mariboru","Poljcane","RuÅ¡e","Lovrenc na Dravskem Polju","Miklavz na Dravskem Polju","Spodnji Duplek","Slovenska Bistrica","Å½alec","Dol pri Ljubljani","Polhov Gradec","Videm","Pobegi","AjdovÅ¡Äina","Radomlje","Vipava","Litija","Notranje Gorice","Smlednik","Hotedrsica","Dornava","Vojnik","Ljubecna","Å kofja Loka","Zgornje Skofije","Skofljica","DivaÄa","Kobarid","Polzela","Menges","Stara Cerkev","Kojsko","Ankaran","Tolmin","PodÄetrtek","Log pri Brezovici","Ravne","Trzin","Sevnica","Brestanica","Zelezniki","Grize","Verzej","Mirna","Knezak","Dekani","Moravce","Lenart v Slov. Goricah","Limbus","BreÅ¾ice","Sentvid pri Sticni","Borovnica","Besnica","Smarje-Sap","Postojna","Smarje pri Jelsah","Slovenske Konjice","Hrastnik","Zagorje ob Savi","Lovrenc na Pohorju","Dravograd","Smarje","Selnica ob Dravi","Bistrica pri Rusah","Radlje ob Dravi","Podbocje","Zgornja Polskava","Puconci","Rocinj","Dobravlje","Vodice","Idrija","Gmajnica","Ravne na Koroskem","Sostanj","Sempeter pri Gorici","Rakek","PortoroÅ¾","Gorenja Vas","Cemsenik","Spodnji Brnik","Preserje","Trzic","Ziri","Starse","Lokev","Secovlje","Cersak","Cerklje ob Krki","Spodnje Hoce","Nova Cerkev","Sentjanz","Zidani Most","Petrovce","Dobrunje","Miren"
,"Iran","Karaj","Golestan","Mashhad","Khorasan","Razaviyeh","Semnan","Sistan-e `Olya","Birjand","Qazvin","Farsi","Tiran","Bandar BÅ«shehr","Kerman","Sirjan","Yasuj","Kermanshah","Hamadan","Kordestan-e `Olya","Tabriz","Azaran","Ardabil","Zanjan","Shahid","Pasargad","Sena","Sabz","Baharan","Negar","Rasht","Rafsanjan","Isfahan","Ahvaz","Shiraz","Khong","Baladeh","Barbun","Hasanabad-e Qadamgah","Behjan","Shahrak-e Pars","Peshgoman","Gostar","Yazd","Ilam","Bakhtiari","Gharbi","Gilan-e Gharb","Gazan-e Bala","Sharif","Shahrud","`Oryan","Ashna","Shahrak","Payam","Baseri Hadi","Mohr","Tonekabon","Dezful","Peyk","Abadan","Samen","Shahriar","Azad","Taha","Borran-e Bala","Arnan","Najafabad","Golriz","Hirad","Kashan","Banak","Torkan","Vaj","Piruz","Mehin","Bakhtiaruyeh","Golpayegan","Bandar-e Mahshahr","Sanandaj","Zahedan","Arak","Bastak","Gilas","Urmia","Lahijan","Shahr","Parpis","Kelarabad","Neka","Behshahr","Esfarayen","Abol","Chabahar","Zabol","Saravan","Iranshahr","Rasak","Khash","Falavarjan","Chah Deraz","Baghin","Zangiabad","Kord Kandi","Rigan","Jiroft","Bandar-e Khamir","Ravar","Varamin","Damavand","Razan","Nahavand","Homa","Hashtgerd","Amol","Arsanjan","Karimkhan","Fardis","Parsian","Emam","Neyshabur","Vandar","Hormozabad","Baft","Onar","Bardsir","Qeshm","Siahkal","Miandoab","Hadishahr","Sahand","Soltanabad","Sabzevar","Gorgan","Kordovan-e Sofla","Chapar","Shahid Madani","Khameneh","Khalkhal","Manjil","Hashtpar","Salmas","Shirvan","Shahrak-e Milad","Darmian","Nehbandan","Quchan","Babol","Mamasani","Malayer","Razi","Band","Badr","Behbahan","Ashan","Dadeh","Saman","Sari","Shahrak-e Direh","Fasa","Wahna","Qasr od Dasht","Mahestan","Jahan","Mobarakeh","Kaman","Kish","Bidak","Ravand","Jadir","Jahrom","Post","Naji","Hush","Mehregan","Khowrshid","Birizg","Gerash","Lamerd","Khowrasgan","Kian","Novin","Shahreza","Idah","Jahan Nama","Behdasht","Azadi","Evin","Nasir","Shadman","Khvajeh","Malek Talesh","Bostan","Eslamshahr","Saveh","Mahallat","Takestan","Zahra","Garmsar","Damghan","Shazand","Khomeyn","Ashtian","Semirom","Khomeyni Shahr","Valilu","Rayen","Meybod","Ardakan","Rabor","`Aliabad","Zarand","Neyriz","Estahban","Fordu","Servan","Maragheh","Marand","Bonab","Malekan","Mianej","Julfa","Khvoy","Mahabad","Bukan","Meshgin Shahr","Moghan","Germi","`Aliabad-e Aq Hesar","Astara","Amlash","Asadabad","Dorud","Ravansar","Shahid Chamran","Kabir"
,"Norway","Jar","Karlshus","Moss","Oslo","Frogner","Drammen","Vestby","Aursmoen","Tranby","Bergen","Sarpsborg","Kongsvinger","Asgardstrand","Kolbotn","LillestrÃ¸m","Horten","Lysaker","Nesbru","Skarnes","Aseral","Stokke","Hammerfest","Askim","Sortland","Rygge","Leirsund","Dal","Raholt","Dilling","Elverum","Trondheim","Kolsas","Fornebu","Skien","Finnsnes","Tomasjorda","TromsÃ¸","Tromsdalen","Hovik verk","Stabekk","Oppegard","Arendal","GjÃ¸vik","Salhus","Hol","Gjerdrum","Fetsund","Ã…lesund","Molde","Skodje","Fosnavag","Brattvag","Langevag","Syvik","Vestnes","Volda","Ulsteinvik","Eide","Hareid","Stranda","Stordal","Hjelset","Tennfjord","Lyngstad","Kristiansund","Rovde","Aukra","Skotterud","Moelv","Magnor","Brumunddal","Harstad","Larvik","Andalsnes","Ski","Halden","Sandefjord","Fredrikstad","TÃ¸nsberg","Porsgrunn","Baerums verk","Tertnes","Rjukan","Holmestrand","Lillehammer","BodÃ¸","Krakeroy","Rolvsoy","Saltnes","Haukeland","Ranheim","Jessheim","Sandvika","Haslum","Asker","Langhus","Stavern","Gressvik","Kragero","Nevlunghamn","Hamar","Ottestad","Arnes","Gran","Mo i Rana","Frekhaug","Eidsvoll verk","Kristiansand","Narvik","Stathelle","Heimdal","NÃ¸tterÃ¸y","Sorum","Sorumsand","Saupstad","Ã˜rsta","Bones","Steinkjer","Engalsvik","Karlshus","Nesoddtangen","Stange","Honefoss","Jevnaker","Royken","Hunndalen","Melsomvik","HonningsvÃ¥g","Slemmestad","Randaberg","Krokstadelva","Raufoss","Heggedal","Namsos","Sellebakk","Haugesund","Kyrksaeterora","Geilo","Al","Gol","Nesbyen","Sagvag","Levanger","Tiller","Hell","Hegra","Stavanger","Indre Arna","Laksevag","Spydeberg","Orkanger","Ã…fjord","Son","Nesttun","Langesund","Sorbo","Floro","Selje","Stryn","Bygstad","Sandane","Naustdal","Vassenden","Kalvag","Forde","Deknepollen","Raudeberg","Leikang","Sokndal","Hoyanger","Storslett","Skjervoy","Silsand","Samuelsberg","Lyngseidet","Moen","Gargan","VadsÃ¸","Jakobselv","Kirkenes","BÃ¥tsfjord","Ivgobahta","Cavkkus","Tennevoll","Birtavarre","Olderdalen","Kautokeino","Hasvik","Sorvaer","Akkarfjord","Talvik","Varangerbotn","Evje","Grimstad","Kvinesdal","Nodeland","Lyngdal","Valle","Strommen","Kopervik","Orje","As","Kongsberg","Vatne","Gardermoen","Garnes","Saebo","Manger","Hjellestad","Godvik","Flekke","Granvin","Storebo","Os","Leirvik","Mosjoen","Loddefjord","Kvinlog","Amli","Mandal","Sandnessjoen","Hemnesberget","Movik","Vennesla","Fenstad","Naersnes","Oppdal","Holen","Hvalstad","Husoy","Skedsmokorset","Fla","Lena","Eidsvoll","Dokka","Koppang","Vingelen","Heggenes","Ringebu","Kolbu","Vestre Gausdal","Rogne","Land","Gaupen","Sor-Fron","Bruflat","Eina","Follebu","Hov","Valer","Nordland","Ballangen","Fauske","Nesna","Straumen","Alta","Karasjok","Lakselv","Bjornevatn","Burfjord","SvolvÃ¦r","Rorvik","Angvika","Eide","Batnfjordsora","Kvisvik","Flemma","Vagland","Indre Klubben","Sandnes","Nydalen","Hemnes","Loken","Bjorkelangen","Fosser","Trollfjorden","Stokmarknes","Melbu","Dverberg","Andenes","Stronstad","Risoyhamn","Drag","Manndalen","Fagernes","Leira","Rakkestad","Eidsberg","Solbergelva","Sande","Mjondalen","Lunner","Jaren","Felle","Drangedal","Stabbestad","Sannidal","Etne","Kolnes","Svortland","Rubbestadneset","Vestra Mosterhamn","Skjoldastraumen","Stol","Naerbo","Tau","Tananger","Algard","Byglandsfjord","Flekkefjord","Farsund","Vanse","Eiken","Varhaug","Royneberg","Oltedal","Jorpeland","Bryne","Sola","Kongsvika","Evenskjer","Borkenes","Gratangen","Lodingen","Sandeid","Skudeneshavn","Vedavagen","Olen","Bomlo","Akrehamn","Sveio","Tjelta","Gullaug","Lier","Klepp","Kleppe","Vikedal","Odda","Berge","Bo","Bo","Notodden","Hokksund","Seljord","Ulefoss","Dirdal","Hommersak","Steinberg","Svelvik","Greaker","Sirevag","Konsmo","Finsand","Mosby","Fossdalen","Oveland","Borhaug","Ovrebo","Fiskum","Skoppum","Flam","LÃ¦rdal","Voksa","Isdalsto","Drobak","Suldalsosen","Myre","Inndyr","Melhus","Egersund","Erdal","Mathopen","Hylkje","Mysen","Florvag","Kleppesto","SÃ¸gne","Froland","Klofta","Straume","Loten","Oksvoll","Agotnes","Vollen","Ikornnes","Hvam","Hakadal","Brekstad","Lillesand","Vestfossen","Bjerkvik","Bjaland","Almas","Amot","Odnes","Minnesund","Maura","Setermoen","Auli","Austmarka","Kirkenaer","Kroderen","Bruvik","Brandbu","Sokna","Grua","Gan","Sjovegan","Vaksdal","Sandvoll","Holter","Kjeller","Kvelde","Valestrandfossen","Torpo","Ranasfoss","Saebovik","Helgeroa","Hvittingfoss","Tonstad","Hemsedal","Nordby Bruk","Fjellstrand","Skabu","Otta","Lom","Vinstra","Faberg","Fyrde","Davik","Nordfjordeid","Rognan","Bud","Rossland","Lonevag","Sandtorg","Tovik","Stavern","Lalm","Dovre","Vage","Kolltveit","Voss","Moi","Kvam","Maloy","Sogn","Heroysund","Hagavik","Feiring","Lidaladdi","Myre","Sorvik","Tomter","Fagerstrand","Hyllestad","Hellvik","Kjopsvik","Skutvika","Nykirke","Hof","Skreia","Trengereid","Hornnes","Skatoy","Staubo","Vegarshei","Grendi","Hagan","Venabygd","Ise","Kjellmyra","Langfjordbotn","Kjollefjord","Mehamn","Tysnes","Vormedal","Fitjar","Figgjo","Hovden","Bykle","Onarheim","Skanevik","Mirza Rafi Sauda","Skjold","Folderoy","Sira","Hauge","Sandnes","Ana-Sira","Sto","Utsira","Flateby","Roa","Finnoy","Rost","VÃ¦rÃ¸y","Gravdal","Kabelvag","Henningsvaer","Stamsund","Leknes","Ballstad","Soreidgrenda","Havik","Uggdal","Reistad","Sylling","Bostad","Gvarv","Glomfjord","Kaupanger","Svarstad","Dyrvika","Hvitsten","Lunde","Nedenes","Faervik","Birkeland","Fevik","Eikelandsosen","Rong","Eikanger","Amot","Geithus","Vikersund","Eggedal","Prestfoss","Romedal","Alvdal","Innbygda","Indre Ulvsvag","Siggerud","Bjoneroa","Evanger","Skotbu","Torod","Lokken Verk","Skaun","Eggkleiva","Storas","Rennebu","Berkak","Hommelvik","Tanem","Rud","Berger","Barkaker","Sande","Austbygdi","Lysoysundet","Eidsvag","Hestvika","Kval","Hovin","Gjolme","Haerland","Sunndalsora","Feda","Surnadalsora","Nedre Frei","Halsa","Enga","Verdal","Furnes","Sander","Roverud","Knapper","Uvdal","Rodberg","Fardal","Ardalstangen","Rypefjord","Sistranda","Ovre Ardal","Skjolden","Hamarvik","Singsas","Follese","Knarrlaget","Vangsvika","Balestrand","Solvorn","Tjeldsto","Knarrevik","Saetre","Slastad","Brandval","Arneberg","Misje","Glesvaer","Hitra","Tofte","Vevang","Hersaeter","Meraker","Neverdal","Selvaer","Reipa","Vadheim","Slattum","RisÃ¸r","Bagn","Aurdal","TjÃ¸me","Ramnes","Beitostolen","Krakstad","Salsnes","Foldereid","Abelvaer","Flesberg","Tyristrand","Valle","Tveit","Ulvik","Sunde","Uskedalen","Valen","Rosendal","Berge","Havik","Hatlestranda","Dimmelsvik","Tafjord","Godoy","Eidsnes","Valldal","Grong","Skage","Sorli","Veggli","Rykene","Lindas","Hellesylt","Kjerstad","Brennasen","Tyssedal","Kolvereid","Brattholmen","Namsskogan","Trones","Snaase","Hemnskjela","Eidsvag","Brevik","Eidfjord","Na","Lofthus","Norheimsund","Oystese","Herand","Oma","Mjolkeraen","Torp","Skjeberg","Knappstad","Borgen","Bo","Vikesa","Vigrestad","Bru","HavÃ¸ysund","Oresvika","Masfjorden","Reinsvoll","Hokkasen","Kleive","Lovund","Spangereid","Sparbu","Asen","Salsbruket","Skogn","Skogn","Aure","Tingvoll","Oksfjord","Sandstad","Haddal","Sem","Longva","Nordkisa","Tistedal","Siljan","Herre","Saeveland","Meldal","Adalsbruk","Re","Digermulen","Kleppstad","Sommaroy","BerlevÃ¥g","Ramberg","Sund","Ulvagen","Sorvagen","Malm","Indreby","Hansnes","Hjelmas","Valestrand","Kvalsund","Haram","Vinje","Fyresdal","Kviteseid","Treungen","Opphaug","Selva","Sandshamn","Tvedestrand","Svene","Hetlevik","Eidsfoss","Ask","Sletta","Aros","Strusshamn","Indre Billefjord","Bronnoysund","Somna","Hordvik","Fister","Helgeland","Hundven","Eidsdal","Otteroy","Sperrebotn","Haltdalen","Korsvegen","Tjotta","Leirfjord","Bekkjarvik","Austbo","Utskarpen","Eydehavn","Buskerud","Noresund","Steigen","Kongshamn","Hallingby","Bjerka","Storforshei","Haegeland","Rena","Re","Leines","Jomna","Nybergsund","Ringsaker","Os","Tolga","Laukvik","Tynset","Myking","AskÃ¸y","Hovet","Kamben","Tysse","Ervik","Klokkarvik","Nordstrono","Mo","Modalen","Holmefjord","Saevareid","Roldal","Fedje","Vannvag","Laksvatn","Storsteinnes","Midsund","Tornes","Rollag","Tjorvag","Barstadvik","Lauvstad","Flesnes","Batsto","Vikran","Stamnes","Hustad","Folkestad","Orre","Rindal","Valsoyfjord","Kvanne","Groa","Meisingset","Sundal","Raudsand","VardÃ¸","BugÃ¸ynes","Rauland","Svelgen","Vevelstad","Loen","Bovagen","Eidsa","Rokland","Lepsoy","Beisfjord","Ytre Alvik","Gjerstad","Roros","Malvik","Vormsund","Turoy","Gasbakken","Vikebygd","Eivindvik","Ankenes","Ramfjordbotn","Trofors","Lorenfallet","Dalen","Konsvikosen","Bleikvasslia","Kyrkjebo","Kvammen","Gransherad","Korgen","Nesgrenda","Horte","Alen","Moldjord","Forde","Fall","Miland","Steinsdalen","Brusand","Helleland","Espeland","Undeim","Erfjord","Hovag","Lauvsnes","Snillfjord","Svartskog","Disena","Sand","Fonnes","Nygardsjoen","Blaker","Bjordal","Brekke","Dale","Byrknes Nordre","Ardal","Blakset","Olden","Bangsund","Sulisjielmma","Agskardet","Ornes","Rodoy","Skjerstad","Tjong","Misvaer","Tangen","Larkollen","Arland","Sand","Vale","Hyggen","Holsen","Hedal","Ebru","Morgedal","Austevoll","Spillum","Bjorke","Nyborg","Tretten","Lundamo","Ask","Langangen","Oyeren","Reine","Hebnes","From","Aker","Vraliosen","Trana","Nyhus","Ringstad","Borge","Valer","Dolemo","Borregard","Lensvik","Innvik","Selasvatn","Sondeled","Moen","Kaldfarnes","Follafoss","Enebakkneset","Boverfjorden","Lenvik","Amli","Hildre","Fotlandsvag","Hole","Rana","Reitan","Holmen","Kornsjo","Skarer","Mestervik","Skulsfjord","Adland","Fiska","Annstad","Kolbjornsvik","Hjorungavag","Ulstein","Holmenkollen","Slemdal","Buvika","Hellandsjoen","Marheim","Fresvik","Soknedal","Vossestrand","Skeie"
,"Mexico","Monterrey","Mexico City","CancÃºn","San NicolÃ¡s de los Garza","Santiago de Queretaro","Guadalajara","Puebla","Pachuca","Mexicali","Acapulco","Puerto Vallarta","Cabo San Lucas","Tijuana","Playa del Carmen","Rosarito","Chihuahua","Veracruz","Baja California","Quintana Roo","Ecatepec de Morelos","Oaxaca","Ciudad Hidalgo","Campeche","Aguascalientes","Cholula","Tlaquepaque","Colonia Madero (Madero)","Colonia Mexico","MÃ©rida","Ciudad JuÃ¡rez","Saltillo","Colima","Salamanca","Toluca","Morelia","Zacatecas","Cuernavaca","Tlaxcala","Tuxtla GutiÃ©rrez","Reynosa","Victoria","Heroica Matamoros","Guanajuato","La Paz","Hermosillo","Celaya","Abasolo","Villahermosa","Jalapa","Coatzacoalcos","Cuauhtemoc","San Luis PotosÃ­","CuliacÃ¡n","Motozintla de Mendoza","Arriaga","Jiutepec","San Nicolas","Tampico","Topolobampo","Tuxpan","Zapopan","Ciudad del Carmen","Xalapa","Ciudad Victoria","Garza Garcia","Tala","LeÃ³n","Kilometro 32 Texcoco Lecheria","Guadalupe","Nuevo Leon","Nuevo Laredo","MazatlÃ¡n","Irapuato","Naucalpan","Garcia","Apodaca","Tulancingo","Tlalnepantla","La Reforma","Huixquilucan","TorreÃ³n","Cuauhtemoc","Boca del Rio","Salinas de Hidalgo","Tepic","Jalupa","Poncitlan","Ramos Arizpe","Orizaba","Cuautitlan","Zamora","Los Reyes","Centro","Ameca","Adolfo Ruiz Cortines","San Andres Tuxtla","Zaragoza","Santa Isabel Tlanepantla","Chalco de Diaz Covarrubias","Ejido Distrito Federal","Victoria","Venustiano Carranza","Santa Catarina","Lerdo","San Bernardo","Uruapan","Ciudad ObregÃ³n","Jacobo","CuautitlÃ¡n Izcalli","Valle de Santiago","Montemorelos","Mextepec","Ciudad Nezahualcoyotl","Netzahualcoyotl","San Patricio","Granjas","Temascalcingo","Tlajomulco de Zuniga","Durango","Tlalpan","Insurgentes","Salvatierra","Mineral de la Reforma","Teoloyucan","Tultitlan","Paseos de Tecamac","Tultepec","Piedras Negras","Azcapotzalco","Ensenada","Cajeme","Tablon Grande (Bombas de Apaxco)","Pueblo Juarez (La Magdalena)","Santa Maria Chimalhuacan","Chilpancingo","Tula de Allende","Tampico Alto","Chiapas","Sinaloa de Leyva","Cocula","Navojoa","Chihuahua","Colonia Benito Juarez","Nuevo Casas Grandes","Jocotepec","San Antonio","Union de Tula","Xalisco","Patzcuaro","Pastor Ortiz","Los Reyes","Yurecuaro","Tocumbo","Los Reyes de Salgado","Tangancicuaro de Arista","La Piedad","Barranca de Santa Clara","Izucar de Matamoros","Apizaco","Tecamachalco","San Andres Cholula","Atlixco","San Juan","Libres","Agua Azul","San Martin Texmelucan de Labastida","Berriozabal","Rayon","Graciano Sanchez","San Pedro de Nolasco","Linares","Escobedo","Guadalupe","Cadereyta","El Leon","Juarez","Benito Juarez","Santiago","El Colli","Tequila","Tonala","El Salto","El Salto","Tapalpa","Tecalitlan","Ciudad GuzmÃ¡n","San Miguel de Cozumel","CÃ³rdoba","San Agustin (Salvador Alvarado)","Morelos","Fresnillo","Sombrerete","Guadalupe","Jesus Maria","Tapachula","San CristÃ³bal de las Casas","Tuxtla","Ocozocoautla de Espinosa","San Juan del RÃ­o","Cortazar","Acambaro","Pedro Escobedo","Corregidora","San Miguel de Allende","Yuriria","La Florida","Morelos","Escondida de lo Verde","Iztacalco","Tuxpan","LÃ¡zaro CÃ¡rdenas","Banderas del Aguila","Ajijic","Bucerias","Reyes de Vallarta","TepatitlÃ¡n de Morelos","Atotonilco el Alto","El Tecuan","Ciudad de Villa de Alvarez","Izamal","TizimÃ­n","Valladolid","Hunucma","Yucatan","Los Mochis","El Alto Culiacan","Navolato","Guamuchil","El Fuerte de Montes Claros","Guasave","Ahome","La Cruz","Candelaria","Tlapa de Comonfort","Petaquillas","Mazatlan","Ixtapa-Zihuatanejo","El Ocotito","Zitlala","Mixquiahuala de Juarez","Coacalco","Tolcayuca","Ixtapaluca","Isla Holbox","Puerto Morelos","Juarez","Tulum","Chetumal","Tecax","Muna","Uman","Oxkutzkab","Cananea","Heroica Caborca","Bahia de Kino","La Paletena","Nacozari Viejo","Nogales","Leon","Magdalena de Kino","Cuautepec de Hinojosa","Huauchinango","Monterrey","San Nicolas","Escobedo","General Escobedo","Refractarios Guadalajara","El Sabinal (San Pedro)","Cuautlancingo","Estado de Mexico","Iztapalapa","CoyoacÃ¡n","Tlalmanalco de Velazquez","Tlahuac","Benito Juarez","Panotla","Fortin de las Flores","Zongolica","Miguel Aleman","Mendoza","Tezonapa","Yanga","Paraje Nuevo","Ciudad Mendoza","Cuitlahuac","Tierra Blanca","Rio Blanco","Cadereyta Jimenez","San Nicolas","Allende","San Juan","Villa Hidalgo","La Barca","Tacambaro de Codallos","ApatzingÃ¡n","Tamazula de Gordiano","Ciudad Ayala","Tabasco","Macuspana","Comalcalco","Cardenas","Cosoleacaque","Villa Nanchital","MinatitlÃ¡n","San Juan del Rio","Cuautla","Tecate","Yautepec","Emiliano Zapata","Valles","San Vicente Chicoloapan","Ocotlan","Poza Rica Chacas","Las Delicias","Seccion Primera Santiago Tetla","San Salvador Tzompantepec","Guadalajara","Epazoyucan","Cunduacan","Ciudad Lopez Mateos","Villa Cuauhtemoc Otzolotepec","Melchor Muzquiz","Los Sabinos","Santiago Ixcuintla","Colonia Hidalgo","Jala","Zacualpan","Ixtlan del Rio","Manzanillo","Tecoman","Zacapu","Villadiego","Heroica Zitacuaro","Huandacareo","Campestre Tarimbaro","Puruandiro","Tejupilco de Hidalgo","Tenancingo de Degollado","Lerma","San Mateo","Zacatepec","San Miguel Zinacantepec","Valle de Bravo","Tonatico","Ixtapan de la Sal","Luvianos","San Mateo Mexicaltzingo","Malinalco","Ocoyoacac","Tequisquiapan","Gueramaro","Santa Anita","La Victoria","Jaumave","Atoyac de Alvarez","Colonia Guerrero (Los Guajes)","Petatlan","Ex-Hacienda Pantitlan","La Ciudad","TehuacÃ¡n","San Pedro Cholula","Vicente Guerrero","Huejotzingo","Colonia Cuauhtemoc","Mazatecochco","Nueva Italia de Ruiz","Apatzingan","Colimas","Zapotitlan de Vadillo","El Grullo","San Jose del Valle","Ixtapa","Tecuala","Cuarta Brigada","Libramiento Leon-Salamanca","Tepotzotlan","Purisima del Zapote","San Francisco del RincÃ³n","Purisima de Bustos","Nicolas Romero","Rincon de Tamayo","Silao","San Francisco","Venustiano Carranza","Tlalnepantla","Atizapan","Gustavo A. Madero Borough","Chiconcuac","Colonia Emiliano Zapata (Ejido Santiago Temoaya)","Acambay","Tlaltizapan","San Mateo Atenco","Temascaltepec de Gonzalez","San Agustin","Fraccionamiento Iberica Calimaya","Zacualpan","Santa Apolonia","Valle Hermoso","Rio Bravo","El Torreon","Madero","La Canada","San Jose Iturbide","Quiroga","Cadereyta de Montes","Asuncion Ixtaltepec","Ciudad de Huajuapam de Leon","Acatlan de Perez Figueroa","Miguel Hidalgo","La Pista de Tizayuca","Pueblo Hidalgo","Iglesia Vieja","Tepeji de Ocampo","Ixmiquilpan","Tlahuelilpan","Brisas Barra de Suchiate","Huixtla","Vicente Guerrero","ComitÃ¡n","Perote","Zacapoaxtla","Altotonga","Magdalena Petlacalco","Selene","Xochimilco","Alvaro Obregon Borough","Amecameca de Juarez","Juarez","Banderilla","Emiliano Zapata","Angamacutiro de la Union","Zinapecuaro","Jiquilpan de Juarez","Sahuayo de Morelos","Vistahermosa de Negrete","Chiapa de Corzo","Pericos","Cajititlan","Acatic","San Sebastian el Grande","El Sauz","Coatzintla","Cazones de Herrera","Ciudad Valles","Pedro Meoqui","San Martin de Camargo","Marquelia","Iguala de la Independencia","Lagos de Moreno","San Agustin Tlaxiaca","Las Delicias","Ciudad Madero","San Martin Notario","San Salvador Huixcolotla","Autopista Puebla Orizaba 185 (La Condusa)","Tlaxcalancingo","Jose Cardel","Heroica Alvarado","Tlacotalpan","Medellin de Bravo","San Juan Bautista Tuxtla","Chiautempan","Zacatelco","Chignahuapan","Atlzayanca","Cuyoaco","San Sebastian Tutla","Acatzingo de Hidalgo","Jesus Carranza","Agua Dulce","Las Choapas","San Cristobal","Rayon","Huimanguillo","Tonala","La Habana","Teapa","Reforma (Madrigal 2da. Seccion)","Pichucalco","Balancan de Dominguez","Paraiso","Centro","Mina Mexico","Polanco","Cuautepec","Colonia Lopez Nelio (Las Palmas)","Juarez","Jesus del Monte","Cuajimalpa","Jilotepec","Atlatlahucan","Tepoztlan","Tlaquiltenango","Cocoyoc","Temixco","Jojutla","Oaxtepec","Xochitepec","Tezoyuca","Yecapixtla","Tepetlapa","Almoloya","Jiquipilco","Ejido Santa Maria Tianguistenco (Ejido el Rosario)","San Simon de Guerrero","Santiago Tianguistenco","Xonacatlan","San Antonio la Isla","Atlacomulco","Actopan","Tezontepec","Ciudad Sahagun","Tlanalapa","Tepeapulco","Huehuetoca","Noxtepec de Zaragoza (El Aguacate)","Acolman","San Sebastian Xhala","Zumpango","Puerto Escondido","Asuncion Nochixtlan","Santa Catarina Juquila","Morelos","Quintana Roo","Isla Mujeres","Colonia Veracruz","Alamo","Los Garzas","Jimenez","Ojinaga","Cuauhtemoc","Nuevo Coahuila","Francisco I. Madero","Mariano Matamoros","Soto la Marina","Altamira","Colonia Miguel Aleman Valdez","Camargo","Atlacholoaya","Puente Grande","Mineral","Atequiza","Tizapan el Alto","Monte Leon","Dolores Hidalgo Cuna de la Independencia Nacional","Ignacio Allende","Apaseo el Grande","Moroleon","La Union","Apaseo el Alto","San Luis de la Paz","San Felipe Torres Mochas","Ganaderia","Villagran","San Miguel","Tepalcatepec","San Miguel el Alto","Zapotlanejo","Ixtlahuacan del Rio","Zapotlanejo","San Luis Soyatlan","Autlan de Navarro","Huejucar","Guadalupito","Juan","Villa Garcia","Jalpa","Loreto","Jacona de Plancarte","Francisco Castellanos","Chicago","Tirindaro","Erongaricuaro","San Martin Hidalgo","Ahualulco de Mercado","Tenamaxtlan","Chapala","Ciudad Constitucion","Loreto","Todos Santos","Las Canoras (Altiva)","Teloloapan","Escuinapa de Hidalgo","Badiraguato","San JosÃ© del Cabo","Guaymas","Sonora","Empalme","Cabos","Huatabampo","Ezequiel Montes","El Rio","Manuel Avila Camacho","El Mirador","San Miguel el Alto (El Puerto)","Nextlalpan","San Gabriel","Guadalupe Victoria","Queseria","Villa de Costa Rica","Anahuac","Ojuelos de Jalisco","Pabellon de Arteaga","San Pedro Piedra Gorda","Tlacolula de Matamoros","Heroica Coscomatepec de Bravo","Salina Cruz","Tocatlan","Zacatlan","Mineral del Chico","Martinez de la Torre","Coatepec","Tlapacoyan","La Isla","TeziutlÃ¡n","Melchor","Tequisistlan","Ejido de Otumba (Loma Bonita)","San Francisco Javier","Pantanal","Ixtapa","Puerto PeÃ±asco","Bamoa","Agua Prieta","El Potrero","Rancho Xalnene","Tuxpan de Rodriguez Cano","Ures","Amado Nervo","JuchitÃ¡n de Zaragoza","San Luis RÃ­o Colorado","Kanasin","Benito Juarez","Gomez Palacio","Tekoh","Poza Rica de Hidalgo","Zapotlan de Juarez","Progreso","Jaltipan de Morelos","San Juan de Aragon","Guadalupe","Pesqueria","Estados Unidos","Agua Amarga","El Carmen","Colon","Colonia de Venado","Taxco","San Pablo Hidalgo","Coyuca de Catalan","Tilzapotla","Axochiapan","Almada","Parral","Huanimaro","Escuintla","La Moncada","Huimilpan","Las Cabanas (Colinas de los Angeles)","General Teran","Acuna","Tacotalpa","Suchiapa","Tenosique de Pino Suarez","La Tapachula","Aldama","Arizpe","San Pedro","Frontera","Monclova","Ojo de Agua","Puerto Mexico","Chiautla","Gutierrez Zamora","Jimenez","Ixtlahuaca de Villada","Tlatlaya","Satelite","Pueblo Viejo","San Nicolas Totolapan","Monclova","Canatlan","Nuevo Ideal","San Miguel de Papasquiaro","Tlatlauquitepec","Cosamaloapan de Carpio","Ursulo Galvan","Tierra Colorada","Pueblo Yaqui","San Fernando","Roma","Coahuila","Coyoacan","Pabellon","Alamos","San Cristobal","San Fernando","San Luis","San Pedro Pochutla","Huichapan","Ciudad Sabinas","Catemaco","Tepeaca","Mier","Anahuac","Colonia la Presa (Ejido de Chapultepec)","Las Americas","Santa Catalina","Jalostotitlan","San Jeronimo de Juarez","Primero de Mayo","La Joya","Paso Real","Jalisco","Jesus Maria","Jocotitlan","Tequixquiac","Apaxco de Ocampo","Teotihuacan de Arista","San Luis","La Herradura","Cardonal","Zacualtipan","Apan","Tezontepec de Aldama","Mineral del Monte","Tezoyuca","San Pedro de Las Colonias","Magiscatzin","Xochimilco","Jerez de Garcia Salinas","San Salvador Atenco","El Parque","Texcoco","Azteca","Barra de Navidad","Compostela","Santa Fe","San Felipe","Cutzamala de Pinzon","San Agustin Altamirano","Puente de Ixtla","Jonacatepec de Leandro Valle","Arcelia","San Pedro","Mazatepec","San Martin Duraznos","Pachuca de Soto","San Antonio Virreyes","Cerritos","San Luis PotosÃ­","Loma de los Cavazos (Maria de la Luz)","Visitacion","San Rafael","Leyva Solano","Chihuahua","Prolongacion Avenida Mexico Norte","Barrio de Mexico","Santa Lucia","San Pedro","San Angel Inn","Pedregal de Jerico","San Miguel","Adolfo Lopez Mateos","San Vicente","Arandas","Uriangato","Tamaulipas","Laredo","Villa de Almoloya de Juarez","Florida","Sierra Madre","Colonia","Piedras Negras","San Miguel de Atotonilco","San Miguel Balderas","San Francisco","Moctezuma","Tepetlacolco","Benito Juarez (Santa Elena)"
,"Canada","Toronto","Montreal","Vancouver","Lachine","Mississauga","Leamington","Camrose","Richmond","Markham","Creston","Coquitlam","Victoria","Port Coquitlam","North Vancouver","Burnaby","Surrey","Delta","Vernon","New Westminster","Langley","Kamloops","Maple Ridge","Abbotsford","Chilliwack","Whistler Village","Kelowna","Port Moody","Calgary","Lethbridge","Edmonton","Lacombe","Fort McMurray","Fort Saskatchewan","Red Deer","Morinville","Spruce Grove","Sherwood Park","Okotoks","Strathmore","Airdrie","High Level","Fairview, Alberta","Leduc","Grande Prairie","Chatham","Tavistock","Perth","Midland","Laval","Hamilton","Ottawa","Fergus","Scarborough","Cambridge","Waterloo","Welland","Vieux-Saint-Laurent","Kitchener","Longueuil","Oshawa","Brampton","Rougemont","Saint-Remi","London","Milton","Pointe-Claire","Sherbrooke","Kanata","Gatineau","Lasalle","Quebec","Beauport","Donnacona","Charlesbourg","Saint-Augustin","Joliette","Saint-Felicien","Dolbeau-Mistassini","Albanel","Port Clements","Queen Charlotte","Masset","Ingersoll","Alma","Hawkesbury","Shannonville","Elk Point","Burgessville","Brantford","Woodstock","Thornhill","Stoney Creek","Caledonia","Burlington","Grimsby","Vineland Station","Beamsville","Niagara Falls","Smithville","Jordan","Peterborough","Granby","Cowansville","Boisbriand","Levis","Sorel","Blainville","Mont-Royal","Saint-Michel-des-Saints","Saint-Hubert-de-Riviere-du-Loup","Rosemere","Sainte-Marthe","Nominingue","Saint-Eustache","Sainte-Catherine","Terrebonne","Saint-Leonard","Westmount","Kirkland","Delson","Saint-Sauveur","Saint-Jean-sur-Richelieu","Sabrevois","Saint-Lambert","Mascouche","Saint-Jerome","Chambly","Varennes","Mirabel","RiviÃ¨re-du-Loup","Brossard","Repentigny","Sainte-Therese","Dorval","Leonard","Saint-Lin-Laurentides","Verdun","Saint-Agapit","Boucherville","Jonquiere","Chicoutimi","Saint-Lambert","Brossard","Candiac","Kincardine","North Perth","Stratford","Les Escoumins","Saint-Jacques","L'Assomption","Greenfield Park","Deux-Montagnes","Waterville","Amos","La Morandiere","Barraute","Val-d'Or","Rouyn-Noranda","Saint-Prosper","Saint-Georges","Saint-Simon-de-Rimouski","Saint-Victor","La Guadeloupe","Alma","Drummondville","Roberval","Asbestos","Rimouski","Saint-Anaclet-de-Lessard","Trois-RiviÃ¨res","Magog","Shawinigan","Sainte-Agathe-des-Monts","Sainte-Adele","Sainte-Anne-des-Monts","Salaberry-de-Valleyfield","Saint-Germain-de-Grantham","Thetford-Mines","Champlain","North York","Aurora","Richmond Hill","Orleans","Etobicoke","Guelph","Whitby","Pickering","Vercheres","Saint-Gabriel-de-Valcartier","Canning","Wolfville","Kentville","Centreville","Cambridge","Ancaster","Jerseyville","North Russell","Cote-Saint-Luc","Mont-Tremblant","Saint-Faustin--Lac-Carre","Plessisville","Port-Cartier","Sept-Iles","Montmagny","Notre-Dame-du-Mont-Carmel","Shawinigan-Sud","Saint-Mathieu","Windsor","Belle River","Tecumseh","Kingsville","Amherstburg","Newmarket","Essex","Harrow","Wheatley","Tecumseh","Memphremagog","Stettler","Rocky Mountain House","Banff","Canmore","Didsbury","Carstairs","Blairmore","Pincher Creek","Coleman","Cowley","Taber","Brooks","Drumheller","High River","Drayton Valley","Barrhead","Edson","Lloydminster","Vermilion","Winnipeg","Hinton","Jasper","Westlock","Kimberley","Cranbrook","Marysville","Fernie","Canyon","Golden","Invermere","Fairmont Hot Springs","Penticton","Summerland","Okanagan Centre","Westbank","Chase","Nelson","Coldstream","Port Alberni","Sooke","Courtenay","Comox","Parksville","Cumberland","Winfield","Enderby","Salmon Arm","Armstrong","Sorrento","Williams Lake","Grand Forks","Greenwood","Peachland","Regina","Rosetown","Canora","Kindersley","La Ronge","Humboldt","Warman","Melfort","Meadow Lake","Unity","Esterhazy","Kamsack","North Battleford","Weyburn","Maidstone","Estevan","Yorkton","Melville","Maple Creek","Moosomin","Saint-Pierre-de-Broughton","Saint-Hyacinthe","Steinbach","Stonewall","Selkirk","Teulon","Pine Falls","Beausejour","Thompson","St. Paul","Portage la Prairie","Tsawwassen","White Rock","Sechelt","Mission","Biggar","Midale","Nipawin","Lampman","Saskatoon","Halifax","Bridgewater","Italy Cross","Lunenburg","Shelburne","Mahone Bay","Dartmouth","Eastern Passage","Sydney","Truro","Springhill","Halifax","Sackville","Mount Uniacke","Beaver Bank","Port Dover","Canfield","Dunnville","Hagersville","Waterford","Cayuga","Sidney","Crofton","Saanichton","North Saanich","Mayne","Shawnigan Lake","Duncan","Chemainus","Lake Cowichan","Cobble Hill","Ladysmith","Powell River","Van Anda","Sault Ste. Marie","Manitouwadge","Wawa","Thunder Bay","Atikokan","Terrace Bay","Schreiber","Woodbridge","Shelburne","Bolton","Puslinch","York","Acton","Stouffville","Ajax","Orangeville","Glencoe","Caledon","Oakville","Norfolk County","Tillsonburg","Orillia","Millbrook","Arthur","North Hatley","Roxboro","Crabtree","Huntingdon","Beloeil","Rawdon","Bourget","Niagara-on-the-Lake","Concord","Maskinonge","Saint-Maurice","Saint-Barthelemy","Batiscan","Pierreville","Becancour","Nicolet","Saint-Etienne-des-Gres","Yamachiche","GaspÃ©","Baie-Comeau","Saint-Pierre","Sainte-Angele-de-Premont","Chandler","Val-David","Yamaska","Matane","Saint-Ulric","Saint-Leonard-d'Aston","Deschaillons-sur-Saint-Laurent","Aston-Jonction","Sainte-Perpetue","Saint-Cyrille-de-Wendover","Roxton Falls","Richmond","Disraeli","Normandin","Saint-Gedeon","Louiseville","Saint-Dominique","East Broughton","Desbiens","Hebertville","Carmel","Sainte-Anne-de-la-Perade","Ayer's Cliff","Windsor","Tumbler Ridge","Osoyoos","Oliver","Fenelon Falls","Lindsay","Bobcaygeon","Dunsford","Potter","Vaughan","Murray River","Charlottetown","New Glasgow","Trenton","Stellarton","Sydney","North Sydney","Villa Marie","Yarmouth","Digby","Brookfield","Victoria","Clarke's Beach","Harbour Grace","Bellevue","Bay Roberts","Heart's Delight-Islington","Summerside","Coleman","Annapolis Royal","Oxford","Amherst","Fogo","Greenspond","Lumsden","Digby","Antigonish","Kensington","Arichat","Port Hawkesbury","D'Escousse","Petit-de-Grat","Cornwall","Georgetown","New Hamburg","St. John's","Mount Pearl","Bedford","Church Point","Placentia","Meteghan River","East Chezzetcook","Sydney Mines","Stratford","Windsor","Barrie","King City","Beeton","Alliston","Bradford","Uxbridge","Angus","Schomberg","Tottenham","Caledon","Greater Sudbury","Lively","Chelmsford","New Liskeard","Timmins","Copper Cliff","Elliot Lake","Blind River","Casimir","Massey","Rockwood","Belleville","Sturgeon Falls","North Bay","Aylmer","Garson","Port Elgin","Hanover","Listowel","Mildmay","Palmerston","Wingham","Mount Forest","Chesley","Kingston","Napanee","Simcoe","Marmora","Campbellford","Napanee","Winchester","Walkerton","Chesterville","Cornwall","Kapuskasing","Picton","Fort-Coulonge","Owen Sound","Durham","Britt","Gore Bay","Dundas","Waterdown","Carlisle","Hanna","Lougheed","Wetaskiwin","Cold Lake","Calmar","Clairmont","Bonnyville","Aylesford","Berwick","Greenwood","Middleton","Kingston","Three Mile Plains","Saint-Frederic","Rigaud","Huntsville","Bracebridge","Gravenhurst","Parry Sound","Maple","Saint-Joseph-de-Beauce","La Patrie","Saint-Camille","Eastman","Napierville","Austin","Martinville","Compton","Sawyerville","Sainte-Marie","Saint-Louis-de-Gonzague","Trenton","Corbyville","Petawawa","Pembroke","Grenville","Elora","Vaudreuil-Dorion","Lachute","Saint-Basile-le-Grand","Chateauguay","Sainte-Sophie-d'Halifax","Pointe-aux-Trembles","Mont-Saint-Hilaire","Otterburn Park","Circonscription electorale d'Anjou","Howick","Pointe-Calumet","La Pocatiere","Ange-Gardien","Saint Romuald","Saint-Honore-de-Temiscouata","Dollard-Des Ormeaux","Sainte-Julie","L'Epiphanie","La Prairie","Baie-D'Urfe","Oka","Saint-Jean-de-l'Ile-d'Orleans","Beaupre","Marieville","Clarence-Rockland","Contrecoeur","Maniwaki","Saint-Lin","Lavaltrie","Hampton","Saint John","Luskville","Hudson","Bruno","Saint-Joachim-de-Shefford","McMasterville","Mercier","Sainte-Julienne","Saint-Antonin","Tadoussac","Chute-aux-Outardes","Pointe-Lebel","Beaconsfield","Saint-Marc-sur-Richelieu","Portneuf","Farnham","Saint-Venant-de-Paquette","Vallee-Jonction","Sutton","Saint-Zacharie","Lac-Megantic","Brome","Sainte-Cecile-de-Whitton","Ormstown","Stanbridge East","Dudswell","Saint-Elzear","St. Catharines","Callander","Renfrew","Gibsons","Prince George","Princeton","Merritt","Fort Nelson","Mackenzie","Roberts Creek","Halfmoon Bay","La Sarre","Dupuy","Notre-Dame-du-Nord","Ville-Marie","Temiscaming","Macamic","Massueville","Saint-Hugues","Malartic","Bearn","La Tuque","Laverlochere","Richmond","St. Thomas","Nepean","Stewiacke","Valley","Westville","Eureka","Pictou","Marystown","Troy","La Conception","Middle Musquodoboit","Hebron","Cavendish","Grono Road","Jordan Falls","Barrington Passage","Barrington","Crapaud","Brigus","Clarenville","Blackville","Scotsburn","Hant's Harbour","Carbonear","Holyrood","Cornwallis","Black Diamond","Trochu","Three Hills","Bonne Bay","Fortune","Morell","Bridgetown","Clementsvale","Bear River","Springdale","Murray Harbour","Seldom-Little Seldom","Liverpool","Port Medway","Paradise Cove","Victoria Cove","Birchy Bay","Gander","Twillingate","Burin","St. Alban's","West Lake","Margaretsville","Hampton","Corner Brook","Wainwright","Daniel's Harbour","Tusket","Saulnierville","Rockville","Chester","Baie Verte","Happy Valley-Goose Bay","Gambo","Granville Ferry","Western Bay","Old Perlican","Bay de Verde","Circonscription electorale d'Outremont","Bromont","Victoriaville","Acton Vale","Valcourt","Metabetchouan-Lac-a-la-Croix","Wickham","Warwick","La Presentation","Saint-Damase","La Baie","L'Anse-Saint-Jean","Pont-Rouge","Baie-Saint-Paul","Mitchell","Paisley","Iroquois Falls","Kirkland Lake","Levack","Omemee","Pefferlaw","Goderich","Clinton","Exeter","Bayfield","Prescott","Berthierville","Lakefield","Cobourg","Baltimore","Port Hope","Port Perry","Kitimat","Terrace","Smithers","Prince Rupert","Roseneath","Brandon","Stittsville","Norway House","Winkler","Port Colborne","Noyan","Fredericton","Moncton","Perth-Andover","Tracadieâ€“Sheila","Miramichi","Woodstock","Edmundston","Campbellton","Bathurst","Souris","Coniston","Saint-Quentin","Plaster Rock","Neguac","Canterbury","Rogersville","Doaktown","Lavillette","Hartland","Nackawic","Pointe-Verte","Dover","Lewisporte","Port Saunders","Saint Fintan's","L'Anse-au-Loup","Deer Lake","Grand Falls-Windsor","Conception Bay South","Hantsport","Bay Bulls","Dieppe","Berry Mills","Rothesay","Quispamsis","South Porcupine","Haileybury","Grand Bayâ€“Westfield","Timberlea","Elmsdale","Carters Cove","Mira Gut","Sable River","Alberton","Glace Bay","New Waterford","Portugal Cove","Grand Falls","Pouch Cove","Sicamous","Tappen","Pritchard","Pitt Meadows","Fort St. John","Onoway","St. Albert","Oyama","Aldergrove","Squamish","Garibaldi","Brackendale","Trail","Castlegar","Hope","Vanderhoof","Fort St. James","Lumby","Sexsmith","McLennan","Peace River","Grimshaw","Beaverlodge","Rycroft","Irricana","Turner Valley","Bassano","Innisfail","Blackfalds","Sylvan Lake","Ponoka","Campbell River","Medicine Hat","Redcliff","Whitecourt","Magrath","Claresholm","Raymond","Bellevue","Donnelly","Wallaceburg","Mooretown","Sarnia","Rockland","Innisfil","Collingwood","Thamesville","Mandeville","Sainte-Emelie-de-l'Energie","Thurso","Sainte-Cecile-de-Masham","Kemptville","Petrolia","Glen Robertson","Long Sault","Ridgeway","Keswick Beach","Paris","Harriston","Alexandria","Cardinal","Norwood","Pinawa","Weir","L'Ile Perrot","La Salle","Milford","Milford Station","Bancroft","Belwood","Cochrane","Hearst","Moosonee","Matheson","Earlton","Iqaluit","Gloucester","Niagara","Drumbo","Delhi","Devon","Gananoque","Bath","Newburgh","Stella","Sydenham","Moraviantown","Blenheim","Oil Springs","Merlin","Garibaldi Highlands","Dauphin","Gilbert Plains","Lang","Rouleau","Moose Jaw","Wadena","Foam Lake","Theodore","Wynyard","Kelvington","Swift Current","Grenfell","Carlyle","North Portal","Redvers","Wakaw","Dundurn","Prince Albert","Indian Head","Broadview","Wawota","Wilkie","Kerrobert","Macklin","Coleville","Bella Bella","Valemount","Kitwanga","Kitchener","Dawson Creek","Port Renfrew","Nakusp","Skidegate","Revelstoke","Westport","Elgin","Yarker","Saint-Jean-de-Matha","Port Royal","Slave Lake","Valleyview","Morden","Atikameg","Forestburg","Bashaw","Quesnel","Port McNeill","Ucluelet","Tofino","Merville","Nanaimo","Heron Bay","Sioux Lookout","Kuujjuaq","Gogama","Sandy Lake","Cat Lake","Ivujivik","Pikangikum","Bearskin Lake","Fermont","Ohsweken","Griswold","Swan River","Lashburn","Onion Lake","Eston","Outlook","Mortlach","Cabri","Dryden","Saint-Andre","Saint-Sebastien","Nantes","Vankleek Hill","Haliburton","Espanola","Thorold","Mount Brydges","Grand Valley","Camlachie","Deseronto","Ayr","Yellowknife","Cambridge Bay","Kugaaruk","Sanikiluaq","Rankin Inlet","Kugluktuk","Deline","Orton","Eaglesham","Lachenaie","Atlin","Shaunavon","Saint-Guillaume","Masson-Angers","Montreal East","Bowmanville","Melbourne Ridge","Saint-Gabriel","Finch","Arnprior","Saint-Pie","Stayner","Limoges","Greely","Sainte-Melanie","Carleton Place","Brockville","Coldwater","Everett","Fort Frances","Ignace","La Malbaie","Baie-Sainte-Catherine","Casselman","Almonte","Thorndale","Markdale","Wiarton","Saint-Zotique","Kohler","Holman","Galahad","Neudorf","Kars","Ardrossan","Apsley","Havelock","Lion's Head","Clermont","Eden","Wyoming","Morrisburg","Port Burwell","Mont-Joli","Metis-sur-Mer","Saint-Fabien","Sainte-Croix","Czar","Cherry Grove","Athabasca","Mannville","Paradise Valley","Nampa","Lac La Biche","Wolseley","Montmartre","Balcarres","Wood Mountain","Glentworth","Saint-Colomban","Cookshire-Eaton","Saint-Pacome","Saint-Philippe-de-Neri","Saint-Roch-des-Aulnaies","Saint-Jean-Port-Joli","Saint-Philippe","Kamouraska","Saint-Aubert","Les Cedres","L'Islet","Lorraine","Bois-des-Filion","Deer Lake","Inukjuak","Poplar Hill","Fort Hope","Kangiqsujuaq","Tasiujaq","Fort Severn","Trois Pistoles","Saint-Raymond","St. Andrews","Hay Lakes","Houston","Fruitvale","Pemberton","Clearwater","Cache Creek","Logan Lake","Savona","Landrienne","Prince","Saint-Elie","Beauceville","Sainte-Monique","Daveluyville","Bluewater","Hensall","Lucan","Grand Bend","Dublin","Huron East","Norwich","Ailsa Craig","Thedford","Saint-Adalbert","Lotbiniere","Saint-Apollinaire","Cap-Saint-Ignace","Little Current","South River","Markstay","Fort Macleod","Hawkestone Beach","Midhurst","Hythe","Chestermere","Moosehorn","Emsdale","Kagawong","Inverness","Roland","Milk River","Dashwood","Lucknow","Kippen","Ripley","Kirkton","Daysland","Viking","Rosalind","Willingdon","Vulcan","Lake Louise","Vegreville","Saint-Cesaire","Baden","Alvinston","Arkona","Beaverton","Hemmingford","Emo","L'Ascension","Saint-Eusebe","Saint-Zenon","Saint-Donat","Tweed","Saint-Ferdinand","Deep River","Ingleside","Don Mills","Hespeler","Erin","Stirling","Saint-Come","Ilderton","Arundel","Alfred","Weedon","Port Stanley","Chertsey","South Lancaster","Lancaster","Brighton","Colborne","Carrying Place","Lyn","Athens","Brochet","L'Orignal","Verner","Ayton","Dominion City","Inwood","Watford","Blue River","Sainte-Brigitte-des-Saults","Big River","Canwood","Spiritwood","Francis","Willow Bunch","Assiniboia","Gravelbourg","Lafleche","Viscount","Allan","Gull Lake","St. Walburg","Glaslyn","Ile-a-la-Crosse","La Loche","Canoe Narrows","Arborfield","Carrot River","Cumberland House","Langenburg","Rocanville","Milden","Elrose","Elbow","Buffalo Narrows","Hanley","Oxdrift","Wabigoon","Saint-Stanislas-de-Kostka","Clifford","Teeswater","Watrous","Watson","Southend Reindeer","White Fox","Nokomis","Lumsden","Southey","Cupar","Stevensville","Fort Erie","Cochrane","Lancaster Park","Bentley","Beaumont","Stony Plain","Redwater","Grand-Remous","Namur","Papineauville","Ripon","Messines","Shawville","Portage-du-Fort","Laurentia Beach","Downsview","Enterprise","Leader","Rosthern","Waldheim","Radville","Herbert","Pilot Butte","Frobisher","Wishart","Dalmeny","Langham","Silton","Neilburg","Caronport","Brechin","Chicoutimi","Minden","Senneterre","Saint-Marc-de-Figuery","Sainte-Gertrude","Kenora","Keewatin","Niverville","Shoal Lake","Nanton","Rimbey","Langdon","Nobleford","Stirling","Rainbow Lake","Foremost","Milverton","Atwood","Saint-Ludger","Lambton","Saint-Severe","Saint-Alexis-des-Monts","Saint-Pierre-les-Becquets","La Visitation","Saint-Liboire","Saint-Paulin","Grand-Saint-Esprit","Parisville","Saint-Barnabe-Sud","Saint-Wenceslas","Coleraine","Manseau","Saint-Sylvere","Cleveland","River John","Mabou","Burk's Falls","Forest","Mount Elgin","Courtland","Sainte-Anne-de-Bellevue","Saint-Roch-de-Richelieu","Saint-Charles-sur-Richelieu","Pincourt","Shannon","Saint-Bruno-de-Montarville","Calixa-Lavallee","Beaver Crossing","Quaqtaq","Puvirnituq","Kangirsuk","Oxford House","Saint-Jean-de-Dieu","Fonthill","L'Ancienne-Lorette","Lanark","Roblin","Ridgetown","Saint-Paul-de-la-Croix","Riviere-Saint-Paul","Madoc","Nakina","Frankford","Dorchester","Saint-Isidore","Nobleton","Saint-Denis","Riviere-Beaudette","McGregor","Foymount","Cheapside","West Osgoode","Williamsburg","Port Hardy","Sointula","Lefroy","Smiths Falls","Sundridge","Alton","Port Credit","Val-des-Monts","Newcastle Village","Severn Bridge","Penetanguishene","Wainfleet","Maidstone","Washago","Coboconk","Biencourt","Cap-Chat","Saint-Joachim","Sainte-Marcelline-de-Kildare","Lanoraie","Wasaga Beach","Tilbury","Labelle","Spanish","Dundalk","Echo Bay","Saint-Roch","Geraldton","South Gower","Drayton","Saint-LÃ©onard","Bala","Elmvale","Saint-Anicet","Pointe-Fortune","Manotick Station","Clarkson","Ascot Corner","Tring-Jonction","Begin","Montebello","Plantagenet Station","Waubaushene","Bowden","Olds","Penhold","Coaldale","Clive","Gabriola","Qualicum Beach","Nanoose Bay","Bowser","Honeymoon Bay","Youbou","Cowichan Bay","Agassiz","Crossfield","Bow Island","Red Rock","Nipigon","White River","Marathon","Red Lake","100 Mile House","Rossland","Lillooet","Charlemagne","Saint-Lazare-de-Bellechasse","Saint-Felix-de-Valois","Saint-Charles-de-Bellechasse","Sainte-Martine","Lery","Gore","Saint-Hilaire","Beauharnois","Colliers","Port au Port","Stephenville","Musquodoboit Harbour","Middle Arm","Shubenacadie","Plympton","Stanley Bridge, Hope River, Bayview, Cavendish and North Rustico","Arcadia","New-Wes-Valley","Enfield","Burgeo","Colinet","Upper Island Cove","West Chezzetcook","Lawrencetown","Fort Qu'Appelle","Maryfield","Bredenbury","Luseland","Waldeck","Duck Lake","Calder","Hudson Bay","Lucky Lake","Dinsmore","Carnduff","Lipton","Domain","Lac-Drolet","Knowlton","Dixville","Saint-Sylvestre","Scotstown","Racine","Cardston","Courtright","Point Edward","Fraser Lake","Alexander","Shamattawa","Sheho","Cumberland","Foxtrap","Bishop's Falls","Grande-Anse","Strathroy","Elmira","Thamesford","Memramcook","Ashmont","Myrnam","Two Hills","Thorhild","Lamont","Tofield","Holden","Mundare","Irma","Boyle","Turtleford","Woodridge","Berwyn","Hastings","Buckhorn","MacTier","Saint Etienne-De-Lauzon","Creemore","Sombra","New Dundee","Saint-Francois-du-Lac","Charny","Saint-Odilon-de-Cranbourne","Sainte-Justine","Fortierville","Saint-Fabien-de-Panet","Baie-du-Febvre","Dunham","East Angus","Roxton Pond","Berthier-Sur-Mer","Cabano","Saint-Vallier","Riviere-Bleue","Coaticook","Cheneville","Sainte-Claire","Melocheville","Saint-Henri","Saint-Anselme","Virden","Cromer","Saint-Godefroi","McCreary","Killarney","Rivers","Fort Albany","Attawapiskat","Amqui","Kingsey Falls","Ham-Nord","Blandford","Eatonville","Saint-Tite","Saint-Stanislas","Chelsea","Clarke City","Val-Brillant","Fort Kent","Girouxville","Mallaig","Smoky Lake","Andrew","Glendon","Woodlands","Stony Mountain","Altona","Sainte-Helene-de-Bagot","Armagh","Saint-Alban","Saint-Georges-de-Windsor","Saint-Adelphe","Murdochville","Paspebiac","Newport","Grande-Riviere","Maria","Saint-Michel-de-Bellechasse","Deschambault","Cap-Sante","Saint-Basile","Saint-Antoine-de-Tilly","Saint-Philemon","Saint-Pamphile","Gadsby","New-Richmond","Windermere","Boswell","Kaslo","Salmo","Leslieville","Notre-Dame-de-Lourdes","Esprit-Saint","New Carlisle","Bonaventure","Westree","Hay River","Fort Good Hope","Fort Simpson","WhatÃ¬","Whitehorse","Inuvik","Elliston","King's Point","New Ross","Chapleau","Bedford","Pont-Viau","Carp","Pass Lake","Theresa","Victoria Harbour","Utterson","Saint-Clement","Circonscription electorale de Jacques-Cartier","Cartier","Pakenham","Warkworth","Saint-Cyprien","Parham","Keene","Notre-Dame-du-Portage","Carignan","Saint-Flavien","Saint-Polycarpe","Saint-Placide","Princeville","St-Lazare","Hull","Hubbards","Brooklyn","Mill Village","Lower Island Cove","Roddickton","Entwistle","Newtown","Petitcodiac","Dawson Settlement","Waweig","Keswick","Sussex","Gold Bridge","Seton Portage","Canim Lake","Cobden","Duchess","Tilley","Rosemary","Gem","Union Bay","Black Creek","Cumberland Bay","Lanigan","Oxbow","Davidson","Cudworth","Lacolle","Saint-Urbain-Premier","Newton","Port au Choix","Upton","Bonsecours","Labrador City","Wallace","Cheticamp","Pugwash","Castle Bay","Terre Noire","Laurier-Station","Havre-Saint-Pierre","Willowdale","Thornbury","Rexdale","Conestogo","Churchill","Hillsburgh","Embrun","Sutton","Wellesley","St. Marys","Torbay","Witless Bay","Scotland","Maxville","Delaware West","Sparta","Komoka","Jacksons","Port McNicoll","Meaford","Newcastle Creek","Oromocto","Millville","Riverview","Salisbury","Shediac","Fredericton Junction","Ripples","Orono","Denfield","Kitscoty","Flesherton","St. Jacobs","South Augusta","DeBolt","St. Brieux","Strasbourg","Raymore","Granton","Borden","Brentwood Bay","Pelly","Sturgis","L'Etang-du-Nord","Chalk River","Saint-Luc","Boischatel","Chateau-Richer","Sainte-Famille","Sainte-Anne-de-Beaupre","Saint-Ferreol-les-Neiges","Aylmer","Price","Duhamel","St-Hubert","Danville","Barriere","Charlie Lake","Burns Lake","Nisku","Montague","Debert","Port Lorne","Central Bedeque","Hunter River","North Rustico","Milton","LaHave","Great Village","Head of Jeddore","Meteghan","Caledonia","Porters Lake","Mount Stewart","Cardigan","Vernon Bridge","Tatamagouche","Minto","Pynns","Glenwood","Stephenville Crossing","Pasadena","Raleigh","Barnaby River","Spaniard's Bay","Tyndall","Neepawa","The Pas","Sperling","Pilot Mound","Carman","Gimli","Heart's Content","Trout River","Bell Island","New Harbour","Chapel Arm","Eastport","Fermeuse","St. Anthony","Garnish","O'Regan's","Cow Head","Parson's Pond","Clarenville-Shoal Harbour","St. Joseph's","Rencontre East","Caraquet","Mobile","Wabana","Stoughton","Fillmore","Vonda","Battleford","Arcola","Preeceville","White City","Shellbrook","Wymark","Star City","Gronlid","Garrick","Bienfait","Radisson","Richibucto","Shanklin","Saint Andrews","Florenceville-Bristol","Baddeck","Canso","Riverside-Albert","Scoudouc","Apohaqui","Oak Point","Havre Boucher","Mulgrave","Little Narrows","Kingsville","Guysborough","Sherbrooke","Dalhousie","Bouctouche","Wabush","Port Elgin","River Hebert","Chipman","Weldon","Harvey","La Tabatiere","Betsiamites","Miscouche","East Margaree","Whites Lake","Ingonish","Margaree Valley","Renous","Flat River","Emerald Junction","Iona","Mont-Laurier","Chibougamau","Saint-Aime-du-Lac-des-Iles","Chapais","Beaux-Rivages--Lac-des-Ecorces--Val-Barrette","Sainte-Anne-du-Lac","Ferme-Neuve","Otter Lake","Mont-Saint-Michel","Matagami","Guigues","Angliers","Palmarolle","Cap-aux-Meules","Authier","Forestville","Taschereau","East Coulee","Rumsey","Hazelton","Blacks Harbour","Caroline","Saint-Gilles","Lac-aux-Sables","Saint-Marc-des-Carrieres","Saint-Come--Liniere","Borden-Carleton","Saint-Leon-de-Standon","Sayabec","Causapscal","Slocan","Audet","Glenwood","Plamondon","Wittenburg","Lytton","Alert Bay","Ardmore","Carberry","Torrington","Acme","Moose Creek","Golden Lake","Boissevain","Sainte-Helene-de-Breakeyville","Gleichen","Beiseker","Millet","Fort Vermilion","Taylor","Petite-Riviere-Saint-Francois","Eganville","Carleton-sur-Mer","Saint-Paul","Saint-Thomas","Saint-Pascal","Saguenay","Arthabaska","Mont-Saint-Gregoire","Dorion-Gardens","Saint-Andre-Avellin","Quathiaski Cove","Denman Island","La Durantaye","Saint-Ubalde","Sainte-Marguerite","Inglewood","Edgerton","Provost","Marwayne","Legal","Hardisty","Cayley","Delburne","Hobbema","Wembley","Winfield","Breton","Salmon River","Wellington","Ramea","Lac du Bonnet","Whitemouth","Miami","Kinistino","Birch Hills","Saint-Antoine-sur-Richelieu","Clyde River","Hare Bay","Glovertown","Notre-Dame-du-Bon-Conseil","Shigawake","Port-Daniel","Saint-Camille","Willowvale","Wakefield","Lourdes","Lethbridge","Gander Bay","St. Peters Bay","Tlell","Saint-Nazaire","Hornepayne","Sainte-Brigide-d'Iberville","Henryville","Mansonville","Nauwigewauk","Perth","Lakeburn","Howley","Harbour Main","Allardville","Saint-Louis de Kent","Pennfield","Big Valley","High Prairie","Wildwood","Ganges","Canal Flats","Grindrod","Bloomfield","Les Coteaux","Dresden","L'Isle-Verte","Wellington","Claremont","Saint-Ambroise","Senneville","Saint-Denis","Londonderry","Flin Flon","Elgin","Rossburn","Pain Court","La Corey","Economy","Cannington","Sainte-Foy","Wilcox","Sainte-Marthe-sur-le-Lac","Iroquois","Priceville","South Mountain","Petherton","Merrickville","Avonmore","Apple Hill","North Lunenburg","Quyon","Maberly","Kazabazua","Warsaw","Islington","Millarville","Weston","Burnside","Portage","Waterloo","Saint-Paul","Saint-Paul-d'Abbotsford","Brigham","Rapid City","Dufresne","Fabreville","Prospect","Eriksdale","Minnedosa","Cranberry Portage","Bonshaw","Colonsay","Coburg","Sardis","Pascal","Hafford","Spencerville","Odessa","Trout Creek","Powassan","Sorel-Tracy","Kispiox","Cedar Valley","Barons","Cottam","Saint-Augustin-de-Desmaures","Fort McPherson","Tuktoyaktuk","Aklavik","Breslau","Morrin","Youngstown","Consort","Empress","Jenner","Clinton","Eckville","Riverton","Sherrington","Scott","Mar","Grande Cache","Saint-Michel","Tracadie","Newdale","Saint-Raphael","West Hill","Granum","Binscarth","Moffat","Otterburne","Beauval","Yellow Grass","Craik","Norquay","Quill Lake","Piney","Morris","Plum Coulee","Manitou","Churchill","Arborg","Moose Lake","Gillam","Winnipegosis","Comber","Campbellville","Havre-Aubert","Bamfield","North Delta","Churchville","Kinuso","Munson","St. Stephen","Arva","Malton","West Bay","Pontypool","Clarence","South Slocan","Lantzville","New Aiyansh","Port Edward","Pinantan Lake","Riviere-Ouelle","Munster","Kilworthy","Elma","MacGregor","Gladstone","Riviere-Rouge","Norval","Chatsworth","Unionville","Rossport","Wemindji","Arviat","Cape Dorset","Saint-Bruno","Rosedale","Sillery","Cartwright","Russell","Ashville","Treherne","Gretna","Streetsville","Clair","Ferintosh","Agincourt","Omerville","Bramalea","Yahk","Sunderland","Nouvelle","Edam","Buckingham","Muirkirk","Coutts","Pukatawagan","Ogoki","Kuujjuarapik","Cross Lake","Grand Rapids","South Indian Lake","Oldcastle","Pouce Coupe","Dog Creek","New Denver","Deroche","Parson","Spillimacheen","Saint-Casimir","Sainte-Thecle","Lemberg","Tompkins","Penobsquis","Whitney","Kerwood","Port Alice","Stoneham","Saint-Telesphore","Obedjiwan","Saint-Jude","Baldonnel","Hagensborg","Malakwa","Edgewood","Sayward","Les Mechins","Neuville","Plumas","Kedgwick","Val-Morin","Dawson City","Carmacks","Watson Lake","Paulatuk","Norman Wells","Gray Creek","Bridge Lake","Klemtu","Field","Tisdale","Spy Hill","Bromhead","Debden","Abbey","Blaine Lake","Wiseton","Mankota","Bethune","Qu'Appelle","Kisbey","Ituna","Mistatim","Conquest","Saint-Felix-de-Kingsey","Sainte-Clotilde-de-Horton","Saint-Malachie","Wrentham","Carseland","Delaware","Snow Lake","Dugald","Marchand","Mountain View","Worsley","Standard","Smooth Rock Falls","Acadia Valley","Spirit River","Englehart","Moonbeam","Swastika","Hampden","Aylsham","Penzance","Delisle","Rhein","Arelee","Baie-Des-Sables","Schefferville","Tahsis","Marbleton","Coal Harbour","McBride","Grasmere","Barkerville","Moberly Lake","Bic","Ashcroft","Hartley Bay","North Star","Cranberry","Dorset","Field","Warner","Tompkins","Kettleby","Saint-Irenee","Saint-Arsene","Saint-Urbain","Pointe-a-la-Croix","Ladysmith","Windham Centre","Parkhill","Kent Bridge","Searchmont","Garden River","Blackie","Seaforth","Roblin","Grandora","St. Louis","Lake Lenore","Cut Knife","Birtle","Hartney","Pierson","Onanole","Baldur","Melita","Bryson","Springfield","Takla Landing","Louisbourg","Port Morien","Malagawatch","Whycocomagh","Fox Creek","Fort Smith","Arctic Bay","Kimmirut","Colville Lake","Hamiota","Inglis","Oak Lake","Souris","Sandy Bay","Young","Domremy","St-Timothee","Sharbot Lake","Beachburg","Morewood","Spring Hill","Allenford","Emerald","Alameda","Manor","Ceylon","Naicam","Wright-Gracefield-Northfield","Frelighsburg","Lyster","Saint-Benjamin","Saint-Francois-de-l'Ile-d'Orleans","Vauxhall","Tennion"
,"Syria","Damascus","`Ara","Aleppo","Ad Darah"
,"Ukraine","Kiev","Vyshhorod","Ternopil","Brody","Donetsk","Mariupol","Rodinskoye","Sloviansk","Yenakiyeve","Kherson","Zaporizhia","Dnipropetrovsk","Berdyans'k","Novomoskovsk","Chervonohrad","Zhytomyr","Odesa","Chernihiv","Boryspil","Kharkiv","Luhansk","Cherkasy","Kerch","Mykolayiv","Teplodar","Alchevs'k","Kirovsk","Petrenky","Kovel","Uzhhorod","Vinnytsya","Desna","Krasnoarmiys'k","Syeverodonets'k","Bila Tserkva","Pavlograd","Makiyivka","Krasnodon","Simferopol","Sumy","Oleh","Obolon'","Kuna","Volodars'k-Volyns'kyy","Kalynivka","Lviv","Volodymyr-Volyns'kyy","Sverdlovs'k","Illintsi","Ivano-Frankivs'k","Lutsk","Novi Sanzhary","Svalyava","Tsyurupinsk","Shpola","Chernivtsi","Buchach","Dimitrov","Mala Tokmachka","Poltava","Korosten","Sevastopol","Smila","Khmel'nyts'kyy","Kryvyy Rih","Drohobych","Rivne","Dniprodzerzhyns'k","Pervomays'k","Volochys'k","Slavuta","Pavlohrad","Ternopol'skiy Rayon","Feodosiya","Yalta","Stakhanov","Brovary","Kremenchuk","Aleksandriya","Zaporozhe","Marhanets'","Kalush","Melitopol","Vorovskiy","Kirovohrad","Dolyns'ka","Nizhyn","Ivanov","Krasnoperekops'k","Zolotonosha","Kolomyia","Belaya","Shostka","Storozhynets'","Anan'yiv","Netishyn","Spas","Vinogradar'","Bucha","Lohvynove","Podol","Boyarka","Rayhorodka","Stat","Rivne","Kramatorsk","Turka","Chop","Irpin","Voznesenka","Bolekhiv","Chervona Hirka","Energodar","Kotovs'k","Vasylkiv","Alekseyevo-Druzhkovka","Kalynivka","Soroki","Zolochiv","Tkachenka","Rubizhne","Malyn","Zhashkiv","Zavod","Vasylets'","Teremky","Lugansk","Mega","Shevchenko","Aleksandrovka","Kurylivka","Poplavy","Zdolbuniv","Kyseliv","Komsomolsk","Romny","Artemivs'k","Lutugino","Makariv","Horlivka","Bryanka","Chernev","Zhmerynka","Yasinovataya","Fastiv","Boryspil Raion","Debal'tseve","Ternovka","Lisichansk","Gorlovka","Ugledar","Sudak","Berehove","Kremenets","Rovenki","Armyans'k","Konotop","Kuznetsovsk","Shevchenka","Bilohirs'k","Alushta","Kozyatyn","Tul'chyn","Alupka","Svessa","Volnovakha","Bila Hora","Zhdanovka","Ukrayinka","Kirovs'ke","Novyy Buh","Mykolayiv","Berdychiv","Maksim","Shepetivka","Dzhankoy","Bobrynets'","Kakhovka","Sokoliv","Korostyshiv","Lanovka","Zabolotiv","Horodenka","Hostomel'","Voronovo","Dykan'ka","Kvasyliv","Zlazne","Obukhov","Trypillia","Kaniv","Saky","Krasnohrad","Sorotskoye","Novovolyns'k","Mylove","Knyazhychi","Nosivka","Bortnychi","Zastava","Uman'","Nadezhda","Stanislav","Khmil'nyk","Ivankov","Darakhov","Semen","Babin","Romaniv","German","Slynkivshchyna","Toporov","Bukova","Davydov","Tsvetkov","Volkov","Pobeda","Stepan'","Frunze","Kurakhovo","Mostys'ka","Lityn","Hoshiv","Sokil'nyky","Grebenyuk","Boryslav","Lubny","Borodyanka","Bozhenka","Zmiyiv","Merefa","Bushtyno","Barashivka","Stryi","Soroka","Dmitrovichi","Osypenko","Osnova","Izmail","Hlukhiv","Serhiyi","Sencha","Baryshivka","Sverdlovs'ke","Markova","Dubno","Luganskoye","Kreminna","Mukacheve","Khotin'","Haysyn","Sokol","Kyyiv","Tyachiv","Druzhkovka","Khust","Pyrohiv","Torez","Petranka","Selidovo","Lenina","Goncharov","Monastyryshche","Fontanka","Tokmak","Uspens'ke","Letychiv","Khyzha","Nikopol'","Oreanda","Vyshneve"
,"Cyprus","Limassol","Nicosia","Larnaca","Paphos","Geroskipou","Ayia Marina","Livadia","Kato Polemidia","Chlorakas","Paralimni","Parekklisha","Morfou","Strovolos","Kyrenia","Laxia","Aradippou","Mouttagiaka","Kiti","Prodromi","Agia Anna","Kato Lakatamia","Famagusta","Deryneia","Sotira","Tera"
,"Czech Republic","Prague","Chodov","ÃšstÃ­ nad Labem","Jablunkov","ÄŒeskÃ½ TÄ›Å¡Ã­n","Vlcovice","Chrudim","KolÃ­n","Tehov","Koprivnice","Beroun","Horovice","Valasske Klobouky","Bylnice","Slavicin","Poritsch","As","Lanskroun","Chlumcany","Cernosice","Jablonec nad Nisou","Zd'ar nad Sazavou","Bystrice nad Pernstejnem","Semily","Roznov pod Radhostem","Hovezi","Nove Straseci","Pilsen","Naklo","Kyjov","Milotice","Rtyne","Jaroslav","Uhersky Ostroh","Ceska","Horni Bojanovice","HodonÃ­n","Straznice","Raj","Silherovice","Darkovicky","Vsetin","Valasske Mezirici","Strazek","KutnÃ¡ Hora","Troja","Pysely","Brno","Caslav","Ronov nad Doubravou","Chotebor","Rychnov nad Kneznou","Policka","Prosetin","Prelouc","Ledec nad Sazavou","Svetla nad Sazavou","Golcuv Jenikov","Bojanov","Hermanuv Mestec","Nove Mesto nad Metuji","Ostrava","Sudkov","Olomouc","Cestice","DÄ›ÄÃ­n","Citoliby","Zeliv","Karlovy Vary","Zampach","Lichkov","ZlÃ­n","Jablunka","Nymburk","Votice","Podebrady","BÅ™eclav","Lomnice","Nedvedice","Bruntal","Dolni Sucha","Krnov","PÃ­sek","Ostrov","Teplice","Liberec","Vysoke Myto","Jevicko","Ceska Ves","Sumperk","Jihlava","Trest'","Radostin","LitomÄ›Å™ice","TÅ™ebÃ­Ä","Novy Bydzov","Jablonne v Podjestedi","Trstenice","Pardubice","Hodice","Chrastna","Kladno","Brezi","Hosteradice","Jistebnik","Opava","Sezemice","Jaromer","ÄŒeskÃ¡ LÃ­pa","Vamberk","Pribor","Krupka","Milovice","Susice","Nyrsko","Blatna","Velke Hydcice","Tvrdonice","Dolni Bojanovice","Prusanky","Lanzhot","Hluboka nad Vltavou","Chomutov","Litvinov","Krivoklat","Horesedly","Louny","Postoloprty","Kralupy nad Vltavou","MÄ›lnÃ­k","VyÅ¡kov","Drnovice","Bucovice","ProstÄ›jov","HavlÃ­ÄkÅ¯v Brod","Boskovice","Blansko","Tisnov","Cesky Brod","Hulin","Tachov","Bor","MariÃ¡nskÃ© LÃ¡znÄ›","Plana","Siluvky","Kurim","Mesice","Podivin","Bludovice","Dehylov","Velka Bites","Stritez nad Ludinou","Letohrad","Frydlant nad Ostravici","Frydek-Mistek","Nachod","Libeznice","Hradec KrÃ¡lovÃ©","Bernartice nad Odrou","Vitkov","Moran","Petrvald","Jirkov","Zdiby","Cepi","Chrast","Zamberk","Jablonne nad Orlici","Kratonohy","Dobre","Karvina","Lutin","Vsenory","Zabcice","Turnov","Novy Jicin","Mohelnice","Znojmo","Horni Becva","Vladislav","Unetice","Spalene Porici","Bystrice pod Hostynem","Ricany","Stare Mesto","Uhersky Brod","Dolni Nemci","Ceska Trebova","Kostelec nad Orlici","Lysa nad Labem","Dobriv","Velke Mezirici","Hranice","Nyrany","Merklin","Domazlice","Kbely","Mratin","Zajeci","Ejpovice","Opocno","Banov","UherskÃ© HradiÅ¡tÄ›","Bilovice","Spytihnev","Dubne","Telc","Zidlochovice","Albrechtice","Hustopece","Holoubkov","JiÄÃ­n","Chodov","Napajedla","Kunovice","Uhrice","Vacenovice","Svatava","Frenstat pod Radhostem","Sokolov","Cheb","Vysoka nad Labem","Lazne Bohdanec","Most","Å½atec","Klasterec nad Ohri","Dobris","Mnisek pod Brdy","Kraluv Dvur","Tachlovice","Modrice","PÅ™erov","Mnichovice","Babice","MladÃ¡ Boleslav","Hlucin","Strakonice","HavÃ­Å™ov","Lhota","Rychvald","TÃ¡bor","Klatovy","Liban","Brandys nad Labem-Stara Boleslav","Skalsko","Velky Borek","Rokycany","KromÄ›Å™Ã­Å¾","Orlova","Jindrichuv Hradec","Jalubi","Nove Mesto na Morave","Kosmonosy","Rovensko pod Troskami","Bela pod Bezdezem","Rakovnik","Luzna","Vlasim","Skutec","Roudnicek","Roudnice nad Labem","Nedomice","Steti","Rovna","Ctidruzice","Pocatky","Jevisovice","Batelov","Lesonice","Satov","Zeletava","Trinec","Vendryne","Slany","Lodenice","Svojek","Volyne","Veseli nad Moravou","ÄŒeskÃ© BudÄ›jovice","Lhota","Nova Lhota","Ratibor","Zubri","Polna","Grucovice","Velke Heraltice","Vizovice","Nydek","Celadna","Bavory","Moravsky Zizkov","Valtice","Mikulov","Starovicky","Zlata","Vlachovice","Litovel","Jilovec","Moravska Trebova","Chocen","Ladvi","Luhacovice","Janovice nad Uhlavou","Rousinov","Kraslice","Ondrejov","Krasna Lipa","Jenec","Mokrany","Dvur Kralove nad Labem","Marianska","Borsice","Ktis","Predklasteri","Pisecna","Vysker","Velka Polom","Vimperk","Strunkovice nad Blanici","Chlumec nad Cidlinou","Uvaly","Jirny","Sibrina","Doubravy","Bystrice","Hlinsko","Kamenne Zehrovice","Velka Dobra","Pchery","Bustehrad","Tremosna","Mnichovo HradiÅ¡tÄ›","Uhonice","Sany","Rymarov","Malesov","Dubnany","Hysly","Stribro","Stenovice","Vrbno pod Pradedem","Sedlcany","Vrbice","Cejkovice","Usti nad Orlici","Prestice","Holysov","Holice","Pariz","Frystak","Svitavy","Kretin","Slavkov u Brna","Novosedly","Hostomice","Ostopovice","Ostrozska Nova Ves","Stochov","Moravske Budejovice","Cerveny Kostelec","Filipova","Drisy","BeneÅ¡ov","Bukovec","Vsechovice","Horni Pocernice","Benatky nad Jizerou","Krhova","Sadska","Prezletice","Deblin","Hradec nad Moravici","Velke Losiny","Lhota pod Libcany","Hradek","Sivice","Hrusovany nad Jevisovkou","Vinarice","Kamenice","Nehvizdy","Hradiste","Rudna","Cvikov","Ostrov u Macochy","Skripov","Okrisky","Ceska Skalice","Dvorce","Chotesov","Novy Bor","Slavonice","Choustnik","Hrdejovice","Roztoky","Horni Podluzi","Dolni Poustevna","Sumice","Lubenec","Harrachov","Snezne","Letovice","Tremesna","Lysice","Svitavka","Temice","Cechtice","Osecna","Bystrice","Mesto Touskov","Dily","Sobeslav","Lampertice","Rychnov","Hradec","Velka Jesenice","Trutnov","Dolni Radechova","Planany","Dymokury","Chyne","Drzovice","Pisecna","Sternberk","Telnice","Mukarov","Luby","Hranice","Horni Slavkov","Mikulovice","Cernotin","Drahotuse","Senice na Hane","Malenovice","Hostivice","Lovosice","Novy Knin","Maly Ujezd","Stribrna Skalice","Libos","Jilove u Prahy","Chodova Plana","Dolni Sytova","Zasova","Velke Prilepy","Brezova","Trebon","Bernartice","Raspenava","Dolni Kounice","Nove Veseli","Osik","Velke Popovice","Hostomice","Mokra Horakov","Zulova","Stalkov","Chocerady","Doubravnik","Pelhrimov","Pecin","Velky Osek","Kacice","Lhotka","Veverska Bityska","Strachotin","Veseli nad Luznici","Tursko","Kravare","Kolodeje","Prepere","Brusperk","Chribska","Habartov","Velke Brezno","Vsetaty","Sluknov","Varnsdorf","Novy Hrozenkov","Halenkov","Moravska Nova Ves","Zatcany","Tucapy","Slapanice","Bohumin","Hlasna Treban","Jinocany","Horousanky","Lounovice pod Blanikem","Dalovice","Bolebor","Dolni Benesov","Doksy","Svojkov","Kozmice","Trhovy Stepanov","Senov","Vrchlabi","Kamyk","Dobroslavice","Dubi","Kostelec nad Labem","Celakovice","Dubec","Jesenice","Mutenice","Tyniste nad Orlici","Hradek nad Nisou","Olsany","Dlouha Trebova","Kraliky","Nechanice","Kaplice","Bechyne","Milevsko","Kostice","Krumvir","Fulnek","Malcice","Ujezd nad Lesy","Zadni Treban","Trebechovice pod Orebem","Ochoz","Nezamyslice","Boretice","Mlada Vozice","Brod","Kralovice","Kamenice","Syrovice","Rajec-Jestrebi","Vidce","Knezmost","Zvole","Sobotka","Poricany","Msec","Pustejov","Zdeslav","Prachatice","Menany","Vselibice","Bochov","Mladkov","Libocany","Loukov","Hospozin","Rajecko","Nepomysl","Stitina","Lipova","Brodek","Jedovnice","Potstejn","Zabreh","Jaroslavice","Damnice","Sedliste","Hodslavice","Cesky Dub","Loket","Desna","Vyprachtice","Leskovec","Jiloviste","Radnice","Benesov","Lachov","Nova Vcelnice","Tuchomerice","Osek","Pecky","Kamenny Privoz","Krepenice","Stribrec","Velke Opatovice","Chrast","Krizanov","Lichnov (o. Novy Jicin)","Libcany","Branov","Veltrusy","Dolni Brezany","Tynec nad Sazavou","Mirosov","Jirice","Skuhrov nad Belou","Arnoltice","Tetin","Citov","Zehun","Dolni Becva","Stare Sedliste","Smrzovka","Strancice","Mechenice","Ohrobec","Trebestovice","Cervene Pecky","Bilovice nad Svitavou","Starovice","Petrovice u Karvine","Polepy","Cerekvice nad Loucnou","Horsovsky Tyn","Branky","Bratrikov","Nova Paka","Otrokovice","Haj ve Slezsku","Mosty u Jablunkova","Vcelna","Chvalec","Zbuch","Protivin","Domasov","Nove Dvory","Prikazy","Neratovice","Psary","Horomerice","Zipotin","Stoky","Mlazovice","Postrelmov","Radun","Liten","Brezno","Velvary","Citov","Strachotice","Cheznovice","Prlov","Klecany","Ujezd","Hukvaldy","Kostelec na Hane","Krmelin","Borovany","Bilina","PÅ™Ã­bram","Skalice","Rozdrojovice","Duchcov","Bilina","Smirice","Dukovany","Mlade Buky","Horice","Zelezny Brod","Dejvice","Haje","Visnove","Hlubocepy","Krchleby","Stod","Velehrad","Radostice","Ivancice","Hronov","Broumov","Marov u Upice","Police nad Metuji","Zbysov","Kvetnice","Sedlec","Brezolupy","Pacov","Luze","Vernovice","Kralice na Hane","Senec","Stezery","Nivnice","Chotoviny","Nejdek","Malenice","Rozsochatec","Nova Ves","Blovice","Odry","Ricany","Zeleznice","Line","Bystrice","Dolni Berkovice","Bezdekov","Kamenicky Senov","Rebesovice","Dolni Terlicko","Kunratice","Dusejov","Lhota","Zdirec","Dobronin","Kochovice","Nupaky","Frantiskovy Lazne","Nelahozeves","Horni Lutyne","Blizevedly","Trmice","Lisov","Komorni Lhotka","Lomnice nad Popelkou","Perstejn","Krouna","Ostromer","Velke Svatonovice","Horni Briza","Ckyne","Dolni Jircany","Krtiny","Nova Cerekev","Hamr","Merklin","Jirickov","Vinicne Sumice","Doudleby nad Orlici","Bitovany","Vsechovice","Lazne Libverda","Cercany","Predmerice nad Labem","Zdice","Kunstat","Predmerice nad Jizerou","Budyne nad Ohri","Strelice","Olovi","Mostek","Cerncice","Prazmo","Senohraby","Stity","Stankov","Cerhenice","Lustenice","Zlate Hory","Mrlinek","Brodce","Borohradek","Zelesice","Humpolec","Rikovice","Michle","Mirosovice","Starec","Seberov","Mseno","Stara Paka","Moravsky Beroun","Provodov","Obristvi","Lety","Baska","Opatovice nad Labem","Kdyne","Horni Nemci","Veverske Kninice","Kostelni Hlavno","Litava","Kostelec nad Cernymi Lesy","Nesovice","Zborovice","Tisice","Rapotice","Bosin","Choustnikovo Hradiste","Detmarovice","Nedakonice","Havrice","Vracov","Zdounky","Jilemnice","Sloup","Unicov","Vresina","Velka Bystrice","Nucice","Rudikov","Belotin","Rudolfov","Mimon","Kadan","Komarice","Mezibori","Lipnik nad Becvou","Velesin","Mala Skala","Vratkov","Ratiskovice","Hostin","Dobra Voda","Holesov","Cebin","Odolena Voda","Holubice","Vrane nad Vltavou","Markvartovice","Tuchlovice","Ostrozska Lhota","Zeravice","Hradiste","Dobra","Sviadnov","Tosovice","Hudlice","Snedovice","Sestajovice","Bludov","Mcely","Loucen","Strasice","Rozmital pod Tremsinem","Repy","Luka","Hradcovice","Bojkovice","Drzkov","Chroustovice","Navsi u Jablunkova","Zlicin","Predmesti","Kylesovice","Hostice","Ivanovice na Hane","Seibersdorf","Vtelno","Straz nad Nisou","Plouznice","Benesovice","Cista","Adamov","Prackovice nad Labem","Kresice","Rapotin","Jesenik","Rokytnice","Svihov","Milin","Davle","Hajnice","Libochovicky","Hovorcovice","Dolni Zandov","Dubenec","Slapy","Moravsky Krumlov","Libesice","Uzice","Hvozd","Zelenec","Chlupice","Miroslav","Hrusovany u Brna","Oslavany","Otnice","Rudoltice","Tupesy","Polesovice","Dolni Dunajovice","Petrovice","Studenka","Velke Albrechtice","Krnsko","Kouty","Moravsky Pisek","Vysoka","Divisov","Frydlant","Milikov","Rovina","Kotencice","Vojkovice","Rokytnice nad Jizerou","Lasenice","Kacerov","Vratimov","Palkovice","Zdanice","Korycany","Hovorany","Horni Benesov","Bohunovice","Loucany","Kaznejov","Konice","Radim","Nezvestice","Prerov nad Labem","ÄŒeskÃ½ Krumlov","Lomnice nad Luznici","Svaty Jan nad Malsi","Vysoke Veseli","Zelenka","Kourim","Ceske Mezirici","Nikolcice","Borotin","Olomucany","Sebrov","Chlumec","Ruda nad Moravou","Vodnany","Oparany","Zliv","Stare Mesto","Hlubocky","Tesetice","Kuncice","Novy Oldrichov","Straz pod Ralskem","Preckov","Nenkovice","Hostinne","Holasice","Ustin","Dlouhe","Statenice","Blucina","Stepanov","Dobrany","Mezilesi","Pavlice","Klimkovice","Obrany","Stara Voda","Zandov","Pistovice","Libis","Jince","Klicany","Krenovice","Janovice","Horni Redice","Karlin","Zizkov","Lednice","Velky","Primda","Cerna Hora","Vochov","Moravicany","Dubicko","Rosice","Pribyslav","Pruhonice","Velesovice","Krasna Hora nad Vltavou","Sanov","Jezov","Sucha Loz","Milonice","Ritka","Kuncina","LitomyÅ¡l","Vsestary","Stary Bydzov","Dobrichovice","Bolatice","Bradlec","Kopidlno","Chotetov","Kyjov","Lipence","Dobruska","Klobouky","Dolany","Tvarozna","Libice nad Cidlinou","Zilina","Horin","Hrabetice","Rosice","Cerna za Bory","Nasavrky","Koci","Mestec","Brtnice","Cakovice","Podborany","Ujezd","Slusovice","Lukov","Rataje","Francova Lhota","Rybna","Vlastislav","Sterboholy","Tman","Tlumacov","Domazelice","Pocenice","Cejc"
,"Switzerland","Zurich","Geneva","Lucerne","Grenchen","Bettlach","Lengnau","Pieterlen","Huttwil","Langenthal","Lotzwil","Murgenthal","Roggwil","Butzberg","Bannwil","Wynau","Leukerbad","Zermatt","Visp","Brig","Glis","Naters","Saas-Fee","Matzendorf","Oensingen","Egerkingen","Holderbank","Wolfwil","Attiswil","Oberbipp","Balsthal","Mumliswil","Wiedlisbach","Welschenrohr","Mohlin","Niederbipp","Bern","Gumligen","Muri bei Bern","Kirchberg","Hindelbank","Wasen","Burgdorf","Lyssach","Oberburg","Ersigen","Kernenried","Kirchberg","Belp","Munsingen","Rubigen","Toffen","Aarberg","Seedorf","Herzogenbuchsee","Oberonz","Rheinfelden","Therwil","Basel","Oberwil","Binningen","Bottmingen","Pratteln","Oberdorf","Oberdorf","Zeglingen","Wegenstetten","Gelterkinden","Reinach","Seltisberg","Kaiseraugst","Wallisellen","Dubendorf","Collombey","Bouveret","Martigny-Ville","Basse-Nendaz","Saxon","Monthey","Riddes","Arlesheim","Onex","Doettingen","Bariswil","Lausanne","Breitenbach","Thayngen","Uhwiesen","Reinach","Biel/Bienne","Pully","Sachseln","Zizers","Cazis","Chur","Steinhausen","Ebnat-Kappel","Meyrin","Hunenberg","Giubiasco","Laufen","Frauenfeld","Affoltern am Albis","Pfaeffikon","Kriens","Yverdon-les-Bains","Rueti","Wetzikon","Mendrisio","Stabio","Vevey","Orbe","Baar","Uster","Trimbach","Appenzell","Fallanden","Fribourg","Diessenhofen","Sulgen","Kreuzlingen","Schonholzerswilen","Schaffhausen","Bulach","Winterthur","Au","Massagno","Lugano","Rotkreuz","Bernex","St. Gallen","Nidau","Carouge","Wil","Neuenhof","Viganello","Renens","Eysins","Nyon","Prilly","Aigle","Sarnen","Chene-Bourg","Bern / Liebefeld","Erlenbach","Hochdorf","Entlebuch","Unterageri","Dielsdorf","Sissach","Wettingen","Deitingen","Hergiswil","Rupperswil","Forel","Muri","Turbenthal","Laupen","Chiasso","Riva San Vitale","Cadro","Banco","Melide","Chene-Bougeries","Solothurn","Augst","Oberschlatt","Beinwil","Rorschach","Baretswil","Lenzburg","Oberlunkhofen","Villigen","Zaziwil","Hagneck","Schanis","Autigny","DÃ¼dingen","Menziken","Frutigen","Bassersdorf","Nurensdorf","Ruschlikon","Mannedorf","Tenero","Blonay","Weinfelden","Wabern","Wurenlos","Oberentfelden","Jona","Kronbuhl","Goldach","Daettlikon","Schlieren","Montreux","Dornach","Peseux","Allschwil","Marin","Rumlang","Horw","Saint-Sulpice","Munchenstein","Emmenbruecke","Veyrier","Liestal","Klingnau","Dottikon","Windisch","Dietikon","Gland","Celigny","Gingins","Coppet","Crassier","Kriegstetten","Derendingen","Subingen","Lohn","Munchenbuchsee","Urtenen","Schonbuhl","Richenthal","Nussbaumen","Wollerau","Lachen","Merenschwand","Bonstetten","Kuesnacht","Thun","Courtion","Berikon","Nunningen","Kloten","Fischingen","Baden","Bioggio","Siebnen","Gummenen","Bex","Rorbas","Embrach","Wittenbach","Teufen AR","Morschwil","Oftringen","Cointrin","Regensdorf","La Chaux-de-Fonds","Neuchatel","Horgen","Richterswil","Oberweningen","Lucens","Moudon","Thierachern","Heimberg","Zollikofen","Wadenswil","Pregassona","Wikon","Strengelbach","Hagendorf","Olten","Aarau","Volketswil","Crissier","Corgemont","Bellevue","Vernier","Versoix","Plan-les-Ouates","Samstagern","Pfaeffikon","Vullierens","Ecublens","Niederrohrdorf","Fehraltorf","Ausser-Dinhard","Bussigny","Romanel","Saint-Prex","Tegerfelden","Untersiggenthal","Nussbaumen","Birr","Wurenlingen","Endingen","Turgi","Habsburg","Kirchdorf","Holderbank","Gebenstorf","Birmenstorf","Brugg","Seewis im Pratigau","Tamins","Seengen","Wohlen","Egliswil","Nanikon","Meisterschwanden","Bruttisellen","Flums","Untervaz","Domat","Haldenstein","Wangs","Greifensee","Bassecourt","Malleray","Bevilard","Rapperswil","Eschenbach","Roche","Chatel-Saint-Denis","Buchs / Buchs (Dorf)","Bellinzona","Belmont-sur-Lausanne","Zollikon","Le Locle","Altdorf","Courtepin","Lamboing","La Neuveville","Wileroltigen","Speicher","Vacallo","Mettmenstetten","Nottwil","Sursee","Mauensee","Avenches","Couvet","Zofingen","Heerbrugg","Berneck","Ermatingen","Tagerwilen","Holstein","Magden","Colombier","Cornaux","Preles","DelÃ©mont","Minusio","Langnau am Albis","Herisau","Frick","Ober Urdorf","Murten","Vesenaz","Rickenbach","Zug","Feuerthalen","Huntwangen","Wagenhausen","Biberist","Morges","Chardonne","Le Mont-sur-Lausanne","Gossau","Grueningen","KÃ¼ttigen","Troistorrents","Villars-sur-Glane","Gstaad","Sempach","Unterengstringen","Cadempino","Locarno","Tann","Berlikon","Hinwil","Weiningen","Meilen","Oberengstringen","Stettlen","Illnau","KÃ¼ssnacht","Elsau-Raeterschen","Hinterkappelen","Losone","Oetwil / Oetwil an der Limmat","Cham","Vandoeuvres","Morigen","Bristen","Willisau","Beromuenster","Moutier","Hunibach","Schmitten","Ueberstorf","Albligen","Schwarzenburg","KÃ¶niz","Puidoux","Cully","Chexbres","Payerne","Rolle","Gottlieben","Romanshorn","Steckborn","Confignon","Niederuzwil","Oberuzwil","Otelfingen","Andwil","Hettlingen","Elgg","Glattfelden","Thalwil","Rudolfstetten","Oberbuchsiten","Lostorf","Ecuvillens","Avry","Neyruz","GruyÃ¨res","Grandvillard","Treyvaux","Domdidier","Faoug","Broc","Dompierre","Ependes","Opfikon","Henggart","Zell","Russikon","Seuzach Dorf","Hagenbuch","Pfungen","Aadorf","Weisslingen","Gravesano","Morbio Inferiore","Morcote","Littau","Schachen","Dattwil","Courrendlin","Courroux","Coeuve","Chambesy","Bach","Granges","Apples","Cudrefin","Kempttal","Oberembrach","Reconvilier","Saint-Imier","Cortaillod","Boudry","Bevaix","Fontainemelon","Grandson","Estavayer-le-Lac","Champagne","Bolligen","Worblaufen","Jegenstorf","Ostermundigen","Adliswil","Kilchberg","Steffisburg","Spiez","Einigen","Durnten","Hergiswil","Kastanienbaum","Alpnach","Seegraben","Monchaltorf","Ebikon","Aeugst am Albis","Mettmenstetten","Stallikon","Rondchatel","Schenkon","Eich","Oberkirch","Weggis","Emmen","Wiesendangen","Roschenz","Birmensdorf","Herrliberg","Hombrechtikon","Feldmeilen","Stafa","Oetwil am See","Uerikon","Uetikon","Glattburg","Villars-sur-Ollon","Altstatten","Arbon","Buix","Courtemaiche","Courgenay","Courtedoux","Riedholz","Zuchwil","Gerlafingen","Batterkinden","Obergerlafingen","Yvonand","Saint-Maurice","Val d'Illiez","Vionnaz","Villeneuve","Ayent","Erde","Sion","Bramois","Sierre","Vetroz","Grimisuat","Saint-Leonard","Ayer","Ossingen","Le Landeron","Altenrhein","Abtwil","Evilard","Tramelan","Orvin","Villeret","Neftenbach","Niederweningen","Koblenz","Leibstadt","Bad Zurzach","Rekingen","Porrentruy","Court","Wangen","Buchs","Bremgarten","Eggenwil","Lutry","Ormalingen","Mellingen","Hagglingen","Hendschiken","Trimmis","Arosa","Cheseaux-sur-Lausanne","Uzwil","Unterehrendingen","Saignelegier","Frenkendorf","Unterlunkhofen","Jonen","Les Breuleux","Hermetschwil-Staffeln","Oberwil","Moriken","Reigoldswil","Waldenburg","Oberglatt","Thonex","Eschlikon","Stein","Kaisten","Laufenburg","Hofstetten","Travers","Wahlen","Cottens","Lausen","Brutten","Rothrist","Ã‰challens","Wald","Sainte-Croix","Bubikon","Gossau","Neunkirch","Flaach","Uitikon","Niederurnen","Uetendorf","Brenzikofen","Killwangen","Kehrsatz","Sementina","Bottens","Gunten","Habkern","Rafz","Aarburg","Muhlau","Davos","Schoetz","KÃ¼nten","Schnottwil","Saviese","Conthey","Arbaz","Nax","Evionnaz","Grone","Montana","Martigny-Croix","Chalais","Granges-pres-Sion","Champsec","Champex","Sembrancher","Verbier","Chippis","Vercorin","Fully","Charrat-les-Chenes","DÃ¼rrenroth","Russin","Prangins","Fulenbach","Burglen","Rechthalten","Charmey","Niederhallwil","Le Grand-Saconnex","Balerna","Hitzkirch","Winkel","Spreitenbach","Termen","Munster","Oberhelfenschwil","Stansstad","Obfelden","Muhen","Hirzel-Kirche","Rheineck","Wolhusen","Neuheim","Root","Meierskappel","Werthenstein","Neuenkirch","Brunnen","Ottenbach","Walchwil","Kappel","Vuadens","Romont","Bulle","Riaz","Marsens","Siviriez","Chavannes-les-Forts","Hauteville","Maur","Zumikon","Egg","Lignieres","Saint-Blaise","Hauterive","EnnetbÃ¼rgen","Giswil","Thierrens","Epalinges","Wangi","Bazenheid","Cremines","Muhleberg","Bavois","Aubonne","Gimel","Grandval","Pery","Les Genevez","Lurtigen","Lyss","Saint-Livres","Meinisberg","Lenzerheide","Langnau","Gwatt","Rikon / Rikon (Dorfkern)","Beringen","Flurlingen","Buch","Schlatt","Trasadingen","Kappel","Portalban- Dessous","Schwyz","Kerns","Enney","Cugy","Kefikon","Le Vaud","Savigny","Daniken","Meggen","Bangerten","Le Cret","Hauptwil","Himmelried","Bissegg","Preverenges","Paudex","Worben","Busswil","Bosingen","Liebistorf","Tafers","Cordast","Heitenried","Ferenbalm","Schubelbach","Ascona","Berg","Rickenbach","Heimiswil","Agno","Erlach","Freienbach","Safenwil","Kerzers","Ins","Siselen","Altendorf","Reichenburg","Ziegelbrucke","Bilten","Kallnach","Unteriberg","La Tour-de-Peilz","Bettingen","Villmergen","Corcelles","Arisdorf","Fullinsdorf","Nafels","Mollis","Hundwil","Uznach","Sankt Gallenkappel","Ennenda","Fahrwangen","Blumenstein","Einsiedeln","Rothenthurm","Corcelles","Sariswil","Thorishaus","Niederlenz","Wildegg","Staufen","Stadel","Airolo","Netstal","Glarus","Goslikon","Sarmenstorf","La Chiesaz","Yvorne","Vouvry","Burglen","Schindellegi","Kolliken","Lungern","Inwil","Felsberg","Kaiserstuhl","Alt-Bachs","Siglistorf","Chavannes","Bottenwil","Brittnau","Vordemwald","Villars","Cossonay","Densbueren","Courtelary","Niedergosgen","Erschwil","Quartino","Saint-Cergue","Chavannes de Bogis","Tesserete","Interlaken","Benken","Suhr","Sonvico","Udligenswil","Pfeffikon","Sigriswil","DÃ¤rligen","Buchs","Muttenz","Caslano","Stein","Othmarsingen","Zuzgen","Canobbio","Stans","Buochs","Dallenwil","Wolfenschiessen","Beckenried","Buren nid dem Bach","BrÃ¼gg","Zuzwil","Neukirch","Amriswil","Horn","Novazzano","Magadino","Gordola","Matzingen","Ellikon an der Thur","Melano","Zwingen","Gunzgen","Ricken","Adligenswil","Steinen","Grosswangen","Rueggisberg","Aeschau","Schinznach Dorf","Obergosgen","Untererlinsbach","Seon","Villnachern","Founex","Jussy","Oron-la-ville","Arth","Aesch","Worb","Cressier","Gryon","Ruswil","Weesen","Wangen","Flamatt","Amsoldingen","Effretikon","Waldstatt","Bonnefontaine","Le Bry","Bellerive","Vex","Veytaux","Epautheyres","Rothenbach","Schoftland","Nesslau","Rebstein","Schattdorf","Grancy","Zuckenriet","Hoerstetten","Essertines-sur-Rolle","L'Abbaye","Biere","Vernayaz","Feldbach","Chapelle","Villaz-Saint-Pierre","Birsfelden","Oberhofen bei Etzgen","Vaulruz","Steg","Vallorbe","Alterswil","Niederbuchsiten","Munchwilen","L'Isle","Plaffeien","Sins","Buttes","Mumpf","Soyhieres","Gampelen","Kiesen","Davos Platz","Vauderens","Chamoson","Ovronnaz","Froideville","Felben","Neu-Rheinau","Lenk","Territet","Leutwil","Oberrieden","Oberstocken","Bubendorf","Veltheim","Grandcour","Tuggen","Saint-Aubin-Sauges","Les Verrieres","Wattwil","Rhazuns","Contone","Brissago","Neuhausen","Tauffelen","Sankt Margrethen","Chatelaine","Vicques","Eschenbach","Cernier","Hildisrieden","Degersheim","Dardagny","Morschach","Malters","Buchrain","Fluehli","Buttisholz","Hellbuehl","Schuepfheim","Cartigny","Rue","Begnins","Coppet","La Plaine","Graenichen","Maggia","Rossens","Busserach","Grindelwald","Basadingen","Dachsen","Eglisau","Rudlingen","Buchberg","Stein am Rhein","Nohl","Hemmental","Ramsen","Grabs","Mels","Lienz","Au","Sargans","Balgach","Sevelen","Sennwald","Cressier","Thielle","Gachlingen","Erlen","Diepoldsau","Bad Ragaz","Daillens","Rohrbach","Muolen","Gipf-Oberfrick","Islikon","Wauwil","Freidorf","Schonenwerd","Niedererlinsbach","Wittnau","Thalheim","Auenstein","Schafisheim","Moosleerau","Teufenthal","Unterkulm","Gontenschwil","Reiden","Dagmersellen","Ibach","Fischenthal","Tavannes","Hornussen","Vinzel","Klosters Serneus","Furstenaubruck","Wolfgang","Cheyres","Rohr","Hofstetten","Bachenbulach","Thundorf","Pfaffnau","Corsier","Le Noirmont","Montagnola","Gandria","Selzach","Biel-Benken","Landquart","Arni","Auvernier","Schonenberg","Bauma","Gordevio","Iragna","Durrenasch","Oberegg","Hittnau","Boll","Campfer","Obersaxen","Dombresson","Sottens","Oberdiessbach","Langnau","Geuensee","Utzenstorf","Sezegnin","Koppigen","Bonaduz","Chateau-d'Oex","Corminboeuf","Les Pommerats","Ligerz","Trubschachen","Oberhofen","Miecourt","Courtetelle","La Chaux","Gampel","Ilanz","Bellmund","Emmetten","Grund","Flims","Waldhaus","Laax","Igis","Luvis","Weiningen","Brislach","Buren an der Aare","Belfaux","Attalens","Palezieux","La Sarraz","Wil","Bronschhofen","Hausen","La Roche","Ballwil","Goldau","Sorengo","Agra","Concise","Eiken","Beuson","Scuol","Diegten","Wangen an der Aare","Schonenbuch","Orsonnens","Bigenthal","Baulmes","Ettingen","Aettenschwil","Wigoltingen","Hilterfingen","Kaltbrunn","Chez-le-Bart","Unter-Teufen","Wichtrach","Adelboden","Wimmis","Saanenmoser","Gommiswald","Klosters Platz","Davos Dorf","Eggersriet","BÃ¼hler","Oberriet","Ruthi","Eichberg","Camorino","Pampigny","Yens","Auw","Onnens","Kleinlutzel","Seftigen","Grolley","Weissbad","Kradolf","Mettendorf","Stettfurt","Matt","Assens","Bursins","Morgins","Flawil","Full","Sirnach","Saint-Aubin","Muotathal","Satigny","Vilters","Guttingen","Altishofen","Schongau","Vitznau","Sattel","Attinghausen","Novaggio","Buonas","Bogis-Bossey","Alchenstorf","Noreaz","Buus","Anieres","Alberswil","Immensee","Givrins","Borex","Meinier","Henau","Hausen am Albis / Hausen (Dorf)","Claro","Lodrino","Waldkirch","Richigen","Arogno","Glaris","Maschwanden","Schmerikon","Euthal","Orpund","Zollbruck","Sulz","Hochwald","Gersau","Bottighofen","Walzenhausen","Egnach","Heiden","Maerstetten-Dorf","Mullheim","Grono","Sarn","Tasch","Les Hauts-Geneveys","Tanay","Niederburen","Lutisburg","Mosnang","Maisprach","Amden","Arzier","Gelfingen","Aristau","Schleitheim","Semsales","Porsel","Gerzensee","Niederscherli","Ingenbohl","Courfaivre","Aesch","Gais","Lichtensteig","Pfeffingen","Rueyres","Colombier","Diessbach","Goldiwil","Fraubrunnen","Messen","Konolfingen","Triengen","Castione","Krauchthal","Ursenbach","Chene-Paquier","Sonvilier","Fleurier","Lenz","LÃ¼tzelflÃ¼h","Langenbruck","Uerkheim","Cadenazzo","Cassina d'Agno","Trubbach","Thalheim","Schmitten","Schwellbrunn","Gettnau","Maroggia","Altnau","Roggwil","Oberwangen","Trogen","Chavornay","Vuiteboeuf","Rances","Romainmotier","Le Brassus","Ardon","Leysin","Jonschwil","Engelberg","Biasca","Capolago","Manno","Feldbrunnen","Unterseen","Twann","Arzo","Burchen","Merishausen","UrnÃ¤sch","Balterswil","Menzingen","Iserables","Bissone","Glion","Melchnau","Mettlen","Buetschwil","Zihlschlacht","Ried","Bitsch","Les Geneveys-sur-Coffrane","Pfyn","Riggisberg","Bigorio","Zeihen","Roveredo","Arbedo","Chesieres","Schiers","Seedorf","Erstfeld","Hasle","Felsenau","Kollbrunn","Eggiwil","Rehetobel","Genestrerio","Grellingen","Oberbalm","Gerlikon","Barbereche","Schinznach Bad","Cugnasco","Wila","Iseo","Schwarzenberg","Pura","Waltenschwil","Rapperswil","Gnosca","Perroy","Chancy","Liddes","Grimentz","Seelisberg","Schonried","Greppen","Thusis","Saanen","Zullwil","Sils-Segl Maria","Celerina","Raperswilen","Feusisberg","Sonceboz","Salmsach","Ittenthal","Laufelfingen","Lauerz","Les Acacias","Le Sentier","Herdern","Gonten","Andermatt","Stoos","Zunzgen","Niederhelfenschwil","Wuppenau","Lommis","Ganterschwil","Wilderswil","Ringgenberg","Brienz","Bonigen","Meiringen","Walkringen","Ufhusen","Zell","Ouchy","Villa","Apro","Finhaut","Allaman","Saint-Sulpice","Motiers","Winterberg","Lindau","Schupfen","Perlen","Arcegno","Kulm","Tschuggen","Trun","Wolfhalden","Savognin","Ulrichen","Lauenen","Sumiswald","Cheiry","Vessy","Hunzenschwil","Dozwil","Montet","Wengen","Raron","Verscio","Flueli","Rufi","Hermance","Saas-Grund","Jenaz","Loco","Roemerswil","Aeschlen ob Gunten","Escholzmatt","Ferden","Herbetswil","Grossandelfingen","MÃ¼hlehorn","Muerren","Zufikon","Obervaz","Rifferswil","Les Diablerets","Brusino Arsizio","Sessa"
,"Iraq","Baghdad","Karkh","Sulaymaniyah","Kirkuk","Erbil","Basra","Bahr","Tikrit","Najaf","Al Hillah","Mosul","Haji Hasan","Al `Amarah","Basere","Manawi","Hayat"
,"Turkey","Izmir","Ankara","Antakya","Dortyol","Ä°skenderun","Bitlis","Samsun","Istanbul","Antalya","Kisir","Orhangazi","Bursa","Gebze","Trabzon","Ordu","Rize","DiyarbakÄ±r","Ä°zmit","Mersin","Etimesgut","Adana","AdapazarÄ±","Sincan","Eskisehir","Sisli","Magnesia ad Sipylum","Bergama","Tire","Balcova","Konya","Kartal","Kibriskoy","Mahmutkoy","Edirne","Denizli","Zonguldak","Muratpasa","Sisman","Kirikkale","Karamursel","Atakoy","Bodrum","Fatih","Kadikoy","Kayseri","Acibadem","Ã‡orlu","Erzurum","Sanayi","Sanliurfa","Dogankoy","Kars","Mugla","Isparta","Bulut","Girne","Bogazici","Ugur","Bilgi","Osmaniye","Afyonkarahisar","Malatya","Mardin","KahramanmaraÅŸ","Batman","NevÅŸehir","KÄ±rÅŸehir","Amasya","Yalova","BalÄ±kesir","Doga","Merzifon","TekirdaÄŸ","Gaziantep","Bandirma","Kadikoey","Maltepe","Erzincan","Guzelyurt","Ã‡anakkale","Golmarmara","Ã‡erkezkÃ¶y","Sultanpinar","Dogus","Burgaz","Aydogan","Bolu","Bilecik","Duzce","Siirt","Cermik","Seydisehir","Kastamonu","Kecioeren","Demetevleri","Yaman","GÃ¼mÃ¼ÅŸhane","Bayburt","ArdeÅŸen","Giresun","Sivas","Aydin","Ceyhan","Ada","Kozan","Seyhan","MuÅŸ","Ardahan","Manavgat","Burdur","Bartin","Iskilip","Ã‡orum","Sehitkamil","Yozgat","Calkaya","NiÄŸde","Van","Aksaray","Ercis","Nizip","Tunceli","KarabÃ¼k Province","Karabuk","Hakkari","GÃ¶rele","Tokat Province","Artvin","Niksar","Kadirli","Cekme","Kucukcekmece","Niluefer","AÄŸrÄ±","UEskuedar","Pendik","Cine","Selcuk","Umraniye","UÅŸak","Banaz","Konak","Nazilli","Mustafakemalpasa","Gemlik","Ä°negÃ¶l","LÃ¼leburgaz","Uchisar","Urgub","Tesvikiye","KÄ±rklareli","Esenyurt","Silifke","Siliviri","Bueyuekcekmece","Bayrampasa","Zeytinburnu","Uzun Keupru","Edremit","Soeke","Kusadasi","Erbaa","Tarsus","Karaman","ElÃ¢zÄ±ÄŸ","Besiktas","KÃ¼tahya","SÃ¼rmene","Gelibolu","Karatekin","Sirnak","Alpaslan","Mehmet Akif Ersoy","Harran","Yagcilar","Sinop","Bingol","Marmaris","Ã‡ankÄ±rÄ±","Patnos","Maslak","Kagithane","Yasarkoy","Harbiye","Ulker","Safranbolu","Taksim","Beykoz","Bor","Yuregir","Germencik","Torbali","Ikitelli","Zekeriya","Amasra","Ayazaga","Karaca","Bozuyuk","Darica","Geulzuk","Elbistan","Findikli","Osmaneli","Camliyayla","Sahinbey","Baskil","Kumluca","Bucak","Erzin","Meric","Sariyer","Akhisar","Turgutlu","Biga","Salihli","Burhaniye","Gonen","Hendek","Dalaman","Milas","Fethiye","Urla","Seferihisar","Bornova","Buca","AkÃ§aabat","Yakakoy","Pamukkale","Sile","Unieh","Beykent","Kocatepe","IÅŸÄ±k","Yeni","Gunbuldu","Ostim","Tasdelen","Esenkent","Esentepe","Mezitli","Ibrahim","Erenkoy","Kuzey","Belek","Sungurlu","Alanya","Serik","Babaeski","Serdivan","Yildiz","Suleyman","Ataturk","Abdullah","Doruklu","Mustafa Kemal","Bitam","Toros","Elek","Dokuz","Kocakoy","Muradiye","Kilis","Korfez","Andac","Birbir","Dayanikli","Bugdayli","Aydogdu","Mustafa","Duran","Eser","Beysehir","Ferizli","Karakoy","Turgut","Dogu","Cukurova","Basari","Edebey","Piri","Sabanci","Osmangazi","Kadir","Baskent","Kemal","AdÄ±yaman","Gediz","Trakya","Gazi","Sinankoy","Adnan Menderes","Celal","Deniz","Uludag","IÄŸdÄ±r","Erciyes","Meliksah","Dumlupinar","Toprak","Yeditepe","Orta","Hurriyet","Atlas","Ulus","Tatvan","Saglik","Yenibosna","Susurluk","Ä°biÅŸkÅy","Halic"
,"Romania","PiteÅŸti","Bucharest","BacÄƒu","Roman","OneÅŸti","Piatra NeamÅ£","GalaÈ›i","ConstanÈ›a","CernavodÄƒ","Tulcea","Navodari","Calarasi","Sibiu","TÃ¢rgu MureÅŸ","RÃ¢mnicu VÃ¢lcea","Cluj-Napoca","Alba Iulia","MediaÅŸ","Petresti","BotoÅŸani","Craiova","BuzÄƒu","Pantelimon","Cuza Voda","Mihai Bravu","Santimbru","BraÅŸov","TimiÅŸoara","Targu Gangulesti","Suceava","Motru","Teiu","Voronet","Giurgiu","Borca","Filipestii de Padure","Cetatea de Balta","Alexandria","Cetatuia","Berzasca","Cernisoara","Miercurea Sibiului","Miercurea-Ciuc","Racoasa","Panciu","Urziceni","Seini","Bucu","Corbeanca","Hunedoara","Ramnicu Sarat","Chiajna","Salcioara","TÃ¢rgoviÅŸte","Floresti","Alba","Pucheni","PloieÅŸti","BistriÅ£a","Turda","Odorheiu Secuiesc","ZalÄƒu","Pascani","Buhusi","Radauti","Musenita","Bocsa","Campina","Falticeni","Buftea","Magurele","Dimitrie Cantemir","FocÅŸani","Garla-Mare","Lehliu-Gara","Jibou","Rosia","Turnu Ruieni","Salatrucel","Blaj","Reghin","PetroÅŸani","Popesti-Leordeni","Tomesti","IaÈ™i","Deva","Campia Turzii","Lunguletu","Slobozia","Mangalia","Titu","Chitila","Campia","Chisoda","BÃ¢rlad","Vaslui","Oradea","TÃ¢rgu Jiu","Hateg","Arad","Bethausen","Simeria","Fogarasch","Huedin","ReÅŸiÅ£a","Cisnadie","Carei","Satu Mare","Curtea de ArgeÅŸ","Victoria","Husi","Orsova","Slatina","Ditrau","Lugoj","Tecuci","Baia Mare","Caransebes","Gaesti","Cugir","Sighetu MarmaÅ£iei","Traian","Mihail Kogalniceanu","Madaras","Decebal","Sovata","Voluntari","Otopeni","Geoagiu","BrÄƒila","Afumati","Schela","Otelu Rosu","Mircea","Obreja","Horia","Rosiori de Vede","Corabia","Turnu Magurele","Gherla","Viseu de Jos","Iernut","Busteni","Sfantu Gheorghe","Dobroesti","Unirea","Spiru Haret","Marginea","Aiud","Berceni","Lacu","Domnesti","Racovita","Zimnicea","Buzias","Moinesti","Bragadiru","Vetresti-Herastrau","Targu Neamt","Sfantu-Gheorghe","Avrig","Mogosoaia","Sighisoara","Crasna","Bogdanita","Baicoi","Harsova","Ungheni","Vidin","Bascov","Racari","Fetesti","Ocna Mures","Covasna","Trestiana","Catcau","Gheorgheni","Medgidia","Nasaud","Somcuta Mare","Lacu Sinaia","Caracal","Magura","Timus","Cristuru Secuiesc","Vacaresti","Cara","Doamna","Ludesti","Gherea","Valea Seaca","Alunu","Lazuri","TÃ¢rnÄƒveni","Moldova Noua","Eforie","Matasari","Crangasi","Tina","Sangeorge","Nucsoara","Bilciuresti","Iorga","Dorohoi","Uioara de Jos","Faget","Bucurestii Noi","Tulnici","Petresti","Catunele","Urlati","Nana","Mizil","Oltenita","Bozieni","Valenii de Munte","Comana","Fabrica","Baba Novac","Adjud","Popesti","Tatarani","Roata de Jos","Moisei","Vedea","Livezi","Falcau","Calan","NÄƒdlac","Bujor","Campeni","Titesti","Bucsani","Masloc","Giarmata","Moreni","Lenauheim","Dudestii Vechi","Voiteg","Tipari","Deta","Becicherecu Mic","Gataia","Dej","Gilau","Daia Romana","Teius","Unirea","Salonta","Tileagd","Alesd","Soimus","Viseu de Sus","Borsa","Baia Sprie","Branistea","Rohia","Sangeorz-Bai","Floresti","Mioveni","Utvin","Tartasesti","Floresti","Bolintin Deal","Tunari","Tandarei","Filias","Sfantu Gheorghe","Apata","Cotnari","Tuzla","Poiana Ilvei","Radovanu","Fundulea","Carbunesti","Costesti","Stalpeni","Stroesti","Voinesti","Comanesti","Iadara","Sancraieni","Agnita","Breaza","Plopeni","Telega","Bobolia","Magurele","Vatra Dornei","Vama","Gramesti","Corlateni","Gura Humorului","Salcea","Codlea","Prejmer","Talisoara","Baraolt","Dor Marunt","Valea Lupului","Birda","Dumbravita","Mocira","Curtici","Tibeni","Topoloveni","Barbuletu","Dridu","Balotesti","Jilava","Chiselet","Ocnita","Albesti-Paleologu","Calinesti","Corbita","Dragotesti","Moara Vlasiei","Marasheshty","Prod","Apahida","Susenii Bargaului","Banesti","Brazii de Sus","Sutesti","Ion Ghica","RÃ¢ÅŸnov","Grojdibodu","Oravita","Fagetu","Giroc","Macin","Sebes","Lancram","Saveni","Bucecea","Padureni","Cristian","Stefanesti","Baile Olanesti","Balomiru de Camp","Glina","Prim Decembrie","Campulung Moldovenesc","Negresti","Ciumani","Potlogi","Stefanestii de Jos","Cojasca","Rabagani","Stanilesti","Videle","Tatarusi","Murfatlar","Calafat","Chisineu-Cris","Mandruloc","Moroda","Cris","Pecica","Cobadin","Nenciulesti","Panduri","Campulung Muscel","Bic","Manta","Bumbesti-Jiu","Baiut","Negru Voda","Cosbuc","Humulesti","Vidra","Filiasi","Izvoru Crisului","Zetea","Giulesti","Odobesti","Hangulesti","Sacele","Marasti","Podu Dambovitei","Siculeni","Valcea","Patarlagele","Matei","Nicolae Balcescu"
,"Lebanon","Beirut","Zgharta","Bsalim","Halba","Ashrafiye","Sidon","Dik el Mehdi","Baalbek","Tripoli","Baabda","Adma","Hboub","Yanar","Dbaiye","Aaley","Broummana","Sarba","Chekka"
,"Hungary","Dunaharaszti","Budapest","Gyal","Nyirmartonfalva","Csorvas","Esztergom","Kunhegyes","Alsopahok","Sarmellek","Edeleny","Balatonfured","Koszeg","Szombathely","Tiszafured","Ullo","Ã‰rd","Gyula","Kistelek","Szeged","Sarszentmihaly","Rakocziujfalu","Kiskunfelegyhaza","Ajak","Ujszilvas","KecskemÃ©t","PÃ©cs","Debrecen","Hegyhatmaroc","Szolnok","Mako","Apatfalva","Klarafalva","BÃ©kÃ©scsaba","Posfa","Tiszaujvaros","Keszu","Tata","Kisujszallas","Kerekegyhaza","Miskolc","Kunszentmarton","VisegrÃ¡d","Solymar","Piliscsaba","God","Budajeno","Budakalasz","Karcag","Nagykoros","Salfold","Kapuvar","Vitnyed","Repceszemere","Szajol","Tapioszele","Almasfuzito","Szecseny","Nogradsipek","Kacsota","Pakod","Zalaegerszeg","Szentkatalin","Beloiannisz","Fot","Erdokertes","Kerepes","Csecse","Taplanszentkereszt","Szazhalombatta","Zahony","Kisvarda","Kistarcsa","Mateszalka","Boly","Szajk","Oroshaza","Medgyesegyhaza","Vegegyhaza","Hodmezovasarhely","Totkomlos","Nyiregyhaza","Pomaz","Kismaros","Veresegyhaz","Kisgyor","SiÃ³fok","GyÅ‘r","Pusztavam","Szemely","Hajdusamson","Tiszalok","Ajka","SzÃ©kesfehÃ©rvÃ¡r","Szerencs","Beled","Nagynyarad","Aparhant","Komlo","KomÃ¡rom","Szabadbattyan","Soskut","Eperjeske","Tiszaszalka","Somogysard","KaposvÃ¡r","Diosd","Pusztazamor","Mende","MosonmagyarÃ³vÃ¡r","Bonyhad","Sasd","Nagymanyok","SzekszÃ¡rd","Tolna","Paks","Seregelyes","Kisvaszar","Dunafoldvar","Tevel","Nemetker","Kurd","Kulcs","Alsoszentivan","Sarbogard","Sajoszentpeter","Mucsony","Sajokapolna","Kazincbarcika","Balatonszabadi","Balatonszarszo","Per","Kadarkut","Lebeny","Fertoszentmiklos","Dunakeszi","Ivancsa","Telep","Lajoskomarom","Roszke","GÃ¶dÃ¶llÅ‘","Csogle","Csomor","TatabÃ¡nya","DunaÃºjvÃ¡ros","Tompa","Batonyterenye","VeszprÃ©m","Tura","ParÃ¡dfÃ¼rdÅ‘","Gyomro","BÃ©kÃ©s","Csepa","Nagyhalasz","Isaszeg","Gorgeteg","Somogyudvarhely","Labod","Nagyatad","Sandorfalva","Lenti","Zalalovo","Nagypali","Boncodfolde","Szigliget","Tapolca","Balloszog","Kiskunhalas","Gyongyos","Nagycserkesz","Gencsapati","Pecol","Nemesbod","Vep","Sarvar","Szentendre","Szirmabesenyo","Helvecia","Bukkaranyos","Hernadkak","Almosd","Gyorsag","Fertod","Ikreny","Telki","Nyirtass","Hont","Saska","Bataszek","Pellerd","MohÃ¡cs","Gyenesdias","Bicske","Szomod","Alsogalla","Lovas","Kisber","Polgardi","Cegled","Pilisvorosvar","Nagyszenas","Domaszek","Nagyszekeres","Asotthalom","Hercegszanto","Egyek","Bohonye","Zsambek","Sopron","Kormend","Tiszaluc","Arnot","Inancs","Taktaszada","Csobad","Sajokeresztur","Dorog","Hatvan","Hosszuheteny","Mogyorod","Urom","Aszod","Balatonalmadi","Szodliget","Galgamacsa","Ozd","Nagydobsza","Rabapatona","Csorna","Kony","Szilsarkany","Pilismarot","Ercsi","Visznek","Biharkeresztes","Hajduboszormeny","Nagytotfalu","Nyirbator","Nemesbuek","Budaors","Teglas","Vamosszabadi","Otteveny","Tab","Balatonlelle","Kalocsa","Simontornya","Mezoszilas","Deg","Nyul","Gyorujbarat","Csanadpalota","Galambok","Badacsonytomaj","Nagykanizsa","Ujfeherto","Boldog","Eger","Salgotarjan","Nagykallo","Aszalo","Onga","Budakeszi","Toeroekbalint","Balatonfuzfo","Berhida","Mor","Szikszo","Gyongyossolymos","Maklar","Szigetszentmiklos","Farmos","Varpalota","Magyaregres","Kaposmero","Nagyberki","Taszar","Cserenfa","Juta","Kartal","Nagyvenyim","Marokpapi","Baja","Kubekhaza","Tiszafoldvar","Szentgotthard","Hegyeshalom","Bag","Hevizgyoerk","Janossomorja","Kistokaj","Delegyhaza","Agard","Alsozsolca","Gardony","Bokod","Homrogd","Csobanka","Mezotur","Paty","Hajdunanas","Szalaszend","Hernadnemeti","Nagykoru","Biatorbagy","Marcali","Hajduszoboszlo","Mesztegnyo","Danszentmiklos","Encs","Verseg","Tet","Halaszi","Gyorladamer","Pilisszentkereszt","Tarnok","Abony","Sajovamos","Vamospercs","Varosfoeld","Cserszegtomaj","Berettyoujfalu","Keszthely","Lajosmizse","Zalakomar","Martonvasar","Balkany","Toekoel","Bakonyszentlaszlo","Egyhazashetye","Papa","Zsambok","Repcelak","Vacszentlaszlo","Bajna","VÃ¡c","Csovar","Magy","Nagyhegyes","Ladbesenyo","Korosladany","Garab","Rabapaty","Adony","Felsoszentivan","Puspokladany","Zebecke","Lovaszi","Paka","Gyar","Mosonszentmiklos","Leanyfalu","Szany","Velence","Tarjan","Pakozd","Borcs","Oroszlany","Fuzesabony","Bakonyszombathely","Szigetvar","Kornye","Malyi","Selyeb","Kiskinizs","Sored","Bakonycsernye","Nagykereki","Sarospatak","Torokszentmiklos","Balatonboglar","Nezsa","Pilisszanto","Vasvar","Dunabogdany","Retsag","Pilis","Tarpa","Mariapocs","Tetetlen","Petohaza","Tiszavasvari","Komlod","Abda","Sumeg","Siklos","Berkesd","Bodajk","Nemesvita","Ujszentmargita","Kotaj","Hajduhadhaz","Magyarhertelend","Maglod","Gelse","Gorbehaza","Kincsesbanya","Rakoczifalva","Abaujszanto","Turkeve","Martfu","Harta","Nyiradony","Badacsonytordemic","Fegyvernek","Kisdorog","Szentes","Magyarnandor","Vaja","Zebegeny","Szokolya","Almaskamaras","Kevermes","Mindszent","Deszk","Ujlengyel","Dabas","Monor","Ecser","Peteri","Csakvar","Vecses","Soltszentimre","Pilisszentivan","Tiszacsege","Barand","Mezokovesd","Csemo","Balassagyarmat","Sajooeroes","Heves","Tapiogyorgye","Bacsalmas","Patvarc","Polgar","Ofeherto","Janoshalma","Toszeg","Zalaszentgrot","Szentlorinc","Barcs","Gyulahaza","Levelek","HÃ©vÃ­z","Kiskoros","Kesznyeten","Rackeresztur","Bekasmegyer","Felsopakony","Zagyvaszanto","Demjen","Pecel","Szendehely","Tordas","Ostoros","Egyhazasdengeleg","Vertesszolos","Felsozsolca","Alsotold","Jaszfelsoszentgyorgy","Csoeroeg","Veroce","Jaszapati","Szarvas","Csabacsud","Bekesszentandras","Totszerdahely","Becsehely","Cered","Pazmand","Besnyo","Sukoro","Nemesvid","Doroghaza","Tabajd","Letenye","Szepetnek","Valkonya","Ujudvar","Kistapolca","Nagykeresztur","Halasztelek","Makkoshotyka","Jaszbereny","Szigethalom","Janoshida","Bocs","Jaszfenyszaru","Nyekladhaza","Ujszasz","Gyongyostarjan","Nagytarcsa","Emod","Ecs","Szuhakallo","Kurityan","Kophaza","Hegyfalu","Nagycenk","Tarcal","Taksony","Vertestolna","Labatlan","Dunavarsany","Majoshaza","Domsod","Balatonkenese","SÃ¡toraljaÃºjhely","Revfueloep","Vertessomlo","Bazsi","Szeremle","Hercegkut","Koka","Nagykata","Alsonemedi","Inarcs","Ocsa","Szentmartonkata","Monorierdo","Uri","Benye","Tapioszecso","Kerecsend","Vizslas","Koszarhegy","Apc","Tiszaadony","Sirok","Vajszlo","Taborfalva","Bugyi","Pusztavacs","Atkar","Nagykozar","Nyergesujfalu","Se","Paszto","Ibrany","Felsotarkany","Egerszolat","Markaz","Hajmasker","Szentkiralyszabadja","Herend","Kallo","Hered","Hehalom","Csomad","Tapiobicske","Tapiosag","Part","Domoszlo","Karancssag","Celldomolk","Mezofalva","Zirc","Aszar","Nagyigmand","Acs","Babolna","Rackeve","Kerekharaszt","Nagyvazsony","Jaszkiser","Kemence","Devavanya","Ketegyhaza","Valko","Morahalom","Fuzesgyarmat","Dany","Karancslapujto","Karancskeszi","Martely","Neszmely","Cirak","Senyo","Sarosd","Csanytelek","Terem","Rad","Szar","Nagybarca","Csongrad","Melykut","Tass","Dunavecse","Nagymagocs","Pusztaszemes","Tomorkeny","Kunbaja","Szegvar","Kunszentmiklos","Apostag","Mezobereny","Hernad","Varbalog","Balmazujvaros","Gonyu","Ocseny","Bogyiszlo","Mecseknadasd","Attala","Dombovar","Vardomb","Varalja","Iregszemcse","Dunaszentgyorgy","Decs","Racalmas","Ciko","Nagyszokoly","Tamasi","Izmeny","Alap","Bikal","Hidas","Sarisap","Tat","Banhorvati","Herceghalom","Vadna","Varbo","Zichyujfalu","Szogliget","Dedestapolcsany","Many","Bodaszolo","Kislang","Albertirsa","Kulsobarand","Zamoly","Szod","Szecsenyfelfalu","Baracs","Tiszavalk","Kispest","Naszaly","Rudabanya","Borsodszirak","Golle","Vasarosdombo","Mernye","Tokodaltaro","Szabolcs","Derecske","Buzsak","Gerjen","Palotabozsok","Dobrokoz","Mezonyarad","Szentistvan","Dunaszeg","Solt","Szabadszallas","Kecel","Hajdudorog","Dombrad","Szabolcsveresmart","Mandok","Patroha","Gemzse","Ujkenez","Devecser","Dudar","Bakonybel","Kunsziget","Kemecse","Kunagota","Kismanyok","Balatonfokajar","Sarpentele","Jaszladany","Tar","Matraszolos","Vacratot","Vacduka","Ocsod","Adacs","Belapatfalva","Hevesaranyos","Kotelek","Cserepfalu","Acsa","Kisnemedi","Makad","Rimoc","Berekfurdo","Kajaszo","Nagysap","Gyomaendrod","Szigetcsep","Csopak","Petfuerdo","Szigetszentmarton","Kiskunlachaza","Petofibanya","Sarkad","Orbottyan","Baracska","Szeghalom","Nagykapornak","Sajopalfala","Matraballa","Bugac","Tinnye","Bagyogszovat","Sopronkovesd","Nagykovacsi","Rajka","Perbal","Boldva","Torony","Hegyhatszentmarton","Tiszapalkonya","Cegledbercel","Hort","Nogradsap","Dad","Donat","Center","Kapolnasnyek","Kolontar","Bodrogkisfalud","Balaton","Kompolt","Lazi","Halimba","Ujkigyos","Pusztaszabolcs","Mezohegyes","Kisar","Fehergyarmat","Gavavencsello","Tepe","Harkany","Perenye","Dusnok","Szabadszentkiraly","Tiszabo","Csajag","Buk","Madocsa","Sarszentagota","Sarpilis","Kistormas","Gyorkony","Sarszentlorinc","Uraiujfalu","Szomor","Gyorzamoly","Ebes","Kaloz","Vezseny","Mosonszolnok","Csolyospalos","Zsombo","Misefa","Telekes","Gasztony","Suelysap"
,"Georgia","Tbilisi","Sukhumi","Ts'khinvali","Shek'vetili","Kutaisi","Zemo-Avchala","Qazbegi","Gogolesubani","Lentekhi","Samtredia","Zugdidi"
,"Brazil","Sao Paulo","Sorocaba","Curitiba","Salvador","Recife","Porto Alegre","Campinas","Rio de Janeiro","BrasÃ­lia","Lagoa","Tibau","Campos dos Goytacazes","Itaquaquecetuba","Bocaiuva do Sul","PetrÃ³polis","SÃ£o JosÃ© dos Campos","FlorianÃ³polis","Belo Horizonte","Campina Grande","JoÃ£o Pessoa","Rio Branco","Ariquemes","GoiÃ¢nia","Dourados","Terenos","Ceilandia","Caarapo","Porto Nacional","AnÃ¡polis","Rio Verde de Mato Grosso","Cacoal","Ponta Pora","Vilhena","VÃ¡rzea Grande","CuiabÃ¡","Campo Grande","Palmas","Marialva","Fenix","AraucÃ¡ria","Palmas","Ponta Grossa","Sao Francisco do Sul","Aguas de Chapeco","Ararangua","Timbo","Itapema","Rio Negrinho","Forquilhinha","Icara","Joinville","Brusque","Blumenau","Sombrio","Imbituba","Orleans","Palhoca","Cascavel","Colombo","Rio Branco do Sul","Borrazopolis","SÃ£o JosÃ© dos Pinhais","Rio Brilhante","Juruena","Posto Fiscal Rolim de Moura","Senador Canedo","Mutum","Pelotas","Ibiaca","Caxias do Sul","Rio Grande","Eldorado","Ijui","Santiago","Jatai","Sobradinho","Porto Velho","JaraguÃ¡ do Sul","Araquari","Rio do Sul","Ibirama","Indaial","Tubarao","CriciÃºma","Novo Hamburgo","Dom Feliciano","Rosario do Sul","Farroupilha","Canela","Capao do Leao","GuaÃ­ba","Campo Bom","SÃ£o Leopoldo","ViamÃ£o","Panambi","Sao Sebastiao do Cai","Virmond","Chopinzinho","Cambe","Sarandi","Imbituva","Guaramirim","Camboriu","Mafra","Apiuna","Santo","Xaxim","Nova Palma","Sao Jose","Goias","RondonÃ³polis","Acorizal","TrÃªs Lagoas","Guara","Santa Rosa","Porteira do Pinhal","Canoas","Dom Pedrito","Dois Irmaos","Taquara","Boa Vista do Burica","Uniao da Vitoria","Arapongas","Luziania","Miranda","Horizontina","Alvorada","Butia","Taquari","Lima Campos","Sapucaia","Cachoeira do Sul","Flores da Cunha","Foz do IguaÃ§u","ParanaguÃ¡","Castro","Lapa","MaringÃ¡","Campo Largo","Guaratuba","Novo Recreio","Caceres","Garopaba","Gaspar","SÃ£o Bento do Sul","Andradina","Santa Maria","Nova Prata","Vera Cruz","Paverama","Cachoeirinha","Tramandai","Mato Grosso","Miracema do Tocantins","Realeza","Guarapuava","Inhumas","Bela Vista","Quarai","Candelaria","GravataÃ­","Lambari","Morro Agudo","Sao Miguel","Urussanga","Itauna","MarabÃ¡","Sao Sepe","Bandeirantes","Venancio Aires","Porto Ferreira","Jaci","SÃ£o Paulo","Embu","Caico","Jucurutu","Santana do Matos","Amparo","Limeira","Camacari","RibeirÃ£o Preto","Fernandopolis","Barrinha","Igarapava","Catanduva","Americo Brasiliense","Mirassol","Jaborandi","Monte Aprazivel","Araraquara","Jaguariuna","Rio Claro","Ipero","Leme","Piracicaba","Cosmopolis","HortolÃ¢ndia","Itapira","Louveira","Porto Feliz","Capivari","Americana","Iracemapolis","Cerquilho","Serra Negra","Valinhos","Mogi Mirim","Candido Mota","Presidente Venceslau","Presidente Prudente","Poa","Guarulhos","Caieiras","Varzea Paulista","Francisco Morato","JundiaÃ­","Cabreuva","Franco da Rocha","SÃ£o Bernardo do Campo","Sao Vicente","Itanhaem","Carapicuiba","Santo Antonio do Pinhal","Cachoeira Paulista","Guaratingueta","Lorena","Tremembe","Canas","JacareÃ­","Jacupiranga","Santos","Santo AndrÃ©","Diadema","Itapecerica da Serra","Barueri","Cotia","Santana de Parnaiba","Osasco","Jandira","Itu","Taboao da Serra","Itapevi","Embu Guacu","Varginha","Medianeira","Sao Miguel do Iguacu","Extrema","Sao Goncalo","Palmeira","Sao Luiz Gonzaga","Barro","Sao Marcos","Nova Bassano","Vacaria","Sete Lagoas","Estancia","Goncalves","Paraisopolis","Montes Claros","Sao Joao de Meriti","Xanxere","Caxambu","Volta Redonda","Itatiaia","Duque de Caxias","Seropedica","Japeri","Penha","ItajaÃ­","Vinhedo","Rialma","Ceres","Teresina","Piracanjuba","Ipameri","Roca Sales","Passos","Garibaldi","Alegrete","Marataizes","Nova IguaÃ§u","Cachoeiro de Itapemirim","Santa Rita do Passa Quatro","SÃ£o LourenÃ§o","Lagarto","Salgado","Poco Verde","Erechim","Delfinopolis","Feliz","Maua","Domingos Martins","Jaiba","NiterÃ³i","Natal","Itaporanga","Abaetetuba","Ananindeua","MacapÃ¡","Santa Isabel do Para","Ipira","Paulo Jacinto","MaceiÃ³","Arapiraca","Rio Largo","Balsas","AraguaÃ­na","Prata","Londrina","Rolandia","Paranavai","Pinhais","Pinhoes","Quatro Barras","Freitas","Olinda","Paulista","Cariacica","VitÃ³ria","Vila Velha","Jaboatao dos Guararapes","Igarassu","Serra","Tijuca","Taguatinga","Taguatinga","Trindade","Xavantina","Paranoa","Esteio","Passo Fundo","Estancia Velha","Nossa Senhora Das Gracas","Camaqua","Suzano","Juiz de Fora","Contagem","Ibirite","Marica","Cocal","Caucaia","Maracanau","Bento GonÃ§alves","Brumadinho","Itatinga","Anhembi","Itapeva","Aracaju","Nossa Senhora","Sao Domingos","Itabaiana","Serafina","Parai","Marau","Guapore","Simoes","Uchoa","Barretos","Granja","Marco","Acarau","Paraipaba","Veranopolis","Sao Sebastiao da Amoreira","Mangueirinha","Itapua","Navegantes","Alto Piquiri","Matinhos","Cornelio Procopio","Ipiranga","Nova Brescia","Encantado","Quixeramobim","BagÃ©","Tambau","Ibiruba","Itajuba","Flexeiras","Bom Conselho","Canhotinho","Calcado","Garanhuns","Corguinho","Sao Gabriel","Governador Valadares","Itabirinha de Mantena","Itanhomi","Lavras da Mangabeira","Monteiro","Mairinque","Doutor Mauricio Cardoso","Ipatinga","Nazare","Jaguaripe","Muniz Ferreira","Matozinhos","Grao Mogol","Sao Domingos","Sao Gotardo","Santo Estevao","Madre de Deus","Carpina","Barra do GarÃ§as","Rio Pardo","Minas","Tucum","Braganca Paulista","Bauru","Manaus","Sao Caetano do Sul","Praia Grande","Mogi das Cruzes","Lajeado","Itapetininga","Guaruja","Franca","Sacramento","SÃ£o Carlos","MarÃ­lia","Aracatuba","Indaiatuba","Cubatao","Atibaia","Lagoa dos Gatos","Amaraji","Gloria do Goita","Sao Joaquim do Monte","Palmares","Cortes","Escada","Moreno","Santa Cruz do Capibaribe","Pesqueira","Diamantina","Serro","Tres Marias","Santa Fe","Sumare","Votorantim","TatuÃ­","Rio Pardo de Minas","Conceicao do Araguaia","Monte Belo","Sao Jose da Barra","Cassia","Pouso Alegre","Juruaia","Campos Novos","Dores do Indaia","Bambui","Cataguases","Duas Barras","Mar de Espanha","Alto Santo","Morada Nova","Mossoro","Gomes","Acopiara","Iguatu","Piquet Carneiro","Limoeiro do Norte","Russas","Pau dos Ferros","Coronel","Norte","Juazeiro do Norte","Eloi Mendes","Lavrinhas","Parana","Banabuiu","Lagoa da Prata","Boa Esperanca","Vicosa","MuriaÃ©","Charqueadas","Sao Jeronimo","Arroio dos Ratos","Colinas","Assis Chateaubriand","Guanambi","Bom Jesus da Lapa","VitÃ³ria da Conquista","Matina","Brejo Santo","Tres Pontas","Muqui","Vargem Alta","Nossa Senhora do Socorro","Torres","Tres Cachoeiras","Valentim Gentil","Sao Sebastiao do Paraiso","Pimenta","Vista Alegre do Alto","Taquaral","Ferraz de Vasconcelos","Igrejinha","Formiga","Palotina","Itajuipe","Iacu","Saquarema","Araruama","Sao Pedro da Aldeia","Sao Vicente de Paula","Sao Tome","Pitangueiras","Francisco Beltrao","Linhares","Itaipu","Colatina","Camaragibe","Guararapes","Itamaraca","Campos","Belford Roxo","Brasilandia","Almirante Tamandare","Esmeraldas","Betim","Salvador","Cabo de Santo Agostinho","Jaguaruna","Aracuai","Itabira","Jacarepagua","Conde","Brasopolis","Lavras","Unai","Brumado","Caetite","Itamarati","Rio Bonito","Tabuleiro do Norte","Cardeal da Silva","Itaporanga d'Ajuda","Belem","Monte Azul","Jerico","Carnaiba","Afogados da Ingazeira","SÃ£o LuÃ­s","Botucatu","Itaguai","Rio Bonito","Ouro Fino","Stio Ouro Fino","Borda da Mata","Ponte Nova","Oratorios","Urucania","Sem Peixe","Dom Silverio","Santo Antonio do Grama","Salto","Agulha","Araras","Sao Jose do Ouro","Campo Mourao","Itirapina","Itanhandu","Ibaiti","Japira","Bom Jesus","Itumbiara","Ararica","Miraima","Cordeiropolis","Estrela","Mogi-Gaucu","Estreito","Petrolina","Laranjeiras","Sao Cristovao","Antonio Carlos","Biguacu","Tijucas","Araguari","Nova Venecia","Mantena","Valerio","Marilandia","Boa Esperanca","Nova Friburgo","Pedranopolis","BelÃ©m","Carolina","Sao Geraldo do Araguaia","Nova Esperanca","Presidente Medici","Piraju","Ourinhos","Jacarezinho","Altamira","Itaperuna","Teresopolis","Guapimirim","Parapeuna","Santo Antonio","Aracati","Icapui","Sao Bernardo","Crateus","RibeirÃ£o das Neves","Joao Monlevade","Bom Jesus dos Perdoes","Vilar dos Teles","Sao Domingos","Vargem Grande Paulista","Tiete","Monte Mor","Parnamirim","Sao Goncalo do Amarante","Mesquita","Aparecida","Manacapuru","Alagoinhas","Santa Rita do Sapucai","Sape","Sao Fidelis","Oeiras","Picos","Novo Oriente","Simplicio Mendes","Santo Antonio de Lisboa","Betania","Morro da Fumaca","Aguas Lindas","Uberlandia","Aracas","Sao Jose do Rio Preto","Guajeru","Tanque Novo","Bom Jardim de Minas","Liberdade","Mococa","Bela Vista de Goias","Santa","Niquelandia","Itapaci","Santo Antonio de Padua","Formosa","Maraial","Girau do Ponciano","Pedreira","Sao Pedro do Sul","Serra","Barra do Bugres","Votuporanga","Biritiba Mirim","Cajamar","Campos do Jordao","Iguape","Peruibe","Taubate","Pindamonhangaba","Olimpia","Sertaozinho","Sao Sebastiao da Grama","Serrana","Dumont","Novo Horizonte","Aracoiaba da Serra","Paulinia","Pirapozinho","Boituva","Santa Luzia","Angra dos Reis","Nova Odessa","Pontal","Morrinhos","Palmeira das Missoes","Sarandi","Carazinho","Paraty","Umbauba","Tobias Barreto","Ivaipora","Prudentopolis","Pirassununga","Santa Maria","Itaguacu","Santa Teresa","Barra Mansa","Quatis","Aparecida d'Oeste","Cristalina","Sao Gabriel","Vera Cruz","Sao Paulo do Potengi","Palmares do Sul","Guarei","Queimados","Itabaianinha","Tomar do Geru","Tabira","Teixeira","Osorio","Apodi","Rolante","Bonito","Itubera","Conceicao","Seabra","Navirai","Fatima","Maxaranguape","Touros","Pomerode","Sitio Figueira","Santo Antonio do Amparo","Sertania","Terra Rica","Palmeira d'Oeste","Sousa","Pombal","Miguel Pereira","Patos","Santa Luzia","Porto Uniao","Vicencia","Macaparana","Umbuzeiro","Orobo","Maravilha","Abelardo Luz","Quilombo","Sao Miguel d'Oeste","Cordilheira","Itamonte","TrÃªs CoraÃ§Ãµes","Sao Goncalo do Sapucai","Alfenas","Cambuquira","Santa Cruz","Ribeirao Pires","Campo","MairiporÃ£","Tatuamunha","JaÃº","Marcelino Ramos","Campinas do Sul","Capao da Canoa","Piracaia","Goianesia","Sales","Potirendaba","Toritama","Caruaru","Sanharo","Propria","Presidente Kennedy","Brejetuba","Cachoeiras","Lencois","Itapecerica","Mage","Cosmorama","Alagoa Grande","Arroio Grande","Aragarcas","Caiaponia","Patrocinio","Santana do Paraiso","Coronel Fabriciano","Rio das Ostras","Santo Antonio de Jesus","America Dourada","Cafarnaum","Ceara Mirim","Joao Camara","Turmalina","Curitibanos","Santa Isabel do Ivai","Querencia do Norte","Simao Dias","Santo Antonio do Leverger","Primavera","Jaguarao","Jequitinhonha","Toledo","Biritinga","Terra Boa","Rondon","Doutor Camargo","Santo Antonio do Caiua","Jacutinga","Socorro","Vespasiano","Lontra","Curvelo","Morro de Sao Paulo","Restinga Seca","Ipora","Jacarau","Cacimba de Dentro","Parelhas","Bom Despacho","BalneÃ¡rio CamboriÃº","Joaquim Tavora","Bonito","Quipapa","Quirinopolis","Santo Antonio da Patrulha","Altinopolis","Matao","Santo Amaro","Olho d'Agua","Sabara","Sao Joaquim de Bicas","Sao Jose do Rio Pardo","Icem","Pongai","Sao Lourenco da Mata","Lages","Concordia","Porto Real","Itaborai","Campina Grande do Sul","Fazenda Rio Grande","Samambaia","Cidade","Aguas Claras","Guarapari","Sao Roque","Barreiras","Feira de Santana","Maragogipe","Catu","Sapeacu","Candeal","Sao Goncalo dos Campos","Cansancao","Timbe","Nova Lima","Iuna","Abreu e Lima","MacaÃ©","Timbauba","Goiana","Pancas","Ituporanga","Ascurra","Sao Joaquim","Capanema","GravatÃ¡","Milagres","Poco das Antas","Cruzeiro do Sul","Soledade","Tuiuti","Itatiba","Cruzeiro","Sao Sebastiao","Sao Lourenco da Serra","Charqueada","Santa Gertrudes","Ipeuna","Rio das Pedras","Agudos","Assis","Dracena","Brotas","Promissao","Gaviao Peixoto","Pitangueiras","Monte Alto","Pradopolis","Vera Cruz","Pirajui","Pacaembu","Macatuba","Botuvera","Ouro Branco","Caete","Leopoldina","Apucarana","Tres Rios","Tucurui","Cerro Branco","Cameta","Baiao","Tome Acu","Heliodora","Cruzeiro do Sul","Irati","Currais Novos","Caxias","Joao Pinheiro","Brasil","Lagoa Santa","Orlandia","Ribeirao Corrente","Ipua","Guara","Nuporanga","Sao Joaquim da Barra","Jardinopolis","Brodosqui","Guaira","Sales Oliveira","Ituverava","Batatais","Miguelopolis","Joaquim","Tupaciguara","Patos de Minas","Ituiutaba","Capinopolis","Sao Joao da Boa Vista","Santo Antonio do Jardim","Catalao","Camanducaia","Florania","Sao Vicente","Marechal Candido Rondon","Quatro Pontes","Barao de Cocais","Conceicao do Mato Dentro","Guapo","Bom Jardim","Guararema","Pedro Leopoldo","Mariana","Igarape","Ipojuca","HumaitÃ¡","Jaguaribe","Ico","Maria da Fe","Laguna","Piraquara","Anhumas","Bocaiuva","Mandaguacu","Catende","Araripina","Jaguariaiva","Mariluz","Ji Parana","Bom Retiro do Sul","Imperatriz","Rio do Pires","Macaubas","Botupora","Afonso Claudio","Pontalina","Arealva","Ibitinga","Aloandia","Pien","Benedito Novo","Descanso","Itapiranga","Braco do Norte","Barbalha","Getulio Vargas","Apora","Santa Luzia","Sao Carlos","Ponte Serrada","Barbacena","SÃ£o JoÃ£o del Rei","Santo Inacio","Jaboticatubas","Sao Francisco","Sao Salvador","Sao Joao Evangelista","Maracaju","Camamu","Itacare","Ipiau","Itagiba","Candeias","Coremas","Inhauma","Aracai","Barauna","Tiangua","Caninde de Sao Francisco","Santa Cruz do Sul","Cedral","Sapiranga","Canarana","Agua Boa","Querencia","Cocalinho","Carlos Barbosa","SantarÃ©m","Abidos","Almeirim","Martinopolis","Presidente Bernardes","Centenario do Sul","Alvares Machado","PoÃ§os de Caldas","Candeias","Porto Grande","Anajas","Joacaba","Alegre","Santo Aleixo","CaÃ§ador","Cianorte","Corumba de Goias","Nazare da Mata","Niteroi","ArujÃ¡","Caratinga","Salvador","Cruz das Almas","Laguna Carapa","Glorinha","Sapucaia do Sul","Lagoa Salgada","Ouricangas","Itapicuru","Caraguatatuba","Conchal","Santa Barbara d'Oeste","Coelho","Crato","Granito","Monte Santo","Santa Cruz Cabralia","Cabralia","Aracruz","Ubatuba","Sao Roque","Rio Grande da Serra","Avare","Pena","Sao Pedro","Pilar do Sul","Jose Bonifacio","Monte Azul Paulista","Salto de Pirapora","Artur Nogueira","Joanopolis","Iacanga","Paraguacu Paulista","Areia Branca","Boa Vista","Picui","Machadinho","Birigui","Campo Verde","Coroados","Buritama","Jaru","Sao Joao","Videira","Heliopolis","Cicero Dantas","Conceicao de Macabu","Macuco","Alta Floresta","Progresso","Bento","Pato Branco","Umuarama","Convento da Penha","Aquidaba","Recanto","Piedade","Cabo Frio","Brejo da Madre de Deus","Vassouras","Rosario","Itapecuru Mirim","Luis Correia","Vicosa","Campo Alegre","Boa Vista","Boa Vista","Conselheiro Lafaiete","Sarzedo","Claudio","Barra do PiraÃ­","Paracambi","Salinas da Margarida","Ouro Preto","Tabatinga","Pirai","Cristiano Otoni","Jaguaruana","Juru","Sao Jose do Egito","Virgem da Lapa","Chapada","Cristais","Francisco Sa","Varzelandia","Janauba","Sao Sebastiao","Penapolis","Barbosa","Itapolis","Pederneiras","Registro","Mongagua","Salesopolis","Lencois Paulista","Bertioga","Abadiania","Terra Nova","Repartimento","AraxÃ¡","Uberaba","Divinopolis","Meier","Maracana","Sao Jose","Cajuru","Arceburgo","Ipu","Sao Caetano","Bezerros","Aquidauana","SÃ£o Miguel das MissÃµes","Gramado","Rio Branco","CorumbÃ¡","Ivoti","Montenegro","Sao Lourenco do Sul","Campina","Bela Vista do Paraiso","Montividiu","Jaciara","Araruna","Cangucu","Paraiso","Itau de Minas","Nobres","Branco","Monte Alegre","Elias Fausto","Bom Jesus do Itabapoana","Riacho das Almas","Parobe","Nova Cruz","Venda Nova","Machado","Ouvidor","Caldas Novas","Guaraciaba","Maruim","Siqueira Campos","Jaboticabal","Taquaritinga","Jarinu","General Salgado","Bebedouro","Guaicara","Vargem Grande do Sul","Lins","Condado","Itapetinga","Alterosa","Julio de Castilhos","Mateus Leme","Reduto","Teixeira","Arroio do Silva","Cacapava","Cravinhos","Congonhas","Itaitinga","Varzea","Garimpo Novo","Espinosa","Macedonia","Sao Jose do Goiabal","Lagoa do Carro","Sao Miguel dos Campos","Nilopolis","Amazonas","Fortaleza","Vicente","Tamandare","Raposos","Pacatuba","Eusebio","Riachao do Jacuipe","Santa Rita","Timoteo","Maranguape","Queimadas","Frei Paulo","Altinho","Amarante","Lucena","Goianira","Vitoria de Santo Antao","Novo Mundo","Arapua","Itambe","Caapora","Alem Paraiba","Para de Minas","Serra","Viana","Caldas","Guaraci","Itapixuna","Jaguaquara","Tocantins","Piedade dos Gerais","Quixada","Tupanatinga","Alto","Calcoene","Sao Gabriel","Cantanhede","Itapipoca","Sobral","Abrantes","Caninde","Andarai","Uruguaiana","Botafogo","Resende","Italva","Niteroi","Dois Corregos","Limoeiro","Castanhal","Uba","Itabuna","Bombinhas","Ribeirao do Pinhal","Jardim Alegre","Sao Jose do Cedro","Forquilha","Nova Canaa","Sao Pedro dos Ferros","Caputira","Sao Jose de Mipibu","Goianinha","Mutum","Jeronimo Monteiro","Cajazeiras","Espumoso","Planalto","Caparao","Manhumirim","Espera Feliz","Jetiba","Sao Jose do Calcado","Tupa","Mineiros do Tiete","Carmo do Rio Claro","Serrania","Rancharia","Andradas","Joao Lisboa","Sitio Novo","Caripi","Graca Aranha","Ibipeba","Irece","Morro do Chapeu","Carapebus","Casimiro de Abreu","Ribeirao","Valparaiso","Tiradentes","Valente","Sao Francisco de Paula","Nova Petropolis","Guanhaes","Inga","Gardenia Azul","Pontal do Parana","Marques","Neopolis","Marechal Deodoro","Messias","Sao Jose da Laje","Coruripe","Anadia","Capela","Sertao","Sananduva","Guamare","Pauliceia","Junqueiropolis","Panorama","Mostardas","Barra do Ribeiro","Cerro Grande","Itapuranga","Santana da Vargem","Campos Gerais","Cha Grande","Cuite","Ribeirao Bonito","Pedro Avelino","Campo Novo","Frederico Westphalen","Seberi","Paranaiba","Nova Serrana","Lebon Regis","Aquiraz","Cacequi","Bom Jesus do Amparo","Santa Barbara","Santana","Piuma","TeÃ³filo Otoni","Silva Jardim","Itabapoana","Tangua","Miracema","Aperibe","Itaocara","Boa Vista","Campo Grande","Bras","Sao Manuel","Santos Dumont","Sao Luis de Montes Belos","Cesario Lange","Jumirim","Alambari","Marzagao","Parnaiba","Catarina","Machados","Paracuru","Tamboril","Floriano","Campo Maior","Marcolandia","Capistrano","Baturite","Visconde do Rio Branco","Quixere","Nova Alianca","Guapiacu","Balsamo","Urupes","Santa Fe do Sul","Bady Bassitt","Mendonca","Ubarana","Capelinha","Berilo","Arroio do Meio","Cacapava do Sul","Sao Joao Batista","Jardim de Piranhas","Acu","Ipumirim","Goianapolis","Palmitos","Campo Alegre","Porto Seguro","Pau Brasil","Barrocas","Serrinha","Conceicao do Coite","Araci","Valenca","Alvorada do Sul","Itapagipe","Palestina","Narandiba","Amarante do Maranhao","Pratapolis","Mamonas","Volta Grande","Pedra Bonita","Raul Soares","Mangaratiba","Quissama","Natercia","Malacacheta","Cruz Alta","Tenorio","Alagoa Nova","Nossa Senhora da Gloria","Ribeira do Pombal","Gurupi","Guaxupe","Alegres","Santo Anastacio","Castelo","Arcos","Piabeta","Aroeiras","Laranjeiras do Sul","Itapejara","Cerqueira Cesar","Arandu","Cabedelo","Sao Joao do Paraiso","Bicas","Lagoa da Canoa","Pao de Acucar","Paulo Afonso","Junqueiro","Penedo","Nanuque","Medeiros Neto","Mucuri","Fundao","Redencao","Itaete","Boa Vista","Lagoa Vermelha","Arroio do Tigre","Progresso","Ibipora","Silveiras","Trindade","Arraial do Cabo","Sao Francisco","Jose Boiteux","Presidente Getulio","Witmarsum","Mirim Doce","Sebastianopolis do Sul","Mangabeira","Juatuba","Boa Vista","Sampaio Correia","Mendes","Dias","Pojuca","Paraopeba","Pote","Rio Casca","Moema","Santa Luzia","Vila Muriqui","Pinheiral","IlhÃ©us","Vera Cruz","Barra de Sao Miguel","Chapadinha","Santa Maria de Itabira","Santana do Cariri","Altaneira","Exu","Dix-sept Rosado","Paragominas","Urucuca","Ibirataia","Nilo Pecanha","Porto","Pedra Grande","Fortaleza","Claro dos Pocoes","Irai","Mandaguari","Tapira","Sao Domingos","Ipaba","Encruzilhada do Sul","Itabirito","Capetinga","Itaberaba","Pratania","Piratininga","Santa Ines","Adustina","Bernardo","Tupancireta","Sao Jose do Inhacora","Mineiros","Rancho Queimado","Luzerna","Erval d'Oeste","Reboucas","Massaranduba","Correia Pinto","Rio dos Cedros","Tres Coroas","Nucleo Bandeirante","Sao Miguel do Araguaia","Porangatu","Seara","Campo Ere","Jacuizinho","Iguaracu","Vila Rica","Pirapora do Bom Jesus","Espirito Santo","Espirito Santo do Pinhal","Fartura","Palmeira","Barra Bonita","Cabralia Paulista","Salto Grande","Tupi Paulista","Santa Isabel","Guaianases","Terra Roxa","Braganca","Paraiba do Sul","Morretes","Mambore","Paicandu","Canoinhas","Tres Barras","Simao Pereira","Teutonia","Cachoeiras de Macacu","Dois Vizinhos","Gandu","Ubata","ValenÃ§a","Santa Helena","Sao Jose de Piranhas","Rio Negro","Conceicao","Sao Joao Nepomuceno","Ponte de Itabapoana","Itabaiana","Juripiranga","Mogeiro","Taua","Missao Velha","Campos Sales","Parana","Pereiro","Caraubas","Iracema","Carius","Vicosa do Ceara","Pimenta Bueno","Diamantino","Timon","Sao Goncalo do Para","SÃ£o Mateus","Aguas de Sao Pedro","Palmital","Mamanguape","Baia da Traicao","Sao Manoel","Ilhabela","Cajati","Morungaba","Bom Jesus","Triunfo","Miranda","Sao Jose de Ribamar","Nunes Freire","Buriti","Itaguatins","Cururupu","Raposa (1)","Angicos","Serra","Macaiba","Extremoz","Japaratinga","Barao de Grajau","Angical do Piaui","Esperantina","Pedreira","Mirinzal","Vitorino Freire","Cacique Doble","Conchas","Pinhalzinho","Carinhanha","Correntina","Santa Maria da Vitoria","Cocos","Santa Leopoldina","Guaira","Portao","Alto Paraiso de Goias","Capao Alto","Esperanca","Pinhalao","Urai","Ladario","Itaqui","Jundiai do Sul","General Carneiro","Bairro da Velha Central","Santana do Livramento","Amambai","Pirajuba","Batista","Tapirai","Cassilandia","Sao Lourenco dOeste","Restinga","Urania","Cruz","Sao Luis do Paraitinga","Monteiro Lobato","Bananal","Santa Branca","Paraibuna","Juquitiba","Mirandopolis","Duartina","Ibiuna","Descalvado","Contenda","Varjota","Apuiares","Luminarias","Cambui","Bueno Brandao","Santo Antonio do Retiro","Rio Bananal","Dionisio Cerqueira","Sao Gabriel da Cachoeira","Jataizinho","Rio Claro","Puxinana","Putinga","Nao Me Toque","Erval Grande","Grajau","Capela","Belem","Riacho Fundo","Benevides","Lapa","Monte Carmelo","Ibate","Itaituba","Paraibano","Colinas","Presidente Dutra","Sao Felipe","Ubaira","Nova Itarana","Santa Teresinha","Jiquirica","Entre Rios de Minas","Paraguacu","Campestre","Mendes Pimentel","Tumiritinga","Garca","Laranjal Paulista","Pirangi","Juazeiro","Gameleira","Serra Talhada","Belo Jardim","Velha","Massape","Morrinhos","Sao Paulo","Chaval","Alagoinha","Andre da Rocha","Caraa","Uirauna","Vespasiano Correa","Bom Principio","Schroeder","Quata","Jampruca","Virginopolis","Lagoa Seca","Esperanca","Cassino","Carmopolis","Buritizeiro","Sao Francisco do Conde","Mairi","Piritiba","Uaua","Campo Formoso","Nova","Cachoeira","Uibai","Jucara","Jesuania","Caxambu","Buzios","Armacao de Buzios","Arapoti","Wenceslau Braz","Itarare","Resende Costa","Caiana","Guariba","Nova Independencia","Igarata","Guarabira","Luis Antonio","Dourado","Ilha Solteira","Serra Azul","Sao Simao","Aguas de Lindoia","Cajobi","Itajobi","Santa Adelia","Taiuva","Elisiario","Sao Domingos","Jacobina","Redencao","Muritiba","Tapejara","Santo Amaro da Imperatriz","Luis Antonio","Cidade","Tres Passos","Tucunduva","Palmitinho","Areado","Guaranesia","Rio Manso","Piracema","Carmopolis de Minas","Bonfim","Aguanil","Cidade Nova","Aldeia","Cerro Largo","Renascenca","Igaracu do Tiete","Nova Resende","Jandaia do Sul","Tuparendi","Joao Neiva","Santana do Ipanema","Belem do Brejo do Cruz","Virginia","Coreau","Senhor do Bonfim","Itiuba","Pindobacu","Serra Preta","Gurjao","Paulo Lopes","Boqueirao","Padre","Rio Novo do Sul","Anchieta","Guaranta","Inubia Paulista","Muzambinho","Rafard","Groairas","Rio Acima","Cruzilia","Lambari","Santa Cruz do Rio Pardo","CodÃ³","Fragoso","Sao Sebastiao","Antonio Prado","Nova Londrina","Sertanopolis","Antonina","Marumbi","Cruzeiro do Oeste","Engenheiro Beltrao","Imperatriz","Posse","Sao Luis","Campos","Acucena","Manga","Canelinha","Muliterno","Vila Maria","Casca","Conceicao das Alagoas","Frutal","Presidente Olegario","Jaguaras","Guarani dOeste","Julio Mesquita","Taiacu","Pariquera Acu","Coroata","Alto Alegre","Sao Jose","Gloria","Nova Aurora","Riacho Fundo","Sarapui","Santa Barbara do Sul","Sangao","Iraceminha","Faxinal dos Guedes","Erval Velho","Mandirituba","Peabiru","Santo Ã‚ngelo","Sidrolandia","Paraiso do Tocantins","Brejinho de Nazare","Monte Alegre","Turvo","Jaguapita","Balsa Nova","Iretama","Ibatiba","Manhuacu","Lajinha","Muniz Freire","Rio Paranaiba","Cruzeiro da Fortaleza","Matutina","Nova Ponte","Pitangui","Perdigao","Araujos","Papagaios","Nova Araca","Pedro de Toledo","Parnamirim","Ribas do Rio Pardo","Guararapes","Barcarena","Satuba","Carmo da Mata","Oliveira","Rubim","Taiobeiras","Itarantim","Paraiso","Ibicoara","Itororo","Sao Bento","America de Cima","Presidente Epitacio","Iguai","Faxinal do Soturno","Quebrangulo","Itapissuma","Cupira","Salgueiro","Bayeux","Areial","Remigio","Rio Tinto","Boquim","Feira Nova","Porto Esperidiao","Porto Amazonas","Candoi","Rio Azul","Porto Belo","Itapo","Armazem","Lauro","Comodoro","Guaragi","Colorado","Campinorte","Curimata","Morro Reuter","Aparecida do Rio Negro","Ouro Verde","Porecatu","Munhoz","Pirai do Sul","Santa Teresa","Itamogi","Cedro do Abaete","Sabinopolis","Marcelino Vieira","Colina","Auriflama","Casa Nova","Sao Bento","Marituba","Arcoverde","Flores","Buique","Sao Joao de Pirabas","Inhangapi","Bonito","Santarem Novo","Maracana","Piedade do Rio Grande","Carmo do Cajuru","Itatira","Umirim","Belo Horizonte","Irupi","Macau","Palma","Eugenopolis","Perdoes","Montes Altos","Pompeia","Cordeiro","Cantagalo","Patrocinio Paulista","Santo Antonio do Monte","Alto do Rodrigues","Sao Sebastiao do Maranhao","Aracariguama","Itaparica","Rodrigues","Canavieiras","Icarai","Sao Joao da Barra","Pachecos","Rio Piracicaba","Azurita","Paulista","Ibirarema","Dobrada","Paraitinga","Nazare Paulista","Fortaleza","Iturama","Sapucaia","Sorriso","Cipotanea","Antonio Carlos","Caiua","Bela Vista","Juquia","Saudades","Cunha Pora","Pecem","Beberibe","Pindoretama","Florinia","Monte Siao","Ocara","Tamoios","Eugenio","Barra do Corda","Pauini","Fortuna","Pastos Bons","Luz","Faxinal","JequiÃ©","Central","Chavantes","Palmital","Tenente Ananias","Brasa","Jales","Rio Formoso","Andre","Botafogo","Parana","Santa Terezinha","Nova Esperanca","Chapadao","Pitanga","Barra do Jacare","Aricanduva","Garuva","Jussara","Carangola","Ervalia","Sao Bento do Sapucai","Icoraci","Capitao Poco","Campo Magro","Quatigua","Bituruna","Tibagi","Ceu Azul","Sulina","Sabaudia","Pompeu","Ipaucu","Lavinia","Aguai","Aguas da Prata","Roseira","Capao Bonito","Tanabi","Itambaraca","Matelandia","Entre Rios","Jose de Freitas","Floresta Azul","Terra Nova","Altos","Avanhandava","Fronteira","Pontes e Lacerda","Coari","Porto Sao Jose Velho","Sao Pedro do Ivai","California","Santa Helena","Buriti","Picada","Estancia Nova","Capela do Alto","Carambei","Urubici","Itaipava","Barracao","Turvo","Foz do Jordao","Boa Ventura","Ipubi","Uruburetama","Rio Novo","Agrestina","Chapadao","Matipo","Sao Sebastiao","Rodeio Bonito","Ronda Alta","Nova Timboteua","Ilhota","Barras","Tarumirim","Coromandel","Teodoro Sampaio","Forquilha","Jussari","Santa Cruz da Baixa Verde","Pilao Arcado","Itape","Antas","Pereira Barreto","Rosalia","Santo Expedito","Lavras do Sul","Taquarana","Sao Sebastiao","Agua Clara","Santo Antonio de Posse","Itobi","Miracatu","Rubiataba","Neropolis","Loanda","Lumiar","Sardoa","Cabrobo","Ubaitaba","Sao Felix","Planalto","Conde","Poco Branco","Pendencias","Guacui","SÃ£o Borja","Caibate","Pedro Afonso","Jabora","Cafelandia","Salto","Platina","Quitandinha","Iguaba Grande","Barra Velha","Palmeiras de Goias","Clevelandia","Sede Nova","Inhacora","Apiai","Areal","Cidade de Deus","Igreja Nova","Palmeira dos Indios","Santa Lucia","Bela Vista","Porto Velho","Ouro Preto do Oeste","Itagi","Coroas","Otacilio Costa","Adamantina","Santo Amaro","Nova","Angatuba","Palmelo","Rodeiro","Breves","Monte Dourado","Juruti","Sao Miguel","Clementina","Arraial","Bangu","Barra da Tijuca","Palestina","Barao de Cotegipe","Indianopolis","Itinga da Serra","Cachoeira Grande","Baixo Guandu","Barra","Abreu","Ouricuri","Santo Antonio da Platina","Telemaco Borba","Cerro Azul","Mantenopolis","Agudo","Inocencia","Nova Trento","Paranapanema","Sao Miguel Arcanjo","Cardoso","Fernando Prestes","Iranduba","Bom Jesus","Conceicao da Barra","Barra","Guai","Alfredo Chaves","Bonito","Primeiro de Maio","Catanduvas","Engenheiro Schmidt","Estiva","Terra Roxa","Brochier"
,"Azerbaijan","Baku","Sumqayit","Xirdalan","Quba","Zurges","ÅžÇki","Qusar","Nakhchivan","Sulutapa","XaÃ§maz"
,"Palestine","Gaza","Ramallah","Bethlehem","Hebron","Jericho","Al Mawasi","Nablus","Jenin"
,"Republic of Lithuania","Vilnius","Alytus","MarijampolÄ—","Å ilutÄ—","GrigiÅ¡kÄ—s","Å iauliai","MaÅ¾eikiai","PlungÄ—","Jurbarkas","KlaipÄ—da","Kaunas","RadviliÅ¡kis","Jonava","Panevezys","Garliava","Mastaiciai","RokiÅ¡kis","JoniÅ¡kÄ—lis","KupiÅ¡kis","TelÅ¡iai","Kretinga","ElektrÄ—nai","Vievis","Visaginas","Uzliedziai","AnykÅ¡Äiai","KaiÅ¡iadorys","Juskonys","Trakai","Palanga","GargÅ¾dai","KÄ—dainiai","Vilniaus Apskritis","Ignalina","TauragÄ—","Anciskiai","EiÅ¡iÅ¡kÄ—s","Salcininkai","Antakalnis","KelmÄ—","Sakiai","Venta","Ukmerge"
,"Oman","Muscat","Salalah","Ruwi","Al Sohar","Nizwa","Samad","Saham"
,"Slovakia","Bratislava","Vel'ke Canikovce","Zavod","Studienka","Å½ilina","Likavka","Krupina","Zvolen","Klokoc","Pliesovce","Trnava","StarÃ¡ Ä½ubovÅˆa","BanskÃ¡ Bystrica","Michalovce","HumennÃ©","Sobrance","Varin","Zelenec","Detva","RuÅ¾omberok","Galanta","Dubnica nad VÃ¡hom","Vrutky","Lukacovce","Nitra","Vel'ky Grob","Potvorice","Krompachy","Lozorno","Poprad","Vrable","Dolna Streda","Vahovce","KoÅ¡ice","NovÃ¡ Dubnica","Gbely","Dlha nad Oravou","Mutne","Prievidza","Tvrdosin","Oravske Vesele","NÃ¡mestovo","Trstena","Pernek","Solosnica","Krizovany nad Dudvahom","Dolny Stal","Pata","Sucha nad Parnou","Å aÄ¾a","PieÅ¡Å¥any","Hlohovec","NovÃ© ZÃ¡mky","Malacky","Opoj","Stara Tura","Sladkovicovo","Pezinok","Stupava","Ruzindol","Marianka","Slovensky Grob","Reca","Kvetoslavov","Boleraz","Topol'niky","Hruby Sur","Jelka","Cerova","LuÄenec","Vranov nad TopÄ¾ou","PreÅ¡ov","Moldava nad Bodvou","Ludanice","Dolny Hricov","Ladce","PÃºchov","Liptovsky Hradok","Vojcice","Giraltovce","LevoÄa","Sabinov","Dlhe nad Cirochou","Fintice","Sarisske Bohdanovce","Gelnica","Bardejov","Cecejovce","Secovska Polianka","Bernolakovo","Cifer","Baka","Presel'any nad Ipl'om","Kopcany","Senica","Bahon","Nizna Kamenica","Dol'any","Skalica","Vel'ke Kostol'any","Miloslavov","Prakovce","Komjatice","TrenÄÃ­n","Golianovo","Branc","Levice","Cerveny Hradok","Bystricka","Opatovce nad Nitrou","Martin","TurÄianske Teplice","Horna Stubna","TopoÄ¾Äany","Hlinik","Ivanka pri Dunaji","Cerveny Kamen","Myjava","Hrochot,Slovakia","PovaÅ¾skÃ¡ Bystrica","Zikava","Lednicke Rovne","KysuckÃ© NovÃ© Mesto","Lemesany","SvidnÃ­k","Udavske","Bohdanovce","Zuberec","Ilava","Kysucky Lieskovec","Rosina","Nededza","LiptovskÃ½ MikulÃ¡Å¡","KomÃ¡rno","RoÅ¾Åˆava","Tlmace","Host'ovce","Nova Bana","Okoc","Spissky Stiavnik","Druzstevna pri Hornade","DolnÃ½ KubÃ­n","DunajskÃ¡ Streda","Samorin","ÄŒadca","SvÃ¤tÃ½ Jur","Rovinka","Staskov","Velicna","Istebne","Hencovce","BanskÃ¡ Å tiavnica","Snina","Brezno","SpiÅ¡skÃ¡ NovÃ¡ Ves","Vel'ky Kyr","Stropkov","Nitrianske Rudno","Vlkanova","Dolne Vestenice","Å urany","Podbrezova","Å tÃºrovo","Ipel'ske Ul'any","Bela","KeÅ¾marok","Jelenec","Holic","Dlhe Klcovo","Velcice","Slovenska Ves","Banovce nad Bebravou","TrebiÅ¡ov","Secovce","Vel'ke Kapusany","Hnust'a","Borovce","Mojmirovce","Spacince","Senec","Stefanov","Pastuchov","Chtelnica","Dolne Oresany","Eliasovce","Moravany nad Vahom","Vlckovce","Madunice","Topol'nica","Svodin","Jablonove","Jacovce","Olesna","Chorvatsky Grob","Tomasov","Turany","Sucany","Klokocov","Trnovec nad Vahom","Tesedikovo","Tvrdosovce","Kmet'ovo","Hlinik nad Hronom","Ziar nad Hronom","Besenov","Sena","Nove Sady","Brezova pod Bradlom","Praznovce","BytÄa","Zlate","Vinne","Zbince","Hrinova","VrbovÃ©","Sipkove","Polomka","Handlova","Smizany","Spissky Stvrtok","Jaslovske Bohunice","Vel'ky Krtis","Zeliezovce","Torysky","Spissky Hrusov","RimavskÃ¡ Sobota","Nizna","Urmince","Kanianka","Diviaky nad Nitricou","Novaky","PartizÃ¡nske","Novy Salas","Varhanovce","Svaty Peter","Nyrovce","Proc","RevÃºca","NovÃ© Mesto nad VÃ¡hom","Plave Vozokany","Nitrianske Sucany","Blatnica","Cechynce","Velky Meder","Holice","Vysne Raslavice","Vel'aty","Nana","Tajov","Svit","Vel'ka Maca","Selice","TatranskÃ¡ Lomnica","Kremnica","Stary Smokovec","Stara Lesna","Liptovske Revuce","Kosicka Nova Ves","Maly Lapas","Vysny Orlik","Horne Oresany","Klatova Nova Ves","Hradiste","Praha","Horny Smokovec","Kajal","Vel'ke Orviste","Horna Lehota","Lehota","Kukova","JelÅ¡ava","Kolarovo","Horne Saliby","Novot'","Zakamenne","Svaty Kriz","Terchova","Lubina","Mesto","Beladice","Krusovce","Dolna Marikova","Plavecke Podhradie","Podolie","Pobedim","SliaÄ","Vecelkov","Chlebnice","Jasenica","Bobrov","Vitanova","Dolne Sl'azany","Diakovce","Selpice"
,"Serbia","Belgrade","Zemun Polje","Kragujevac","Novi Sad","Subotica","NiÅ¡","Vajska","Futog","PanÄevo","Backa Topola","Cantavir","Becej","Backo Gradiste","Kraljevo","Basaid","Bocar","Kovin","Novi Belgrade","Savski Venac","Sremska Kamenica","Aleksinac","Surcin","Grocka","Umcari","Nova Pazova","Sombor","Smederevo","Sremski Karlovci","Jagodina","Novi Becej","Stara Pazova","Apatin","PoÅ¾arevac","Dolovo","Coka","Gornji Milanovac","Veternik","Sibac","Tornjos","Zlatibor","ÄŒaÄak","Ugrinovci","KruÅ¡evac","Paracin","Priboj","Despotovac","Prokuplje","Titel","Rumenka","Temerin","Backi Petrovac","Backi Jarak","Kanjiza","Srbobran","Golubinci","Petrovac","Barajevo","Bor","Zrenjanin","Melenci","Novi Banovci","Ingija","Odzaci","Drenovac","Glozan","Ratkovo","Banatsko Novo Selo","Ruma","Svilajnac","Avala","Cuprija","Popovac","Svrljig","Simanovci","Sremcica","Leskovac","Selo Mladenovac","UÅ¾ice","Valjevo","Pirot","Arilje","Novi Pazar","Kacarevo","Loznica","Petrovaradin","Zajecar","Debeljaca","Senta","Vrbas","VrÅ¡ac","Stari Banovci","Batajnica","Umka","Izvor","Nikinci","Sirig","Sremska Mitrovica","Palic","Cukarica","Ada"
,"Finland","Helsinki","Hamina","Kotka","Kuusankoski","Lappeenranta","Imatra","Tampere","Kuopio","Rauma","Eurajoki","Oulu","Parkano","Kihnioe","Pori","Tyrnaevae","Lahti","Espoo","Ulvila","HÃ¤meenlinna","Tuomikylae","Hyvinkaeae","Kankaanpaeae","Nummela","Nokia","Turku","Tuusula","Vantaa","JyvÃ¤skylÃ¤","Marttila","Tarvasjoki","KÃ¤rsÃ¤mÃ¤ki","Savonlinna","Louhi","VarpaisjÃ¤rvi","Haukipudas","Heinola","Lohja","Orimattila","Nastola","Vaeaeksy","JÃ¤rvenpÃ¤Ã¤","Larsmo","Nykarleby","Jakobstad","Lepplax","Littoinen","BennÃ¤s","Ruovesi","Maenttae","Virrat","Valkeakoski","Poikelus","Halli","Vilppula","Hollola","VillÃ¤hde","Salo","Kimito","Somero","Saunalahti","YlÃ¶jÃ¤rvi","Joensuu","Vaasa","Kajaani","Vuokatti","Outokumpu","Peraseinajoki","Hollola","Porvoo","Hammaslahti","Kitee","Kontiolahti","Ylaemylly","Pirkkala","Rovaniemi","Suomussalmi","Kerava","Kempele","Kolinkylae","Sotkuma","PolvijÃ¤rvi","Kauttua","Sipoo","Loviisa","Tolkis","PernÃ¥","Porlammi","Soederkulla","LapinjÃ¤rvi","Rautjaervi","Anjala","Kouvola","Koria","Neuvoton","Ravijoki","Iisalmi","Kiuruvesi","SonkajÃ¤rvi","VieremÃ¤","Lielax","Pargas","Hoegsara","Kirjala","Hiltulanlahti","Kirkkonummi","Mikkeli","Oulunsalo","Vammala","Koskioinen","Karkku","Punkalaidun","Pornainen","Huuvari","MonninkylÃ¤","MyrskylÃ¤","Hinthaara","SÃ¤linkÃ¤Ã¤","Kerkkoo","MÃ¤ntsÃ¤lÃ¤","Anttila","Laukkoski","Multia","JÃ¤msÃ¤nkoski","Tikkakoski","Ã„Ã¤nekoski","Muurame","Jokela","Taipalsaari","Joutseno","RiihimÃ¤ki","JÃ¤Ã¤li","Pattijoki","Huittinen","KokemÃ¤ki","Soeoermarkku","Kauvatsa","Poitsila","Kausala","Valkeala","Pilkanmaa","Kauniainen","Suolahti","Keuruu","JÃ¤msÃ¤","Laukaa","Purola","Pockar","Varkaus","Harjavalta","Naantali","Raisio","PieksÃ¤mÃ¤ki","Puumala","Kemi","Tornio","Ypaejae","Aura","Loimaa","Kangasniemi","Hirvensalmi","Ristiina","Rantasalmi","Sotkamo","Alavus","Kokkola","Terjaerv","Kaustinen","SeinÃ¤joki","Kokkola","Kaakamo","Lautiosaari","Viantie","Kuivakangas","Karunki","Aavasaksa","KemijÃ¤rvi","Kolari","Kaarina","Merimasku","Noormarkku","Toijala","Kaipiainen","Linnavuori","Aitoo","Forssa","Paelkaene","Laitikkala","Kylmaekoski","Metsaekansa","Erajarvi","Viiala","Tammela","Tuulos","Turenki","Akaa","Saaksmaki","Riihikoski","Utti","RuotsinpyhtÃ¤Ã¤","ElimÃ¤ki","Gammelby","Jurva","Kaskinen","Kurikka","Teuva","Laihia","Kauhajoki","Isojoki","Niinijoki","Vaskio","Saarijaervi","Viitasaari","Niittylahti","Nurmes","Nunnanlahti","Suhmura","Taavetti","Ruokolahti","Savitaipale","Sammaljoki","Haijaa","Roismala","Mouhijaervi","Kivijaervi","KyyjÃ¤rvi","Kinnula","Pihtipudas","Karstula","Kannonkoski","Humppila","Latovainio","Jokioinen","Liljendal","Korsholm","NÃ¤rpes","Toelby","VÃ¶rÃ¥","Seinaejoki","Mantila","Lapua","Kuortane","Tuuri","Ã„htÃ¤ri","Muhos","Raahe","Alavieska","Ylivieska","Nivala","Pyhaejoki","Kannus","Kalajoki","Sykaeraeinen","Sievi","Haapavesi","Oulainen","Lampinsaari","Inkeroinen","Klaukkala","Nuppulinna","SiilinjÃ¤rvi","Uusikaupunki","Kalanti","Pyhamaa","Vaulammi","Halikko","Kisko","Kruusila","Pertteli","Pernioe","Karkkila","Linna","Skinnarby","Laitila","Padasjoki","Jaervelae","Karinkanta","Kiiminki","Laeyliaeinen","NurmijÃ¤rvi","Sajaniemi","HikiÃ¤","Jyskae","Vaajakoski","Korplax","HaapamÃ¤ki","Keminmaa","Ylitornio","Aapajoki","Kantomaanpaeae","Simoniemi","Lehtimaeki","Evijaervi","Okskoski","Vimpeli","Veteli","Kauhava","Lappajaervi","LempÃ¤Ã¤lÃ¤","Kangasala","Paattinen","Mynaemaeki","PiikkiÃ¶","RymÃ¤ttylÃ¤","Vahto","Tortinmaeki","Masku","Piispanristi","Vanhalinna","Nousiainen","Lieto","Kantvik","Veikkola","Masala","YlÃ¤maa","Laikko","SÃ¤rkisalmi","LuumÃ¤ki","OripÃ¤Ã¤","Alastaro","Karttula","Suonenjoki","LeppÃ¤virta","Lapinlahti","HeinÃ¤vesi","Punkaharju","Maentyharju","Kaipola","PetÃ¤jÃ¤vesi","Palokka","Kyroeskoski","Kyynaeroe","Ii","Pello","Uurainen","Valkola","Lammi","Hauho","Levanto","Kello","Kontiomaeki","Puolanka","Venetheitto","Jormua","Saukkola","Liminka","Kronoby","Alaveteli","Sundby","Munsala","Pjelax","Purmo","Forsby","KÃ¥llby","Oja","KÃ¤lviÃ¤","Ilmajoki","Naervijoki","Ylihaermae","IsokyrÃ¶","Nurmo","Siikainen","Kantti","Tervakoski","Ilveskylae","Kopsa","Lohtaja","Revonlahti","Himanka","Luohua","Saloinen","Mankila","Toholampi","Angelniemi","Somerniemi","Suomusjaervi","Muurla","Alvettula","Sappee","Hattula","Bergoe","KerimÃ¤ki","Svarta","Nakkila","Ihode","Vasarainen","Saekylae","Salomaa","Martensby","Kellokoski","Sahalahti","Launonen","Kulho","Solberg","Kuusisto","Kaivanto","Lehmo","Siivikkala","Siuntio","Narva","Oitti","Ryttylae","Saynatsalo","Loppi","Hausjaervi","Vesanka","Kormu","Paippinen","Nummenkylae","Paimio","Sauvo","Lievestuore","Jorvas","Siuro","Tottijarvi","Pukkila","Vakkola","Nummenkylae","Hanko","Pankakoski","Lieksa","Juuka","Uimaharju","Liperi","EkenÃ¤s","Simpele","NilsiÃ¤","Saeviae","Lumijoki","VikajÃ¤rvi","Kiistala","Peraelae","SÃ¤Ã¤ksjÃ¤rvi","Askola","KÃ¶yliÃ¶","Peipohja","Hervanta","Halsua","Raseborg","Karjaa","Fiskars","Karjalohja","Tenala","Viljakkala","HÃ¤meenkyrÃ¶","Vihti","Hoeytiae","Vehniae","Nuutajaervi","Nahkela","RajamÃ¤ki","Roeykkae","Nukari","Vihtavuori","LeppÃ¤vesi","Box","Kaerrby","Vaesterskog","Kaemmenniemi","Kuivaniemi","Myllykoski","Perttula","MÃ¶nni","Rusko","Orivesi","Juupajoki","Degerby","Pusula","Poeytyae","Ilmarinen","Ruutana","Jokikunta","Tervalampi","Otalampi","Palojoki","Kiljava","Kuohu","Evitskog","Kuhmalahti","Nummi","LempÃ¤Ã¤","IngÃ¥","Toivala","MerijÃ¤rvi","HaapajÃ¤rvi","Karhula","Pellinki","Korppoo","Lahela","Virolahden KirkonkylÃ¤","Karvia","Koskenkorva","Valkama","Tervajoki","Kuni","Sundom","Kvevlax","Ruto","OEvermalax","Helsingby","Mieto","Hirvihaara","Skuru","Kauhakorpi","Tampella","Pohjola","Majvik","Rautjaervi","Utsjoki","Muonio","SodankylÃ¤","Mattila","Kuusamo","Mehtaekylae","Heimari","Haeme","Ilkka","Ivalo","Eura","Parkkuu","Tarttila","Pyhaentae","Joroinen","PyhÃ¤salmi","AlajÃ¤rvi","Paalijaervi","Luoma-aho","Haukkala","Itaekylae","Koljonvirta","Rautalampi","Lemi","Broby","Kuhmo","Eno","Haermae","RÃ¤Ã¤kkylÃ¤","PyhtÃ¤Ã¤","Iittala","Harviala","Janakkala","Jokimaa","Lepaa","Riistavesi","Halkia"
,"Iceland","Reykjavik","Selfoss","Grindavik","KeflavÃ­k","Dalvik","Akureyri","Hvammstangi","Husavik","Kopavogur","Akranes","Stokkseyri","Hveragerdi","Hvolsvollur","Borgarnes","Vestmannaeyjar","Vogar","Hella","Skagastrond","Holmavik"
,"Republic of Moldova","ChiÅŸinÄƒu","Tiraspol","Comrat","EdineÅ£","Tighina","Anenii Noi","BÄƒlÅ£i","Orhei","Ialoveni","RÃ®bniÅ£a","Soroca","Nisporeni","Cahul","Briceni","Magdacesti","Straseni","Ciorescu","Durlesti","Cojusna","Vulcanesti","Drochia","Calarasi","Voinescu"
,"Bulgaria","Sofia","Plovdiv","Varna","Targovishte","Velingrad","Burgas","Popovo","Karlovo","Pavel Banya","Trustenik","Isperikh","Shumen","Orlovets","Dobrich","Gabrovo","Haskovo","Provadiya","Kharmanli","Sliven","Stara Zagora","Kozloduy","Shabla","Kavarna","Sevlievo","Lovech","Gorna Oryakhovitsa","Blagoevgrad","Petrich","Krumovgrad","Krichim","Smolyan","Radnevo","Muglizh","Troyan","Veliko Tarnovo","Nikopol","Kazanlak","Chakalarovo","Pernik","Ruen","Barutin","Bratsigovo","Isperikhovo","Godech","Chernolik","Razgrad","Dulovo","Yambol","Asenovgrad","Pazardzhik","Chirpan","Rozino","Ravda","Montana","General-Toshevo","Aksakovo","Baltchik","Rodopi","Ikhtiman","Samokov","Svoge","Sopot","Kardzhali","Pleven","Kyustendil","Topoli","Beloslav","Dulgopol","Obzor","Cherven","Vratsa","Borovan","Knezha","Cherven Bryag","Sandanski","Dupnitsa","Lozno","Krupnik","Boboshevo","Rousse","Sandrovo","Zavet","Svishtov","Belene","Pavlikeni","Samovodene","Polski Trumbesh","Kostievo","Akhtopol","Nesebar","Sredets","Pomorie","Simitli","Slivnitsa","Mezdra","Batak","Elkhovo","Belogradchik","Tutrakan","Botevgrad","Moderno Predgradie","Borovo","Topolovo","Bankya","Konush","Dimitrovgrad","Smyadovo","Gulubovo","Simeonovgrad","Panagyurishte","Bansko","Yakoruda","Silistra","Byala","Choba","Iskrets","Vlado Trichkov","Zlatitrap","Nova Zagora","Devin","Gotse Delchev","Dragizhevo","Byala","Momchilgrad","Pravets","Etropole","Malo Konare","Aytos","Bukovo","Banite","Chiprovtsi","Mesta","Tryavna","Berkovitsa","Novi Pazar","Krivodol","Elena","Strazhitsa","Peshtera","Sozopol","Moravka","Kovachite","Omurtag","Vidin","Kostinbrod","Ardino","Alfatar","Rakovski","Poleto","Rila","Draginovo","Oryakhovitsa","Dolna Oryakhovitsa","Kostenets","Raduil","Bukovo","Strelcha","Sokolets","Skravena","Vrachesh","Stamboliyski","Lom","Bistritsa","Khisarya","Shivachevo","Anton","Madan","Elin Pelin","Veliko","Debelets","Oryakhovets","Markovo","Bregare","Byala Slatina","Sofronievo","Kula","Lyulyakovo","Kableshkovo","Antonovo","Belovo","Dospat","Dolna Banya","Septemvri","Bobovdol","Zlatograd","Tervel","Lyaskovets","Mikrevo","Vievo","Chernomorets","Kran","Karnobat","Dryanovo","Ovoshtnik","Koprivets","Vetren","Lukovit","Babovo","Kamenovo","Orizovo","Svilengrad","Rudozem","Aleksandriya","Rakitovo","Ivaylovgrad","Glogovo","Gurkovo","Marikostinovo","Tochilari","Slatina","Razlog","Prespa","Gurmazovo","Novi Iskur","Samuil","Pchelishte","Dragash Voyvoda","Dolna Mitropoliya","Koprivlen","Suedinenie","Kazashka Reka","Ganchovo"
,"Macedonia","Lisice","Skopje","Prilep","Veles","Kumanovo","Ilinden","Cair","Kavadarci","Pripor","KoÄani","Makedonska Kamenica","Struga","Shtip","Bitola","Debar","Demir Hisar","Strumica","Kicevo","Berovo","Tetovo","Ohrid","Gostivar","Labunista","Radovis","Negotino","Probistip","Gevgelija","Bogdanci","Delcevo","Kadino","Novo Selo"
,"Liechtenstein","Mauren","Eschen","Nendeln","Vaduz","Schellenberg","Planken","Triesen","Balzers","Triesenberg","Schaan","Gamprin","Ruggell","Bendern","Schaanwald"
,"Jersey","Saint Helier","Saint Peter","Saint Johnâ€™s Church"
,"Poland","WrocÅ‚aw","Warsaw","Elzbieta","Debica","Sedziszow Malopolski","Dabki","SÅ‚awno","Gorlice","Wola Rebkowska","Cierpice","MiÅ„sk Mazowiecki","Zabia Wola","Kampinos","Krakow","Olesnica","PruszkÃ³w","Marek","Grupa","Szczecin","Kielce","Warzachewka Polska","Olsztyn","EÅ‚k","Golasowice","Katowice","MysÅ‚owice","Zawiercie","ChorzÃ³w","Gracze","CzÄ™stochowa","Wadowice","Radom","Raszyn","Tarnogrod","Rzewnie","BiaÅ‚ystok","Otwock","Garwolin","Borowiec","Gliwice","GdaÅ„sk","Wielki Klincz","Debina","Sedziszow","Gozdowo","Lublin","Radoslaw","Czersk","Skoczow","Jozefow","Sopot","Nowe Lignowy","Poznan","Gdynia","Limanowa","Chociwel","Grzmucin","Lubicz","CelestynÃ³w","Siemianowice ÅšlÄ…skie","Lidzbark","Sulejowek","Biedrusko","Malbork","Chelm","CheÅ‚m","Kwidzyn","Mielec","Chorzelow","RzeszÃ³w","Åšwidnica","Przeclaw","SuwaÅ‚ki","Wejherowo","Puck","Rumia","Tomaszow","Golub-Dobrzyn","Bielsko-Biala","Bydgoszcz","Bielawa","Polanica-ZdrÃ³j","Lebork","Stegna","NakÅ‚o nad NoteciÄ…","Koscierzyna","Jelenia GÃ³ra","OstroÅ‚Ä™ka","Nowa Ruda","Libiaz","MÅ‚ynary","OÅ›wiÄ™cim","JarosÅ‚aw","Koszalin","ZambrÃ³w","Lukow","Wisniew","WieluÅ„","ÅÃ³dÅº","GorzÃ³w Wielkopolski","Teofilow","Koniecpol","Klomnice","Kruszyna","Zawada","Huta Stara","Praszka","Czeladz","Stalowa Wola","Suchowola","Zabrze","Opole","WaÅ‚brzych","Linowko","Witkowo","Ranizow","Nowy Tomysl","Kornik","Dolice","Zawady","MiÅ‚omÅ‚yn","Barciany","Biskupiec","Bytom","Radostowice","Przeworsk","Szowsko","Radymno","Trzebownisko","Strazow","Sokolow Malopolski","Wysoka Strzyzowska","Ogrody","Siedlce","KotuÅ„","ÅšwiÄ™tochÅ‚owice","Cisiec","Wegierska Gorka","Trawniki","Swidnik","GiÅ¼ycko","MszczonÃ³w","KÅ‚odawa","ZÄ…bki","RadzyÅ„ CheÅ‚miÅ„ski","Bierun","Sosnowiec","Gorno","Pabianice","Rybnik","Zakopane","Lubin","Sulechow","Kargowa","Zielona GÃ³ra","Szprotawa","Przylep","Czerwiensk","Przemysl","PiotrkÃ³w Trybunalski","Kutno","Rabien","Gadka Stara","TomaszÃ³w Mazowiecki","Sieradz","BeÅ‚chatÃ³w","KoÅ‚o","Poswietne","Chalupki","Janin","Braniewo","BiaÅ‚a Podlaska","Kamienna Gora","GoleniÃ³w","Ostrowiec ÅšwiÄ™tokrzyski","Szypliszki","WoÅ‚omin","Ruda ÅšlÄ…ska","SÅ‚upsk","Budziska","Tarnowskie Gory","Police","SÅ‚ubice","Nowy Dwor Mazowiecki","Kalisz","MiÄ™dzyrzecz","Wilczyce","Debno","PuÅ‚awy","Tyczyn","Poreba","Piekary","Tarnowiec","Radgoszcz","DÄ…browa GÃ³rnicza","MikoÅ‚Ã³w","Wieliczka","Tychy","Gorz","Raszowa","Nowy SÄ…cz","Wilkowice","Korytow","Fabianki","Marki","Znin","Swarzedz","PÅ‚ock","GrudziÄ…dz","Dzierzazno","Polkowice","Modlnica","Teresin","Sochaczew","Skwierzyna","Pielice","Deszczno","Wojciech","TarnÃ³w","WyszkÃ³w","Strzegom","Swiebodzice","Oborniki ÅšlÄ…skie","BiÅ‚goraj","Gmina Widawa","InowrocÅ‚aw","Anin","Glowno","TÅ‚uszcz","Nowe Skalmierzyce","Konstancin-Jeziorna","Kowalowa","Proszowice","Gorzow Slaski","Mysliborz","Walcz","Bolszewo","Ozarow Mazowiecki","Zdunska Wola","Starachowice","Kobylka","Sadlinki","Dabrowa Chotomowska","Piekary Slaskie","Piastow","GÅ‚ogÃ³w","Liszki","Grodzisk Mazowiecki","Krasnystaw","Lowicz","Dabrowka Wielka","Czerwionka-Leszczyny","Ornontowice","Przyszowice","Sanok","Zgorzelec","Piensk","Zbaszyn","Zbaszynek","Jaslo","Konin","Å»ywiec","Lipsko","Reda","Lubartow","Plochocin","Knurow","Brochocin","Barcin","WÅ‚ocÅ‚awek","Jablonica","CheÅ‚mno","Miedzyborow","Serock","Zielonka","Sroda Wielkopolska","Belsk Duzy","Radzymin","Gmina Morawica","Gmina BrwinÃ³w","Gmina KoÅ„skie","Zielonki","Lask","Jerzmanowice","Krzeszowice","Tuszyn","Mechelinki","KoÅ›cian","Szemud","Lomianki","Komorow","Parczew","Å»yrardÃ³w","Szczawno-Zdroj","Lubliniec","Zlocieniec","Strzelce Opolskie","Warka","ToruÅ„","Mragowo","Lodygowice","Wabrzezno","Annopol","Ladek","ChrzanÃ³w","Gmina Strzelin","Wola Zaradzynska","Mikoszewo","Rostarzewo","Ryman","Swietoniowa","Strzyzow","PÅ‚oÅ„sk","Raciaz","Solec Kujawski","Bielsk","ZamoÅ›Ä‡","Lack","OstrÃ³da","Korsze","Starogard GdaÅ„ski","MoÅ„ki","SokoÅ‚Ã³w Podlaski","Suchy Las","Wysogotowo","Lulin","Murowana Goslina","Kosakowo","Pierwoszyno","Pogwizdow","Leszno","Pobiedziska","Tarnowo Podgorne","Puszczykowo","Gniezno","Stawiany","Garby","SzamotuÅ‚y","Strzalkowo","Buk","Pleszew","Wronki","Czarze","Maksymilianowo","Gruczno","Gzin","Adama","Wrzesnia","Borzykowo","Oblaczkowo","Tulce","Obrzycko","Plewiska","Gmina Åšrem","Mogilno","Zabierzow Bochenski","ÅšwinoujÅ›cie","Maria","Cigacice","Chotel","Nowa Sol","Legnica","Lubsko","Grebocice","Gorzyce","Lubaszowa","Wieszowa","Tyczyn","Chmielnik","Blazowa","Dynow","Lubenia","ZÄ…bkowice ÅšlÄ…skie","Gorzow","Zarow","Jaworzyna Slaska","Tomaszow","Szczytno","Ciechocinek","Rypin","Kozieglowy","Grzebien","Gora","Balice","Studzieniec","Czarnkow","Zlotow","ChodzieÅ¼","Pila","Miroslawiec","Ujscie","Wyrzysk","Slupca","MiÄ™dzychÃ³d","Grodzisk Wielkopolski","Gostyn","Owinska","Trzcianka","Osno","Wijewo","Bochnia","Dziewin","JastrzÄ™bie ZdrÃ³j","Nysa","Nowe Miasto Lubawskie","Wojkowice","Zofia","OstrÃ³w Wielkopolski","Tarchaly Wielkie","Krotoszyn","Jarocin","Lubraniec","Kluczbork","OsiÄ™ciny","WÅ‚adysÅ‚awowo","Cekcyn","Tarnobrzeg","Olkusz","Serock","Odolin","Czechowice-Dziedzice","Meszna","Legionowo","Piekoszow","Swoboda","Wilkowisko","Kolbudy","BytÃ³w","AleksandrÃ³w Kujawski","Sadlno","CheÅ‚mÅ¼a","Karczew","BÅ‚onie","Jozefoslaw","Zalubice Stare","KoÅ‚biel","Jutrosin","Ustron","WodzisÅ‚aw ÅšlÄ…ski","Strumien","Lubon","Åapy","Blachownia","Ziebice","Jaworzno","Pewel Mala","Naklo","BÄ™dzin","Miasteczko Slaskie","Weglowice","Koszecin","MaryLka","Zgierz","Skawina","Pruszcz Gdanski","Tluczan","Podegrodzie","Wegrzce Wielkie","Stary Sacz","Olawa","Naleczow","Piaseczno","Kozy","Nowa","Å»agaÅ„","Gubin","Luban","Kowary","Piechowice","BolesÅ‚awiec","Jawor","Pieszkow","Bystrzyca Klodzka","Elblag","Swiebodzin","Borek Strzelinski","Cieszyn","AleksandrÃ³w ÅÃ³dzki","Rzeszotary","Ozorkow","Prochowice","KÅ‚odzko","Szymanow","Kunice","Zary","Sieniawa Zarska","Lipinki Luzyckie","Niwica","Sobotka","Pietrzykowice","Åšroda ÅšlÄ…ska","Mary","Jugow","Bogatynia","Miedzylesie","Zalesie GÃ³rne","Pisz","HrubieszÃ³w","Haczow","Nadarzyn","Chojnice","Ostrog","RacibÃ³rz","Wasilkow","WÄ™grÃ³w","Zmigrod","Tczew","SokÃ³Å‚ka","Siemiatycze","ZabÅ‚udÃ³w","Mazancowice","Sierpc","ÅomÅ¼a","MorÄ…g","Wagrowiec","Dzierzoniow","Nowogard","Choszczno","Gmina JÄ™drzejÃ³w","Ustka","Gmina Åšwiecie","ÅÄ™czyca","ChojnÃ³w","Frysztak","Twardawa","Lubomia","Smigiel","Andrespol","Oksywie","Siechnice","Lutynia","Rzuchowa","Radzanowo","Pyrzyce","Sompolno","Å»ory","BiaÅ‚ogard","Swidwin","Karlino","Zaczernie","Korczyna","Strykow","Katy","Przemysl","Makow Mazowiecki","Wielen Zaobrzanski","Skierniewice","Chmielow","Polajewo","Bukowice","Zaniemysl","Gryfice","Skorzewo","Sosnie","Kuznica Czarnkowska","Mikstat","Trzciel","Przezmierowo","Szczaniec","Wolsztyn","Gmina Lipno","Pogorzela","Zalakowo","SÅ‚uÅ¼ewo","Stargard SzczeciÅ„ski","TrzebiatÃ³w","Wolin","Mrowino","Papowo","Mielno","Kostrzyn","Steszew","Gozdnica","Gnuszyn","Babimost","Czerwonak","Kamien Pomorski","Biesiekierz","Swietno","Rosnowko","Klenica","Zerkow","Budzyn","Wilkanowo","Iwiczna","Zosin","Ostrowek","Cmielow","Sandomierz","Rakow","Wachock","Nowa Deba","Sidra","Maslow","Busko-ZdrÃ³j","MichaÅ‚owo","Tykocin","Bodzentyn","Iwaniska","Kazimierza Wielka","Bejsce","Nowa Slupia","Deblin","Ulez","Suchedniow","Mniow","Lipnik","BraÅ„sk","Chmielnik","Gmina Gnojno","Gmina Sadowie","Jastkow","Terespol","Stopnica","Staszow","Baranow","Krosno","Narew","Slawno B","BoÄ‡ki","Gmina Wyszki","Zagnansk","Olsztynek","Gmina PoÅ‚aniec","Humniska","Choroszcz","Kamien","Wola Kopcowa","Margonin","Barwice","Wolow","Lubomierz","Winsko","Kamionki","Stare Kurowo","Osielsko","Gizalki","Gmina DÄ…bie","Dzikowiec","Stara Kamienica","Miszkowice","Czarny Bor","Bogdaszowice","Domaslaw","Strzeszow","Zloty Stok","Milicz","Drawsko Pomorskie","Msciwojow","Sepolno Krajenskie","Gmina Bobrowo","Brzeg","Kudowa-ZdrÃ³j","Gmina BÄ…dkowo","Przysiek","Wystep","Bochowo","Gniewkowo","Osiek","Dabrowa Chelminska","Waganiec","Swiekatowo","Ciechocin","KoÅ‚obrzeg","Kobierzyce","Pilawa","Å»uromin","Latowicz","Beblo","Gmina Chmielno","Zblewo","MÅ‚awa","Racula","Smolnik","Laska","Pinczow","Tolkmicko","Lacko","Szydlowo","Przechlewo","SupraÅ›l","Kielczow","Balice","Makow","Lotyn","Kotlin","Stolno","Sucha Beskidzka","Hucisko Jawornickie","Kobior","Ledziny","Rybno","MilanÃ³wek","Mogilany","Rozprza","Dziekanow Lesny","Wolka","Raciazek","Dobra","Staniatki","Zagorow","Pegow","Trzebnica","Zwolen","Myslenice","Rzgow Pierwszy","Rawa Mazowiecka","Regimin","Tarczyn","PuÅ‚tusk","Ksieginice","Golczewo","Swieta Katarzyna","Santok","Wloszczowa","Chylice","Bralin","Gmina KsiÄ…Å¼ Wielkopolski","Targanice","Sztum","Kostrzyn nad Odra","Czluchow","Radzionkow","Wola Krzysztoporska","Pionki","Brzostowka","Oborniki","Gmina StÄ…porkÃ³w","Turobin","Cwiklice","KoÅ„skowola","Jemielnica","Dobrodzien","Lidzbark WarmiÅ„ski","Mszana Dolna","Andrychow","Ruda","NieporÄ™t","Gizyce","Tyszowce","Krzyszkowice","Grojec","Scinawa Nyska","Kamieniec","Otoki","Ilowo","Kowal","Bielsk Podlaski","Wschowa","Krosno Odrzanskie","Dukla","Bazanowka","Gogolin","ZÅ‚otoryja","Bielkowo","GoÅ‚dap","Tuchola","Brzeg Dolny","Opoczno","Kowiesy","Jedlicze","Karpacz","Gronowo Elblaskie","Zrecin","KÄ™trzyn","Niemcz","Wylatowo","Krzepice","Å»ychlin","Zdzieszowice","Szczucin","Debno","Wisla","Kazimierz Biskupi","Kolbuszowa","Skarszewy","Wlodawa","Dygowo","Lublewo","Rogow","Tymowa","Ostrow","Dziwnow","Chelmsko Slaskie","Bolewice","Sycow","Miroslaw","Witaszyce","Ropczyce","Lubanie","Przeclaw","Rewa","Nidzica","Orneta","Rzepin","Barlinek","Pszczyna","Stara","Ksiazenice","Kocmyrzow","Stryszow","AugustÃ³w","Mosty","Labiszyn","Gmina Moszczenica","Krokowa","Zegrze Pomorskie","Prudnik","Konarzyce","Popowice","Nowy Dwor","Krzyki-Partynice","Lobez","Kowalew","DziaÅ‚dowo","Piaski","Grodki","Rokietnica","Lubnice","Mialy","Chelmek","Kliniska","Brodnica","Krepa Kaszubska","Wicko","Konczyce Male","Kozmin Wielkopolski","Zebrzydowice","Jelesnia","Susz","Cybinka","Gluszyca","Borkowice","Iwla","Kozy","Gora Pulawska","Stary Garbow","Jablonna","Pobiedna","Chocianow","Pajeczno","RoÅ¼ental","Nowy Targ","Dobra","Olesno","Sulejow","Lubawa","Dzwierzuty","Blizne","Kopki","Rawicz","Bystra","Katy","Jordanow","Czernichow","Pruchna","Jawiszowice","Stadla","Walim","Gmina MiÄ™kinia","RyduÅ‚towy","Milkowice","Poczesna","Mierzecice","Klobuck","Raszowka","Wieloglowy","Koniusza","Wambierzyce","Sokolowsko","Ostroszowice","Gmina BorÃ³w","Pila Koscielecka","Piasek","Paniowki","Nowogrodziec","BoguszÃ³w-Gorce","Bobrowniki","Trabki","Wilczyn","Toszek","Kedzierzyn-Kozle","Luborzyca","Klikuszowa","Kalwaria Zebrzydowska","Boleslaw","Wisniowa","Orzesze","Karniowice","Suloszowa","Niepolomice","Malczyce","Jankowice","Wrzosowa","KroÅ›niewice","Zelow","Pyskowice","Swierklany","Slemien","Koniakow","Krzyzanowice","Myszkow","Jaroszow","Niemcza","Bestwinka","Glogowek","Glucholazy","Rogow","Stare Bogaczowice","Sieniawka","Pilawa Gorna","Jastrzebie","Bestwina","Lipowa","Koscielisko","Biala","Kamienica Polska","Koluszki","Dobron","Trzebinia","Ogrodzieniec","Czaniec","Jaroszowiec","Wola Filipowska","Belk","Katy Wroclawskie","Korfantow","Gdow","Stryszawa","Rudy","Skala","Polanka Wielka","Radlin","Chrzesne","Grodzisk","Chotomow","Nowe Miasto nad Pilica","Laskarzew","Åosice","Przasnysz","Lancut","Trzciana","Kurylowka","Czudec","Kanczuga","Rudnik nad Sanem","Zurawica","Rakszawa","Majdan Krolewski","IÅ‚awa","Kuligow","Nacpolsk","Stare Babice","Wyszogrod","Lesnica","Szadek","Gmina Lutomiersk","Kolonowskie","Barglowka","Bojszow","Nowy Wisnicz","Rybna","Czarny Dunajec","Brzeszcze","Gromiec","Barcice","Slomniki","Piekielnik","Brzezinka","Chrzan","Tegoborze","Kukow","Zalesie","Siemkowice","Sidzina","Bialy Dunajec","Kojszowka","Gorzyce","Wymiarki","Prabuty","Szczawno","Swidnica","Dabrowa Biskupia","Lysomice","Kcynia","Rogowo","Komorsk","Tuczno","Miedzyzdroje","Bojano","Straszyn","Kolodziejewo","Gmina Sierakowice","Ilowa","Dargoslaw","Sarbinowo","Jeziora Wielkie","Zbiczno","Baruchowo","Pieszyce","Gmina BolkÃ³w","Marcinowice","Krasnik","Grajewo","Checiny","Ryn","Szyldak","Bisztynek","Dabrowno","Dywity","Dylewo","KurÃ³w","Grunwald","Bartoszyce","Zabrowo","Stawiguda","Kozienice","Drozdowo","Trzesniow","Swiatki","Samin","Dobre Miasto","Stare Juchy","Zalewo","Trzydnik Duzy","Prawiedniki","Garbow","Milowka","Zablocie","Dobroszyce","Gmina Puszcza MariaÅ„ska","Falkow","Bedkow","Radomsko","Kamien Slaski","Nieborowice","Slawkow","Wilkow","Roztoka","Zembrzyce","Ciezkowice","Hecznarowice","Szklarska PorÄ™ba","Zagrodno","Krosnowice","Krasiejow","Lubawka","Twardogora","Zorawina","Prusice","Smardzew","Domaniewice","Brudzice","Zduny","Tworog","Stroze","Klucze","Alwernia","Suchy Dab","Rokitki","Sztutowo","Ostaszewo","Drewnica","Godziszewo","Pelplin","Drezdenko","Dobrzany","Trzcinsko","Klecko","Ostrowite","Pszczew","Kicin","Legowo","Barczewo","Swarzewo","Leba","PasÅ‚Ä™k","Komorniki","Kartuzy","Raczki","Rokitnica","Bukowina Tatrzanska","Myslachowice","Siennica Nadolna","Radzyn Podlaski","Gorki Wielkie","Brenna","Sianow","Smardzowice","Turek","Gmina Przywidz","Zukowo","Opatow","Kunow","Nowy Dwor Gdanski","Milcza","Krzywin","Kazmierz","Skopanie","Kwaczala","Labowa","Orzysz","Lubochnia","Frombork","Gmina Kolno","Kowalewo","Rejowiec","Brzesko","Dabrowa","Sieroszowice","Zawonia","Wojkowice Koscielne","Gowarzewo","Wreczyca Wielka","Gmina GoÅ‚uchÃ³w","Siekierczyn","Dziegielow","Wrzosowka","Oleszno","Swarorzyn","Falkowo","Niechanowo","KikÃ³Å‚","Wielgie","Radomin","Otyn","Kaczkowo","Osno Lubuskie","Swiniary","Krzyz Wielkopolski","Rydzyna","Pepowo","Baranowko","Czapury","Klodawa","Czempin","Piaski","Gmina NowogrÃ³d BobrzaÅ„ski","Wielichowo","Gmina Babiak","Kwilcz","Szczytniki","Gmina Szubin","Lisewo","Gruszczyn","Karnice","Darnowo","Skrzetusz","Duszniki-Zdroj","Gmina KostomÅ‚oty","Kielcz","Pruszcz Pomorski","Manowo","Siemirowice","Damnica","Czernica","Tanowo","Stare Czarnowo","Rewal","Stanowice","Miedzyborz","Lomnica","Laka","Konopiska","Poraj","Glubczyce","Rzeczyce","Ozimek","Jasienica","Lekawica","Huta Dlutowska","Dobieszowice","Ligota","Niemodlin","Kraszew","Czekanow","Brudzowice","Kocierzew Poludniowy","Karchowice","Wierzchowisko","Torzym","CheÅ‚mce","Lipno","Kleszczewo","Gmina Kiszkowo","Slone","Golanice","Kowalewo Pomorskie","Witnica","Niegoslawice","Szadlowice","Pniewy","Zaparcin","Paliszewo","Melno","Juchnowiec Koscielny","Gmina Ciechanowiec","Grabowka","Krypno","Gmina JedliÅ„sk","Knyszyn","Osieck","CiechanÃ³w","Niedrzwica Duza","Bochotnica","Moszczanka","Wawolnica","Lipiny","Klikawa","Wola Baranowska","Wadowice Gorne","Wielbark","Gorzkow","Bychawa","Jeziorany","Siennica","Pilawa","Ojrzen","Duczki","GÄ…socin","Dzierzgon","Miloradz","Koleczkowo","Milobadz","Liniewo","Stary DzierzgoÅ„","Gmina PoddÄ™bice","Gmina SulÄ™cin","Nowe Miasto nad Warta","GoÅ‚ubie","Sulmin","Slawoszyno","Mierzeszyn","Otomin","Choczewo","Kobylnica","Szlachta","Rakowiec","Stankowo","Majewo","Borkowo","Bojanowo","Lipusz","Sobowidz","Pniewy","Lubichowo","Tenczyn","Nowa Biala","Szyce","Michalowice","Gaworzyce","Iwanowice","Konstantynow","Konstantynow Lodzki","Olszyna","Lesna","LÄ…dek ZdrÃ³j","Rabka-Zdroj","Krapkowice","Mucharz","Szewce","Wozniki","Dlugopole-Zdroj","Kruszyn","Tymbark","Skarzysko-Kamienna","Peczniew","Gluchow","Gryfow Slaski","Gmina Zakliczyn","Bibice","Gorzyczki","Kalety","Biskupice","Mirkow","Szczyrk","Jarkowice","Wegliniec","Mokrsko","Zawadzkie","Ciasna","Uciechow","Pielgrzymka","Szczercow","Garki","Klecza Dolna","Nisko","Kroscienko Wyzne","Lezajsk","Gmina KsiÄ™Å¼pol","Nielisz","Ostrow Lubelski","Grodzisko Dolne","Milanow","Nowo-Aleksandrowo","Jezowe","Pysznica","Susiec","Lubycza Krolewska","Szczuczyn","Otrebusy","Slupno","Frydrychowice","Kuznia","Dankowice","Dzialoszyn","Marklowice","Rogoznik","Bielany","Bolechowice","Minoga","Chybie","Popow","Jablonka","Zawoja","Biecz","Byczyna","Gorzkowice","Druzbice","Trzebunia","Gora Siewierska","Skrbensko","Wisla Wielka","Smolec","Konradowka","Bielany Wroclawskie","Drzewica","Konstantyn","Namyslow","Janow","Szczejkowice","Sanniki","Rajszew","Jasieniec","Ustanow","Pomiechowek","Kazimierz Dolny","Czarna","Nasielsk","Ryki","StaroÅºreby","Bukowsko","Magnuszew","Strzyze","Dunaj","Trzeszczyn","Brzeznica","Belsznica","Kasinka","Szczecinek","Baran","Zielone","Makowiec","Praca","Kielno","Rogozno","Szreniawa","Gmina WÅ‚adysÅ‚awÃ³w","Gniewino","Luzino","GoÅ›cicino","Karlikowo","Dobrzyca","Stara Lubianka","Pila","Dolaszewo","Turowiec","Grzegorz","Suszec","Szczurowa","Dulcza Wielka","Liw","Ostrow Mazowiecka","Szczepanow","Borzecin","Wysokie Mazowieckie","Szepietowo","Åšniadowo","Rudzica","Kokoszkowy","Rychwal","Ostrzeszow","Golkowice","Zelazkow","KÄ™pno","Brok","Chwaszczyno","Bierun Nowy","Odolanow","Topola Mala","Rebkow","Cieszkow","Zduny","Strzelce Krajenskie","Polomia","Miejska Gorka","Strzelno","Goleszow","Rozanka","Lochow","Henrykow","Pietrowice Wielkie","Gorzyce","Glowienka","Reszel","Olecko","Dabrowskie","Zabor","Kozuchow","Czosnow","Zielona","Wilga","Zloczew","Zagosciniec","Podlasie","Zerniki","Sulistrowice","Chyliczki","Kleczany","MiÄ™dzyrzec Podlaski","Bratkowice","Wolbrom","Radlow","Wawel","Rozgarty","Osiek","Pawlowice","Pszow","Zagorzyce","Iwierzyce","Nawodna","Warzymice","DarÅ‚owo","Ostrowy","MiÅ‚ki","WÄ™gorzewo","Prabuty","Stare Miasto","Brzozow","Kamien","Stoczek","HajnÃ³wka","Leczna","Leszkowice","Strzyzow","Sulmierzyce","Karsko","Pustkow","Zyrakow","Brzostek","Radomysl Wielki","Brzeznica","Zarowka","Rzemien","Plesna","Niedomice","Bogumilowice","Borne Sulinowo","Polczyn-Zdroj","Czaplinek","Szostka","Kuzniki","Cianowice Duze","Zbroslawice","Zernica","Biezanow-Prokocim","Prokocim","Suwaki","JabÅ‚onowo Pomorskie","Krzywcza","Zabrzeg","Zglobien","Krzeszow","Mscice","Rudna Mala","Zielonki-Wies","Bramki","Makow Podhalanski","Czernica","Nowa Wies Elcka","Gmina OsjakÃ³w","Mieczewo","Kety","Klaj","Czerniewice","Raczka","Serwis","Gomunice","Rusiec","Marta","Debe Wielkie","Olszowice","Kowalkow","Banino","Skrzyszow","Lachowice","Rumianek","Kobylanka","Radziechowy","Giby","Bukowno","Modrze","Mosina","Miastko","Keblowo","Wielowies","Opatowek","Strzebin","Stary Zamosc","Labunie","Skomlin","Warzno","Klimontow","Lochowo","Debrzno Wies","Rudziniec","Lany","Ujazd","Trzyciaz","Pilica","Bydlin","Nebrowo Wielkie","Naprawa","Szydlowiec","Bielcza","Arkadia","Lubsza","Babienica","Miedzybrodzie Zywieckie","Ryglice","Sieniawa","Przystajn","Przemyslaw","Bukowiec Opoczynski","Maszewo","Orzel","Dabrowa Bialostocka","Jozefatow","BolimÃ³w","Rzasnia","Rudka","Buczkowice","Pomorskie","Gieraltowice","Chocznia","Obsza","Sobienie Jeziory","Dobiesz","Czersk","Gora Kalwaria","Bojadla","Grzmiaca","Ilza","Siwek","Strzeleczki","Gorazdze","Osieczna","Harasiuki","Liskow","Strzebielino","Gryfino","Skorcz","Grebocin","Chorzele","Kobiernice","Korzenna","Koronowo","Wielopole Skrzynskie","Przygodzice","Sulmierzyce","Opalenica","Maslice","Bobrza","Dzielna","Zarszyn","Huta Dabrowa","CegÅ‚Ã³w","Borowa","BiaÅ‚a Rawska","Kolonia Zawada","Sochocin","Staniszow","Bialobrzegi","Byslaw","Pogodki","Brynica","Daleszyce","Gloskow","StrachÃ³wka","Wola Radlowska","Golotczyzna","Osiek Jasielski","Baniocha","Czarny Las","Radziejowice","Wola Rasztowska","Rebowo","Zglobice","Borki","Kielpin","Nowy Staw","Bielawy","Janow Lubelski","Leszno","Koteze","Kurdwanow","Nowa Huta","Czyzyny","Podgorze","Goszczyn","Wisznice","Koszyce","Koszyce","Wieliszew","Miedzna","Czarne","Dopiewiec","Lusowko","Sady","Paledzie","Biskupice","Przemet","Rogalinek","Gostynin","Skorzec","Kusnierz","GÄ…bin","Kurzetnik","Zabno","Dobroszyce","Olejnica","Czastary","Bierutow","Zawada","Wiazow","Kurek","Bojszowy","Subkowy","Myszyniec","Juszkowo","Olszany","Puszczew","Zorawia","Katarzyna","Braszewice","Tomaszow Lubelski","Wieckowice","Staw","Pisarzowice","Trojanow","Baborow","Lobzenica","Grabiec","Jasienica Dolna","Stary Broniszew","Przyrow","Charzykowy","Pastuchow","Mackowice","Krynica-Zdroj","Tylicz","Morawica","Nowy Swietow","Chrzowice","Lelow","Tuchow","Lipnica Murowana","Wysoka","Pawlowice","Czarna BiaÅ‚ostocka","RadziejÃ³w","Scinawa Mala","Jastrzebie","Czarnozyly","Baboszewo","Drohiczyn","Iwonicz-Zdroj","Kosina","Brzyska Wola","Bircza","Podleze","Zator","Tomaszowice","Wilczeta","Swiecie nad Osa","Wapielsk","Bledzew","Trzemeszno Lubuskie","Rymanow","Odrzykon","Roczyny","Kolno","Grabow nad Prosna","Zaleszany","Turbia","Milejow","Gmina Ludwin","Kaczor","Kochcice","Brzeziny","Frank","Imielin","Cmolas","Wolborz","Zawidow","Gieraltowice","Stronie Slaskie","Lewin Brzeski","Podgorne","Gniew","Laziska Gorne","Nowe Chechlo","Soczewka","Tarnow Opolski","Gmina Konarzyny","Swierk","Reczno","Kamien Krajenski","Zgorsko","Polskie","Boguslaw","Ustrzyki Dolne","Chojna","Towarzystwo","Borowe","Sobotka","Lajsk","Pokrzywnica","Prosna","Supienie","Pilchowice","Unieszewo","Mszana","Bory","Gaszowice","Syrynia","Bogunice","Å»elechÃ³w","Siewierz","Skierdy","Modlniczka","Zgorzala","Burzenin","Wasniow","Radoszyce","Nowy Korczyn","Pacanow","Grabki Duze","Gmina SzydÅ‚Ã³w","Strawczyn","Kedzierzyn","Bolkow","Karpiska","Wieruszow","Laziska","Tecza","Biskupice Oloboczne","Biskupin","Hornowek","Bohdan","Debowiec","Medyka","Pcim","Lubien","Lomianki Dolne","Sycewice","Bielawa","Niewierz","Glowna","Winnica","Krasocin","Blizyn","Bieliny","Jedlnia-Letnisko","Olimpia","BrzeÅ›Ä‡ Kujawski","Lipnica Wielka","Mieroszow","Jastrowie","Lubaczow","Krynica","Gmina Opole Lubelskie","Siedlec","Åšlesin","Kozminek","Zaluski","Paulina","Kleszczow","Miechow","Wlodzimierz","Zebowice","Chrzastowka","Szebnie","Zalubice Nowe","Pedziwiatry","Medynia Glogowska","Nienadowka","Dziechciniec","Glogow Malopolski","Krasne","Kozieglowy","Izabelin","Keblowo","Gora","Gowino","Moryn","Kijewo Krolewskie","Lesko","Domaradz","SuraÅ¼","Radzanow","Malogoszcz","Mikolajki","Mirsk","Trzemeszno","PakoÅ›Ä‡","Orchowo","GÄ™bice","Izabela","Dobromierz","Wiorek","Brzoza Krolewska","Narzym","Gmina PotÄ™gowo","Smolnica","Grodkow","Konarzewo","Muszyna","Cekow","Trzemesnia","Mrocza","Grybow","Oltarzew","Drawno","Tylmanowa","Zalasewo","Dobrzen Wielki"
,"Ireland","Roscommon","Roscrea","Mountrath","Dublin","Porterstown","Carrigaline","Cork","Ballina","Manorhamilton","Kells","Listowel","Lisselton","Carrick","Galway","Tipperary","Carlow","Abbeyleix","Mullinavat","Maynooth","Tallaght","Templeogue","Swords","Bray","Cabinteely","Clondalkin","Ballyfermot","Artane","Malahide","Limerick","Saggart","Prosperous","Castleknock","Clonsilla","Kilkenny","Droichead Nua","Kildare","Celbridge","Lucan","Blackrock","Dundrum","Wicklow","Rathgar","Stillorgan","Mullingar","Clonmel","Sandyford","Ashbourne","Athlone","Marino","Dalkey","Finglas","Glasnevin","Naas","Blessington","Waterford","Leixlip","Walkinstown","Mayo","Terenure","Clane","Killarney","Trim","Seafield","Mount Merrion","Glen","Nenagh","Shannon","Kilbride Cross Roads","Killybegs","Sligo","Athboy","Crosshaven","Drogheda","Youghal","Greystones","Ballsbridge","Foxrock","Shankill","Killiney","Abbeyfeale","Dunshaughlin","Navan","Ballincollig","Ardee","Ballyroe","Sandymount","Slieve","Macroom","Wexford","Blanchardstown","Milltown","Dundalk","Athy","Kilrush","Dungarvan","Gorey","Letterkenny","Ballymahon","Island","Stepaside","Ballintober","Firhouse","Cabra","Donabate","Coolock","Rathfarnham","Thurles","Kilcock","Sutton","Newport","Monaghan","Hospital","Bettystown","River","Tralee","Ballybrit","Cobh","Enniskerry","Duleek","Rush","Lusk","Mitchelstown","Kanturk","Balbriggan","Rathmolyon","Crumlin","Clontarf","Kingswood","Kinsale","Dunboyne","Caher","Broadford","Kilmichael","Berrings","Ballineen","Tyrrellspass","Donegal","Bundoran","Glenties","Killygordon","Athenry","Moycullen","Mallow","Castlebar","Ratoath","Bandon","Douglas","Glengarriff","Ballygarvan","Clonakilty","Ballyphilip","Boherbue","Kilfinane","Fermoy","Carbury","Monasterevin","Monkstown","Clogherhead","Enfield","Edenderry","Kildalkey","Castlerea","Stradbally","Skerries","Garristown","Santry","Ballybrack","DÃºn Laoghaire","Leopardstown","Ballyhooly","Claregalway","Dunlavin","Straffan","Summerhill","Ballymount","Courtown","Loughrea","Enniscorthy","Portarlington","Buncrana","Cashel","Carrickmacross","Geevagh","Killala","Carrick on Shannon","Saint Mullins","Carrickmines","Killorglin","Passage West","Ennis","Oysterhaven","Cavan","Virginia","Clones","Bailieborough","Oranmore","Shrule","Callan","Tullow","Carnew","New Ross","Castlebridge","Glenealy","Carrick-on-Suir","Ballymote","Longford","Ballivor","Louth","Castleblayney","Birr","Clarecastle","Tullamore","Ballon","Kingscourt","Coachford","Clonee","Kilmainham","County Wexford","Balgriffin","Kiltamagh","Foxford","Westport","Claremorris","Swinford","Foynes","Sixmilebridge","Newcastle West","Grange","Dunleer","Longwood","Killaloe","Feakle","Baldoyle","Windy Arbour","Doughiska","Thomastown","Raheny","Dundrum","Rathowen","Patrickswell","Delgany","Ballyvaghan","Doolin","Killurin","Midleton","Ringaskiddy","Skibbereen","Ballinadee","Kinvarra","Oughterard","Ballinrobe","Tuam","Headford","Spiddal","Gort","Williamstown","Ballinasloe","Cahersiveen","Bantry","Crookhaven","Portumna","County Galway","Kilmore","Leamlara","Bagenalstown","Ballyragget","Carraroe","Killinick","Crusheen","Glanmire","Arklow","Kilcoole","Kilcullen","Ferbane","Mornington","Naul","Donnybrook","Portmarnock","Ballycullen","Sallins","Irishtown","Ballymun","Jamestown","Bodyke","Rathcoole","Rathmines","Inchicore","Kenmare","Sallynoggin","Carrigtohill","Cross","Castlemaine","Newmarket"
,"Croatia","Velika Gorica","Zagreb","Ivanec","Core","Labin","VaraÅ¾din","Split","Glina","Vinkovci","Sinj","Karlovac","Rijeka","Gornja Lomnica","Å ibenik","Zlatar","Novi Vinodolski","Dubrovnik","Cavtat","Zadar","Simuni","Tar","Rab","Lupoglav","Å½upanja","Äakovo","Piskorevci","Vukovar","Brsadin","Nustar","Delnice","Vrbnik","Krk","Lovran","Petrcane","Trogir","Betina","Dugo Selo","Sisak","Zapresic","Oroslavje","Matulji","PoreÄ","Makarska","Brela","Baska Voda","Lekenik","Strmec Samoborski","Petrinja","Galgovo","Krapina","Vrbovec","Sesvete","Popovaca","Bestovje","Nedelisce","Rijeka","MetkoviÄ‡","Mlini","Postira","Primosten","DrniÅ¡","Privlaka","Darda","Samobor","Opatija","Bibinje","Podastrana","Osijek","Fuzine","Orebic","Rovinj","Lukavec","Pula","Viskovci","Podgajci Posavski","Antunovac","Cepin","Silas","Vardarac","Solin","ÄŒakovec","Kriz","Lupoglav","Kastel Gomilica","Kastel Luksic","Crikvenica","Pazin","Krsan","Umag","Medulin","Icici","Buje","Sapjane","Karojba","Kostrena","Fazana","Cabuna","Pakrac","Bizovac","Vojnic","Ivanic-Grad","Novo Cice","Sveti Ivan Zelina","Orle","Bregana","Donja Pusca","Gornji Stupnik","Bedekovcina","Koprivnica","Varazdinske Toplice","Mursko Sredisce","Vinica","Desinic","Prelog","Pregrada","Torcec","Donji Kraljevec","Novi Marof","Senkovec","Brdovec","Zabok","Strmec","Kraljevec na Sutli","PoÅ¾ega","Nova Gradiska","BeliÅ¡Ä‡e","Okrug Gornji","Cestica","Vratisinec","Lepoglava","Tuzno","Sokolovac","Kastel Sucurac","Bracevci","Virovitica","Orahovica","Slavonski Brod","Kutjevo","Sice","Vetovo","Slatina","Dalj","Bjelovar","Sesvetski Kraljevec","Vrata","Hreljin","Rakitje","Gornji Kriz","Virje","Splitska","Baska","Lapad","Donja Zelina"
,"Bosnia and Herzegovina","Sarajevo","Zenica","Mostar","Livno","Ljubuski","Lukavac","Tuzla","Jelah","BihaÄ‡","Vogosca","Bijeljina","Doboj","Banja","Donja Mahala","Srpska","Banja Luka","Tesanj","Breza","Visoko","Stup","Lopare","Prijedor","Bosanska Dubica","Zivinice","Gracanica","Core","Brcko","Bosanska Krupa","Sanski Most","Cazin","Odzak","Modrica","Zepce","GoraÅ¾de","Bugojno","Jajce","Travnik","Novi Travnik","Vitez","Kiseljak","Siroki Brijeg","Ilidza"
,"Estonia","Maardu","Kuressaare","Tallinn","Laagri","PÃµlva","VÃµru","Viimsi","Tabasalu","Keila","Rakvere","SillamÃ¤e","Kohtla-JÃ¤rve","Tartu","JÃµhvi","Viljandi","PÃ¤rnu","Paide","TÃ¼ri","Harku","Saku","Vara","Alliku","Kulna","Kohtla","Narva","Tamsalu","Aasmae","KiviÃµli","Ahtma","Toila","Voka","Kaarma","Paldiski","Loo","Sindi","JÃ¼ri","Emmaste","Aespa","Peetri","JÃµgeva","Haapsalu","Lagedi","Haabneeme","Lubja","Venevere","PÃµltsamaa","Vaida","Ardu","Puhja","Otepaeae","Antsla","Palivere","Aaviku","Lepna","Kehra","Kuusalu","Loksa","Elva","Valga","Tabivere","Saue","Rapla","Kohila","Kiili","Lahtse","Muraste","Somerpalu","Tapa","Kose","Haage","JÃµelÃ¤htme Parish","Ambla","Kadrina","Syare","Harju","Rakke","Avinurme","Halinga","Kilingi-NÃµmme","KÃ¤rdla","Paikuse"
,"Latvia","Riga","Centrs","Salaspils","Jelgava","Ozolnieki","Priedkalne","Ventspils","LiepÄja","JÅ«rmala","PreiÄ¼i","Aizkraukle","RopaÅ¾i","Tukums","IkÅ¡Ä·ile","Daugavpils","Agenskalns","RÄ“zekne","CÄ“sis","Dobele","Izvalta","Liepa","Valmiera","AlÅ«ksne","Pilsrundale","Bauska","Ogre","LÄ“dmane","Ä¶egums","Ilguciems","Saldus","KuldÄ«ga","JÄ“kabpils","Marupe","Valka","Balvi","StrenÄi","Madona","LÄ«vÄni","Zasa","Stalgene","Pure","Aizpute","Kandava","Ä¶ekava","Carnikava","Malta","Zilupe","VarakÄ¼Äni","Talsi","Lapmezciems","Smiltene","Sigulda","Mazsalaca","Kolka","Varsava","Jaunolaine","Adazi","Ludza","Olaine","Baldone","LimbaÅ¾i","Gulbene","SunÄkste","ViesÄ«te","Malpils","Brankas","Durbe"
,"Hashemite Kingdom of Jordan","Amman","Irbid","Farah","Sahab","Madaba","Salt","Ar Ramtha"
,"Kyrgyzstan","Bishkek"
,"RÃ©union","Saint-Joseph","Le Tampon","Saint-Andre","Saint-Piorre","Saint-Paul","La Possession","Le Port","Le Petit Tampon","Sainte-Suzanne","Ravine des Cabris","Saint-Gilles-les Bains","Sainte-Clotilde","Saint-Denis","Sainte-Marie","Petite-Ile","La Riviere","Les Avirons","La Saline","Etang-Sale les Bains","Saint-Louis","La Chaloupe Saint-Leu","Entre-Deux","Piton","Saint-Benoit"
,"Isle of Man","Douglas","Onchan","Ballasalla","Castletown","Port Erin","Ramsey","Laxey","Dalby","Foxdale","Peel","Port Saint Mary","Crosby","Saint Johns"
,"Libya","Tripoli","Benghazi","Misratah","Zliten","Sabha"
,"Luxembourg","Steinsel","Bascharage","Itzig","Dudelange","Helmsange","Soleuvre","Belvaux","Bettembourg","Luxembourg","Hunsdorf","Junglinster","Bertrange","Sandweiler","Beggen","Heffingen","Strassen","Contern","Mersch","Bereldange","Alzingen","Holzem","Leudelange","Ernster","Luxembourg-Kirchberg","Tetange","Esch-sur-Alzette","Lamadelaine","Rumelange","Hesperange","Medernach","Goetzingen","Nospelt","Gosseldange","Schifflange","Grosbous","Merl","Gonderange","Ettelbruck","Huncherange","Bridel","Rodange","Hautcharage","Kayl","Berchem","Bofferdange","Mondercange","Dippach","Burmerange","Oberanven","PÃ©tange","Grevenmacher","Differdange","Grevenknapp","Schieren","Pontpierre","Sanem","Crauthem","Beaufort","Syren","Heisdorf-sur-Alzette","Helmdange","Lintgen","Hersberg","Moutfort","Uebersyren","Olm","Tuntange","Bissen","Koetschette","Niedercorn","Mertert","Erpeldange-lez-Bous","Ehnen","Canach","Wasserbillig","Wormeldange","Remerschen","Bigonville","Gostingen","Bourglinster","Bergem","Hobscheid","Schouweiler","Capellen","Ahn","Kleinbettingen","Bonnevoie","Foetz","Walferdange","Steinfort","Colmar","Limpertsberg","Larochette","Hollerich","Hagen","Kehlen","Mamer","Mondorf-les-Bains","Schoos","Beidweiler","Oetrange","Lorentzweiler","Wolpert","Dalheim","Bivange","Godbrange","Roeser","Cap","Roodt-sur-Syre","Frisange","Noerdange","Beckerich","Echternach","Esch-sur-Sure","Betzdorf","Schuttrange","Remich"
,"Armenia","Aparan","Yerevan","Jermuk","Abovyan","Vanadzor","Apaga","Ashtarak","Arabkir","Agarak","Kapan","Erebuni Fortress","Hrazdan","Ijevan","Tsaghkadzor"
,"British Virgin Islands","Road Town","Tortola"
,"Yemen","Sana'","Sanaa","Aden"
,"Belarus","Minsk","Mogilev","Brest","Vitebsk","Dvor-Gomel'","Hrodna","Navapolatsk","Lida","Horki","Borisov","Lyakhovichi","Radoshkovichi","Polatsk","Orsha","Valer'yanovo","Baranovichi","Mazyr","Lyaskavichy","Zhodzina","Zaslawye","Lahoysk","Shklow","Mozyr'","Dzyarzhynsk","Pinsk"
,"Gibraltar","Gibraltar"
,"Kenya","Nairobi","Mombasa","Kisumu","Machakos","Thika","Eldoret","Kitui","Kabete","Wote","Kiambu","Nakuru","Kaiboi","Kitale","Kisii","Bondo","Siaya","Chuka","Karatina","Maseno","Kikuyu","Mbita","Sawa Sawa","Turbo"
,"Chile","Las Condes","Santiago","ViÃ±a del Mar","Hanga Roa","Antofagasta","Iquique","ConcepciÃ³n","ValparaÃ­so","Ovalle","Chuquicamata","Providencia","CopiapÃ³","Maquina Atacama","Valdivia","Coihaique","Galvarino","Port Montt","Collipulli","Molina","Los Angeles","Quillota","Punta Arenas","Tome","Chillan","La Laja","Temuco","La Union","QuilpuÃ©","Puchuncavi","Macul","Lampa","Rancagua","CuricÃ³","Talca","Vallenar","Coquimbo","Mejillones","Talcahuano","San Javier","San Fernando","La Cisterna","Pucon","Constitucion","San Carlos","Chillan Viejo","Bulnes","Rengo","Graneros","Nacimiento","San Bernardo","Talagante","Nunoa","Colina","Machali","Caldera","El Monte","Melipilla","La Granja","Coronel","Monte Aguila","Arauco","Chiguayante","Curacavi","La Reina","Osorno","Centro","Puerto Varas","Castro","Quilicura","La Serena","Villa Alemana","Buin","Arica","Calama","San Antonio","Renaca","Concon","Renca","Recoleta","Apoquindo","Lolol","Puerto Aisen","Penablanca","Maipu","San Felipe","Villarrica","Paillaco","Rio Bueno","Puente Alto","Olmue","Purranque","Chicureo Abajo","El Salvador","Miraflores","El Salto","Rinconada","El Arco","Cerrillos de Tamaya","El Bosque","El Valle","Santa Barbara","Los Andes","San Pedro","Cunco","Angol","Puren","San Martin","Vitacura","Fresia","Tarapaca","Maule","Lo Barnechea","Puerto Natales","La Calera","La Ligua","Nogales","Chimbarongo","Llanquihue","Algarrobo","Dalcahue","Lautaro","Quemchi","Quellon","Chonchi","Catemu","Penaflor","El Quisco"
,"Qatar","Doha","Al Wakrah","Ar Rayyan"
,"Kuwait","Kuwait City","Bayan","Al Farwaniyah","Hawalli","Ar Rawdah","As Salimiyah","Salwa","Al Shamiya","Kayfan","Al Ahmadi","Abraq Khaytan","Ash Shuwaykh","Janub as Surrah","Ad Dasmah","Ad Dawhah","Ash Shu`aybah"
,"Guadeloupe","Les Abymes","Basse-Terre","Pointe-Ã -Pitre","Sainte-Anne","Morne-a-l'Eau","Saint-Francois","Lamentin","Saint-Claude","Baie-Mahault","Petit-Bourg","Le Moule","Gourbeyre","Port-Louis","Capesterre-Belle-Eau","Baie Mahault","Le Gosier","Sainte-Rose","Terre-de-Bas","Grand-Bourg","Anse-Bertrand","Petit-Canal","Baillif","Goyave","Capesterre-de-Marie-Galante","Deshaies","Terre-de-Haut","Trois-Rivieres","Pointe-Noire","Saint-Louis","Village"
,"Martinique","Riviere-Salee","Fort-de-France","Le Gros-Morne","Saint-Joseph","Ducos","Le Lamentin","Case-Pilote","Schoelcher","Le Robert","Le Carbet","Sainte-Luce","Les Trois-Ilets","Les Anses-d'Arlet","Le Francois","Sainte-Anne","Le Diamant","Le Morne-Rouge","Sainte-Marie","Saint-Esprit"
,"French Guiana","Petit Cayenne","Kourou","Remire-Montjoly","Matoury"
,"Dominican Republic","Santo Domingo","Santiago de los Caballeros","San Cristobal","San Fernando de Monte Cristi","Moca","Dominica","Boca Chica","Punta Cana","San Jose de Ocoa","La Romana","Puerto Plata","San Francisco de MacorÃ­s","San Pedro de MacorÃ­s","Jimani","Guaricano","Los Alcarrizos","Santa Cruz de Barahona","BanÃ­","SalvaleÃ³n de HigÃ¼ey","Hato Mayor del Rey","Arenazo","Pedernales","Cotui","Cabarete","ConcepciÃ³n de la Vega","Sabaneta","Bavaro","Los Prados"
,"Guam","Santa Rita","HagÃ¥tÃ±a","Barrigada Village","Tamuning-Tumon-Harmon Village","Yigo Village","Inarajan Village","Dededo Village"
,"U.S. Virgin Islands","Frederiksted","Charlotte Amalie","Christiansted","St John Island","Kingshill"
,"Puerto Rico","BayamÃ³n","Dorado","Carolina","Rio Grande","Guaynabo","San Juan","Caguas","Salinas","Vega Baja","Morovis","Arecibo","Catano","Toa Baja","Las Piedras","Corozal","Aguas Buenas","Punta Santiago","Luquillo","Fajardo","Ciales","Humacao","Juncos","Barceloneta","Hatillo","Manati","Vega Alta","Naguabo","Saint Just","Trujillo Alto","Lares","San Sebastian","Camuy","Bajadero","Gurabo","San Lorenzo","Aibonito","Cayey","Santa Isabel","Ponce","Guayanilla","Villalba","Aguadilla","Isabela","Moca","Mayaguez","Hormigueros","Guayama","Maunabo","Patillas","Ensenada","Sabana Grande","Barranquitas","Utuado","Garrochales","Cidra","Loiza","Canovanas","Yabucoa","Arroyo","Coamo","Cabo Rojo","Aguada","Juana Diaz","Rincon","Anasco","Guanica","Boqueron","Quebradillas","Toa Alta","Ceiba","Yauco","Palmer","Florida","Penuelas","Lajas","San German","Residencial Puerto Real","Orocovis","Maricao","Naranjito","Adjuntas","Sabana Seca","Vieques","San Antonio","Jayuya","Culebra","Coto Laurel","Mercedita"
,"Mongolia","Ulan Bator","Chihertey","Altai","Bayanhongor","MÃ¶rÃ¶n","Baruun-Urt","SÃ¼hbaatar","Bayangol","Darhan","Han-Uul","Arvayheer","Javhlant","Choyr","Undurkhaan","Ovoot","Ulaan-Uul","Mandalgovi","Dalandzadgad","Toyrim","Cecerleg","Saynshand","Khovd","Uliastay"
,"New Zealand","Auckland","Palmerston North","Wellington","Windermere","Tauranga","Christchurch","Cheviot","Levels","Panmure","Saint Heliers","Torbay","Waitakere City","Silverdale","Tuakau","Manukau","Manukau","Papakura","Johnsonville","Takapuna","Waitangi","Taradale","Whangarei","Paihia","Waiau","Amberley","Belmont","Wellsford","Hamilton","Red Beach","Avondale","Yaldhurst","Lower Hutt","Greenhithe","Wanganui","Masterton","Stanmore Bay","Mangere","Titirangi North","Waimauku","Rotorua","Ponsonby","Dunedin","Waihi Beach","Kawerau","Taupo","Matakana","Pakuranga","Albany","Waiau Pa","Parnell","Napier City","Nelson","New Plymouth","Winton","Douglas","Marua","Queenstown","Gisborne","Cave","Papamoa","Whakatane","Opotiki","Northcote Point","Hastings","Petone","Lincoln","Otaki","Timaru","Wendon Valley","Wanaka","Greymouth","Westport","Punakaiki","Leeston","Te Kauwhata","Ohaupo","Haast","Katikati","Waihi","Paeroa","Tinwald","Glenbrook","Renwick","Waikawa","Ngaio","Clyde","Invercargill","Pokeno","Oxford","Rakaia","Halswell","Linwood","Mangaroa","Khandallah","Woodend","Ngatea","Balclutha","Takaka","Riversdale","Otautau","Tuatapere","Riverton","Pirongia","Ohura","Te Atatu","Otorohanga","Tirau","Leamington","North Shore","Tokomaru","Hawera","Rolleston","Mount Maunganui","Whangamata","Raglan","Whangaparaoa","Porirua","Opaheke","Drury","Waikuku Beach","Waiuku","Tahoraiti","Levin","Tokoroa","Turangi","Eltham","Waitoa","Paraparaumu","Kaiwharawhara","Riverhead","Warkworth","Takanini","Kumeu","Waikanae","Northland","Waipara","Kaikoura","Thames","Woolston","Wainuiomata","Kaitangata","Lumsden","Murupara","Mangawhai Heads","Kaiwaka","Orewa","Walton","Cashmere Hills","Wairoa","Templeton","Waitara","Urenui","Porangahau","Waiouru","Herne Bay","Howick","Hokitika","Glen Eden","Te Anau","Oban","Balfour","Weston","Lake Tekapo","Kurow","Ahaura","Mangonui","Havelock North","Waipawa","Takapau","Winchester","Opunake","Sawyers Bay","Whitianga","Kawhia","Taupiri","Colville","Upper Moutere","Hikuai","Owaka","Waitati","Hawarden","Karamea","Milton","Kaiata","Franz Josef","Springs Junction","Dargaville","Ashhurst","Foxton","Foxton Beach","Eastbourne","Piopio","Manunui","Pukeatua","Okaiawa","Kimbolton","Otaki Beach","Bulls","Orakei","Awanui","Kohukohu","Okaihau","Ruawai","Mission Bay","Ranfurly","Clinton","Mosgiel","Outram","Menzies Ferry","Mossburn","Rakaia Gorge","West Melton","Fairlie","Wairoa","Puhoi","Campbells Bay","Blackburn","Waipu","Portland","Kerikeri","Moerewa","East Tamaki","Tasman","Favona","Coromandel","Russell","Kaeo","Te Roti","Kirwee","Hunterville","Tamahere","Waimana","Bethlehem","Wakefield","Okato","Maungaturoto","Maungatapere","Kamo","Onga Onga","Myross Bush","Waverley","Beachlands","Otane","Clarks","Weymouth","Wyndham","Oratia","Swanson","Paremata","Paekakariki","Pleasant Point","Greerton","Port Chalmers","Oturehua","Oamaru","Paradise","Rotherham","Longburn","Clive","Otematata","Penrose","Collingwood","Bombay","Clevedon","Waikari","Coalgate","Oakura","Darfield","Duvauchelle","Sefton","Edendale","Browns Bay","Methven","Doyleston","Waikuku","Kawakawa","Brightwater","Paraparaumu Beach","Coatesville","Reporoa"
,"Singapore","Singapore","Yishun New Town","Bedok New Town","Ayer Raja New Town","Kalang","Tampines New Town","Ang Mo Kio New Town","Kampong Pasir Ris","Hougang","Yew Tee","Choa Chu Kang New Town","Punggol","Changi Village","Bukit Timah Estate","Serangoon","Jurong Town","Tanglin Halt","Woodlands New Town","Jurong East New Town","Bukit Panjang New Town","Bukit Batok New Town","Pasir Panjang","Holland Village","Tai Seng","Toa Payoh New Town","Bukit Timah","Jurong West New Town","Kembangan","Queenstown Estate","Boon Lay","Simei New Town","Pandan Valley","Clementi New Town","Tanjong Pagar"
,"Indonesia","Bandung","Jakarta","Samarinda","Pekanbaru","Balikpapan","Padang","Patam","Malang","Medan","Pangaturan","Tebingtinggi","Sungailiat","Palembang","Bengkalis","Jambi City","Depok","Bogor","Sangereng","Bekasi","Karawang","Sukabumi","Tasikmalaya","Subang","Ciamis","Cirebon","Garut","Kuningan","Majalengka","Sumedang","Sukoharjo","Semarang","Pekalongan","Kudus","Klaten","Jepara","Demak","Salatiga","Tegal","Yogyakarta","Sleman","Cilacap","Magelang","Wonosobo","Surakarta","Bantul","Temanggung","Kebumen","Purwokerto","Purbalingga","Kulon","Surabaya","Bangkalan","Pasuruan","Mojokerto","Sidoarjo","Surabayan","Batu","Blitar","Lumajang","Tulungagung","Magetan","Kediri","Trenggalek","Madiun","Ngawi","Nganjuk","Bojonegoro","Banyuwangi","Jember","Situbondo","Probolinggo","Gresik","Lamongan","Pamekasan","Pontianak","Singkawang","Banjarmasin","Buntok","Bontang","Palangkaraya","Tarakan","Denpasar","Badung","Ubud","Mataram","Selong","Manado","Tondano","Bitung","Bima","Sungguminasa","Adiantorop","Makassar","Sekupang","Kota","Bangkinang","Binjai","Banda Aceh","Lhokseumawe","Serdang","Balige","Lampeong","Baturaja","Bandar","Cimahi","Indramayu","Banyumas","Jombang","Mojoagung","Kepanjen","Ponorogo","Pacitan","Palu","Sengkang","Gorontalo","Gianyar","Jayapura","Soasio","Wonosari","Bengkulu","Guntung","Langsa","Kerinci","Porsea","Bali","Cianjur","Tirtagangga","Purworejo","Pandeglang","Tigaraksa","Cilegon","Cilegon","Sanur","Darussalam","Kupang","Bandar Lampung","Pati","Panasuan","Darmaga","Dumai","Timur","Riau","Bukit Tinggi","Parman","Cihampelas","Tangsel","Duren","Angkasa","Jimbaran","Menara","Pamulang","Bantan","Baratjaya","Utara","Veteran","Tengah","Tenggara","Selatan","Simpang","Gunungsitoli","Pemalang","Tenggarong","Tanjung Balai","Serang","Cikarang","Cibitung","Bondowoso","Singaraja","Poso","Ambon City","Negeribesar","Cempaka","Lestari","Kandangan","Ciputat","Kartasura","Jagakarsa","Pondok","Solo","Polerejo","Muntilan","Boyolali","Nusantara","Cipinanglatihan","Kalimantan","Serang","Serpong","Cikini","Purwodadi Grobogan","Kendal","Tanjungpinang","Lubuk Pakam","Nusa","Kelapa Dua","Gandul","Gedung","Tanjung","Kuta","Kalideres","Mega","Area","Wilayah","Soho","Menteng","Tuban","Cilincing","Sunggal","Sijunjung","Kerobokan","Negara","Amlapura","Baubau","Karanganyar","Sampang","Depok Jaya","Parakan","Lawang","Pare","Airmadidi","Tembagapura","Banjarbaru","Palangka","Cimanggis","Kebayoran Baru","Lapan","Pusat","Sigli","Kabanjahe","Pematangsiantar","Payakumbuh","Kebayoran Lama Selatan","Tigarasa","Purwakarta","Cibubur","Wonogiri","Sragen","Ungaran","Batang","Ambarawa","Palaihari","Tanjung","Sampit","Bulukumba","Bangli","Soe","Nusa Dua","Stabat","Maros","Tipar Timur","Holis","Banjarnegara","Banjar","Kopeng","Duri","Bantaeng","Blora","Tomohon","Citeureup","Pekan","Mamuju","Badung","Abadi","Anggrek","Sejahtera","Cakrawala","Indo","Sentul","Utama","Mail","Udayana","Cengkareng","Kemang","Tabanan"
,"Nepal","Patan","Jawlakhel","Kathmandu","Bharatpur","Palpa","Lumbini"
,"Papua New Guinea","Waigani","Madang","Port Moresby","Namatanai","Arawa","Pongani","Lae","Goroka","Wewak","Kimbe","Daru","Kokopo","Kerema","Lorengau","Popondetta","Wabag","Kundiawa","Mount Hagen","Nambaga","Kikori","Aitape","Kiunga","Vanimo","Mendi","Paivara","Kavieng","Kupano"
,"Pakistan","Gulshan-e-Iqbal","Habib Baihk","Karachi","Ziauddin","Okara","Islamabad","Rawalpindi","Khanpur","Jhelum","SwÄbi","Lahore","Faisalabad","Cantt","Gujar Khan","Attock","Goth Abad Magsi","Kasur","Nangar","Sheikhupura","Sialkot","Mandi Bahauddin","Gujrat","Wazirabad","Narowal","Sargodha","Mianwali","Daud Khel","BahÄwalpur","Burewala","Abbottabad","Batgram","Havelian","Haripur","Mansehra","Plot","Hyderabad","Miran Shah","Peshawar","Gujranwala","Multan","Quetta","Khan","Kabirwala","Fazal","Clifton","Sarwar","New Mirpur","FÄtima","Saddar","Gulberg","Gilgit","Muzaffarabad","Sarai Sidhu","Dera Ghazi Khan","Sahiwal","Chakwal","Bhimbar","Sukkur","Mandi","Usman","ChÄrsadda","Nowshera","Mardan","Mian Channu","Khanewal","Jhang Sadr","Jhang City","Toba Tek Singh","Jhumra","Daska","Kohat","Nankana Sahib","Pindi","Rawlakot"
,"Panama","Panama City","Santa Catalina","Playa Blanca","El Arado","Cocle","Chiriqui","ColÃ³n","Plaza","Bocas del Toro","Guadalupe","PenonomÃ©","Chigore","David","Boquete","Portobelo","Bella Vista","Pueblo Nuevo","Veraguas","Sacramento","Arraijan","Paitilla","Santa Clara","Balboa","Torre","Kuba","ChitrÃ©","Santiago","San Miguelito","La Chorrera","Juan Franco","Juan Diaz","Vista Alegre","Juan Diaz","Mulatupo","Torres Bluff","Entre Rios","Las Mercedes","Rio Abajo","El Cangrejo","San Francisco","Parque Lefevre","Llano Tugri","Bugaba","Santo Domingo","Ancon","Las Tablas","Cerro Viento","San Felipe","Santa Isabel","San Cristobal","Quebrada de Camilo","Arosemena","Tocumen","Las Sabanas","Los Angeles","Calidonia","Corozal","Santa Ana","Curundu","Elena","Albrook","Jimenez","El Lago","Campo Alegre","Vista Hermosa","Muerto","Victoria","La Loma","Finca Blanco Numero Uno","La Exposicion","Cristobal","Fuerte Amador","Aguadulce","Peru","Sabalo","PlayÃ³n Chico","Curundame"
,"Costa Rica","San JosÃ©","Alajuela","Puerto Jimenez","Santa Ana","Heredia","Tres Rios","Santa Cruz","San Rafael","Alfaro","San Pedro","Guadalupe","Barva","Corazon de Jesus","Moravia","Alajuelita","San Isidro","La Garita","Puntarenas","Cartago","Escazu","Santa Cecilia","Liberia","Coyol","Curridabat","Paraiso","Llorente","Pavas","Desamparados","LimÃ³n","San Pablo","San Rafael","Colon","Perez","Aserri","Guacima","San Ramon","Guachipelin","Guapiles","San Francisco","Grecia","Isla de Tibas","San Josecito","Turrialba","San Marcos","Coronado","San Francisco","Palmares","Zapote","San Diego","Quesada","Zarcero","Mexico","Santo Domingo","San Joaquin","Llorente","Mercedes","Sabanilla","San Jose de la Montana","San Juan","Turrucares","Miramar","Filadelfia","Atenas","Jaco","Poas","Sarchi","Quepos","Siquirres","Esparza"
,"Peru","Lima","Cerro de Pasco","Santiago","San Miguel","Cusco","Arequipa","Iquitos","Callao","San Isidro","Chimbote","Machu Picchu","Juliaca","San Borja","Tarapoto","Ica","Huancayo","Puno","Ayacucho","Piura","Abancay","San Juan Bautista","Trujillo","Pimentel","Chiclayo","Huancavelica","Bellavista","Victoria","Chincha","Huaraz","Jose Olaya","Jesus Maria","Puerto Maldonado","Huacho","Pucallpa","Tacna","Ilo","Lambayeque","Paucarpata","Lince","La Punta","Bolivar","La Perla","Surquillo","San Martin","Lurigancho","Barranco","La Molina","Rimac","Ate","El Agustino","Santiago De Surco","Barranca","Cajamarca","Huaytara","Huaral","Jaen","Junin","Surco","Cuzco","Calle","Ventanilla","HuÃ¡nuco","Moquegua","Talara","Chachapoyas","San Martin","Minas de Marcona","Maldonado","Bagua","Caras","Loreto","Hacienda La Palma","Rioja","Pisco","Imperial","Tingo Maria","Tumbes","Moyobamba","Miraflores","Puerto Inca","Pasco","Sullana","Progreso","Rimac","Santa","San Isidro"
,"Belize","Belize City","Benque Viejo del Carmen","Belmopan","San Ignacio","Ladyville","Freetown Sibun","San Pedro Town"
,"Nigeria","Ikeja","Lagos","Maryland","Isolo","Yaba","Iseri-Oke","Shomolu","Ojo","Lekki","Ifako","Ayobo","Suleja","Ipaja","Aganga","Bwari","Uyo","Mushin","Port Harcourt","Aba","Forum","Ibadan","Kano","Benin City","Mowe","Apapa","Ojota","Suru-Lere","Ajuwon","Ikorodu","Bonny","Agege","Birnin Kebbi","Zaria","Warri","Calabar","Orile Oshodi","Ota","Osogbo","Ekpoma","Odau","Damaturu","Yola","Egbeda","Magodo","Ilesa","Onigbongbo","Ughelli","Kaduna","Owerri","Enugu","Ilorin","Jos","Warri","Anambra","Abraka","Abraka","Abuja","Abakaliki","Ado-Ekiti","Jalingo","Ile-Ife","Burutu","Lokoja","Ido","Minna","Obudu","Abeokuta","Oworonsoki","Alimosho","Akure","Makurdi","Funtua","Obafemi","Tara","Nsukka","Adodo","Ondo","Ungwan Madaki","Igueben","Oshodi","Igando","Agidingbi","Ikotun","Ajegunle","Chafe","Mogho","Kebbi"
,"Venezuela","Puerto La Cruz","Caracas","Ocumare","El Roque","Guachara","Santa Fe","Torre","Maracaibo","Valencia","MÃ©rida","Puerto Ordaz and San Felix","Guayana","Ciudad Guayana","San Felix","Maracay","Barcelona","Cabimas","San Jose de Guanipa","Guarenas","Mariguitar","Macuto","Ciudad BolÃ­var","Punto Fijo","Barquisimeto","San Diego","Carrizal","San Antonio de Los Altos","Los Teques","Cabudare","Acarigua","Araure","Valera","Guatire","La Guaira","Caraballeda","Catia La Mar","MaturÃ­n","Santa Cruz del Zulia","Bachaquero","Maiquetia","Valle","Naguanagua","La Cruz","Porlamar","Tucupita","Calabozo","Campo de Carabobo","Charallave","La Victoria","Santa Teresa","Gueiria","Vargas","La Villa del Rosario","Ciudad Ojeda","Turmero","Cagua","San Felipe","Trujillo","Anaco","San CristÃ³bal","El Tigre","CumanÃ¡","Miranda","San Antonio","Pampatar","El Recreo","Ciudad Piar","Chivacoa","Londres","Coro","Caripe","Bejuma","Matanzas","El Rosal","La Verdad","Monte Cristo","El Chorro","Solano","Maria","San Joaquin","La Urbina","Los Chorros","La Castellana","Curazaito","Guanare","Caja de Agua","Barinas","Bolivar","Puerto Cabello","San Francisco","Cua","Colonia Tovar","Tariba","El Vigia","Sabaneta"
,"Bahamas","Nassau","Freeport","Marsh Harbour","Spanish Wells","Andros Town","Dunmore Town","Palmetto Point"
,"Morocco","Marrakesh","Tangier","Temara","Skhirat","Casablanca","Rabat","Kenitra","Sidi Yahia az Za'er","Fes","Tarfaya","Meknes","Agadir","Khouribga","SalÃ©","TÃ©touan","Touissite","Oujda","Nador","Erfoud","Mehediyah","Khemisset","Oulad Teima","Mohammedia","El Gara","Berrechid","Safi","Benguerir","Tiznit","Sidi Slimane","Sefrou","Ifrane de l'Anti-Atlas","El Hajeb","Larache","Ksar el Kebir","M'dik","Tan-Tan","Al Hoceima","Ouazzane","Settat","Tiflet","Tahala","El Jadida","Sidi Bennour","Afourer","Beni Mellal","Fkih Ben Salah","Oued Zem","Deroua","Assa","Ait Melloul","Taza","Mansour"
,"Colombia","MedellÃ­n","BogotÃ¡","Barranquilla","Miami","Cundinamarca","Antioquia","Magdalena","Palmira","Villavicencio","Bermudez","Acevedo","Cartagena","Bucaramanga","San AndrÃ©s","Neiva","Santiago de Cali","Ibague","Buenaventura","CÃºcuta","Chocho","Valledupar","Tarapaca","Engativa","Inirida","Duitama","Fusagasuga","Envigado","Itagui","Pereira","Armenia","Manizales","Santa Rosa de Cabal","Floridablanca","Santa Marta","Riohacha","Sincelejo","Pasto","TuluÃ¡","Tunja","Yopal","Acacias","Bello","Rionegro","Popayan","Chia","Municipio de Copacabana","La Estrella","CalarcÃ¡","Barrancabermeja","San Diego","San Clemente","Piedecuesta","Tauramena","Giron","Calamar","San Martin","Urumita","Dosquebradas","Fundacion","Soacha","Turbaco","Villamaria","Soledad","Tocancipa","Tenjo","Cajica","Buga","MonterÃ­a","Villa del Rosario","Silvania","Florencia","Candelaria","Montenegro","Sogamoso","Espinal","Sabaneta","Planadas","FacatativÃ¡","Madrid","Puerto CarreÃ±o","El Colegio","Ipiales","Galapa","La Mesa","Ginebra","Yotoco","Obando","ZipaquirÃ¡","Sachica","Corozal","San Gil","Pamplona","Purificacion","Boyaca","Chiquinquira","Caldas","Ubaque","Arauca","Sabana de Torres","Los Patios","Cauca","Aguachica","Santa Rosa del Sur","Mitu","Fonseca","Velez","Pitalito","San JosÃ© del Guaviare","Sopo","Cartago","La Union","Guarne","La Ceja","Yumbo","Columbia","Atlantico","Mosquera","Cumaribo","Puerto Tejada","Cota","Puerta Roja","Risaralda"
,"Seychelles","Victoria","Takamaka"
,"Barbados","Warrens","Bridgetown","Pine Housing Estate","Atlantic Shores","Hastings","Wildey","Rendezvous","Bloomsbury","The Garden","Oistins","Rockley","Holetown","Wanstead","Warners","Bruce Vale","Bagatelle","Worthing","Cave Hill","Clapham","White Hill","Porters","Husbands","Jackmans"
,"Egypt","Cairo","New Cairo","Alexandria","Giza","Helwan","Shubra","Damietta","Suez","Madinat an Nasr","Al Mansurah","Bani Suwayf","Sohag","Tanta","Zagazig","Ramsis","Ar Rawdah","Al Mahallah al Kubra","Heliopolis","Hurghada","Az Zamalik","Rafah","Madinat as Sadis min Uktubar","Ismailia","Faraskur","Shirbin","Toukh","Banha","Port Said","Luxor","Minya","Sadat","Almazah","Assiut","Al Marj","Abu Hammad","Nasr","Flaminj","Kafr ash Shaykh","Badr"
,"Argentina","Ingeniero Beaugey","San Isidro","Buenos Aires","Paternal","CÃ³rdoba","Olivos","Florencio Varela","Pilar","Vicente Lopez","Rosario","Federal","San Luis","Puerto Madryn","GualeguaychÃº","Gualeguay","Leones","Corrientes","Mendoza","Rivadavia","Santa Fe","La Pampa","Colon","Cipolletti","Libertad","San Jorge","Trelew","Villaguay","Santiago del Estero","Tortuguitas","San Miguel","Pilar","Paso del Rey","San Telmo","Del Viso","La Plata","Quilmes","Hipolito Yrigoyen","Ituzaingo","San Juan","Villa Elisa","Santos Lugares","Los Polvorines","Jose Marmol","Temperley","Banfield","Ezeiza","Canning","Llavallol","Esteban Echeverria","Gonzalez Moreno","Pico Truncado","Casilda","San Rafael","San Andres de Giles","Luis Guillon","Burzaco","Eduardo Castex","Martinez","Bragado","Mar de Ajo","BahÃ­a Blanca","Villa Regina","Gobernador Galvez","El Talar","Fatima","Lanus","MalargÃ¼e","Alvear","Mariano Acosta","Villa Carlos Paz","Mariano Moreno","San Miguel de TucumÃ¡n","Villa Ballester","Don Torcuato","Matheu","San Miguel","General San Martin","Yerba Buena","Tafi Viejo","ZÃ¡rate","Belen de Escobar","Jose Leon Suarez","RÃ­o Cuarto","La Banda","General Juan Madariaga","San Andres","Tigre","Nordelta","Villa Urquiza","Campana","Villa de Mayo","San Lorenzo","San Fernando","General Pico","Caseros","Garin","Bell Ville","San NicolÃ¡s de los Arroyos","Salta","De Mayo","Thames","Chorroarin","San Martin","Esperanza","Posadas","Frias","Munro","Uriburu","Santa Rita","San Jose","La Rioja","Pueyrredon","Castillo","San Salvador de Jujuy","Concordia","Bariloche","Cervantes","San Fernando del Valle de Catamarca","Rocamora","Apostoles","Beccar","San Miguel","Mercedes","El Palomar","Grand Bourg","Cruz del Eje","Villa MarÃ­a","Villa Huidobro","Margarita","Viamonte","Capilla del Monte","La Para","Huanchillas","Cosquin","Villa de Maria","San Jose de la Esquina","Sacanta","Las Varillas","Ramos Mejia","Godoy Cruz","Ushuaia","Rio Grande","City Bell","Mar del Plata","Merlo","Las Heras","Rafael Calzada","Claypole","Avellaneda","Lomas de Zamora","Tristan Suarez","Remedios de Escalada","Longchamps","La Union","Dock Sud","Punta Alta","Castelar","Moron","Hurlingham","Don Bosco","Bernal","Balcarce","Moreno","Miramar","Batan","Lomas del Mirador","Villa Madero","Benavidez","San Justo","General Pacheco","Mariano J. Haedo","Palermo","Almagro","Florida","Humahuaca","Mendiolaza","Oncativo","Rio Segundo","Victoria","Rio Ceballos","Francisco Alvarez","La Boca","Berazategui","Obera","Resistencia","San Benito","Puerto IguazÃº","Santa Rosa","Ramallo","Intendente Alvear","Ingeniero Luiggi","Bernardo Larroude","Winifreda","Rancul","Capitan Bermudez","Reconquista","Tandil","Caleta Olivia","Caballito","Wilde","General Roca","Berisso","Boulogne","Belgrano","Plottier","NeuquÃ©n","Guatrache","Goya","San Salvador","Palpala","Las Rosas","Carlos Pellegrini","Rafaela","Villa Gesell","San Bernardo","Tres Arroyos","Darregueira","San Clemente","Castelli","Comodoro Rivadavia","RÃ­o Gallegos","ParanÃ¡","Laborde","JunÃ­n","El Calafate","Curuzu Cuatia","Mercedes","Minacar","Bosques","Piamonte","San Antonio de Padua","Marcos Paz","Tostado","Huinca Renanco","General Deheza","General Cabrera","Villa Alsina","Ciudadela","Tablada","Villa Luzuriaga","Chacarita","Villa Dominico","General Las Heras","Flores","Sarandi","Montserrat","Aldo Bonzi","La Tablada","Lynch","Oliva","Perito Moreno","Navarro","Tornquist","RÃ­o Turbio","El BolsÃ³n","Rawson","Vera","Coronel Martinez de Hoz","Pigue","Villa Rosa","Catriel","San Gregorio","Viedma","Presidente Derqui","Villa Nueva","Alberdi","El Hoyo","General Acha","Coy Aike","San Cayetano","San Miguel del Monte","Leandro N. Alem","General Alvear","28 de Noviembre","Abasto","OlavarrÃ­a","General Mansilla","Monte Hermoso","Brandsen","Villa Ocampo","Manuel J. Cobo","General San Martin","Salto","San Manuel","Bordenave","Suipacha","San Antonio de Obligado","Fernandez","Partido de Jose C. Paz","Gonzalez Catan","Pontevedra","Capilla del Senor","Chivilcoy","LujÃ¡n","Isidro Casanova","Laferrere","Rafael Castillo","Bella Vista","Ciudad General Belgrano","Tapiales","Ezpeleta","Platanos","Santa Lucia","Villa Mercedes","Maipu","Tunuyan","Corralitos","Lujan de Cuyo","Magdalena","Ensenada","San Antonio Oeste","Alejandro Korn","Roque Perez","Guernica","Glew","San Vicente","Navarro","Lobos","San Francisco Solano","Almirante Brown","Ranelagh","San Francisco de Santa Fe","Devoto","Pico de Salamanca","Azul","Pedro Luro","Villa Adelina","Las Talitas","Formosa","San Salvador","Villa Allende","Valle Hermoso","ConcepciÃ³n del Uruguay","Canada de Gomez","Banda del Rio Sali","Villa Bosch","Victoria","Chateaubriand","Oliveros","Despenaderos","Bandera","Chacabuco","Viale","Maquinista Savio","Necochea","Adelia Maria","Monje","Coronel Dorrego","Crespo","Ceres","Baradero","Villa Trinidad","San Guillermo","Canada del Ucle","La Leonesa","Tupungato","Palmira","Allen","Villa Insuperable","Open Door","Cinco Saltos","El Palomar","General Rodriguez","La Lucila","Villa del Parque","Turdera","Funes","Avellaneda","Canada Rosquin","Villa La Angostura","Rufino","Salguero","Rojas","Barrio Fisherton","Rosas","General Paz","Villa Media Agua","Alicia","Ranchos","Puan","Pueblo San Jose","Huanguelen","La Calera","Santa Teresita","Villa Lugano","Granadero Baigorria","Sunchales","Angelica","Bombal","Villa Amelia","Hersilia","Maria Juana","Villa Mercedes","La Paz","Alberti","Antonio Carboni","Pedernales","Belgrano","Venado Tuerto","Rio Tercero","Justiniano Posse","Roldan","Mar del Tuyu","General Viamonte","Pergamino","San Francisco","Salsipuedes","Pilar","San Pedro","Cavanagh","Pavon","La Cumbre","Azara","Chilecito","Alta Gracia","General Roca","Recoleta","La Falda","Saladillo","Trenque Lauquen","Esquel","Sierra de los Padres","Santa Clara de Saguier","Arroyito","Arroyito","El Trebol","Empalme Lobos","Nunez","Villa Maria Grande","Santa Elena","Arrecifes","Todd","Coronel Pringles","Chajari","Freyre","Tapalque","Totoras","Henderson","Carhue","Colonia San Miguel Arcangel","Choele Choel","Colon","Cutral-Co","Jauregui","Muniz","Bernasconi","Pasco","James Craik","Rafael Obligado","La Madrid","Catrilo","Caleufu","Alta Italia","Colonia Baron","Realico","Miramar","Balnearia","Centenario","Canuelas","Alvarez","Franck","Plaza Huincul","Sarmiento","Luque","Colonia Caroya","Jesus Maria","Ordonez","Fray Luis A. Beltran","Hipatia","Zenon Pereyra","Villa Giardino","Lavalle","San Isidro","San Isidro de Lules","San Martin de las Escobas","Armstrong","Eldorado","Bustinza","Vicuna Mackenna","Lima","Floresta","Rawson","General Lavalle","Gaiman","Dolores","Trevelin","Luzuriaga","Ibicuy","San Cristobal","Concepcion","San Javier","Segui","Veinticinco de Mayo","Villa Canas","Nogoya","Larroque","Veronica","Liniers","Rio Colorado","Arequito","Los Molinos","Arteaga","Canals","Godoy","Ascension","Sampacho","Constituyentes","Acevedo","Vuelta de Obligado","Albardon","Marcos Juarez","Independencia","Ibarlucea","Perez","Rodriguez Pena","Santa Lucia","Villa Constitucion","Bigand","Maipu","Manantial","San Genaro","General Villegas","Arroyo Seco","Firmat","Merlo","Acassuso","La Violeta","San Pedro","Charata","Bella Vista","Saenz Pena","Monteros","Santo Tome","Garupa","Sierra de la Ventana","General Lagos","Juan Pujol","Rio Piedras","Ayacucho","Bosch","Diaz","San Jeronimo Norte","Jeppener","Rivadavia","Tio Pujio","La Paz","Almafuerte","Tacuari","Rivadavia","Sanchez","Concepcion","Maggiolo","Villa Dolores","El Dorado","Perico","Villa Las Rosas","Embalse","Diego de Alvear","San Antonio de Arredondo","Bovril","Anatuya","Pozo del Molle","Magdalena","Las Flores","Pellegrini","San Carlos de Bolivar","Salto Grande","General Guido","Teodelina","Vedia","Las Flores","Arroyito Challaco","Villa Paranacito","Morteros","Las Perdices","Corral de Bustos","Asamblea","Albarellos","Gobernador Crespo","Villa Nueva","Camilo Aldao","Retiro","Hernando","Galvez","Brinkmann","Agua de Oro","Rada Tilly","Famailla","Villa Aberastain","Hilario Ascasubi","Manfredi","Drabble","Hilario","Piquete Cabado","Los Antiguos","Laboulaye","Sinsacate","Ucacha","General Martin Miguel de Guemes","San Nicolas","Los Cardales","Doblas","Pinamar","Villa General Belgrano","San MartÃ­n de los Andes","La Punta","Las Catitas","Florentino Ameghino","Portena","Carlos Casares","Wheelwright","Mayor Buratovich","Germania","Saladillo","Sarmiento","Carlos Tejedor","Melincue","Clorinda","PehuajÃ³","Veinticinco de Mayo","Warnes","Maria Ignacia","Villa Robles","Macachin","Laguna Alsina","Puerto Rico","Acebal","Del Campillo","Villa Angela","Ingeniero Maschwitz","San Antonio de Areco","Cramer","Calderon"
,"Brunei","Bandar Seri Begawan","Seria","Tutong","Kuala Belait","Kampong Jerudong","Kuala Balai","Panaga","Bangar"
,"Bahrain","Manama","Barbar","Al Muharraq","Madinat Hamad","Al Janabiyah","Al Markh","Al Budayyi`","Bani Jamrah","Sanad","Madinat `Isa","Al Hadd","Al Hamalah","Sitrah","Tubli","Jurdab","Oil City","Sanabis"
,"Aruba","Palm Beach","Oranjestad","Sero Blanco","Tanki Lender","Santa Cruz","Noord","Paradera","Sabaneta","San Barbola","Sint Nicolaas","Ponton"
,"Saint Lucia","Castries","Dauphin","Vieux Fort","Anse La Raye","Gros Islet","Choiseul"
,"Bangladesh","Dhaka","Tejgaon","Chittagong","Agrabad","Bangla","Delta","Barisal","Kabi","Comilla","Hossain","Kazipur","Rajshahi","Bazar","Mymensingh","Narayanganj","Jessore","Uttara"
,"Tokelau","Atafu Village"
,"Cambodia","Phnom Penh","Phumi Preah Haoh","Phumi Siem Reab","Phumi Vott Phnum","Sihanoukville","Phumi Boeng (1)","Tuol Kok","Phumi Thnal","Moung Roessei","Phumi Prek Mrinh","Vott Kampong Svay","Phumi Thmei","Phumi Prei","Phumi Chhuk"
,"Macao","Macao","Taipa"
,"Maldives","MalÃ©","Naifaru"
,"Afghanistan","Kabul","Wazir Akbar Khan","Kandahar","Sharif","Shar","Molah","Rana","Herat"
,"New Caledonia","Nouville","Noumea","Mont-Dore","Dumbea","Paita"
,"Fiji","Suva","Lautoka","Nadi","Tamavua Heights"
,"Wallis and Futuna","Vailala","Mata-Utu"
,"Albania","Tirana","Pogradec","Petran","Ura Vajgurore","Shkoder","Elbasan","DurrÃ«s","VlorÃ«"
,"Uzbekistan","Tashkent","Termez","Samarkand","Turon"
,"Montenegro","Podgorica","Pljevlja","Igalo","Kotor","Crna Gora","Budva","Stari Bar","Herceg Novi","Ulcinj","BeÄiÄ‡i","Niksic"
,"North Korea","Pyongyang"
,"Vatican City"
,"Antarctica","Antarctica"
,"Bermuda","Hamilton","Saint George","Somerset"
,"CuraÃ§ao","Willemstad","Vredeberg","Emmastad"
,"Ecuador","Quito","Pichincha","Guayas","Guayaquil","Ibarra","Riobamba","Ambato","Otavalo","Guamote","Tababela","Guayllabamba","Cayambe","Tena","Tarapoa","Latacunga","Santo Domingo de los Colorados","Cuenca","Esmeraldas","Paccha","Zaruma","El Carmen","La Libertad","Huaquillas","Olmedo","DurÃ¡n","Florida","Machala","Loja","Manta","Nabon","Pelileo","Gualaceo","Macas","Samborondon","Puyo","Zumba","Portoviejo","General Leonidas Plaza Gutierrez","Calderon","Sucre","Jipijapa","Macara","Santa Elena","La Esperanza","Machachi","Atacames","La Troncal","San Rafael","Guabo","Santa Cruz","Milagro","TulcÃ¡n","Atuntaqui","Daule","Pasaje","Playas","San Miguel","Puerto Francisco de Orellana","Loreto","Montecristi","Hacienda Santa Catalina","Zamora","Vinces","Quevedo","Hacienda Duran","Bahia de Caraquez","Salinas","Hacienda Ibarra","Hacienda Bolivia","El Naranjal","Banos"
,"South Africa","Johannesburg","Sandton","Midrand","Pretoria","Malmesbury","Kempton Park","Despatch","Durban","Port Elizabeth","Meyerton","Bloemfontein","Delmas","Benoni","Centurion","Newcastle","Cape Town","Stellenbosch","Mthatha","Gansbaai","Bellville","Paarl","Panorama","George","Wellington","Winterton","Strand","East London","Somerset West","Hartenbos","Sun Valley","Kraaifontein","Port Alfred","Sedgefield","London","Pietermaritzburg","Margate","Kloof","Greytown","Krugersdorp","Westonaria","Pongola","Boksburg","Scottburgh","Port Shepstone","Germiston","Lephalale","Groblersdal","Randburg","Roodepoort","Kimberley","Edenvale","Carletonville","Brits","Rivonia","Springs","Heidelberg","Vanderbijlpark","Randfontein","Vereeniging","Sasolburg","Brakpan","Isando","Florida Glen","Alberton","Olifantsfontein","Walkerville","Franschhoek","Rustenburg","Lombardy East","Sebokeng","Morningside Manor","Bethal","Amanzimtoti","Lyttelton","Witbank","Sinoville","Nigel","Hartbeespoort","Tokai","Fochville","Witpoortjie","Polokwane","Klerksdorp","Nelspruit","Pinelands","Uitenhage","Hermanus","Kleinmond","Mooi River","Mookgophong","Louis Trichardt","Upington","Dube Location","Saint James","Walmer Heights","Kingsley","Durbanville","Pinetown","Middelburg","Vrededorp","Brackenfell","Ermelo","Kranskop","Richards Bay","Oranjezicht","Elarduspark","Bronkhorstspruit","Soshanguve","Tongaat","Katlehong","Cullinan","Bedfordview","Weltevreedenpark","Modderfontein","Ogies","Hekpoort","Potchefstroom","Hoedspruit","Kingsmead","Himeville","Vryheid","Emnambithi-Ladysmith","Bethlehem","Hluhluwe","Kroonstad","Philipstown","Oudtshoorn","Rawsonville","Pringle Bay","Villiersdorp","Rooigrond","Stilfontein","Hartswater","Bryanston","Eloff","Coega","Waverley","Beaufort West","White River","Secunda","Duiwelskloof","Newlands","Alrode","Umdloti","Lynnwood","Tembisa","Northcliff","Hilton","Hout Bay","Queensburgh","Botshabelo","Salt Rock","Warner Beach","Stanford","KwaDukuza","Worcester","Shelly Beach","Melkbosstrand","Rosettenville","Umhlanga","Welkom","De Aar","Knysna","Ixopo","Lyndhurst","Riebeek-Kasteel","Lutzville","Mafikeng","Richmond","Virginia","Odendaalsrus","Bredasdorp","Plettenberg Bay","New Germany","Ottosdal","Ladybrand","Constantia","Hazyview","Lichtenburg","Maidstone","Hillcrest","Montagu","Howick","Dullstroom","Phalaborwa","Welkom","Senekal","Verulam","Standerton","Umkomaas","Eshowe","Tzaneen","Onverwacht","Kriel","Napier","Meadowridge","Empangeni","Humansdorp","Soweto","Phoenix","Atlantis","Mossel Bay","Welgemoed","City of Cape Town","Buffalo","Merrivale","Vredenburg","Evander","Umtentweni","Vaalpark","Three Rivers","Hawston","Parow","Houghton Estate","Muizenberg","Gordon's Bay","Claremont","Hennenman","Kuils River","Overport","Milnerton","Deneysville","Kinross","Lydenburg","Temba","Prieska","Henley on Klip","Coligny","Wartburg","Zeerust","Thabazimbi","Harrismith","King William's Town","Kingsborough","Bergvliet","Westville","Mmabatho","Goodwood","La Lucia","Wilderness","Phokeng","Haenertsburg","Balfour","Grabouw","Graaff Reinet","Mount Edgecombe","Rhodes","Grahamstown","La Motte","Saldanha","Parkview","Rooihuiskraal","Wynberg","Middelburg","Rosslyn","Silverton","Roggebaai","Ganspan","Ashton","Erasmia","Dundee","Belhar","Marshalltown","Braamfontein","Hogsback","Alice","Elsenburg","Onderstepoort","Monument Park","Emerald Hill","Elandsfontein","Maraisburg","Fort Cox","Butterworth","Thohoyandou","Medunsa","Schweizer-Reneke","Moorreesburg","Queenstown","Peninsula","Faure","Doornfontein","Waverley","Mobeni","Hatfield","Capital Park","Parktown","Sandown","Bathurst","Vosloorus","Bothasig","The Rest","Majuba","Queenswood","Mokopane","Hyde Park","Kalkbaai","Craighall","Clanwilliam","Brooklyn","Wonderboom","Irene","Kokstad","Welgelegen","Philadelphia","Primrose","Plumstead","Lansdowne","Edenburg","Gingindlovu","Malvern","Elsburg","Fordsburg","Three Anchor Bay","Saint Helena Bay","Gillitts","Messina","Weltevreden","Vaalbank","Machadodorp","Eersterivier","Sabie","Laudium","Gezina","Glen Austin","Umbogintwini","Oranjeville","Carolina","Swartkops","Rosebank"
,"Saint Kitts and Nevis","Charlestown","Basseterre","Sandy Point Town"
,"Samoa","Apia","Safotulafai"
,"Bolivia","La Paz","Santa Cruz","Sucre","Cochabamba","Santa Cruz","PotosÃ­","Oruro","Guayaramerin","Tarija","Riberalta","Trinidad","Bermejo","Cruz","Caracasa","Cobija","Aroma","Cotoca","Anillo"
,"Guernsey","St Peter Port","Torteval","St. Saviour"
,"Malta","Mellieha","Hamrun","Siggiewi","Saint John","Zurrieq","Paola","Tarxien","Fgura","Marsa","Kirkop","BirÅ¼ebbuÄ¡a","Gharb","Mosta","Munxar","Rabat","Attard","Xaghra","Naxxar","Lija","Imsida","Birkirkara","Zejtun","Safi","Zabbar","Haz-Zebbug","Victoria","Sannat","Valletta","Cospicua","San Pawl il-Bahar","Sliema","Qormi","Mdina","Marsaxlokk","Floriana","Luqa","Marsaskala","PietÃ ","Fontana","Il-Pergla","Saint Venera","Pembroke","Mqabba","Marsalforn","Gzira","St. Julian's","Imtarfa","Ghasri","Hal Gharghur","Saint Lucia","Il-Madliena","Senglea","Bingemma","Dingli","L-Iklin","Gudja","Saint Lawrence","Ghajnsielem","Xewkija","Bugibba","Nadur","Balzan","Birgu","Qrendi","Ghaxaq","L-Iskorvit","Manikata","Iz-Zebbiegh","Ta' Xbiex","Swieqi"
,"Tajikistan","Dushanbe","Khorugh"
,"Zimbabwe","Harare","Greendale","Bulawayo","Mutare","Chinhoyi","Kwekwe","Victoria Falls","Gwanda","Mufakose"
,"Liberia","Monrovia","Fish Town","Paynesville"
,"Ghana","Tema","Accra","Koforidua","Sunyani","Bolgatanga","Winneba","Home","Navrongo","Legon","Wa","Kumasi","Takoradi","Mampong","Cape Coast","Bawku","Berekum"
,"Tanzania","Dar es Salaam","Arusha","Mwanza","Zanzibar","Dodoma","Morogoro","Tanga","Raha","Bukoba","Njombe"
,"Zambia","Lusaka","Mumbwa","Kitwe","Ndola","Macha","Kalomo","Solwezi","Siavonga","Livingstone"
,"Madagascar","Toamasina","Antananarivo","Antsirabe","Ambanja","Toliara","Fianarantsoa","Antsiranana"
,"Angola","Kuito","UÃ­ge","Luanda","Benguela","Lobito","Cabinda","Malanje","Piri","Namibe","Camabatela","Lucapa","N'dalatando","Menongue","Talatona","Ondjiva","Cazeta","Cacole","Saurimo","Ambriz","Muxaluando","Lumeje","Huambo","Lubango"
,"Namibia","Windhoek","Katima Mulilo","Olympia","Outapi","Otjiwarongo","Swakopmund","Walvis Bay","Oshakati","Ondangwa","Ongwediva","Tsumeb","Grootfontein","Keetmanshoop","Oranjemund","Mpapuka","Etunda"
,"Ivory Coast","Abidjan"
,"Sudan","Kassala","Khartoum","Nyala","Shendi","Thabit","Umm Durman"
,"Uganda","Kampala"
,"Cameroon","Douala","YaoundÃ©","Bafoussam","Ringo","Bamenda","NgaoundÃ©rÃ©","Tibati","Kumba","Buea","Bafia","Kribi"
,"Malawi","Made","Mzuzu","Blantyre","Lilongwe"
,"Gabon","Libreville","Moanda","Mamagnia","LambarÃ©nÃ©","Gamba","Port-Gentil"
,"Mali","Bamako"
,"Benin","Cotonou","Abomey-Calavi"
,"Chad","Massaguet","AbÃ©chÃ©","N'Djamena","Moundou"
,"Botswana","Francistown","Gaborone","Orapa","Serowe","Village"
,"Cape Verde","Praia"
,"Rwanda","Kigali","Nyarugunga"
,"Republic of the Congo","Brazzaville","Pointe Noire"
,"Mozambique","Maputo","Mozambique","Matola","Nampula","Quelimane","Beira","Pemba","Tete"
,"Gambia","Banjul"
,"Lesotho","Maseru","Roma"
,"Mauritius","Port Louis","Beau Bassin","Quatre Bornes","Goodlands","Tamarin","Rose Hill","Floreal","Port Mathurin","Chemin Grenier","Ebene CyberCity","Le Reduit","Vacoas","Saint Jean"
,"Algeria","Algiers","Souk Ahras","Annaba","Batna City","SÃ©tif","BÃ©jaÃ¯a","Bordj Bou Arreridj","Bordj","Tiaret","Oran","Saida","Tlemcen","Oued Smar","Tizi","Tizi Ouzou","Azazga","Blida","Rouiba","Hussein Dey","Draria","Tissemsilt","El Tarf","Constantine","Illizi","Laghouat","Kouba","Jijel","GhardaÃ¯a","Bougara","Chlef","Cheraga","Ouargla","Relizane","Djelfa","BÃ©char","Tamanghasset"
,"Guinea","Conakry","ForÃ©cariah","NzÃ©rÃ©korÃ©","LabÃ©","Kankan","Port Kamsar","BokÃ©","Mamou","Dabola","Lola","Sangaredi","Kalia"
,"Congo","Kinshasa","Lubumbashi","Goma","Banana","Likasi"
,"Swaziland","Mbabane","Piggs Peak","Lobamba","Kwaluseni","Manzini"
,"Burkina Faso","Ouagadougou","Bobo-Dioulasso","Tenkodogo"
,"Sierra Leone","Freetown"
,"Somalia","Hargeysa","Mogadishu"
,"Niger","Niamey"
,"Central African Republic","Bangui"
,"Togo","LomÃ©","Sansanne-Mango"
,"Burundi","Bujumbura"
,"Equatorial Guinea","Malabo"
,"South Sudan","Juba"
,"Senegal","Sama","Dakar","Guediawaye","Louga","Kaolack","Dodji","Boussinki","Tanaf","Saint-Louis","Camberene","Kedougou","Madina Kokoun"
,"Mauritania","Nouakchott"
,"Djibouti","Djibouti"
,"Comoros","Moutsamoudou","Moroni"
,"Tunisia","Tunis","Le Bardo","Sousse","Gafsa","Monastir","Hammamet","Sidi Bouzid","Manouba","Beja","Rades","Ariana","Sfax"
,"Mayotte","Koungou","Mamoudzou","Tsoundzou 1","Pamandzi","Sada","Chiconi","Ouangani","Tsingoni","Bandaboa","Dzoumonye","Combani","Dzaoudzi"
,"Bhutan","Thimphu","Paro","Phuntsholing","Mongar"
,"Greenland","Nuussuaq","Kapisillit","Nuuk","Maniitsoq","Qeqertarsuaq","Qaqortoq","Ilulissat","Uummannaq Kommune","Qasigiannguit","Paamiut","Narsaq","Upernavik","Tasiilaq","Sisimiut","Aasiaat","Qeqertat","Narsarsuaq"
,"Kosovo","Pristina","Ferizaj","Mitrovica","Dunavo","Prizren"
,"Cayman Islands","Coral Gables","George Town","West Bay","Savannah","Spot Bay","Bodden Town","Newlands"
,"Jamaica","Runaway Bay","Kingston","Spanish Town","Montego Bay","Portmore","Gregory Park","Gordon Town","Mandeville","May Pen","Ocho Rios","Portland Cottage","Old Harbour","Negril","Port Maria","Browns Town","Moneague","Black River"
,"Guatemala","Huehuetenango","Guatemala City","Vista Hermosa","El Salvador","Catarina","AmatitlÃ¡n","Mixco","Melchor de Mencos","Chimaltenango","San Pedro Sacatepequez","Antigua Guatemala","Santa Catarina Pinula","Quetzaltenango","Quesada","Santa Cruz Naranjo","Villa Nueva","Zacapa","Ciudad Vieja","Petapa","San Antonio Miramar","Palin","La Reforma","Coban","Mazatenango","Santa Lucia Cotzumalguapa","Retalhuleu","Escuintla","San Marcos","La Reforma","San Juan","Panajachel","Jocotenango","Santa Cruz La Laguna","Esquipulas","Solola","TotonicapÃ¡n","Chiquimula","Puerto Barrios","Central","Flores","Santa Rosa","San Jose Pinula","El Naranjo","El Limon","Cambote"
,"Marshall Islands","Majuro"
,"Monaco","Monaco","Monte Carlo"
,"Anguilla","The Valley","George Hill"
,"Grenada","Sauteurs","St. George's","Gouyave"
,"Paraguay","Coronel Oviedo","Yataity","AsunciÃ³n","Boqueron","San Juan Bautista","Ayolas","Fernando de la Mora","Nemby","Santa Rosa","LambarÃ©","Hernandarias","Ciudad del Este","Salto del Guaira","San Alberto","San Lorenzo","Luque","CapiatÃ¡","Villarrica","Villa Elisa","Villa Hayes","Colonia Mariano Roque Alonso","EncarnaciÃ³n","Chore","La Paz","Fuerte Olimpo","Santa Rita","Presidente Franco","Loma Plata","Limpio","Hohenau","Independencia"
,"Montserrat","Davy Hill","Salem"
,"Turks and Caicos Islands","Cockburn Harbour","Over Back The Damp","Balfour Town"
,"Antigua and Barbuda","St. John's","Old Road","All Saints","Woods","Cassada Gardens","Codrington","Parham"
,"Tuvalu","Funafuti"
,"French Polynesia","Papeete","Mahina","Faaa","Pirae","Punaauia","Arue","Paeau"
,"Solomon Islands","Honiara"
,"Vanuatu","Port Vila","Level","Loltong"
,"Suriname","Friendship","Paramaribo","Onverwacht","Totness","Nieuw Amsterdam","Moengo","Botopasi","Groningen","Brownsweg"
,"Cook Islands","Avarua","Titikaveka"
,"Kiribati","Umwa Village"
,"Niue","Alofi"
,"Tonga","Neiafu","Kanokupolu"
,"French Southern Territories","Port-aux-Francais"
,"Norfolk Island","Kingston"
,"Turkmenistan","Darganata","Ashgabat"
,"Pitcairn Islands","Adamstown"
,"San Marino","Falciano","Fiorentino","San Marino","Serravalle","Acquaviva"
,"Ã…land","Mariehamn","EckerÃ¶","Lemland","OEdkarby","Godby","Gottby","Jurmo","Saltvik","Hammarland"
,"Faroe Islands","Strendur","TÃ³rshavn","Leirvik","Saltangara","HoyvÃ­k","Argir","Hvalba","KlaksvÃ­k","Innan Glyvur","Signabour","Glyvrar"
,"Svalbard and Jan Mayen","Longyearbyen"
,"Cocos Keeling"
,"Islands","West Island"
,"Nauru","Anabar"
,"South Georgia and the South Sandwich Islands","Grytviken"
,"U.S. Minor Outlying Islands"
,"Sint Maarten","Philipsburg"
,"Guinea-Bissau","Cacheu","Bissau"
,"Saint Martin","Marigot","Anse Marcel"
,"Saint Vincent and the Grenadines","Kingstown","Georgetown","Union"
,"Saint Pierre and Miquelon"
,"Saint-BarthÃ©lemy","Grand Cul-de-Sac","Gustavia"
,"Dominica","Berekua","Roseau","Marigot"
,"SÃ£o TomÃ© and PrÃ­ncipe","Neves","SÃ£o TomÃ©"
,"Falkland Islands","Stanley"
,"Northern Mariana Islands","Saipan"
,"East Timor","Dili"
,"Bonaire","Kralendijk","Dorp Nikiboko"
,"American Samoa","American Samoa","Pago Pago"
,"Federated States of Micronesia","Yap"
,"Palau"
,"Guyana","Georgetown","New Amsterdam","Linden"
,"Honduras","Tegucigalpa","San Pedro Sula","Morazan","La Ceiba","Santa Barbara","CopÃ¡n","Coxen Hole","El Progreso","San Antonio de Flores","Piraera","La Hacienda","Comayaguela","Choloma","Comayagua","Nacaome","Pinalejo","Puerto Lempira","Sula","El Barro","El Paraiso"
,"Nicaragua","Managua","LeÃ³n","Los Arados","Rivas","Ocotal","San Juan del Sur","Granada","Bluefields","Chinandega","Esteli","Masaya","Matagalpa","Jinotega","El Panama"
,"El Salvador","San Salvador","San Miguel","La Libertad","Ilopango","Antiguo Cuscatlan","Soyapango","Santa Tecla","Botoncillal El Botoncillo","Mejicanos","Nuevo Cuscatlan","San Jose Villanueva","Zaragoza","Santa Ana","Gigante","Colonia Escalon","Santiago Texacuangos","Ayutuxtepeque","Apopa","Coatepeque","San Marcos","Usulutan","Ozatlan","Delgado","Guazapa","Apaneca","Ahuachapan","Sonsonate","Lourdes","Colon","Cuscatancingo"
,"Andorra","Andorra la Vella","Sant JuliÃ  de LÃ²ria","Escaldes-Engordany","Engordany","Encamp","Ordino","La Massana","Santa Coloma","Canillo","Llorts","Soldeu","Sispony"
,"Myanmar","Burma"
,"Hlaing","Yangon","Kyauktada","Inya","Mandalay","Wagan"
,"Sri Lanka","Colombo","Katubedda","Kandy","Pannipitiya","Makola South","Wattala","Maharagama","Wellampitiya","Kaduwela","Battaramulla South","Nugegoda","Sri Jayewardenepura Kotte","Homagama","Dehiwala","Orugodawatta","Kohuwala","Piliyandala","Dehiwala-Mount Lavinia","Ragama","Negombo","Boralesgamuwa South","Moratuwa","Badulla","Padukka","Kandana","Hekitta","Rajagiriya","Gampaha","Nattandiya Town","Matale","Peradeniya","Eppawala","Talapathpitiya","Katunayaka","Kelaniya","Gangodawila North","Biyagama"
,"Haiti","Port-au-Prince","Cap-HaÃ¯tien","Delmar","Carrefour","Petionville","Moise","Jacmel","Masseau","Prince","Turgeau","Duverger"
,"Trinidad and Tobago","Arima","San Fernando","Princes Town","Piarco","Rio Claro","Port of Spain","Victoria","Maraval","Fyzabad","Debe","Couva","Diego Martin","Chaguanas","Penal","Cunupia","Curepe","Roxborough","San Juan","Arouca","Saint Joseph","California","Marabella","Siparia","Gasparillo","Morvant","Barataria","Saint Clair","Laventille","Carenage","Ward of Tacarigua","Caroni","Lopinot","Tunapuna","Santa Cruz","Saint Augustine","Golden Lane","Scarborough","Moriah","Saint James","Carapichaima","Valsayn","Freeport","Claxton Bay","Sangre Grande","Cumuto","Woodbrook","Petit Valley","El Dorado","Phoenix Park"
,"Laos","Vientiane"
,"Uruguay","Montevideo","La Floresta","Barra de Carrasco","PaysandÃº","Salto","Las Piedras","TacuarembÃ³","Toledo","Colonia del Sacramento","Mercedes","Union","Florida","Maldonado","Canelones","La Paz","San Carlos","Durazno","Punta del Este"
,"Eritrea","Asmara"
,"Cuba","Havana","Habana","La Habana","Matanzas","Villa","Bayamo","Cienfuegos","Santiago de Cuba","HolguÃ­n","Ciego de Ãvila","Pinar del RÃ­o","Sancti SpÃ­ritus","CamagÃ¼ey","Las Tunas","GuantÃ¡namo","Varadero"
,"Saint Helena","Tristan Da Cunha","Jamestown"
,"Christmas Island","Flying Fish Cove"
,"Ethiopia","Addis Ababa","Awasa","Jijiga"
,"British Indian Ocean Territory"]

module.exports = data


},{}],4:[function(require,module,exports){
(function (process){
'use strict'
var r = process.env.API_WEATHER_KEY
console.log('other key in env.sh '+r) 
var config = {
  
  aws: {
    
    accessKey: process.env.API_WEATHER_KEY || "76cd7ff9f4b72ba8655a21ddc5a1a2bd",
    accessKeyTime: process.env.API_TIME_KEY || "G8CRY6MRJHJQ"
    //"76cd7ff9f4b72ba8655a21ddc5a1a2bd"

  }


}

 // console.log('adasd '+JSON.stringify(process))
module.exports = config
}).call(this,require('_process'))
},{"_process":27}],5:[function(require,module,exports){

var el = document.createElement("p");

el.innerHTML ='<footer class="bd-footer text-muted">'+
              '<div class="container">'+
                 '<ul class="bd-footer-links">'+
                   '<li><a style="margin-right: 8px" href="https://github.com/JulianDa/weathertoday">GitHub</a></li>'+
                   '<li><a style="margin-right: 8px" href="">Facebook</a></li>'+
                   '<li><a style="margin-right: 8px" href="/examples/">Examples</a></li>'+
                   '<li><a style="margin-right: 8px" href="/about/history/">About</a></li>'+
                 '</ul>'+
                 '<p>Designed and built with all the love in the world by <a href="juliansytem@gmail.com" target="_blank">juliansytem@gmail.com</a>. with the help of <a href="https://github.com/twbs/bootstrap/graphs/contributors">our contributors</a>.</p>'+
                 '<p>Currently v4.0.0-alpha.6. Code licensed <a rel="license" href="https://github.com/twbs/bootstrap/blob/master/LICENSE" target="_blank">MIT</a>, © 2017 Framework <a rel="license" href="https://creativecommons.org/licenses/by/3.0/" target="_blank">CC BY 3.0</a>.</p>'+
              '</div>'+
              '</footer>'



// $(function(){

//    $('.lang').on('click', function(event){

         
//          var lang = $(this).attr('id') 
//          console.log('sdfsd '+lang)
//          localStorage.locale = lang;
//          location.reload();
       
//    })


// })



document.body.appendChild(el);
},{}],6:[function(require,module,exports){

},{}],7:[function(require,module,exports){
'use strict';

exports = module.exports = require('./lib/parser')['default'];
exports['default'] = exports;

},{"./lib/parser":8}],8:[function(require,module,exports){
"use strict";

exports["default"] = (function() {
  /*
   * Generated by PEG.js 0.8.0.
   *
   * http://pegjs.majda.cz/
   */

  function peg$subclass(child, parent) {
    function ctor() { this.constructor = child; }
    ctor.prototype = parent.prototype;
    child.prototype = new ctor();
  }

  function SyntaxError(message, expected, found, offset, line, column) {
    this.message  = message;
    this.expected = expected;
    this.found    = found;
    this.offset   = offset;
    this.line     = line;
    this.column   = column;

    this.name     = "SyntaxError";
  }

  peg$subclass(SyntaxError, Error);

  function parse(input) {
    var options = arguments.length > 1 ? arguments[1] : {},

        peg$FAILED = {},

        peg$startRuleFunctions = { start: peg$parsestart },
        peg$startRuleFunction  = peg$parsestart,

        peg$c0 = [],
        peg$c1 = function(elements) {
                return {
                    type    : 'messageFormatPattern',
                    elements: elements
                };
            },
        peg$c2 = peg$FAILED,
        peg$c3 = function(text) {
                var string = '',
                    i, j, outerLen, inner, innerLen;

                for (i = 0, outerLen = text.length; i < outerLen; i += 1) {
                    inner = text[i];

                    for (j = 0, innerLen = inner.length; j < innerLen; j += 1) {
                        string += inner[j];
                    }
                }

                return string;
            },
        peg$c4 = function(messageText) {
                return {
                    type : 'messageTextElement',
                    value: messageText
                };
            },
        peg$c5 = /^[^ \t\n\r,.+={}#]/,
        peg$c6 = { type: "class", value: "[^ \\t\\n\\r,.+={}#]", description: "[^ \\t\\n\\r,.+={}#]" },
        peg$c7 = "{",
        peg$c8 = { type: "literal", value: "{", description: "\"{\"" },
        peg$c9 = null,
        peg$c10 = ",",
        peg$c11 = { type: "literal", value: ",", description: "\",\"" },
        peg$c12 = "}",
        peg$c13 = { type: "literal", value: "}", description: "\"}\"" },
        peg$c14 = function(id, format) {
                return {
                    type  : 'argumentElement',
                    id    : id,
                    format: format && format[2]
                };
            },
        peg$c15 = "number",
        peg$c16 = { type: "literal", value: "number", description: "\"number\"" },
        peg$c17 = "date",
        peg$c18 = { type: "literal", value: "date", description: "\"date\"" },
        peg$c19 = "time",
        peg$c20 = { type: "literal", value: "time", description: "\"time\"" },
        peg$c21 = function(type, style) {
                return {
                    type : type + 'Format',
                    style: style && style[2]
                };
            },
        peg$c22 = "plural",
        peg$c23 = { type: "literal", value: "plural", description: "\"plural\"" },
        peg$c24 = function(pluralStyle) {
                return {
                    type   : pluralStyle.type,
                    ordinal: false,
                    offset : pluralStyle.offset || 0,
                    options: pluralStyle.options
                };
            },
        peg$c25 = "selectordinal",
        peg$c26 = { type: "literal", value: "selectordinal", description: "\"selectordinal\"" },
        peg$c27 = function(pluralStyle) {
                return {
                    type   : pluralStyle.type,
                    ordinal: true,
                    offset : pluralStyle.offset || 0,
                    options: pluralStyle.options
                }
            },
        peg$c28 = "select",
        peg$c29 = { type: "literal", value: "select", description: "\"select\"" },
        peg$c30 = function(options) {
                return {
                    type   : 'selectFormat',
                    options: options
                };
            },
        peg$c31 = "=",
        peg$c32 = { type: "literal", value: "=", description: "\"=\"" },
        peg$c33 = function(selector, pattern) {
                return {
                    type    : 'optionalFormatPattern',
                    selector: selector,
                    value   : pattern
                };
            },
        peg$c34 = "offset:",
        peg$c35 = { type: "literal", value: "offset:", description: "\"offset:\"" },
        peg$c36 = function(number) {
                return number;
            },
        peg$c37 = function(offset, options) {
                return {
                    type   : 'pluralFormat',
                    offset : offset,
                    options: options
                };
            },
        peg$c38 = { type: "other", description: "whitespace" },
        peg$c39 = /^[ \t\n\r]/,
        peg$c40 = { type: "class", value: "[ \\t\\n\\r]", description: "[ \\t\\n\\r]" },
        peg$c41 = { type: "other", description: "optionalWhitespace" },
        peg$c42 = /^[0-9]/,
        peg$c43 = { type: "class", value: "[0-9]", description: "[0-9]" },
        peg$c44 = /^[0-9a-f]/i,
        peg$c45 = { type: "class", value: "[0-9a-f]i", description: "[0-9a-f]i" },
        peg$c46 = "0",
        peg$c47 = { type: "literal", value: "0", description: "\"0\"" },
        peg$c48 = /^[1-9]/,
        peg$c49 = { type: "class", value: "[1-9]", description: "[1-9]" },
        peg$c50 = function(digits) {
            return parseInt(digits, 10);
        },
        peg$c51 = /^[^{}\\\0-\x1F \t\n\r]/,
        peg$c52 = { type: "class", value: "[^{}\\\\\\0-\\x1F \\t\\n\\r]", description: "[^{}\\\\\\0-\\x1F \\t\\n\\r]" },
        peg$c53 = "\\\\",
        peg$c54 = { type: "literal", value: "\\\\", description: "\"\\\\\\\\\"" },
        peg$c55 = function() { return '\\'; },
        peg$c56 = "\\#",
        peg$c57 = { type: "literal", value: "\\#", description: "\"\\\\#\"" },
        peg$c58 = function() { return '\\#'; },
        peg$c59 = "\\{",
        peg$c60 = { type: "literal", value: "\\{", description: "\"\\\\{\"" },
        peg$c61 = function() { return '\u007B'; },
        peg$c62 = "\\}",
        peg$c63 = { type: "literal", value: "\\}", description: "\"\\\\}\"" },
        peg$c64 = function() { return '\u007D'; },
        peg$c65 = "\\u",
        peg$c66 = { type: "literal", value: "\\u", description: "\"\\\\u\"" },
        peg$c67 = function(digits) {
                return String.fromCharCode(parseInt(digits, 16));
            },
        peg$c68 = function(chars) { return chars.join(''); },

        peg$currPos          = 0,
        peg$reportedPos      = 0,
        peg$cachedPos        = 0,
        peg$cachedPosDetails = { line: 1, column: 1, seenCR: false },
        peg$maxFailPos       = 0,
        peg$maxFailExpected  = [],
        peg$silentFails      = 0,

        peg$result;

    if ("startRule" in options) {
      if (!(options.startRule in peg$startRuleFunctions)) {
        throw new Error("Can't start parsing from rule \"" + options.startRule + "\".");
      }

      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];
    }

    function text() {
      return input.substring(peg$reportedPos, peg$currPos);
    }

    function offset() {
      return peg$reportedPos;
    }

    function line() {
      return peg$computePosDetails(peg$reportedPos).line;
    }

    function column() {
      return peg$computePosDetails(peg$reportedPos).column;
    }

    function expected(description) {
      throw peg$buildException(
        null,
        [{ type: "other", description: description }],
        peg$reportedPos
      );
    }

    function error(message) {
      throw peg$buildException(message, null, peg$reportedPos);
    }

    function peg$computePosDetails(pos) {
      function advance(details, startPos, endPos) {
        var p, ch;

        for (p = startPos; p < endPos; p++) {
          ch = input.charAt(p);
          if (ch === "\n") {
            if (!details.seenCR) { details.line++; }
            details.column = 1;
            details.seenCR = false;
          } else if (ch === "\r" || ch === "\u2028" || ch === "\u2029") {
            details.line++;
            details.column = 1;
            details.seenCR = true;
          } else {
            details.column++;
            details.seenCR = false;
          }
        }
      }

      if (peg$cachedPos !== pos) {
        if (peg$cachedPos > pos) {
          peg$cachedPos = 0;
          peg$cachedPosDetails = { line: 1, column: 1, seenCR: false };
        }
        advance(peg$cachedPosDetails, peg$cachedPos, pos);
        peg$cachedPos = pos;
      }

      return peg$cachedPosDetails;
    }

    function peg$fail(expected) {
      if (peg$currPos < peg$maxFailPos) { return; }

      if (peg$currPos > peg$maxFailPos) {
        peg$maxFailPos = peg$currPos;
        peg$maxFailExpected = [];
      }

      peg$maxFailExpected.push(expected);
    }

    function peg$buildException(message, expected, pos) {
      function cleanupExpected(expected) {
        var i = 1;

        expected.sort(function(a, b) {
          if (a.description < b.description) {
            return -1;
          } else if (a.description > b.description) {
            return 1;
          } else {
            return 0;
          }
        });

        while (i < expected.length) {
          if (expected[i - 1] === expected[i]) {
            expected.splice(i, 1);
          } else {
            i++;
          }
        }
      }

      function buildMessage(expected, found) {
        function stringEscape(s) {
          function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }

          return s
            .replace(/\\/g,   '\\\\')
            .replace(/"/g,    '\\"')
            .replace(/\x08/g, '\\b')
            .replace(/\t/g,   '\\t')
            .replace(/\n/g,   '\\n')
            .replace(/\f/g,   '\\f')
            .replace(/\r/g,   '\\r')
            .replace(/[\x00-\x07\x0B\x0E\x0F]/g, function(ch) { return '\\x0' + hex(ch); })
            .replace(/[\x10-\x1F\x80-\xFF]/g,    function(ch) { return '\\x'  + hex(ch); })
            .replace(/[\u0180-\u0FFF]/g,         function(ch) { return '\\u0' + hex(ch); })
            .replace(/[\u1080-\uFFFF]/g,         function(ch) { return '\\u'  + hex(ch); });
        }

        var expectedDescs = new Array(expected.length),
            expectedDesc, foundDesc, i;

        for (i = 0; i < expected.length; i++) {
          expectedDescs[i] = expected[i].description;
        }

        expectedDesc = expected.length > 1
          ? expectedDescs.slice(0, -1).join(", ")
              + " or "
              + expectedDescs[expected.length - 1]
          : expectedDescs[0];

        foundDesc = found ? "\"" + stringEscape(found) + "\"" : "end of input";

        return "Expected " + expectedDesc + " but " + foundDesc + " found.";
      }

      var posDetails = peg$computePosDetails(pos),
          found      = pos < input.length ? input.charAt(pos) : null;

      if (expected !== null) {
        cleanupExpected(expected);
      }

      return new SyntaxError(
        message !== null ? message : buildMessage(expected, found),
        expected,
        found,
        pos,
        posDetails.line,
        posDetails.column
      );
    }

    function peg$parsestart() {
      var s0;

      s0 = peg$parsemessageFormatPattern();

      return s0;
    }

    function peg$parsemessageFormatPattern() {
      var s0, s1, s2;

      s0 = peg$currPos;
      s1 = [];
      s2 = peg$parsemessageFormatElement();
      while (s2 !== peg$FAILED) {
        s1.push(s2);
        s2 = peg$parsemessageFormatElement();
      }
      if (s1 !== peg$FAILED) {
        peg$reportedPos = s0;
        s1 = peg$c1(s1);
      }
      s0 = s1;

      return s0;
    }

    function peg$parsemessageFormatElement() {
      var s0;

      s0 = peg$parsemessageTextElement();
      if (s0 === peg$FAILED) {
        s0 = peg$parseargumentElement();
      }

      return s0;
    }

    function peg$parsemessageText() {
      var s0, s1, s2, s3, s4, s5;

      s0 = peg$currPos;
      s1 = [];
      s2 = peg$currPos;
      s3 = peg$parse_();
      if (s3 !== peg$FAILED) {
        s4 = peg$parsechars();
        if (s4 !== peg$FAILED) {
          s5 = peg$parse_();
          if (s5 !== peg$FAILED) {
            s3 = [s3, s4, s5];
            s2 = s3;
          } else {
            peg$currPos = s2;
            s2 = peg$c2;
          }
        } else {
          peg$currPos = s2;
          s2 = peg$c2;
        }
      } else {
        peg$currPos = s2;
        s2 = peg$c2;
      }
      if (s2 !== peg$FAILED) {
        while (s2 !== peg$FAILED) {
          s1.push(s2);
          s2 = peg$currPos;
          s3 = peg$parse_();
          if (s3 !== peg$FAILED) {
            s4 = peg$parsechars();
            if (s4 !== peg$FAILED) {
              s5 = peg$parse_();
              if (s5 !== peg$FAILED) {
                s3 = [s3, s4, s5];
                s2 = s3;
              } else {
                peg$currPos = s2;
                s2 = peg$c2;
              }
            } else {
              peg$currPos = s2;
              s2 = peg$c2;
            }
          } else {
            peg$currPos = s2;
            s2 = peg$c2;
          }
        }
      } else {
        s1 = peg$c2;
      }
      if (s1 !== peg$FAILED) {
        peg$reportedPos = s0;
        s1 = peg$c3(s1);
      }
      s0 = s1;
      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = peg$parsews();
        if (s1 !== peg$FAILED) {
          s1 = input.substring(s0, peg$currPos);
        }
        s0 = s1;
      }

      return s0;
    }

    function peg$parsemessageTextElement() {
      var s0, s1;

      s0 = peg$currPos;
      s1 = peg$parsemessageText();
      if (s1 !== peg$FAILED) {
        peg$reportedPos = s0;
        s1 = peg$c4(s1);
      }
      s0 = s1;

      return s0;
    }

    function peg$parseargument() {
      var s0, s1, s2;

      s0 = peg$parsenumber();
      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = [];
        if (peg$c5.test(input.charAt(peg$currPos))) {
          s2 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c6); }
        }
        if (s2 !== peg$FAILED) {
          while (s2 !== peg$FAILED) {
            s1.push(s2);
            if (peg$c5.test(input.charAt(peg$currPos))) {
              s2 = input.charAt(peg$currPos);
              peg$currPos++;
            } else {
              s2 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c6); }
            }
          }
        } else {
          s1 = peg$c2;
        }
        if (s1 !== peg$FAILED) {
          s1 = input.substring(s0, peg$currPos);
        }
        s0 = s1;
      }

      return s0;
    }

    function peg$parseargumentElement() {
      var s0, s1, s2, s3, s4, s5, s6, s7, s8;

      s0 = peg$currPos;
      if (input.charCodeAt(peg$currPos) === 123) {
        s1 = peg$c7;
        peg$currPos++;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c8); }
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parse_();
        if (s2 !== peg$FAILED) {
          s3 = peg$parseargument();
          if (s3 !== peg$FAILED) {
            s4 = peg$parse_();
            if (s4 !== peg$FAILED) {
              s5 = peg$currPos;
              if (input.charCodeAt(peg$currPos) === 44) {
                s6 = peg$c10;
                peg$currPos++;
              } else {
                s6 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c11); }
              }
              if (s6 !== peg$FAILED) {
                s7 = peg$parse_();
                if (s7 !== peg$FAILED) {
                  s8 = peg$parseelementFormat();
                  if (s8 !== peg$FAILED) {
                    s6 = [s6, s7, s8];
                    s5 = s6;
                  } else {
                    peg$currPos = s5;
                    s5 = peg$c2;
                  }
                } else {
                  peg$currPos = s5;
                  s5 = peg$c2;
                }
              } else {
                peg$currPos = s5;
                s5 = peg$c2;
              }
              if (s5 === peg$FAILED) {
                s5 = peg$c9;
              }
              if (s5 !== peg$FAILED) {
                s6 = peg$parse_();
                if (s6 !== peg$FAILED) {
                  if (input.charCodeAt(peg$currPos) === 125) {
                    s7 = peg$c12;
                    peg$currPos++;
                  } else {
                    s7 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$c13); }
                  }
                  if (s7 !== peg$FAILED) {
                    peg$reportedPos = s0;
                    s1 = peg$c14(s3, s5);
                    s0 = s1;
                  } else {
                    peg$currPos = s0;
                    s0 = peg$c2;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$c2;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$c2;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$c2;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$c2;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$c2;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c2;
      }

      return s0;
    }

    function peg$parseelementFormat() {
      var s0;

      s0 = peg$parsesimpleFormat();
      if (s0 === peg$FAILED) {
        s0 = peg$parsepluralFormat();
        if (s0 === peg$FAILED) {
          s0 = peg$parseselectOrdinalFormat();
          if (s0 === peg$FAILED) {
            s0 = peg$parseselectFormat();
          }
        }
      }

      return s0;
    }

    function peg$parsesimpleFormat() {
      var s0, s1, s2, s3, s4, s5, s6;

      s0 = peg$currPos;
      if (input.substr(peg$currPos, 6) === peg$c15) {
        s1 = peg$c15;
        peg$currPos += 6;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c16); }
      }
      if (s1 === peg$FAILED) {
        if (input.substr(peg$currPos, 4) === peg$c17) {
          s1 = peg$c17;
          peg$currPos += 4;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c18); }
        }
        if (s1 === peg$FAILED) {
          if (input.substr(peg$currPos, 4) === peg$c19) {
            s1 = peg$c19;
            peg$currPos += 4;
          } else {
            s1 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c20); }
          }
        }
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parse_();
        if (s2 !== peg$FAILED) {
          s3 = peg$currPos;
          if (input.charCodeAt(peg$currPos) === 44) {
            s4 = peg$c10;
            peg$currPos++;
          } else {
            s4 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c11); }
          }
          if (s4 !== peg$FAILED) {
            s5 = peg$parse_();
            if (s5 !== peg$FAILED) {
              s6 = peg$parsechars();
              if (s6 !== peg$FAILED) {
                s4 = [s4, s5, s6];
                s3 = s4;
              } else {
                peg$currPos = s3;
                s3 = peg$c2;
              }
            } else {
              peg$currPos = s3;
              s3 = peg$c2;
            }
          } else {
            peg$currPos = s3;
            s3 = peg$c2;
          }
          if (s3 === peg$FAILED) {
            s3 = peg$c9;
          }
          if (s3 !== peg$FAILED) {
            peg$reportedPos = s0;
            s1 = peg$c21(s1, s3);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$c2;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$c2;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c2;
      }

      return s0;
    }

    function peg$parsepluralFormat() {
      var s0, s1, s2, s3, s4, s5;

      s0 = peg$currPos;
      if (input.substr(peg$currPos, 6) === peg$c22) {
        s1 = peg$c22;
        peg$currPos += 6;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c23); }
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parse_();
        if (s2 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 44) {
            s3 = peg$c10;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c11); }
          }
          if (s3 !== peg$FAILED) {
            s4 = peg$parse_();
            if (s4 !== peg$FAILED) {
              s5 = peg$parsepluralStyle();
              if (s5 !== peg$FAILED) {
                peg$reportedPos = s0;
                s1 = peg$c24(s5);
                s0 = s1;
              } else {
                peg$currPos = s0;
                s0 = peg$c2;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$c2;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$c2;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$c2;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c2;
      }

      return s0;
    }

    function peg$parseselectOrdinalFormat() {
      var s0, s1, s2, s3, s4, s5;

      s0 = peg$currPos;
      if (input.substr(peg$currPos, 13) === peg$c25) {
        s1 = peg$c25;
        peg$currPos += 13;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c26); }
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parse_();
        if (s2 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 44) {
            s3 = peg$c10;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c11); }
          }
          if (s3 !== peg$FAILED) {
            s4 = peg$parse_();
            if (s4 !== peg$FAILED) {
              s5 = peg$parsepluralStyle();
              if (s5 !== peg$FAILED) {
                peg$reportedPos = s0;
                s1 = peg$c27(s5);
                s0 = s1;
              } else {
                peg$currPos = s0;
                s0 = peg$c2;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$c2;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$c2;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$c2;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c2;
      }

      return s0;
    }

    function peg$parseselectFormat() {
      var s0, s1, s2, s3, s4, s5, s6;

      s0 = peg$currPos;
      if (input.substr(peg$currPos, 6) === peg$c28) {
        s1 = peg$c28;
        peg$currPos += 6;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c29); }
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parse_();
        if (s2 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 44) {
            s3 = peg$c10;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c11); }
          }
          if (s3 !== peg$FAILED) {
            s4 = peg$parse_();
            if (s4 !== peg$FAILED) {
              s5 = [];
              s6 = peg$parseoptionalFormatPattern();
              if (s6 !== peg$FAILED) {
                while (s6 !== peg$FAILED) {
                  s5.push(s6);
                  s6 = peg$parseoptionalFormatPattern();
                }
              } else {
                s5 = peg$c2;
              }
              if (s5 !== peg$FAILED) {
                peg$reportedPos = s0;
                s1 = peg$c30(s5);
                s0 = s1;
              } else {
                peg$currPos = s0;
                s0 = peg$c2;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$c2;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$c2;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$c2;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c2;
      }

      return s0;
    }

    function peg$parseselector() {
      var s0, s1, s2, s3;

      s0 = peg$currPos;
      s1 = peg$currPos;
      if (input.charCodeAt(peg$currPos) === 61) {
        s2 = peg$c31;
        peg$currPos++;
      } else {
        s2 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c32); }
      }
      if (s2 !== peg$FAILED) {
        s3 = peg$parsenumber();
        if (s3 !== peg$FAILED) {
          s2 = [s2, s3];
          s1 = s2;
        } else {
          peg$currPos = s1;
          s1 = peg$c2;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$c2;
      }
      if (s1 !== peg$FAILED) {
        s1 = input.substring(s0, peg$currPos);
      }
      s0 = s1;
      if (s0 === peg$FAILED) {
        s0 = peg$parsechars();
      }

      return s0;
    }

    function peg$parseoptionalFormatPattern() {
      var s0, s1, s2, s3, s4, s5, s6, s7, s8;

      s0 = peg$currPos;
      s1 = peg$parse_();
      if (s1 !== peg$FAILED) {
        s2 = peg$parseselector();
        if (s2 !== peg$FAILED) {
          s3 = peg$parse_();
          if (s3 !== peg$FAILED) {
            if (input.charCodeAt(peg$currPos) === 123) {
              s4 = peg$c7;
              peg$currPos++;
            } else {
              s4 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c8); }
            }
            if (s4 !== peg$FAILED) {
              s5 = peg$parse_();
              if (s5 !== peg$FAILED) {
                s6 = peg$parsemessageFormatPattern();
                if (s6 !== peg$FAILED) {
                  s7 = peg$parse_();
                  if (s7 !== peg$FAILED) {
                    if (input.charCodeAt(peg$currPos) === 125) {
                      s8 = peg$c12;
                      peg$currPos++;
                    } else {
                      s8 = peg$FAILED;
                      if (peg$silentFails === 0) { peg$fail(peg$c13); }
                    }
                    if (s8 !== peg$FAILED) {
                      peg$reportedPos = s0;
                      s1 = peg$c33(s2, s6);
                      s0 = s1;
                    } else {
                      peg$currPos = s0;
                      s0 = peg$c2;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$c2;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$c2;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$c2;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$c2;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$c2;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$c2;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c2;
      }

      return s0;
    }

    function peg$parseoffset() {
      var s0, s1, s2, s3;

      s0 = peg$currPos;
      if (input.substr(peg$currPos, 7) === peg$c34) {
        s1 = peg$c34;
        peg$currPos += 7;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c35); }
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parse_();
        if (s2 !== peg$FAILED) {
          s3 = peg$parsenumber();
          if (s3 !== peg$FAILED) {
            peg$reportedPos = s0;
            s1 = peg$c36(s3);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$c2;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$c2;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c2;
      }

      return s0;
    }

    function peg$parsepluralStyle() {
      var s0, s1, s2, s3, s4;

      s0 = peg$currPos;
      s1 = peg$parseoffset();
      if (s1 === peg$FAILED) {
        s1 = peg$c9;
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parse_();
        if (s2 !== peg$FAILED) {
          s3 = [];
          s4 = peg$parseoptionalFormatPattern();
          if (s4 !== peg$FAILED) {
            while (s4 !== peg$FAILED) {
              s3.push(s4);
              s4 = peg$parseoptionalFormatPattern();
            }
          } else {
            s3 = peg$c2;
          }
          if (s3 !== peg$FAILED) {
            peg$reportedPos = s0;
            s1 = peg$c37(s1, s3);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$c2;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$c2;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c2;
      }

      return s0;
    }

    function peg$parsews() {
      var s0, s1;

      peg$silentFails++;
      s0 = [];
      if (peg$c39.test(input.charAt(peg$currPos))) {
        s1 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c40); }
      }
      if (s1 !== peg$FAILED) {
        while (s1 !== peg$FAILED) {
          s0.push(s1);
          if (peg$c39.test(input.charAt(peg$currPos))) {
            s1 = input.charAt(peg$currPos);
            peg$currPos++;
          } else {
            s1 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c40); }
          }
        }
      } else {
        s0 = peg$c2;
      }
      peg$silentFails--;
      if (s0 === peg$FAILED) {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c38); }
      }

      return s0;
    }

    function peg$parse_() {
      var s0, s1, s2;

      peg$silentFails++;
      s0 = peg$currPos;
      s1 = [];
      s2 = peg$parsews();
      while (s2 !== peg$FAILED) {
        s1.push(s2);
        s2 = peg$parsews();
      }
      if (s1 !== peg$FAILED) {
        s1 = input.substring(s0, peg$currPos);
      }
      s0 = s1;
      peg$silentFails--;
      if (s0 === peg$FAILED) {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c41); }
      }

      return s0;
    }

    function peg$parsedigit() {
      var s0;

      if (peg$c42.test(input.charAt(peg$currPos))) {
        s0 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c43); }
      }

      return s0;
    }

    function peg$parsehexDigit() {
      var s0;

      if (peg$c44.test(input.charAt(peg$currPos))) {
        s0 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c45); }
      }

      return s0;
    }

    function peg$parsenumber() {
      var s0, s1, s2, s3, s4, s5;

      s0 = peg$currPos;
      if (input.charCodeAt(peg$currPos) === 48) {
        s1 = peg$c46;
        peg$currPos++;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c47); }
      }
      if (s1 === peg$FAILED) {
        s1 = peg$currPos;
        s2 = peg$currPos;
        if (peg$c48.test(input.charAt(peg$currPos))) {
          s3 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s3 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c49); }
        }
        if (s3 !== peg$FAILED) {
          s4 = [];
          s5 = peg$parsedigit();
          while (s5 !== peg$FAILED) {
            s4.push(s5);
            s5 = peg$parsedigit();
          }
          if (s4 !== peg$FAILED) {
            s3 = [s3, s4];
            s2 = s3;
          } else {
            peg$currPos = s2;
            s2 = peg$c2;
          }
        } else {
          peg$currPos = s2;
          s2 = peg$c2;
        }
        if (s2 !== peg$FAILED) {
          s2 = input.substring(s1, peg$currPos);
        }
        s1 = s2;
      }
      if (s1 !== peg$FAILED) {
        peg$reportedPos = s0;
        s1 = peg$c50(s1);
      }
      s0 = s1;

      return s0;
    }

    function peg$parsechar() {
      var s0, s1, s2, s3, s4, s5, s6, s7;

      if (peg$c51.test(input.charAt(peg$currPos))) {
        s0 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c52); }
      }
      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        if (input.substr(peg$currPos, 2) === peg$c53) {
          s1 = peg$c53;
          peg$currPos += 2;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c54); }
        }
        if (s1 !== peg$FAILED) {
          peg$reportedPos = s0;
          s1 = peg$c55();
        }
        s0 = s1;
        if (s0 === peg$FAILED) {
          s0 = peg$currPos;
          if (input.substr(peg$currPos, 2) === peg$c56) {
            s1 = peg$c56;
            peg$currPos += 2;
          } else {
            s1 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c57); }
          }
          if (s1 !== peg$FAILED) {
            peg$reportedPos = s0;
            s1 = peg$c58();
          }
          s0 = s1;
          if (s0 === peg$FAILED) {
            s0 = peg$currPos;
            if (input.substr(peg$currPos, 2) === peg$c59) {
              s1 = peg$c59;
              peg$currPos += 2;
            } else {
              s1 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c60); }
            }
            if (s1 !== peg$FAILED) {
              peg$reportedPos = s0;
              s1 = peg$c61();
            }
            s0 = s1;
            if (s0 === peg$FAILED) {
              s0 = peg$currPos;
              if (input.substr(peg$currPos, 2) === peg$c62) {
                s1 = peg$c62;
                peg$currPos += 2;
              } else {
                s1 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c63); }
              }
              if (s1 !== peg$FAILED) {
                peg$reportedPos = s0;
                s1 = peg$c64();
              }
              s0 = s1;
              if (s0 === peg$FAILED) {
                s0 = peg$currPos;
                if (input.substr(peg$currPos, 2) === peg$c65) {
                  s1 = peg$c65;
                  peg$currPos += 2;
                } else {
                  s1 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$c66); }
                }
                if (s1 !== peg$FAILED) {
                  s2 = peg$currPos;
                  s3 = peg$currPos;
                  s4 = peg$parsehexDigit();
                  if (s4 !== peg$FAILED) {
                    s5 = peg$parsehexDigit();
                    if (s5 !== peg$FAILED) {
                      s6 = peg$parsehexDigit();
                      if (s6 !== peg$FAILED) {
                        s7 = peg$parsehexDigit();
                        if (s7 !== peg$FAILED) {
                          s4 = [s4, s5, s6, s7];
                          s3 = s4;
                        } else {
                          peg$currPos = s3;
                          s3 = peg$c2;
                        }
                      } else {
                        peg$currPos = s3;
                        s3 = peg$c2;
                      }
                    } else {
                      peg$currPos = s3;
                      s3 = peg$c2;
                    }
                  } else {
                    peg$currPos = s3;
                    s3 = peg$c2;
                  }
                  if (s3 !== peg$FAILED) {
                    s3 = input.substring(s2, peg$currPos);
                  }
                  s2 = s3;
                  if (s2 !== peg$FAILED) {
                    peg$reportedPos = s0;
                    s1 = peg$c67(s2);
                    s0 = s1;
                  } else {
                    peg$currPos = s0;
                    s0 = peg$c2;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$c2;
                }
              }
            }
          }
        }
      }

      return s0;
    }

    function peg$parsechars() {
      var s0, s1, s2;

      s0 = peg$currPos;
      s1 = [];
      s2 = peg$parsechar();
      if (s2 !== peg$FAILED) {
        while (s2 !== peg$FAILED) {
          s1.push(s2);
          s2 = peg$parsechar();
        }
      } else {
        s1 = peg$c2;
      }
      if (s1 !== peg$FAILED) {
        peg$reportedPos = s0;
        s1 = peg$c68(s1);
      }
      s0 = s1;

      return s0;
    }

    peg$result = peg$startRuleFunction();

    if (peg$result !== peg$FAILED && peg$currPos === input.length) {
      return peg$result;
    } else {
      if (peg$result !== peg$FAILED && peg$currPos < input.length) {
        peg$fail({ type: "end", description: "end of input" });
      }

      throw peg$buildException(null, peg$maxFailExpected, peg$maxFailPos);
    }
  }

  return {
    SyntaxError: SyntaxError,
    parse:       parse
  };
})();


},{}],9:[function(require,module,exports){
/* jshint node:true */

'use strict';

var IntlMessageFormat = require('./lib/main')['default'];

// Add all locale data to `IntlMessageFormat`. This module will be ignored when
// bundling for the browser with Browserify/Webpack.
require('./lib/locales');

// Re-export `IntlMessageFormat` as the CommonJS default exports with all the
// locale data registered, and with English set as the default locale. Define
// the `default` prop for use with other compiled ES6 Modules.
exports = module.exports = IntlMessageFormat;
exports['default'] = exports;

},{"./lib/locales":6,"./lib/main":14}],10:[function(require,module,exports){
/*
Copyright (c) 2014, Yahoo! Inc. All rights reserved.
Copyrights licensed under the New BSD License.
See the accompanying LICENSE file for terms.
*/

/* jslint esnext: true */

"use strict";
exports["default"] = Compiler;

function Compiler(locales, formats, pluralFn) {
    this.locales  = locales;
    this.formats  = formats;
    this.pluralFn = pluralFn;
}

Compiler.prototype.compile = function (ast) {
    this.pluralStack        = [];
    this.currentPlural      = null;
    this.pluralNumberFormat = null;

    return this.compileMessage(ast);
};

Compiler.prototype.compileMessage = function (ast) {
    if (!(ast && ast.type === 'messageFormatPattern')) {
        throw new Error('Message AST is not of type: "messageFormatPattern"');
    }

    var elements = ast.elements,
        pattern  = [];

    var i, len, element;

    for (i = 0, len = elements.length; i < len; i += 1) {
        element = elements[i];

        switch (element.type) {
            case 'messageTextElement':
                pattern.push(this.compileMessageText(element));
                break;

            case 'argumentElement':
                pattern.push(this.compileArgument(element));
                break;

            default:
                throw new Error('Message element does not have a valid type');
        }
    }

    return pattern;
};

Compiler.prototype.compileMessageText = function (element) {
    // When this `element` is part of plural sub-pattern and its value contains
    // an unescaped '#', use a `PluralOffsetString` helper to properly output
    // the number with the correct offset in the string.
    if (this.currentPlural && /(^|[^\\])#/g.test(element.value)) {
        // Create a cache a NumberFormat instance that can be reused for any
        // PluralOffsetString instance in this message.
        if (!this.pluralNumberFormat) {
            this.pluralNumberFormat = new Intl.NumberFormat(this.locales);
        }

        return new PluralOffsetString(
                this.currentPlural.id,
                this.currentPlural.format.offset,
                this.pluralNumberFormat,
                element.value);
    }

    // Unescape the escaped '#'s in the message text.
    return element.value.replace(/\\#/g, '#');
};

Compiler.prototype.compileArgument = function (element) {
    var format = element.format;

    if (!format) {
        return new StringFormat(element.id);
    }

    var formats  = this.formats,
        locales  = this.locales,
        pluralFn = this.pluralFn,
        options;

    switch (format.type) {
        case 'numberFormat':
            options = formats.number[format.style];
            return {
                id    : element.id,
                format: new Intl.NumberFormat(locales, options).format
            };

        case 'dateFormat':
            options = formats.date[format.style];
            return {
                id    : element.id,
                format: new Intl.DateTimeFormat(locales, options).format
            };

        case 'timeFormat':
            options = formats.time[format.style];
            return {
                id    : element.id,
                format: new Intl.DateTimeFormat(locales, options).format
            };

        case 'pluralFormat':
            options = this.compileOptions(element);
            return new PluralFormat(
                element.id, format.ordinal, format.offset, options, pluralFn
            );

        case 'selectFormat':
            options = this.compileOptions(element);
            return new SelectFormat(element.id, options);

        default:
            throw new Error('Message element does not have a valid format type');
    }
};

Compiler.prototype.compileOptions = function (element) {
    var format      = element.format,
        options     = format.options,
        optionsHash = {};

    // Save the current plural element, if any, then set it to a new value when
    // compiling the options sub-patterns. This conforms the spec's algorithm
    // for handling `"#"` syntax in message text.
    this.pluralStack.push(this.currentPlural);
    this.currentPlural = format.type === 'pluralFormat' ? element : null;

    var i, len, option;

    for (i = 0, len = options.length; i < len; i += 1) {
        option = options[i];

        // Compile the sub-pattern and save it under the options's selector.
        optionsHash[option.selector] = this.compileMessage(option.value);
    }

    // Pop the plural stack to put back the original current plural value.
    this.currentPlural = this.pluralStack.pop();

    return optionsHash;
};

// -- Compiler Helper Classes --------------------------------------------------

function StringFormat(id) {
    this.id = id;
}

StringFormat.prototype.format = function (value) {
    if (!value) {
        return '';
    }

    return typeof value === 'string' ? value : String(value);
};

function PluralFormat(id, useOrdinal, offset, options, pluralFn) {
    this.id         = id;
    this.useOrdinal = useOrdinal;
    this.offset     = offset;
    this.options    = options;
    this.pluralFn   = pluralFn;
}

PluralFormat.prototype.getOption = function (value) {
    var options = this.options;

    var option = options['=' + value] ||
            options[this.pluralFn(value - this.offset, this.useOrdinal)];

    return option || options.other;
};

function PluralOffsetString(id, offset, numberFormat, string) {
    this.id           = id;
    this.offset       = offset;
    this.numberFormat = numberFormat;
    this.string       = string;
}

PluralOffsetString.prototype.format = function (value) {
    var number = this.numberFormat.format(value - this.offset);

    return this.string
            .replace(/(^|[^\\])#/g, '$1' + number)
            .replace(/\\#/g, '#');
};

function SelectFormat(id, options) {
    this.id      = id;
    this.options = options;
}

SelectFormat.prototype.getOption = function (value) {
    var options = this.options;
    return options[value] || options.other;
};


},{}],11:[function(require,module,exports){
/*
Copyright (c) 2014, Yahoo! Inc. All rights reserved.
Copyrights licensed under the New BSD License.
See the accompanying LICENSE file for terms.
*/

/* jslint esnext: true */

"use strict";
var src$utils$$ = require("./utils"), src$es5$$ = require("./es5"), src$compiler$$ = require("./compiler"), intl$messageformat$parser$$ = require("intl-messageformat-parser");
exports["default"] = MessageFormat;

// -- MessageFormat --------------------------------------------------------

function MessageFormat(message, locales, formats) {
    // Parse string messages into an AST.
    var ast = typeof message === 'string' ?
            MessageFormat.__parse(message) : message;

    if (!(ast && ast.type === 'messageFormatPattern')) {
        throw new TypeError('A message must be provided as a String or AST.');
    }

    // Creates a new object with the specified `formats` merged with the default
    // formats.
    formats = this._mergeFormats(MessageFormat.formats, formats);

    // Defined first because it's used to build the format pattern.
    src$es5$$.defineProperty(this, '_locale',  {value: this._resolveLocale(locales)});

    // Compile the `ast` to a pattern that is highly optimized for repeated
    // `format()` invocations. **Note:** This passes the `locales` set provided
    // to the constructor instead of just the resolved locale.
    var pluralFn = this._findPluralRuleFunction(this._locale);
    var pattern  = this._compilePattern(ast, locales, formats, pluralFn);

    // "Bind" `format()` method to `this` so it can be passed by reference like
    // the other `Intl` APIs.
    var messageFormat = this;
    this.format = function (values) {
        return messageFormat._format(pattern, values);
    };
}

// Default format options used as the prototype of the `formats` provided to the
// constructor. These are used when constructing the internal Intl.NumberFormat
// and Intl.DateTimeFormat instances.
src$es5$$.defineProperty(MessageFormat, 'formats', {
    enumerable: true,

    value: {
        number: {
            'currency': {
                style: 'currency'
            },

            'percent': {
                style: 'percent'
            }
        },

        date: {
            'short': {
                month: 'numeric',
                day  : 'numeric',
                year : '2-digit'
            },

            'medium': {
                month: 'short',
                day  : 'numeric',
                year : 'numeric'
            },

            'long': {
                month: 'long',
                day  : 'numeric',
                year : 'numeric'
            },

            'full': {
                weekday: 'long',
                month  : 'long',
                day    : 'numeric',
                year   : 'numeric'
            }
        },

        time: {
            'short': {
                hour  : 'numeric',
                minute: 'numeric'
            },

            'medium':  {
                hour  : 'numeric',
                minute: 'numeric',
                second: 'numeric'
            },

            'long': {
                hour        : 'numeric',
                minute      : 'numeric',
                second      : 'numeric',
                timeZoneName: 'short'
            },

            'full': {
                hour        : 'numeric',
                minute      : 'numeric',
                second      : 'numeric',
                timeZoneName: 'short'
            }
        }
    }
});

// Define internal private properties for dealing with locale data.
src$es5$$.defineProperty(MessageFormat, '__localeData__', {value: src$es5$$.objCreate(null)});
src$es5$$.defineProperty(MessageFormat, '__addLocaleData', {value: function (data) {
    if (!(data && data.locale)) {
        throw new Error(
            'Locale data provided to IntlMessageFormat is missing a ' +
            '`locale` property'
        );
    }

    MessageFormat.__localeData__[data.locale.toLowerCase()] = data;
}});

// Defines `__parse()` static method as an exposed private.
src$es5$$.defineProperty(MessageFormat, '__parse', {value: intl$messageformat$parser$$["default"].parse});

// Define public `defaultLocale` property which defaults to English, but can be
// set by the developer.
src$es5$$.defineProperty(MessageFormat, 'defaultLocale', {
    enumerable: true,
    writable  : true,
    value     : undefined
});

MessageFormat.prototype.resolvedOptions = function () {
    // TODO: Provide anything else?
    return {
        locale: this._locale
    };
};

MessageFormat.prototype._compilePattern = function (ast, locales, formats, pluralFn) {
    var compiler = new src$compiler$$["default"](locales, formats, pluralFn);
    return compiler.compile(ast);
};

MessageFormat.prototype._findPluralRuleFunction = function (locale) {
    var localeData = MessageFormat.__localeData__;
    var data       = localeData[locale.toLowerCase()];

    // The locale data is de-duplicated, so we have to traverse the locale's
    // hierarchy until we find a `pluralRuleFunction` to return.
    while (data) {
        if (data.pluralRuleFunction) {
            return data.pluralRuleFunction;
        }

        data = data.parentLocale && localeData[data.parentLocale.toLowerCase()];
    }

    throw new Error(
        'Locale data added to IntlMessageFormat is missing a ' +
        '`pluralRuleFunction` for :' + locale
    );
};

MessageFormat.prototype._format = function (pattern, values) {
    var result = '',
        i, len, part, id, value;

    for (i = 0, len = pattern.length; i < len; i += 1) {
        part = pattern[i];

        // Exist early for string parts.
        if (typeof part === 'string') {
            result += part;
            continue;
        }

        id = part.id;

        // Enforce that all required values are provided by the caller.
        if (!(values && src$utils$$.hop.call(values, id))) {
            throw new Error('A value must be provided for: ' + id);
        }

        value = values[id];

        // Recursively format plural and select parts' option — which can be a
        // nested pattern structure. The choosing of the option to use is
        // abstracted-by and delegated-to the part helper object.
        if (part.options) {
            result += this._format(part.getOption(value), values);
        } else {
            result += part.format(value);
        }
    }

    return result;
};

MessageFormat.prototype._mergeFormats = function (defaults, formats) {
    var mergedFormats = {},
        type, mergedType;

    for (type in defaults) {
        if (!src$utils$$.hop.call(defaults, type)) { continue; }

        mergedFormats[type] = mergedType = src$es5$$.objCreate(defaults[type]);

        if (formats && src$utils$$.hop.call(formats, type)) {
            src$utils$$.extend(mergedType, formats[type]);
        }
    }

    return mergedFormats;
};

MessageFormat.prototype._resolveLocale = function (locales) {
    if (typeof locales === 'string') {
        locales = [locales];
    }

    // Create a copy of the array so we can push on the default locale.
    locales = (locales || []).concat(MessageFormat.defaultLocale);

    var localeData = MessageFormat.__localeData__;
    var i, len, localeParts, data;

    // Using the set of locales + the default locale, we look for the first one
    // which that has been registered. When data does not exist for a locale, we
    // traverse its ancestors to find something that's been registered within
    // its hierarchy of locales. Since we lack the proper `parentLocale` data
    // here, we must take a naive approach to traversal.
    for (i = 0, len = locales.length; i < len; i += 1) {
        localeParts = locales[i].toLowerCase().split('-');

        while (localeParts.length) {
            data = localeData[localeParts.join('-')];
            if (data) {
                // Return the normalized locale string; e.g., we return "en-US",
                // instead of "en-us".
                return data.locale;
            }

            localeParts.pop();
        }
    }

    var defaultLocale = locales.pop();
    throw new Error(
        'No locale data has been added to IntlMessageFormat for: ' +
        locales.join(', ') + ', or the default locale: ' + defaultLocale
    );
};


},{"./compiler":10,"./es5":13,"./utils":15,"intl-messageformat-parser":7}],12:[function(require,module,exports){
// GENERATED FILE
"use strict";
exports["default"] = {"locale":"en","pluralRuleFunction":function (n,ord){var s=String(n).split("."),v0=!s[1],t0=Number(s[0])==n,n10=t0&&s[0].slice(-1),n100=t0&&s[0].slice(-2);if(ord)return n10==1&&n100!=11?"one":n10==2&&n100!=12?"two":n10==3&&n100!=13?"few":"other";return n==1&&v0?"one":"other"}};


},{}],13:[function(require,module,exports){
/*
Copyright (c) 2014, Yahoo! Inc. All rights reserved.
Copyrights licensed under the New BSD License.
See the accompanying LICENSE file for terms.
*/

/* jslint esnext: true */

"use strict";
var src$utils$$ = require("./utils");

// Purposely using the same implementation as the Intl.js `Intl` polyfill.
// Copyright 2013 Andy Earnshaw, MIT License

var realDefineProp = (function () {
    try { return !!Object.defineProperty({}, 'a', {}); }
    catch (e) { return false; }
})();

var es3 = !realDefineProp && !Object.prototype.__defineGetter__;

var defineProperty = realDefineProp ? Object.defineProperty :
        function (obj, name, desc) {

    if ('get' in desc && obj.__defineGetter__) {
        obj.__defineGetter__(name, desc.get);
    } else if (!src$utils$$.hop.call(obj, name) || 'value' in desc) {
        obj[name] = desc.value;
    }
};

var objCreate = Object.create || function (proto, props) {
    var obj, k;

    function F() {}
    F.prototype = proto;
    obj = new F();

    for (k in props) {
        if (src$utils$$.hop.call(props, k)) {
            defineProperty(obj, k, props[k]);
        }
    }

    return obj;
};
exports.defineProperty = defineProperty, exports.objCreate = objCreate;


},{"./utils":15}],14:[function(require,module,exports){
/* jslint esnext: true */

"use strict";
var src$core$$ = require("./core"), src$en$$ = require("./en");

src$core$$["default"].__addLocaleData(src$en$$["default"]);
src$core$$["default"].defaultLocale = 'en';

exports["default"] = src$core$$["default"];


},{"./core":11,"./en":12}],15:[function(require,module,exports){
/*
Copyright (c) 2014, Yahoo! Inc. All rights reserved.
Copyrights licensed under the New BSD License.
See the accompanying LICENSE file for terms.
*/

/* jslint esnext: true */

"use strict";
exports.extend = extend;
var hop = Object.prototype.hasOwnProperty;

function extend(obj) {
    var sources = Array.prototype.slice.call(arguments, 1),
        i, len, source, key;

    for (i = 0, len = sources.length; i < len; i += 1) {
        source = sources[i];
        if (!source) { continue; }

        for (key in source) {
            if (hop.call(source, key)) {
                obj[key] = source[key];
            }
        }
    }

    return obj;
}
exports.hop = hop;


},{}],16:[function(require,module,exports){
/* jshint node:true */

'use strict';

var IntlRelativeFormat = require('./lib/main')['default'];

// Add all locale data to `IntlRelativeFormat`. This module will be ignored when
// bundling for the browser with Browserify/Webpack.
require('./lib/locales');

// Re-export `IntlRelativeFormat` as the CommonJS default exports with all the
// locale data registered, and with English set as the default locale. Define
// the `default` prop for use with other compiled ES6 Modules.
exports = module.exports = IntlRelativeFormat;
exports['default'] = exports;

},{"./lib/locales":6,"./lib/main":21}],17:[function(require,module,exports){
/*
Copyright (c) 2014, Yahoo! Inc. All rights reserved.
Copyrights licensed under the New BSD License.
See the accompanying LICENSE file for terms.
*/

/* jslint esnext: true */

"use strict";
var intl$messageformat$$ = require("intl-messageformat"), src$diff$$ = require("./diff"), src$es5$$ = require("./es5");
exports["default"] = RelativeFormat;

// -----------------------------------------------------------------------------

var FIELDS = ['second', 'minute', 'hour', 'day', 'month', 'year'];
var STYLES = ['best fit', 'numeric'];

// -- RelativeFormat -----------------------------------------------------------

function RelativeFormat(locales, options) {
    options = options || {};

    // Make a copy of `locales` if it's an array, so that it doesn't change
    // since it's used lazily.
    if (src$es5$$.isArray(locales)) {
        locales = locales.concat();
    }

    src$es5$$.defineProperty(this, '_locale', {value: this._resolveLocale(locales)});
    src$es5$$.defineProperty(this, '_options', {value: {
        style: this._resolveStyle(options.style),
        units: this._isValidUnits(options.units) && options.units
    }});

    src$es5$$.defineProperty(this, '_locales', {value: locales});
    src$es5$$.defineProperty(this, '_fields', {value: this._findFields(this._locale)});
    src$es5$$.defineProperty(this, '_messages', {value: src$es5$$.objCreate(null)});

    // "Bind" `format()` method to `this` so it can be passed by reference like
    // the other `Intl` APIs.
    var relativeFormat = this;
    this.format = function format(date, options) {
        return relativeFormat._format(date, options);
    };
}

// Define internal private properties for dealing with locale data.
src$es5$$.defineProperty(RelativeFormat, '__localeData__', {value: src$es5$$.objCreate(null)});
src$es5$$.defineProperty(RelativeFormat, '__addLocaleData', {value: function (data) {
    if (!(data && data.locale)) {
        throw new Error(
            'Locale data provided to IntlRelativeFormat is missing a ' +
            '`locale` property value'
        );
    }

    RelativeFormat.__localeData__[data.locale.toLowerCase()] = data;

    // Add data to IntlMessageFormat.
    intl$messageformat$$["default"].__addLocaleData(data);
}});

// Define public `defaultLocale` property which can be set by the developer, or
// it will be set when the first RelativeFormat instance is created by
// leveraging the resolved locale from `Intl`.
src$es5$$.defineProperty(RelativeFormat, 'defaultLocale', {
    enumerable: true,
    writable  : true,
    value     : undefined
});

// Define public `thresholds` property which can be set by the developer, and
// defaults to relative time thresholds from moment.js.
src$es5$$.defineProperty(RelativeFormat, 'thresholds', {
    enumerable: true,

    value: {
        second: 45,  // seconds to minute
        minute: 45,  // minutes to hour
        hour  : 22,  // hours to day
        day   : 26,  // days to month
        month : 11   // months to year
    }
});

RelativeFormat.prototype.resolvedOptions = function () {
    return {
        locale: this._locale,
        style : this._options.style,
        units : this._options.units
    };
};

RelativeFormat.prototype._compileMessage = function (units) {
    // `this._locales` is the original set of locales the user specified to the
    // constructor, while `this._locale` is the resolved root locale.
    var locales        = this._locales;
    var resolvedLocale = this._locale;

    var field        = this._fields[units];
    var relativeTime = field.relativeTime;
    var future       = '';
    var past         = '';
    var i;

    for (i in relativeTime.future) {
        if (relativeTime.future.hasOwnProperty(i)) {
            future += ' ' + i + ' {' +
                relativeTime.future[i].replace('{0}', '#') + '}';
        }
    }

    for (i in relativeTime.past) {
        if (relativeTime.past.hasOwnProperty(i)) {
            past += ' ' + i + ' {' +
                relativeTime.past[i].replace('{0}', '#') + '}';
        }
    }

    var message = '{when, select, future {{0, plural, ' + future + '}}' +
                                 'past {{0, plural, ' + past + '}}}';

    // Create the synthetic IntlMessageFormat instance using the original
    // locales value specified by the user when constructing the the parent
    // IntlRelativeFormat instance.
    return new intl$messageformat$$["default"](message, locales);
};

RelativeFormat.prototype._getMessage = function (units) {
    var messages = this._messages;

    // Create a new synthetic message based on the locale data from CLDR.
    if (!messages[units]) {
        messages[units] = this._compileMessage(units);
    }

    return messages[units];
};

RelativeFormat.prototype._getRelativeUnits = function (diff, units) {
    var field = this._fields[units];

    if (field.relative) {
        return field.relative[diff];
    }
};

RelativeFormat.prototype._findFields = function (locale) {
    var localeData = RelativeFormat.__localeData__;
    var data       = localeData[locale.toLowerCase()];

    // The locale data is de-duplicated, so we have to traverse the locale's
    // hierarchy until we find `fields` to return.
    while (data) {
        if (data.fields) {
            return data.fields;
        }

        data = data.parentLocale && localeData[data.parentLocale.toLowerCase()];
    }

    throw new Error(
        'Locale data added to IntlRelativeFormat is missing `fields` for :' +
        locale
    );
};

RelativeFormat.prototype._format = function (date, options) {
    var now = options && options.now !== undefined ? options.now : src$es5$$.dateNow();

    if (date === undefined) {
        date = now;
    }

    // Determine if the `date` and optional `now` values are valid, and throw a
    // similar error to what `Intl.DateTimeFormat#format()` would throw.
    if (!isFinite(now)) {
        throw new RangeError(
            'The `now` option provided to IntlRelativeFormat#format() is not ' +
            'in valid range.'
        );
    }

    if (!isFinite(date)) {
        throw new RangeError(
            'The date value provided to IntlRelativeFormat#format() is not ' +
            'in valid range.'
        );
    }

    var diffReport  = src$diff$$["default"](now, date);
    var units       = this._options.units || this._selectUnits(diffReport);
    var diffInUnits = diffReport[units];

    if (this._options.style !== 'numeric') {
        var relativeUnits = this._getRelativeUnits(diffInUnits, units);
        if (relativeUnits) {
            return relativeUnits;
        }
    }

    return this._getMessage(units).format({
        '0' : Math.abs(diffInUnits),
        when: diffInUnits < 0 ? 'past' : 'future'
    });
};

RelativeFormat.prototype._isValidUnits = function (units) {
    if (!units || src$es5$$.arrIndexOf.call(FIELDS, units) >= 0) {
        return true;
    }

    if (typeof units === 'string') {
        var suggestion = /s$/.test(units) && units.substr(0, units.length - 1);
        if (suggestion && src$es5$$.arrIndexOf.call(FIELDS, suggestion) >= 0) {
            throw new Error(
                '"' + units + '" is not a valid IntlRelativeFormat `units` ' +
                'value, did you mean: ' + suggestion
            );
        }
    }

    throw new Error(
        '"' + units + '" is not a valid IntlRelativeFormat `units` value, it ' +
        'must be one of: "' + FIELDS.join('", "') + '"'
    );
};

RelativeFormat.prototype._resolveLocale = function (locales) {
    if (typeof locales === 'string') {
        locales = [locales];
    }

    // Create a copy of the array so we can push on the default locale.
    locales = (locales || []).concat(RelativeFormat.defaultLocale);

    var localeData = RelativeFormat.__localeData__;
    var i, len, localeParts, data;

    // Using the set of locales + the default locale, we look for the first one
    // which that has been registered. When data does not exist for a locale, we
    // traverse its ancestors to find something that's been registered within
    // its hierarchy of locales. Since we lack the proper `parentLocale` data
    // here, we must take a naive approach to traversal.
    for (i = 0, len = locales.length; i < len; i += 1) {
        localeParts = locales[i].toLowerCase().split('-');

        while (localeParts.length) {
            data = localeData[localeParts.join('-')];
            if (data) {
                // Return the normalized locale string; e.g., we return "en-US",
                // instead of "en-us".
                return data.locale;
            }

            localeParts.pop();
        }
    }

    var defaultLocale = locales.pop();
    throw new Error(
        'No locale data has been added to IntlRelativeFormat for: ' +
        locales.join(', ') + ', or the default locale: ' + defaultLocale
    );
};

RelativeFormat.prototype._resolveStyle = function (style) {
    // Default to "best fit" style.
    if (!style) {
        return STYLES[0];
    }

    if (src$es5$$.arrIndexOf.call(STYLES, style) >= 0) {
        return style;
    }

    throw new Error(
        '"' + style + '" is not a valid IntlRelativeFormat `style` value, it ' +
        'must be one of: "' + STYLES.join('", "') + '"'
    );
};

RelativeFormat.prototype._selectUnits = function (diffReport) {
    var i, l, units;

    for (i = 0, l = FIELDS.length; i < l; i += 1) {
        units = FIELDS[i];

        if (Math.abs(diffReport[units]) < RelativeFormat.thresholds[units]) {
            break;
        }
    }

    return units;
};


},{"./diff":18,"./es5":20,"intl-messageformat":9}],18:[function(require,module,exports){
/*
Copyright (c) 2014, Yahoo! Inc. All rights reserved.
Copyrights licensed under the New BSD License.
See the accompanying LICENSE file for terms.
*/

/* jslint esnext: true */

"use strict";

var round = Math.round;

function daysToYears(days) {
    // 400 years have 146097 days (taking into account leap year rules)
    return days * 400 / 146097;
}

exports["default"] = function (from, to) {
    // Convert to ms timestamps.
    from = +from;
    to   = +to;

    var millisecond = round(to - from),
        second      = round(millisecond / 1000),
        minute      = round(second / 60),
        hour        = round(minute / 60),
        day         = round(hour / 24),
        week        = round(day / 7);

    var rawYears = daysToYears(day),
        month    = round(rawYears * 12),
        year     = round(rawYears);

    return {
        millisecond: millisecond,
        second     : second,
        minute     : minute,
        hour       : hour,
        day        : day,
        week       : week,
        month      : month,
        year       : year
    };
};


},{}],19:[function(require,module,exports){
// GENERATED FILE
"use strict";
exports["default"] = {"locale":"en","pluralRuleFunction":function (n,ord){var s=String(n).split("."),v0=!s[1],t0=Number(s[0])==n,n10=t0&&s[0].slice(-1),n100=t0&&s[0].slice(-2);if(ord)return n10==1&&n100!=11?"one":n10==2&&n100!=12?"two":n10==3&&n100!=13?"few":"other";return n==1&&v0?"one":"other"},"fields":{"year":{"displayName":"year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"one":"in {0} year","other":"in {0} years"},"past":{"one":"{0} year ago","other":"{0} years ago"}}},"month":{"displayName":"month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"one":"in {0} month","other":"in {0} months"},"past":{"one":"{0} month ago","other":"{0} months ago"}}},"day":{"displayName":"day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"one":"in {0} day","other":"in {0} days"},"past":{"one":"{0} day ago","other":"{0} days ago"}}},"hour":{"displayName":"hour","relativeTime":{"future":{"one":"in {0} hour","other":"in {0} hours"},"past":{"one":"{0} hour ago","other":"{0} hours ago"}}},"minute":{"displayName":"minute","relativeTime":{"future":{"one":"in {0} minute","other":"in {0} minutes"},"past":{"one":"{0} minute ago","other":"{0} minutes ago"}}},"second":{"displayName":"second","relative":{"0":"now"},"relativeTime":{"future":{"one":"in {0} second","other":"in {0} seconds"},"past":{"one":"{0} second ago","other":"{0} seconds ago"}}}}};


},{}],20:[function(require,module,exports){
/*
Copyright (c) 2014, Yahoo! Inc. All rights reserved.
Copyrights licensed under the New BSD License.
See the accompanying LICENSE file for terms.
*/

/* jslint esnext: true */

"use strict";

// Purposely using the same implementation as the Intl.js `Intl` polyfill.
// Copyright 2013 Andy Earnshaw, MIT License

var hop = Object.prototype.hasOwnProperty;
var toString = Object.prototype.toString;

var realDefineProp = (function () {
    try { return !!Object.defineProperty({}, 'a', {}); }
    catch (e) { return false; }
})();

var es3 = !realDefineProp && !Object.prototype.__defineGetter__;

var defineProperty = realDefineProp ? Object.defineProperty :
        function (obj, name, desc) {

    if ('get' in desc && obj.__defineGetter__) {
        obj.__defineGetter__(name, desc.get);
    } else if (!hop.call(obj, name) || 'value' in desc) {
        obj[name] = desc.value;
    }
};

var objCreate = Object.create || function (proto, props) {
    var obj, k;

    function F() {}
    F.prototype = proto;
    obj = new F();

    for (k in props) {
        if (hop.call(props, k)) {
            defineProperty(obj, k, props[k]);
        }
    }

    return obj;
};

var arrIndexOf = Array.prototype.indexOf || function (search, fromIndex) {
    /*jshint validthis:true */
    var arr = this;
    if (!arr.length) {
        return -1;
    }

    for (var i = fromIndex || 0, max = arr.length; i < max; i++) {
        if (arr[i] === search) {
            return i;
        }
    }

    return -1;
};

var isArray = Array.isArray || function (obj) {
    return toString.call(obj) === '[object Array]';
};

var dateNow = Date.now || function () {
    return new Date().getTime();
};
exports.defineProperty = defineProperty, exports.objCreate = objCreate, exports.arrIndexOf = arrIndexOf, exports.isArray = isArray, exports.dateNow = dateNow;


},{}],21:[function(require,module,exports){
arguments[4][14][0].apply(exports,arguments)
},{"./core":17,"./en":19,"dup":14}],22:[function(require,module,exports){
(function (global){
// Expose `IntlPolyfill` as global to add locale data into runtime later on.
global.IntlPolyfill = require('./lib/core.js');

// Require all locale data for `Intl`. This module will be
// ignored when bundling for the browser with Browserify/Webpack.
require('./locale-data/complete.js');

// hack to export the polyfill as global Intl if needed
if (!global.Intl) {
    global.Intl = global.IntlPolyfill;
    global.IntlPolyfill.__applyLocaleSensitivePrototypes();
}

// providing an idiomatic api for the nodejs version of this module
module.exports = global.IntlPolyfill;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./lib/core.js":23,"./locale-data/complete.js":6}],23:[function(require,module,exports){
(function (global){
'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
  return typeof obj;
} : function (obj) {
  return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj;
};

var jsx = function () {
  var REACT_ELEMENT_TYPE = typeof Symbol === "function" && Symbol.for && Symbol.for("react.element") || 0xeac7;
  return function createRawReactElement(type, props, key, children) {
    var defaultProps = type && type.defaultProps;
    var childrenLength = arguments.length - 3;

    if (!props && childrenLength !== 0) {
      props = {};
    }

    if (props && defaultProps) {
      for (var propName in defaultProps) {
        if (props[propName] === void 0) {
          props[propName] = defaultProps[propName];
        }
      }
    } else if (!props) {
      props = defaultProps || {};
    }

    if (childrenLength === 1) {
      props.children = children;
    } else if (childrenLength > 1) {
      var childArray = Array(childrenLength);

      for (var i = 0; i < childrenLength; i++) {
        childArray[i] = arguments[i + 3];
      }

      props.children = childArray;
    }

    return {
      $$typeof: REACT_ELEMENT_TYPE,
      type: type,
      key: key === undefined ? null : '' + key,
      ref: null,
      props: props,
      _owner: null
    };
  };
}();

var asyncToGenerator = function (fn) {
  return function () {
    var gen = fn.apply(this, arguments);
    return new Promise(function (resolve, reject) {
      function step(key, arg) {
        try {
          var info = gen[key](arg);
          var value = info.value;
        } catch (error) {
          reject(error);
          return;
        }

        if (info.done) {
          resolve(value);
        } else {
          return Promise.resolve(value).then(function (value) {
            return step("next", value);
          }, function (err) {
            return step("throw", err);
          });
        }
      }

      return step("next");
    });
  };
};

var classCallCheck = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

var createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();

var defineEnumerableProperties = function (obj, descs) {
  for (var key in descs) {
    var desc = descs[key];
    desc.configurable = desc.enumerable = true;
    if ("value" in desc) desc.writable = true;
    Object.defineProperty(obj, key, desc);
  }

  return obj;
};

var defaults = function (obj, defaults) {
  var keys = Object.getOwnPropertyNames(defaults);

  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    var value = Object.getOwnPropertyDescriptor(defaults, key);

    if (value && value.configurable && obj[key] === undefined) {
      Object.defineProperty(obj, key, value);
    }
  }

  return obj;
};

var defineProperty$1 = function (obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
};

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

var get = function get(object, property, receiver) {
  if (object === null) object = Function.prototype;
  var desc = Object.getOwnPropertyDescriptor(object, property);

  if (desc === undefined) {
    var parent = Object.getPrototypeOf(object);

    if (parent === null) {
      return undefined;
    } else {
      return get(parent, property, receiver);
    }
  } else if ("value" in desc) {
    return desc.value;
  } else {
    var getter = desc.get;

    if (getter === undefined) {
      return undefined;
    }

    return getter.call(receiver);
  }
};

var inherits = function (subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
};

var _instanceof = function (left, right) {
  if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) {
    return right[Symbol.hasInstance](left);
  } else {
    return left instanceof right;
  }
};

var interopRequireDefault = function (obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
};

var interopRequireWildcard = function (obj) {
  if (obj && obj.__esModule) {
    return obj;
  } else {
    var newObj = {};

    if (obj != null) {
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
      }
    }

    newObj.default = obj;
    return newObj;
  }
};

var newArrowCheck = function (innerThis, boundThis) {
  if (innerThis !== boundThis) {
    throw new TypeError("Cannot instantiate an arrow function");
  }
};

var objectDestructuringEmpty = function (obj) {
  if (obj == null) throw new TypeError("Cannot destructure undefined");
};

var objectWithoutProperties = function (obj, keys) {
  var target = {};

  for (var i in obj) {
    if (keys.indexOf(i) >= 0) continue;
    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
    target[i] = obj[i];
  }

  return target;
};

var possibleConstructorReturn = function (self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && (typeof call === "object" || typeof call === "function") ? call : self;
};

var selfGlobal = typeof global === "undefined" ? self : global;

var set = function set(object, property, value, receiver) {
  var desc = Object.getOwnPropertyDescriptor(object, property);

  if (desc === undefined) {
    var parent = Object.getPrototypeOf(object);

    if (parent !== null) {
      set(parent, property, value, receiver);
    }
  } else if ("value" in desc && desc.writable) {
    desc.value = value;
  } else {
    var setter = desc.set;

    if (setter !== undefined) {
      setter.call(receiver, value);
    }
  }

  return value;
};

var slicedToArray = function () {
  function sliceIterator(arr, i) {
    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = undefined;

    try {
      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);

        if (i && _arr.length === i) break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"]) _i["return"]();
      } finally {
        if (_d) throw _e;
      }
    }

    return _arr;
  }

  return function (arr, i) {
    if (Array.isArray(arr)) {
      return arr;
    } else if (Symbol.iterator in Object(arr)) {
      return sliceIterator(arr, i);
    } else {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    }
  };
}();

var slicedToArrayLoose = function (arr, i) {
  if (Array.isArray(arr)) {
    return arr;
  } else if (Symbol.iterator in Object(arr)) {
    var _arr = [];

    for (var _iterator = arr[Symbol.iterator](), _step; !(_step = _iterator.next()).done;) {
      _arr.push(_step.value);

      if (i && _arr.length === i) break;
    }

    return _arr;
  } else {
    throw new TypeError("Invalid attempt to destructure non-iterable instance");
  }
};

var taggedTemplateLiteral = function (strings, raw) {
  return Object.freeze(Object.defineProperties(strings, {
    raw: {
      value: Object.freeze(raw)
    }
  }));
};

var taggedTemplateLiteralLoose = function (strings, raw) {
  strings.raw = raw;
  return strings;
};

var temporalRef = function (val, name, undef) {
  if (val === undef) {
    throw new ReferenceError(name + " is not defined - temporal dead zone");
  } else {
    return val;
  }
};

var temporalUndefined = {};

var toArray = function (arr) {
  return Array.isArray(arr) ? arr : Array.from(arr);
};

var toConsumableArray = function (arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];

    return arr2;
  } else {
    return Array.from(arr);
  }
};



var babelHelpers$1 = Object.freeze({
  jsx: jsx,
  asyncToGenerator: asyncToGenerator,
  classCallCheck: classCallCheck,
  createClass: createClass,
  defineEnumerableProperties: defineEnumerableProperties,
  defaults: defaults,
  defineProperty: defineProperty$1,
  get: get,
  inherits: inherits,
  interopRequireDefault: interopRequireDefault,
  interopRequireWildcard: interopRequireWildcard,
  newArrowCheck: newArrowCheck,
  objectDestructuringEmpty: objectDestructuringEmpty,
  objectWithoutProperties: objectWithoutProperties,
  possibleConstructorReturn: possibleConstructorReturn,
  selfGlobal: selfGlobal,
  set: set,
  slicedToArray: slicedToArray,
  slicedToArrayLoose: slicedToArrayLoose,
  taggedTemplateLiteral: taggedTemplateLiteral,
  taggedTemplateLiteralLoose: taggedTemplateLiteralLoose,
  temporalRef: temporalRef,
  temporalUndefined: temporalUndefined,
  toArray: toArray,
  toConsumableArray: toConsumableArray,
  typeof: _typeof,
  extends: _extends,
  instanceof: _instanceof
});

var realDefineProp = function () {
    var sentinel = function sentinel() {};
    try {
        Object.defineProperty(sentinel, 'a', {
            get: function get() {
                return 1;
            }
        });
        Object.defineProperty(sentinel, 'prototype', { writable: false });
        return sentinel.a === 1 && sentinel.prototype instanceof Object;
    } catch (e) {
        return false;
    }
}();

// Need a workaround for getters in ES3
var es3 = !realDefineProp && !Object.prototype.__defineGetter__;

// We use this a lot (and need it for proto-less objects)
var hop = Object.prototype.hasOwnProperty;

// Naive defineProperty for compatibility
var defineProperty = realDefineProp ? Object.defineProperty : function (obj, name, desc) {
    if ('get' in desc && obj.__defineGetter__) obj.__defineGetter__(name, desc.get);else if (!hop.call(obj, name) || 'value' in desc) obj[name] = desc.value;
};

// Array.prototype.indexOf, as good as we need it to be
var arrIndexOf = Array.prototype.indexOf || function (search) {
    /*jshint validthis:true */
    var t = this;
    if (!t.length) return -1;

    for (var i = arguments[1] || 0, max = t.length; i < max; i++) {
        if (t[i] === search) return i;
    }

    return -1;
};

// Create an object with the specified prototype (2nd arg required for Record)
var objCreate = Object.create || function (proto, props) {
    var obj = void 0;

    function F() {}
    F.prototype = proto;
    obj = new F();

    for (var k in props) {
        if (hop.call(props, k)) defineProperty(obj, k, props[k]);
    }

    return obj;
};

// Snapshot some (hopefully still) native built-ins
var arrSlice = Array.prototype.slice;
var arrConcat = Array.prototype.concat;
var arrPush = Array.prototype.push;
var arrJoin = Array.prototype.join;
var arrShift = Array.prototype.shift;

// Naive Function.prototype.bind for compatibility
var fnBind = Function.prototype.bind || function (thisObj) {
    var fn = this,
        args = arrSlice.call(arguments, 1);

    // All our (presently) bound functions have either 1 or 0 arguments. By returning
    // different function signatures, we can pass some tests in ES3 environments
    if (fn.length === 1) {
        return function () {
            return fn.apply(thisObj, arrConcat.call(args, arrSlice.call(arguments)));
        };
    }
    return function () {
        return fn.apply(thisObj, arrConcat.call(args, arrSlice.call(arguments)));
    };
};

// Object housing internal properties for constructors
var internals = objCreate(null);

// Keep internal properties internal
var secret = Math.random();

// Helper functions
// ================

/**
 * A function to deal with the inaccuracy of calculating log10 in pre-ES6
 * JavaScript environments. Math.log(num) / Math.LN10 was responsible for
 * causing issue #62.
 */
function log10Floor(n) {
    // ES6 provides the more accurate Math.log10
    if (typeof Math.log10 === 'function') return Math.floor(Math.log10(n));

    var x = Math.round(Math.log(n) * Math.LOG10E);
    return x - (Number('1e' + x) > n);
}

/**
 * A map that doesn't contain Object in its prototype chain
 */
function Record(obj) {
    // Copy only own properties over unless this object is already a Record instance
    for (var k in obj) {
        if (obj instanceof Record || hop.call(obj, k)) defineProperty(this, k, { value: obj[k], enumerable: true, writable: true, configurable: true });
    }
}
Record.prototype = objCreate(null);

/**
 * An ordered list
 */
function List() {
    defineProperty(this, 'length', { writable: true, value: 0 });

    if (arguments.length) arrPush.apply(this, arrSlice.call(arguments));
}
List.prototype = objCreate(null);

/**
 * Constructs a regular expression to restore tainted RegExp properties
 */
function createRegExpRestore() {
    if (internals.disableRegExpRestore) {
        return function () {/* no-op */};
    }

    var regExpCache = {
        lastMatch: RegExp.lastMatch || '',
        leftContext: RegExp.leftContext,
        multiline: RegExp.multiline,
        input: RegExp.input
    },
        has = false;

    // Create a snapshot of all the 'captured' properties
    for (var i = 1; i <= 9; i++) {
        has = (regExpCache['$' + i] = RegExp['$' + i]) || has;
    }return function () {
        // Now we've snapshotted some properties, escape the lastMatch string
        var esc = /[.?*+^$[\]\\(){}|-]/g,
            lm = regExpCache.lastMatch.replace(esc, '\\$&'),
            reg = new List();

        // If any of the captured strings were non-empty, iterate over them all
        if (has) {
            for (var _i = 1; _i <= 9; _i++) {
                var m = regExpCache['$' + _i];

                // If it's empty, add an empty capturing group
                if (!m) lm = '()' + lm;

                // Else find the string in lm and escape & wrap it to capture it
                else {
                        m = m.replace(esc, '\\$&');
                        lm = lm.replace(m, '(' + m + ')');
                    }

                // Push it to the reg and chop lm to make sure further groups come after
                arrPush.call(reg, lm.slice(0, lm.indexOf('(') + 1));
                lm = lm.slice(lm.indexOf('(') + 1);
            }
        }

        var exprStr = arrJoin.call(reg, '') + lm;

        // Shorten the regex by replacing each part of the expression with a match
        // for a string of that exact length.  This is safe for the type of
        // expressions generated above, because the expression matches the whole
        // match string, so we know each group and each segment between capturing
        // groups can be matched by its length alone.
        exprStr = exprStr.replace(/(\\\(|\\\)|[^()])+/g, function (match) {
            return '[\\s\\S]{' + match.replace('\\', '').length + '}';
        });

        // Create the regular expression that will reconstruct the RegExp properties
        var expr = new RegExp(exprStr, regExpCache.multiline ? 'gm' : 'g');

        // Set the lastIndex of the generated expression to ensure that the match
        // is found in the correct index.
        expr.lastIndex = regExpCache.leftContext.length;

        expr.exec(regExpCache.input);
    };
}

/**
 * Mimics ES5's abstract ToObject() function
 */
function toObject(arg) {
    if (arg === null) throw new TypeError('Cannot convert null or undefined to object');

    if ((typeof arg === 'undefined' ? 'undefined' : babelHelpers$1['typeof'](arg)) === 'object') return arg;
    return Object(arg);
}

function toNumber(arg) {
    if (typeof arg === 'number') return arg;
    return Number(arg);
}

function toInteger(arg) {
    var number = toNumber(arg);
    if (isNaN(number)) return 0;
    if (number === +0 || number === -0 || number === +Infinity || number === -Infinity) return number;
    if (number < 0) return Math.floor(Math.abs(number)) * -1;
    return Math.floor(Math.abs(number));
}

function toLength(arg) {
    var len = toInteger(arg);
    if (len <= 0) return 0;
    if (len === Infinity) return Math.pow(2, 53) - 1;
    return Math.min(len, Math.pow(2, 53) - 1);
}

/**
 * Returns "internal" properties for an object
 */
function getInternalProperties(obj) {
    if (hop.call(obj, '__getInternalProperties')) return obj.__getInternalProperties(secret);

    return objCreate(null);
}

/**
* Defines regular expressions for various operations related to the BCP 47 syntax,
* as defined at http://tools.ietf.org/html/bcp47#section-2.1
*/

// extlang       = 3ALPHA              ; selected ISO 639 codes
//                 *2("-" 3ALPHA)      ; permanently reserved
var extlang = '[a-z]{3}(?:-[a-z]{3}){0,2}';

// language      = 2*3ALPHA            ; shortest ISO 639 code
//                 ["-" extlang]       ; sometimes followed by
//                                     ; extended language subtags
//               / 4ALPHA              ; or reserved for future use
//               / 5*8ALPHA            ; or registered language subtag
var language = '(?:[a-z]{2,3}(?:-' + extlang + ')?|[a-z]{4}|[a-z]{5,8})';

// script        = 4ALPHA              ; ISO 15924 code
var script = '[a-z]{4}';

// region        = 2ALPHA              ; ISO 3166-1 code
//               / 3DIGIT              ; UN M.49 code
var region = '(?:[a-z]{2}|\\d{3})';

// variant       = 5*8alphanum         ; registered variants
//               / (DIGIT 3alphanum)
var variant = '(?:[a-z0-9]{5,8}|\\d[a-z0-9]{3})';

//                                     ; Single alphanumerics
//                                     ; "x" reserved for private use
// singleton     = DIGIT               ; 0 - 9
//               / %x41-57             ; A - W
//               / %x59-5A             ; Y - Z
//               / %x61-77             ; a - w
//               / %x79-7A             ; y - z
var singleton = '[0-9a-wy-z]';

// extension     = singleton 1*("-" (2*8alphanum))
var extension = singleton + '(?:-[a-z0-9]{2,8})+';

// privateuse    = "x" 1*("-" (1*8alphanum))
var privateuse = 'x(?:-[a-z0-9]{1,8})+';

// irregular     = "en-GB-oed"         ; irregular tags do not match
//               / "i-ami"             ; the 'langtag' production and
//               / "i-bnn"             ; would not otherwise be
//               / "i-default"         ; considered 'well-formed'
//               / "i-enochian"        ; These tags are all valid,
//               / "i-hak"             ; but most are deprecated
//               / "i-klingon"         ; in favor of more modern
//               / "i-lux"             ; subtags or subtag
//               / "i-mingo"           ; combination
//               / "i-navajo"
//               / "i-pwn"
//               / "i-tao"
//               / "i-tay"
//               / "i-tsu"
//               / "sgn-BE-FR"
//               / "sgn-BE-NL"
//               / "sgn-CH-DE"
var irregular = '(?:en-GB-oed' + '|i-(?:ami|bnn|default|enochian|hak|klingon|lux|mingo|navajo|pwn|tao|tay|tsu)' + '|sgn-(?:BE-FR|BE-NL|CH-DE))';

// regular       = "art-lojban"        ; these tags match the 'langtag'
//               / "cel-gaulish"       ; production, but their subtags
//               / "no-bok"            ; are not extended language
//               / "no-nyn"            ; or variant subtags: their meaning
//               / "zh-guoyu"          ; is defined by their registration
//               / "zh-hakka"          ; and all of these are deprecated
//               / "zh-min"            ; in favor of a more modern
//               / "zh-min-nan"        ; subtag or sequence of subtags
//               / "zh-xiang"
var regular = '(?:art-lojban|cel-gaulish|no-bok|no-nyn' + '|zh-(?:guoyu|hakka|min|min-nan|xiang))';

// grandfathered = irregular           ; non-redundant tags registered
//               / regular             ; during the RFC 3066 era
var grandfathered = '(?:' + irregular + '|' + regular + ')';

// langtag       = language
//                 ["-" script]
//                 ["-" region]
//                 *("-" variant)
//                 *("-" extension)
//                 ["-" privateuse]
var langtag = language + '(?:-' + script + ')?(?:-' + region + ')?(?:-' + variant + ')*(?:-' + extension + ')*(?:-' + privateuse + ')?';

// Language-Tag  = langtag             ; normal language tags
//               / privateuse          ; private use tag
//               / grandfathered       ; grandfathered tags
var expBCP47Syntax = RegExp('^(?:' + langtag + '|' + privateuse + '|' + grandfathered + ')$', 'i');

// Match duplicate variants in a language tag
var expVariantDupes = RegExp('^(?!x).*?-(' + variant + ')-(?:\\w{4,8}-(?!x-))*\\1\\b', 'i');

// Match duplicate singletons in a language tag (except in private use)
var expSingletonDupes = RegExp('^(?!x).*?-(' + singleton + ')-(?:\\w+-(?!x-))*\\1\\b', 'i');

// Match all extension sequences
var expExtSequences = RegExp('-' + extension, 'ig');

// Default locale is the first-added locale data for us
var defaultLocale = void 0;
function setDefaultLocale(locale) {
    defaultLocale = locale;
}

// IANA Subtag Registry redundant tag and subtag maps
var redundantTags = {
    tags: {
        "art-lojban": "jbo",
        "i-ami": "ami",
        "i-bnn": "bnn",
        "i-hak": "hak",
        "i-klingon": "tlh",
        "i-lux": "lb",
        "i-navajo": "nv",
        "i-pwn": "pwn",
        "i-tao": "tao",
        "i-tay": "tay",
        "i-tsu": "tsu",
        "no-bok": "nb",
        "no-nyn": "nn",
        "sgn-BE-FR": "sfb",
        "sgn-BE-NL": "vgt",
        "sgn-CH-DE": "sgg",
        "zh-guoyu": "cmn",
        "zh-hakka": "hak",
        "zh-min-nan": "nan",
        "zh-xiang": "hsn",
        "sgn-BR": "bzs",
        "sgn-CO": "csn",
        "sgn-DE": "gsg",
        "sgn-DK": "dsl",
        "sgn-ES": "ssp",
        "sgn-FR": "fsl",
        "sgn-GB": "bfi",
        "sgn-GR": "gss",
        "sgn-IE": "isg",
        "sgn-IT": "ise",
        "sgn-JP": "jsl",
        "sgn-MX": "mfs",
        "sgn-NI": "ncs",
        "sgn-NL": "dse",
        "sgn-NO": "nsl",
        "sgn-PT": "psr",
        "sgn-SE": "swl",
        "sgn-US": "ase",
        "sgn-ZA": "sfs",
        "zh-cmn": "cmn",
        "zh-cmn-Hans": "cmn-Hans",
        "zh-cmn-Hant": "cmn-Hant",
        "zh-gan": "gan",
        "zh-wuu": "wuu",
        "zh-yue": "yue"
    },
    subtags: {
        BU: "MM",
        DD: "DE",
        FX: "FR",
        TP: "TL",
        YD: "YE",
        ZR: "CD",
        heploc: "alalc97",
        'in': "id",
        iw: "he",
        ji: "yi",
        jw: "jv",
        mo: "ro",
        ayx: "nun",
        bjd: "drl",
        ccq: "rki",
        cjr: "mom",
        cka: "cmr",
        cmk: "xch",
        drh: "khk",
        drw: "prs",
        gav: "dev",
        hrr: "jal",
        ibi: "opa",
        kgh: "kml",
        lcq: "ppr",
        mst: "mry",
        myt: "mry",
        sca: "hle",
        tie: "ras",
        tkk: "twm",
        tlw: "weo",
        tnf: "prs",
        ybd: "rki",
        yma: "lrr"
    },
    extLang: {
        aao: ["aao", "ar"],
        abh: ["abh", "ar"],
        abv: ["abv", "ar"],
        acm: ["acm", "ar"],
        acq: ["acq", "ar"],
        acw: ["acw", "ar"],
        acx: ["acx", "ar"],
        acy: ["acy", "ar"],
        adf: ["adf", "ar"],
        ads: ["ads", "sgn"],
        aeb: ["aeb", "ar"],
        aec: ["aec", "ar"],
        aed: ["aed", "sgn"],
        aen: ["aen", "sgn"],
        afb: ["afb", "ar"],
        afg: ["afg", "sgn"],
        ajp: ["ajp", "ar"],
        apc: ["apc", "ar"],
        apd: ["apd", "ar"],
        arb: ["arb", "ar"],
        arq: ["arq", "ar"],
        ars: ["ars", "ar"],
        ary: ["ary", "ar"],
        arz: ["arz", "ar"],
        ase: ["ase", "sgn"],
        asf: ["asf", "sgn"],
        asp: ["asp", "sgn"],
        asq: ["asq", "sgn"],
        asw: ["asw", "sgn"],
        auz: ["auz", "ar"],
        avl: ["avl", "ar"],
        ayh: ["ayh", "ar"],
        ayl: ["ayl", "ar"],
        ayn: ["ayn", "ar"],
        ayp: ["ayp", "ar"],
        bbz: ["bbz", "ar"],
        bfi: ["bfi", "sgn"],
        bfk: ["bfk", "sgn"],
        bjn: ["bjn", "ms"],
        bog: ["bog", "sgn"],
        bqn: ["bqn", "sgn"],
        bqy: ["bqy", "sgn"],
        btj: ["btj", "ms"],
        bve: ["bve", "ms"],
        bvl: ["bvl", "sgn"],
        bvu: ["bvu", "ms"],
        bzs: ["bzs", "sgn"],
        cdo: ["cdo", "zh"],
        cds: ["cds", "sgn"],
        cjy: ["cjy", "zh"],
        cmn: ["cmn", "zh"],
        coa: ["coa", "ms"],
        cpx: ["cpx", "zh"],
        csc: ["csc", "sgn"],
        csd: ["csd", "sgn"],
        cse: ["cse", "sgn"],
        csf: ["csf", "sgn"],
        csg: ["csg", "sgn"],
        csl: ["csl", "sgn"],
        csn: ["csn", "sgn"],
        csq: ["csq", "sgn"],
        csr: ["csr", "sgn"],
        czh: ["czh", "zh"],
        czo: ["czo", "zh"],
        doq: ["doq", "sgn"],
        dse: ["dse", "sgn"],
        dsl: ["dsl", "sgn"],
        dup: ["dup", "ms"],
        ecs: ["ecs", "sgn"],
        esl: ["esl", "sgn"],
        esn: ["esn", "sgn"],
        eso: ["eso", "sgn"],
        eth: ["eth", "sgn"],
        fcs: ["fcs", "sgn"],
        fse: ["fse", "sgn"],
        fsl: ["fsl", "sgn"],
        fss: ["fss", "sgn"],
        gan: ["gan", "zh"],
        gds: ["gds", "sgn"],
        gom: ["gom", "kok"],
        gse: ["gse", "sgn"],
        gsg: ["gsg", "sgn"],
        gsm: ["gsm", "sgn"],
        gss: ["gss", "sgn"],
        gus: ["gus", "sgn"],
        hab: ["hab", "sgn"],
        haf: ["haf", "sgn"],
        hak: ["hak", "zh"],
        hds: ["hds", "sgn"],
        hji: ["hji", "ms"],
        hks: ["hks", "sgn"],
        hos: ["hos", "sgn"],
        hps: ["hps", "sgn"],
        hsh: ["hsh", "sgn"],
        hsl: ["hsl", "sgn"],
        hsn: ["hsn", "zh"],
        icl: ["icl", "sgn"],
        ils: ["ils", "sgn"],
        inl: ["inl", "sgn"],
        ins: ["ins", "sgn"],
        ise: ["ise", "sgn"],
        isg: ["isg", "sgn"],
        isr: ["isr", "sgn"],
        jak: ["jak", "ms"],
        jax: ["jax", "ms"],
        jcs: ["jcs", "sgn"],
        jhs: ["jhs", "sgn"],
        jls: ["jls", "sgn"],
        jos: ["jos", "sgn"],
        jsl: ["jsl", "sgn"],
        jus: ["jus", "sgn"],
        kgi: ["kgi", "sgn"],
        knn: ["knn", "kok"],
        kvb: ["kvb", "ms"],
        kvk: ["kvk", "sgn"],
        kvr: ["kvr", "ms"],
        kxd: ["kxd", "ms"],
        lbs: ["lbs", "sgn"],
        lce: ["lce", "ms"],
        lcf: ["lcf", "ms"],
        liw: ["liw", "ms"],
        lls: ["lls", "sgn"],
        lsg: ["lsg", "sgn"],
        lsl: ["lsl", "sgn"],
        lso: ["lso", "sgn"],
        lsp: ["lsp", "sgn"],
        lst: ["lst", "sgn"],
        lsy: ["lsy", "sgn"],
        ltg: ["ltg", "lv"],
        lvs: ["lvs", "lv"],
        lzh: ["lzh", "zh"],
        max: ["max", "ms"],
        mdl: ["mdl", "sgn"],
        meo: ["meo", "ms"],
        mfa: ["mfa", "ms"],
        mfb: ["mfb", "ms"],
        mfs: ["mfs", "sgn"],
        min: ["min", "ms"],
        mnp: ["mnp", "zh"],
        mqg: ["mqg", "ms"],
        mre: ["mre", "sgn"],
        msd: ["msd", "sgn"],
        msi: ["msi", "ms"],
        msr: ["msr", "sgn"],
        mui: ["mui", "ms"],
        mzc: ["mzc", "sgn"],
        mzg: ["mzg", "sgn"],
        mzy: ["mzy", "sgn"],
        nan: ["nan", "zh"],
        nbs: ["nbs", "sgn"],
        ncs: ["ncs", "sgn"],
        nsi: ["nsi", "sgn"],
        nsl: ["nsl", "sgn"],
        nsp: ["nsp", "sgn"],
        nsr: ["nsr", "sgn"],
        nzs: ["nzs", "sgn"],
        okl: ["okl", "sgn"],
        orn: ["orn", "ms"],
        ors: ["ors", "ms"],
        pel: ["pel", "ms"],
        pga: ["pga", "ar"],
        pks: ["pks", "sgn"],
        prl: ["prl", "sgn"],
        prz: ["prz", "sgn"],
        psc: ["psc", "sgn"],
        psd: ["psd", "sgn"],
        pse: ["pse", "ms"],
        psg: ["psg", "sgn"],
        psl: ["psl", "sgn"],
        pso: ["pso", "sgn"],
        psp: ["psp", "sgn"],
        psr: ["psr", "sgn"],
        pys: ["pys", "sgn"],
        rms: ["rms", "sgn"],
        rsi: ["rsi", "sgn"],
        rsl: ["rsl", "sgn"],
        sdl: ["sdl", "sgn"],
        sfb: ["sfb", "sgn"],
        sfs: ["sfs", "sgn"],
        sgg: ["sgg", "sgn"],
        sgx: ["sgx", "sgn"],
        shu: ["shu", "ar"],
        slf: ["slf", "sgn"],
        sls: ["sls", "sgn"],
        sqk: ["sqk", "sgn"],
        sqs: ["sqs", "sgn"],
        ssh: ["ssh", "ar"],
        ssp: ["ssp", "sgn"],
        ssr: ["ssr", "sgn"],
        svk: ["svk", "sgn"],
        swc: ["swc", "sw"],
        swh: ["swh", "sw"],
        swl: ["swl", "sgn"],
        syy: ["syy", "sgn"],
        tmw: ["tmw", "ms"],
        tse: ["tse", "sgn"],
        tsm: ["tsm", "sgn"],
        tsq: ["tsq", "sgn"],
        tss: ["tss", "sgn"],
        tsy: ["tsy", "sgn"],
        tza: ["tza", "sgn"],
        ugn: ["ugn", "sgn"],
        ugy: ["ugy", "sgn"],
        ukl: ["ukl", "sgn"],
        uks: ["uks", "sgn"],
        urk: ["urk", "ms"],
        uzn: ["uzn", "uz"],
        uzs: ["uzs", "uz"],
        vgt: ["vgt", "sgn"],
        vkk: ["vkk", "ms"],
        vkt: ["vkt", "ms"],
        vsi: ["vsi", "sgn"],
        vsl: ["vsl", "sgn"],
        vsv: ["vsv", "sgn"],
        wuu: ["wuu", "zh"],
        xki: ["xki", "sgn"],
        xml: ["xml", "sgn"],
        xmm: ["xmm", "ms"],
        xms: ["xms", "sgn"],
        yds: ["yds", "sgn"],
        ysl: ["ysl", "sgn"],
        yue: ["yue", "zh"],
        zib: ["zib", "sgn"],
        zlm: ["zlm", "ms"],
        zmi: ["zmi", "ms"],
        zsl: ["zsl", "sgn"],
        zsm: ["zsm", "ms"]
    }
};

/**
 * Convert only a-z to uppercase as per section 6.1 of the spec
 */
function toLatinUpperCase(str) {
    var i = str.length;

    while (i--) {
        var ch = str.charAt(i);

        if (ch >= "a" && ch <= "z") str = str.slice(0, i) + ch.toUpperCase() + str.slice(i + 1);
    }

    return str;
}

/**
 * The IsStructurallyValidLanguageTag abstract operation verifies that the locale
 * argument (which must be a String value)
 *
 * - represents a well-formed BCP 47 language tag as specified in RFC 5646 section
 *   2.1, or successor,
 * - does not include duplicate variant subtags, and
 * - does not include duplicate singleton subtags.
 *
 * The abstract operation returns true if locale can be generated from the ABNF
 * grammar in section 2.1 of the RFC, starting with Language-Tag, and does not
 * contain duplicate variant or singleton subtags (other than as a private use
 * subtag). It returns false otherwise. Terminal value characters in the grammar are
 * interpreted as the Unicode equivalents of the ASCII octet values given.
 */
function /* 6.2.2 */IsStructurallyValidLanguageTag(locale) {
    // represents a well-formed BCP 47 language tag as specified in RFC 5646
    if (!expBCP47Syntax.test(locale)) return false;

    // does not include duplicate variant subtags, and
    if (expVariantDupes.test(locale)) return false;

    // does not include duplicate singleton subtags.
    if (expSingletonDupes.test(locale)) return false;

    return true;
}

/**
 * The CanonicalizeLanguageTag abstract operation returns the canonical and case-
 * regularized form of the locale argument (which must be a String value that is
 * a structurally valid BCP 47 language tag as verified by the
 * IsStructurallyValidLanguageTag abstract operation). It takes the steps
 * specified in RFC 5646 section 4.5, or successor, to bring the language tag
 * into canonical form, and to regularize the case of the subtags, but does not
 * take the steps to bring a language tag into “extlang form” and to reorder
 * variant subtags.

 * The specifications for extensions to BCP 47 language tags, such as RFC 6067,
 * may include canonicalization rules for the extension subtag sequences they
 * define that go beyond the canonicalization rules of RFC 5646 section 4.5.
 * Implementations are allowed, but not required, to apply these additional rules.
 */
function /* 6.2.3 */CanonicalizeLanguageTag(locale) {
    var match = void 0,
        parts = void 0;

    // A language tag is in 'canonical form' when the tag is well-formed
    // according to the rules in Sections 2.1 and 2.2

    // Section 2.1 says all subtags use lowercase...
    locale = locale.toLowerCase();

    // ...with 2 exceptions: 'two-letter and four-letter subtags that neither
    // appear at the start of the tag nor occur after singletons.  Such two-letter
    // subtags are all uppercase (as in the tags "en-CA-x-ca" or "sgn-BE-FR") and
    // four-letter subtags are titlecase (as in the tag "az-Latn-x-latn").
    parts = locale.split('-');
    for (var i = 1, max = parts.length; i < max; i++) {
        // Two-letter subtags are all uppercase
        if (parts[i].length === 2) parts[i] = parts[i].toUpperCase();

        // Four-letter subtags are titlecase
        else if (parts[i].length === 4) parts[i] = parts[i].charAt(0).toUpperCase() + parts[i].slice(1);

            // Is it a singleton?
            else if (parts[i].length === 1 && parts[i] !== 'x') break;
    }
    locale = arrJoin.call(parts, '-');

    // The steps laid out in RFC 5646 section 4.5 are as follows:

    // 1.  Extension sequences are ordered into case-insensitive ASCII order
    //     by singleton subtag.
    if ((match = locale.match(expExtSequences)) && match.length > 1) {
        // The built-in sort() sorts by ASCII order, so use that
        match.sort();

        // Replace all extensions with the joined, sorted array
        locale = locale.replace(RegExp('(?:' + expExtSequences.source + ')+', 'i'), arrJoin.call(match, ''));
    }

    // 2.  Redundant or grandfathered tags are replaced by their 'Preferred-
    //     Value', if there is one.
    if (hop.call(redundantTags.tags, locale)) locale = redundantTags.tags[locale];

    // 3.  Subtags are replaced by their 'Preferred-Value', if there is one.
    //     For extlangs, the original primary language subtag is also
    //     replaced if there is a primary language subtag in the 'Preferred-
    //     Value'.
    parts = locale.split('-');

    for (var _i = 1, _max = parts.length; _i < _max; _i++) {
        if (hop.call(redundantTags.subtags, parts[_i])) parts[_i] = redundantTags.subtags[parts[_i]];else if (hop.call(redundantTags.extLang, parts[_i])) {
            parts[_i] = redundantTags.extLang[parts[_i]][0];

            // For extlang tags, the prefix needs to be removed if it is redundant
            if (_i === 1 && redundantTags.extLang[parts[1]][1] === parts[0]) {
                parts = arrSlice.call(parts, _i++);
                _max -= 1;
            }
        }
    }

    return arrJoin.call(parts, '-');
}

/**
 * The DefaultLocale abstract operation returns a String value representing the
 * structurally valid (6.2.2) and canonicalized (6.2.3) BCP 47 language tag for the
 * host environment’s current locale.
 */
function /* 6.2.4 */DefaultLocale() {
    return defaultLocale;
}

// Sect 6.3 Currency Codes
// =======================

var expCurrencyCode = /^[A-Z]{3}$/;

/**
 * The IsWellFormedCurrencyCode abstract operation verifies that the currency argument
 * (after conversion to a String value) represents a well-formed 3-letter ISO currency
 * code. The following steps are taken:
 */
function /* 6.3.1 */IsWellFormedCurrencyCode(currency) {
    // 1. Let `c` be ToString(currency)
    var c = String(currency);

    // 2. Let `normalized` be the result of mapping c to upper case as described
    //    in 6.1.
    var normalized = toLatinUpperCase(c);

    // 3. If the string length of normalized is not 3, return false.
    // 4. If normalized contains any character that is not in the range "A" to "Z"
    //    (U+0041 to U+005A), return false.
    if (expCurrencyCode.test(normalized) === false) return false;

    // 5. Return true
    return true;
}

var expUnicodeExSeq = /-u(?:-[0-9a-z]{2,8})+/gi; // See `extension` below

function /* 9.2.1 */CanonicalizeLocaleList(locales) {
    // The abstract operation CanonicalizeLocaleList takes the following steps:

    // 1. If locales is undefined, then a. Return a new empty List
    if (locales === undefined) return new List();

    // 2. Let seen be a new empty List.
    var seen = new List();

    // 3. If locales is a String value, then
    //    a. Let locales be a new array created as if by the expression new
    //    Array(locales) where Array is the standard built-in constructor with
    //    that name and locales is the value of locales.
    locales = typeof locales === 'string' ? [locales] : locales;

    // 4. Let O be ToObject(locales).
    var O = toObject(locales);

    // 5. Let lenValue be the result of calling the [[Get]] internal method of
    //    O with the argument "length".
    // 6. Let len be ToUint32(lenValue).
    var len = toLength(O.length);

    // 7. Let k be 0.
    var k = 0;

    // 8. Repeat, while k < len
    while (k < len) {
        // a. Let Pk be ToString(k).
        var Pk = String(k);

        // b. Let kPresent be the result of calling the [[HasProperty]] internal
        //    method of O with argument Pk.
        var kPresent = Pk in O;

        // c. If kPresent is true, then
        if (kPresent) {
            // i. Let kValue be the result of calling the [[Get]] internal
            //     method of O with argument Pk.
            var kValue = O[Pk];

            // ii. If the type of kValue is not String or Object, then throw a
            //     TypeError exception.
            if (kValue === null || typeof kValue !== 'string' && (typeof kValue === "undefined" ? "undefined" : babelHelpers$1["typeof"](kValue)) !== 'object') throw new TypeError('String or Object type expected');

            // iii. Let tag be ToString(kValue).
            var tag = String(kValue);

            // iv. If the result of calling the abstract operation
            //     IsStructurallyValidLanguageTag (defined in 6.2.2), passing tag as
            //     the argument, is false, then throw a RangeError exception.
            if (!IsStructurallyValidLanguageTag(tag)) throw new RangeError("'" + tag + "' is not a structurally valid language tag");

            // v. Let tag be the result of calling the abstract operation
            //    CanonicalizeLanguageTag (defined in 6.2.3), passing tag as the
            //    argument.
            tag = CanonicalizeLanguageTag(tag);

            // vi. If tag is not an element of seen, then append tag as the last
            //     element of seen.
            if (arrIndexOf.call(seen, tag) === -1) arrPush.call(seen, tag);
        }

        // d. Increase k by 1.
        k++;
    }

    // 9. Return seen.
    return seen;
}

/**
 * The BestAvailableLocale abstract operation compares the provided argument
 * locale, which must be a String value with a structurally valid and
 * canonicalized BCP 47 language tag, against the locales in availableLocales and
 * returns either the longest non-empty prefix of locale that is an element of
 * availableLocales, or undefined if there is no such element. It uses the
 * fallback mechanism of RFC 4647, section 3.4. The following steps are taken:
 */
function /* 9.2.2 */BestAvailableLocale(availableLocales, locale) {
    // 1. Let candidate be locale
    var candidate = locale;

    // 2. Repeat
    while (candidate) {
        // a. If availableLocales contains an element equal to candidate, then return
        // candidate.
        if (arrIndexOf.call(availableLocales, candidate) > -1) return candidate;

        // b. Let pos be the character index of the last occurrence of "-"
        // (U+002D) within candidate. If that character does not occur, return
        // undefined.
        var pos = candidate.lastIndexOf('-');

        if (pos < 0) return;

        // c. If pos ≥ 2 and the character "-" occurs at index pos-2 of candidate,
        //    then decrease pos by 2.
        if (pos >= 2 && candidate.charAt(pos - 2) === '-') pos -= 2;

        // d. Let candidate be the substring of candidate from position 0, inclusive,
        //    to position pos, exclusive.
        candidate = candidate.substring(0, pos);
    }
}

/**
 * The LookupMatcher abstract operation compares requestedLocales, which must be
 * a List as returned by CanonicalizeLocaleList, against the locales in
 * availableLocales and determines the best available language to meet the
 * request. The following steps are taken:
 */
function /* 9.2.3 */LookupMatcher(availableLocales, requestedLocales) {
    // 1. Let i be 0.
    var i = 0;

    // 2. Let len be the number of elements in requestedLocales.
    var len = requestedLocales.length;

    // 3. Let availableLocale be undefined.
    var availableLocale = void 0;

    var locale = void 0,
        noExtensionsLocale = void 0;

    // 4. Repeat while i < len and availableLocale is undefined:
    while (i < len && !availableLocale) {
        // a. Let locale be the element of requestedLocales at 0-origined list
        //    position i.
        locale = requestedLocales[i];

        // b. Let noExtensionsLocale be the String value that is locale with all
        //    Unicode locale extension sequences removed.
        noExtensionsLocale = String(locale).replace(expUnicodeExSeq, '');

        // c. Let availableLocale be the result of calling the
        //    BestAvailableLocale abstract operation (defined in 9.2.2) with
        //    arguments availableLocales and noExtensionsLocale.
        availableLocale = BestAvailableLocale(availableLocales, noExtensionsLocale);

        // d. Increase i by 1.
        i++;
    }

    // 5. Let result be a new Record.
    var result = new Record();

    // 6. If availableLocale is not undefined, then
    if (availableLocale !== undefined) {
        // a. Set result.[[locale]] to availableLocale.
        result['[[locale]]'] = availableLocale;

        // b. If locale and noExtensionsLocale are not the same String value, then
        if (String(locale) !== String(noExtensionsLocale)) {
            // i. Let extension be the String value consisting of the first
            //    substring of locale that is a Unicode locale extension sequence.
            var extension = locale.match(expUnicodeExSeq)[0];

            // ii. Let extensionIndex be the character position of the initial
            //     "-" of the first Unicode locale extension sequence within locale.
            var extensionIndex = locale.indexOf('-u-');

            // iii. Set result.[[extension]] to extension.
            result['[[extension]]'] = extension;

            // iv. Set result.[[extensionIndex]] to extensionIndex.
            result['[[extensionIndex]]'] = extensionIndex;
        }
    }
    // 7. Else
    else
        // a. Set result.[[locale]] to the value returned by the DefaultLocale abstract
        //    operation (defined in 6.2.4).
        result['[[locale]]'] = DefaultLocale();

    // 8. Return result
    return result;
}

/**
 * The BestFitMatcher abstract operation compares requestedLocales, which must be
 * a List as returned by CanonicalizeLocaleList, against the locales in
 * availableLocales and determines the best available language to meet the
 * request. The algorithm is implementation dependent, but should produce results
 * that a typical user of the requested locales would perceive as at least as
 * good as those produced by the LookupMatcher abstract operation. Options
 * specified through Unicode locale extension sequences must be ignored by the
 * algorithm. Information about such subsequences is returned separately.
 * The abstract operation returns a record with a [[locale]] field, whose value
 * is the language tag of the selected locale, which must be an element of
 * availableLocales. If the language tag of the request locale that led to the
 * selected locale contained a Unicode locale extension sequence, then the
 * returned record also contains an [[extension]] field whose value is the first
 * Unicode locale extension sequence, and an [[extensionIndex]] field whose value
 * is the index of the first Unicode locale extension sequence within the request
 * locale language tag.
 */
function /* 9.2.4 */BestFitMatcher(availableLocales, requestedLocales) {
    return LookupMatcher(availableLocales, requestedLocales);
}

/**
 * The ResolveLocale abstract operation compares a BCP 47 language priority list
 * requestedLocales against the locales in availableLocales and determines the
 * best available language to meet the request. availableLocales and
 * requestedLocales must be provided as List values, options as a Record.
 */
function /* 9.2.5 */ResolveLocale(availableLocales, requestedLocales, options, relevantExtensionKeys, localeData) {
    if (availableLocales.length === 0) {
        throw new ReferenceError('No locale data has been provided for this object yet.');
    }

    // The following steps are taken:
    // 1. Let matcher be the value of options.[[localeMatcher]].
    var matcher = options['[[localeMatcher]]'];

    var r = void 0;

    // 2. If matcher is "lookup", then
    if (matcher === 'lookup')
        // a. Let r be the result of calling the LookupMatcher abstract operation
        //    (defined in 9.2.3) with arguments availableLocales and
        //    requestedLocales.
        r = LookupMatcher(availableLocales, requestedLocales);

        // 3. Else
    else
        // a. Let r be the result of calling the BestFitMatcher abstract
        //    operation (defined in 9.2.4) with arguments availableLocales and
        //    requestedLocales.
        r = BestFitMatcher(availableLocales, requestedLocales);

    // 4. Let foundLocale be the value of r.[[locale]].
    var foundLocale = r['[[locale]]'];

    var extensionSubtags = void 0,
        extensionSubtagsLength = void 0;

    // 5. If r has an [[extension]] field, then
    if (hop.call(r, '[[extension]]')) {
        // a. Let extension be the value of r.[[extension]].
        var extension = r['[[extension]]'];
        // b. Let split be the standard built-in function object defined in ES5,
        //    15.5.4.14.
        var split = String.prototype.split;
        // c. Let extensionSubtags be the result of calling the [[Call]] internal
        //    method of split with extension as the this value and an argument
        //    list containing the single item "-".
        extensionSubtags = split.call(extension, '-');
        // d. Let extensionSubtagsLength be the result of calling the [[Get]]
        //    internal method of extensionSubtags with argument "length".
        extensionSubtagsLength = extensionSubtags.length;
    }

    // 6. Let result be a new Record.
    var result = new Record();

    // 7. Set result.[[dataLocale]] to foundLocale.
    result['[[dataLocale]]'] = foundLocale;

    // 8. Let supportedExtension be "-u".
    var supportedExtension = '-u';
    // 9. Let i be 0.
    var i = 0;
    // 10. Let len be the result of calling the [[Get]] internal method of
    //     relevantExtensionKeys with argument "length".
    var len = relevantExtensionKeys.length;

    // 11 Repeat while i < len:
    while (i < len) {
        // a. Let key be the result of calling the [[Get]] internal method of
        //    relevantExtensionKeys with argument ToString(i).
        var key = relevantExtensionKeys[i];
        // b. Let foundLocaleData be the result of calling the [[Get]] internal
        //    method of localeData with the argument foundLocale.
        var foundLocaleData = localeData[foundLocale];
        // c. Let keyLocaleData be the result of calling the [[Get]] internal
        //    method of foundLocaleData with the argument key.
        var keyLocaleData = foundLocaleData[key];
        // d. Let value be the result of calling the [[Get]] internal method of
        //    keyLocaleData with argument "0".
        var value = keyLocaleData['0'];
        // e. Let supportedExtensionAddition be "".
        var supportedExtensionAddition = '';
        // f. Let indexOf be the standard built-in function object defined in
        //    ES5, 15.4.4.14.
        var indexOf = arrIndexOf;

        // g. If extensionSubtags is not undefined, then
        if (extensionSubtags !== undefined) {
            // i. Let keyPos be the result of calling the [[Call]] internal
            //    method of indexOf with extensionSubtags as the this value and
            // an argument list containing the single item key.
            var keyPos = indexOf.call(extensionSubtags, key);

            // ii. If keyPos ≠ -1, then
            if (keyPos !== -1) {
                // 1. If keyPos + 1 < extensionSubtagsLength and the length of the
                //    result of calling the [[Get]] internal method of
                //    extensionSubtags with argument ToString(keyPos +1) is greater
                //    than 2, then
                if (keyPos + 1 < extensionSubtagsLength && extensionSubtags[keyPos + 1].length > 2) {
                    // a. Let requestedValue be the result of calling the [[Get]]
                    //    internal method of extensionSubtags with argument
                    //    ToString(keyPos + 1).
                    var requestedValue = extensionSubtags[keyPos + 1];
                    // b. Let valuePos be the result of calling the [[Call]]
                    //    internal method of indexOf with keyLocaleData as the
                    //    this value and an argument list containing the single
                    //    item requestedValue.
                    var valuePos = indexOf.call(keyLocaleData, requestedValue);

                    // c. If valuePos ≠ -1, then
                    if (valuePos !== -1) {
                        // i. Let value be requestedValue.
                        value = requestedValue,
                        // ii. Let supportedExtensionAddition be the
                        //     concatenation of "-", key, "-", and value.
                        supportedExtensionAddition = '-' + key + '-' + value;
                    }
                }
                // 2. Else
                else {
                        // a. Let valuePos be the result of calling the [[Call]]
                        // internal method of indexOf with keyLocaleData as the this
                        // value and an argument list containing the single item
                        // "true".
                        var _valuePos = indexOf(keyLocaleData, 'true');

                        // b. If valuePos ≠ -1, then
                        if (_valuePos !== -1)
                            // i. Let value be "true".
                            value = 'true';
                    }
            }
        }
        // h. If options has a field [[<key>]], then
        if (hop.call(options, '[[' + key + ']]')) {
            // i. Let optionsValue be the value of options.[[<key>]].
            var optionsValue = options['[[' + key + ']]'];

            // ii. If the result of calling the [[Call]] internal method of indexOf
            //     with keyLocaleData as the this value and an argument list
            //     containing the single item optionsValue is not -1, then
            if (indexOf.call(keyLocaleData, optionsValue) !== -1) {
                // 1. If optionsValue is not equal to value, then
                if (optionsValue !== value) {
                    // a. Let value be optionsValue.
                    value = optionsValue;
                    // b. Let supportedExtensionAddition be "".
                    supportedExtensionAddition = '';
                }
            }
        }
        // i. Set result.[[<key>]] to value.
        result['[[' + key + ']]'] = value;

        // j. Append supportedExtensionAddition to supportedExtension.
        supportedExtension += supportedExtensionAddition;

        // k. Increase i by 1.
        i++;
    }
    // 12. If the length of supportedExtension is greater than 2, then
    if (supportedExtension.length > 2) {
        // a.
        var privateIndex = foundLocale.indexOf("-x-");
        // b.
        if (privateIndex === -1) {
            // i.
            foundLocale = foundLocale + supportedExtension;
        }
        // c.
        else {
                // i.
                var preExtension = foundLocale.substring(0, privateIndex);
                // ii.
                var postExtension = foundLocale.substring(privateIndex);
                // iii.
                foundLocale = preExtension + supportedExtension + postExtension;
            }
        // d. asserting - skipping
        // e.
        foundLocale = CanonicalizeLanguageTag(foundLocale);
    }
    // 13. Set result.[[locale]] to foundLocale.
    result['[[locale]]'] = foundLocale;

    // 14. Return result.
    return result;
}

/**
 * The LookupSupportedLocales abstract operation returns the subset of the
 * provided BCP 47 language priority list requestedLocales for which
 * availableLocales has a matching locale when using the BCP 47 Lookup algorithm.
 * Locales appear in the same order in the returned list as in requestedLocales.
 * The following steps are taken:
 */
function /* 9.2.6 */LookupSupportedLocales(availableLocales, requestedLocales) {
    // 1. Let len be the number of elements in requestedLocales.
    var len = requestedLocales.length;
    // 2. Let subset be a new empty List.
    var subset = new List();
    // 3. Let k be 0.
    var k = 0;

    // 4. Repeat while k < len
    while (k < len) {
        // a. Let locale be the element of requestedLocales at 0-origined list
        //    position k.
        var locale = requestedLocales[k];
        // b. Let noExtensionsLocale be the String value that is locale with all
        //    Unicode locale extension sequences removed.
        var noExtensionsLocale = String(locale).replace(expUnicodeExSeq, '');
        // c. Let availableLocale be the result of calling the
        //    BestAvailableLocale abstract operation (defined in 9.2.2) with
        //    arguments availableLocales and noExtensionsLocale.
        var availableLocale = BestAvailableLocale(availableLocales, noExtensionsLocale);

        // d. If availableLocale is not undefined, then append locale to the end of
        //    subset.
        if (availableLocale !== undefined) arrPush.call(subset, locale);

        // e. Increment k by 1.
        k++;
    }

    // 5. Let subsetArray be a new Array object whose elements are the same
    //    values in the same order as the elements of subset.
    var subsetArray = arrSlice.call(subset);

    // 6. Return subsetArray.
    return subsetArray;
}

/**
 * The BestFitSupportedLocales abstract operation returns the subset of the
 * provided BCP 47 language priority list requestedLocales for which
 * availableLocales has a matching locale when using the Best Fit Matcher
 * algorithm. Locales appear in the same order in the returned list as in
 * requestedLocales. The steps taken are implementation dependent.
 */
function /*9.2.7 */BestFitSupportedLocales(availableLocales, requestedLocales) {
    // ###TODO: implement this function as described by the specification###
    return LookupSupportedLocales(availableLocales, requestedLocales);
}

/**
 * The SupportedLocales abstract operation returns the subset of the provided BCP
 * 47 language priority list requestedLocales for which availableLocales has a
 * matching locale. Two algorithms are available to match the locales: the Lookup
 * algorithm described in RFC 4647 section 3.4, and an implementation dependent
 * best-fit algorithm. Locales appear in the same order in the returned list as
 * in requestedLocales. The following steps are taken:
 */
function /*9.2.8 */SupportedLocales(availableLocales, requestedLocales, options) {
    var matcher = void 0,
        subset = void 0;

    // 1. If options is not undefined, then
    if (options !== undefined) {
        // a. Let options be ToObject(options).
        options = new Record(toObject(options));
        // b. Let matcher be the result of calling the [[Get]] internal method of
        //    options with argument "localeMatcher".
        matcher = options.localeMatcher;

        // c. If matcher is not undefined, then
        if (matcher !== undefined) {
            // i. Let matcher be ToString(matcher).
            matcher = String(matcher);

            // ii. If matcher is not "lookup" or "best fit", then throw a RangeError
            //     exception.
            if (matcher !== 'lookup' && matcher !== 'best fit') throw new RangeError('matcher should be "lookup" or "best fit"');
        }
    }
    // 2. If matcher is undefined or "best fit", then
    if (matcher === undefined || matcher === 'best fit')
        // a. Let subset be the result of calling the BestFitSupportedLocales
        //    abstract operation (defined in 9.2.7) with arguments
        //    availableLocales and requestedLocales.
        subset = BestFitSupportedLocales(availableLocales, requestedLocales);
        // 3. Else
    else
        // a. Let subset be the result of calling the LookupSupportedLocales
        //    abstract operation (defined in 9.2.6) with arguments
        //    availableLocales and requestedLocales.
        subset = LookupSupportedLocales(availableLocales, requestedLocales);

    // 4. For each named own property name P of subset,
    for (var P in subset) {
        if (!hop.call(subset, P)) continue;

        // a. Let desc be the result of calling the [[GetOwnProperty]] internal
        //    method of subset with P.
        // b. Set desc.[[Writable]] to false.
        // c. Set desc.[[Configurable]] to false.
        // d. Call the [[DefineOwnProperty]] internal method of subset with P, desc,
        //    and true as arguments.
        defineProperty(subset, P, {
            writable: false, configurable: false, value: subset[P]
        });
    }
    // "Freeze" the array so no new elements can be added
    defineProperty(subset, 'length', { writable: false });

    // 5. Return subset
    return subset;
}

/**
 * The GetOption abstract operation extracts the value of the property named
 * property from the provided options object, converts it to the required type,
 * checks whether it is one of a List of allowed values, and fills in a fallback
 * value if necessary.
 */
function /*9.2.9 */GetOption(options, property, type, values, fallback) {
    // 1. Let value be the result of calling the [[Get]] internal method of
    //    options with argument property.
    var value = options[property];

    // 2. If value is not undefined, then
    if (value !== undefined) {
        // a. Assert: type is "boolean" or "string".
        // b. If type is "boolean", then let value be ToBoolean(value).
        // c. If type is "string", then let value be ToString(value).
        value = type === 'boolean' ? Boolean(value) : type === 'string' ? String(value) : value;

        // d. If values is not undefined, then
        if (values !== undefined) {
            // i. If values does not contain an element equal to value, then throw a
            //    RangeError exception.
            if (arrIndexOf.call(values, value) === -1) throw new RangeError("'" + value + "' is not an allowed value for `" + property + '`');
        }

        // e. Return value.
        return value;
    }
    // Else return fallback.
    return fallback;
}

/**
 * The GetNumberOption abstract operation extracts a property value from the
 * provided options object, converts it to a Number value, checks whether it is
 * in the allowed range, and fills in a fallback value if necessary.
 */
function /* 9.2.10 */GetNumberOption(options, property, minimum, maximum, fallback) {
    // 1. Let value be the result of calling the [[Get]] internal method of
    //    options with argument property.
    var value = options[property];

    // 2. If value is not undefined, then
    if (value !== undefined) {
        // a. Let value be ToNumber(value).
        value = Number(value);

        // b. If value is NaN or less than minimum or greater than maximum, throw a
        //    RangeError exception.
        if (isNaN(value) || value < minimum || value > maximum) throw new RangeError('Value is not a number or outside accepted range');

        // c. Return floor(value).
        return Math.floor(value);
    }
    // 3. Else return fallback.
    return fallback;
}

// 8 The Intl Object
var Intl = {};

// 8.2 Function Properties of the Intl Object

// 8.2.1
// @spec[tc39/ecma402/master/spec/intl.html]
// @clause[sec-intl.getcanonicallocales]
function getCanonicalLocales(locales) {
    // 1. Let ll be ? CanonicalizeLocaleList(locales).
    var ll = CanonicalizeLocaleList(locales);
    // 2. Return CreateArrayFromList(ll).
    {
        var result = [];

        var len = ll.length;
        var k = 0;

        while (k < len) {
            result[k] = ll[k];
            k++;
        }
        return result;
    }
}

Object.defineProperty(Intl, 'getCanonicalLocales', {
    enumerable: false,
    configurable: true,
    writable: true,
    value: getCanonicalLocales
});

// Currency minor units output from get-4217 grunt task, formatted
var currencyMinorUnits = {
    BHD: 3, BYR: 0, XOF: 0, BIF: 0, XAF: 0, CLF: 4, CLP: 0, KMF: 0, DJF: 0,
    XPF: 0, GNF: 0, ISK: 0, IQD: 3, JPY: 0, JOD: 3, KRW: 0, KWD: 3, LYD: 3,
    OMR: 3, PYG: 0, RWF: 0, TND: 3, UGX: 0, UYI: 0, VUV: 0, VND: 0
};

// Define the NumberFormat constructor internally so it cannot be tainted
function NumberFormatConstructor() {
    var locales = arguments[0];
    var options = arguments[1];

    if (!this || this === Intl) {
        return new Intl.NumberFormat(locales, options);
    }

    return InitializeNumberFormat(toObject(this), locales, options);
}

defineProperty(Intl, 'NumberFormat', {
    configurable: true,
    writable: true,
    value: NumberFormatConstructor
});

// Must explicitly set prototypes as unwritable
defineProperty(Intl.NumberFormat, 'prototype', {
    writable: false
});

/**
 * The abstract operation InitializeNumberFormat accepts the arguments
 * numberFormat (which must be an object), locales, and options. It initializes
 * numberFormat as a NumberFormat object.
 */
function /*11.1.1.1 */InitializeNumberFormat(numberFormat, locales, options) {
    // This will be a internal properties object if we're not already initialized
    var internal = getInternalProperties(numberFormat);

    // Create an object whose props can be used to restore the values of RegExp props
    var regexpRestore = createRegExpRestore();

    // 1. If numberFormat has an [[initializedIntlObject]] internal property with
    // value true, throw a TypeError exception.
    if (internal['[[initializedIntlObject]]'] === true) throw new TypeError('`this` object has already been initialized as an Intl object');

    // Need this to access the `internal` object
    defineProperty(numberFormat, '__getInternalProperties', {
        value: function value() {
            // NOTE: Non-standard, for internal use only
            if (arguments[0] === secret) return internal;
        }
    });

    // 2. Set the [[initializedIntlObject]] internal property of numberFormat to true.
    internal['[[initializedIntlObject]]'] = true;

    // 3. Let requestedLocales be the result of calling the CanonicalizeLocaleList
    //    abstract operation (defined in 9.2.1) with argument locales.
    var requestedLocales = CanonicalizeLocaleList(locales);

    // 4. If options is undefined, then
    if (options === undefined)
        // a. Let options be the result of creating a new object as if by the
        // expression new Object() where Object is the standard built-in constructor
        // with that name.
        options = {};

        // 5. Else
    else
        // a. Let options be ToObject(options).
        options = toObject(options);

    // 6. Let opt be a new Record.
    var opt = new Record(),


    // 7. Let matcher be the result of calling the GetOption abstract operation
    //    (defined in 9.2.9) with the arguments options, "localeMatcher", "string",
    //    a List containing the two String values "lookup" and "best fit", and
    //    "best fit".
    matcher = GetOption(options, 'localeMatcher', 'string', new List('lookup', 'best fit'), 'best fit');

    // 8. Set opt.[[localeMatcher]] to matcher.
    opt['[[localeMatcher]]'] = matcher;

    // 9. Let NumberFormat be the standard built-in object that is the initial value
    //    of Intl.NumberFormat.
    // 10. Let localeData be the value of the [[localeData]] internal property of
    //     NumberFormat.
    var localeData = internals.NumberFormat['[[localeData]]'];

    // 11. Let r be the result of calling the ResolveLocale abstract operation
    //     (defined in 9.2.5) with the [[availableLocales]] internal property of
    //     NumberFormat, requestedLocales, opt, the [[relevantExtensionKeys]]
    //     internal property of NumberFormat, and localeData.
    var r = ResolveLocale(internals.NumberFormat['[[availableLocales]]'], requestedLocales, opt, internals.NumberFormat['[[relevantExtensionKeys]]'], localeData);

    // 12. Set the [[locale]] internal property of numberFormat to the value of
    //     r.[[locale]].
    internal['[[locale]]'] = r['[[locale]]'];

    // 13. Set the [[numberingSystem]] internal property of numberFormat to the value
    //     of r.[[nu]].
    internal['[[numberingSystem]]'] = r['[[nu]]'];

    // The specification doesn't tell us to do this, but it's helpful later on
    internal['[[dataLocale]]'] = r['[[dataLocale]]'];

    // 14. Let dataLocale be the value of r.[[dataLocale]].
    var dataLocale = r['[[dataLocale]]'];

    // 15. Let s be the result of calling the GetOption abstract operation with the
    //     arguments options, "style", "string", a List containing the three String
    //     values "decimal", "percent", and "currency", and "decimal".
    var s = GetOption(options, 'style', 'string', new List('decimal', 'percent', 'currency'), 'decimal');

    // 16. Set the [[style]] internal property of numberFormat to s.
    internal['[[style]]'] = s;

    // 17. Let c be the result of calling the GetOption abstract operation with the
    //     arguments options, "currency", "string", undefined, and undefined.
    var c = GetOption(options, 'currency', 'string');

    // 18. If c is not undefined and the result of calling the
    //     IsWellFormedCurrencyCode abstract operation (defined in 6.3.1) with
    //     argument c is false, then throw a RangeError exception.
    if (c !== undefined && !IsWellFormedCurrencyCode(c)) throw new RangeError("'" + c + "' is not a valid currency code");

    // 19. If s is "currency" and c is undefined, throw a TypeError exception.
    if (s === 'currency' && c === undefined) throw new TypeError('Currency code is required when style is currency');

    var cDigits = void 0;

    // 20. If s is "currency", then
    if (s === 'currency') {
        // a. Let c be the result of converting c to upper case as specified in 6.1.
        c = c.toUpperCase();

        // b. Set the [[currency]] internal property of numberFormat to c.
        internal['[[currency]]'] = c;

        // c. Let cDigits be the result of calling the CurrencyDigits abstract
        //    operation (defined below) with argument c.
        cDigits = CurrencyDigits(c);
    }

    // 21. Let cd be the result of calling the GetOption abstract operation with the
    //     arguments options, "currencyDisplay", "string", a List containing the
    //     three String values "code", "symbol", and "name", and "symbol".
    var cd = GetOption(options, 'currencyDisplay', 'string', new List('code', 'symbol', 'name'), 'symbol');

    // 22. If s is "currency", then set the [[currencyDisplay]] internal property of
    //     numberFormat to cd.
    if (s === 'currency') internal['[[currencyDisplay]]'] = cd;

    // 23. Let mnid be the result of calling the GetNumberOption abstract operation
    //     (defined in 9.2.10) with arguments options, "minimumIntegerDigits", 1, 21,
    //     and 1.
    var mnid = GetNumberOption(options, 'minimumIntegerDigits', 1, 21, 1);

    // 24. Set the [[minimumIntegerDigits]] internal property of numberFormat to mnid.
    internal['[[minimumIntegerDigits]]'] = mnid;

    // 25. If s is "currency", then let mnfdDefault be cDigits; else let mnfdDefault
    //     be 0.
    var mnfdDefault = s === 'currency' ? cDigits : 0;

    // 26. Let mnfd be the result of calling the GetNumberOption abstract operation
    //     with arguments options, "minimumFractionDigits", 0, 20, and mnfdDefault.
    var mnfd = GetNumberOption(options, 'minimumFractionDigits', 0, 20, mnfdDefault);

    // 27. Set the [[minimumFractionDigits]] internal property of numberFormat to mnfd.
    internal['[[minimumFractionDigits]]'] = mnfd;

    // 28. If s is "currency", then let mxfdDefault be max(mnfd, cDigits); else if s
    //     is "percent", then let mxfdDefault be max(mnfd, 0); else let mxfdDefault
    //     be max(mnfd, 3).
    var mxfdDefault = s === 'currency' ? Math.max(mnfd, cDigits) : s === 'percent' ? Math.max(mnfd, 0) : Math.max(mnfd, 3);

    // 29. Let mxfd be the result of calling the GetNumberOption abstract operation
    //     with arguments options, "maximumFractionDigits", mnfd, 20, and mxfdDefault.
    var mxfd = GetNumberOption(options, 'maximumFractionDigits', mnfd, 20, mxfdDefault);

    // 30. Set the [[maximumFractionDigits]] internal property of numberFormat to mxfd.
    internal['[[maximumFractionDigits]]'] = mxfd;

    // 31. Let mnsd be the result of calling the [[Get]] internal method of options
    //     with argument "minimumSignificantDigits".
    var mnsd = options.minimumSignificantDigits;

    // 32. Let mxsd be the result of calling the [[Get]] internal method of options
    //     with argument "maximumSignificantDigits".
    var mxsd = options.maximumSignificantDigits;

    // 33. If mnsd is not undefined or mxsd is not undefined, then:
    if (mnsd !== undefined || mxsd !== undefined) {
        // a. Let mnsd be the result of calling the GetNumberOption abstract
        //    operation with arguments options, "minimumSignificantDigits", 1, 21,
        //    and 1.
        mnsd = GetNumberOption(options, 'minimumSignificantDigits', 1, 21, 1);

        // b. Let mxsd be the result of calling the GetNumberOption abstract
        //     operation with arguments options, "maximumSignificantDigits", mnsd,
        //     21, and 21.
        mxsd = GetNumberOption(options, 'maximumSignificantDigits', mnsd, 21, 21);

        // c. Set the [[minimumSignificantDigits]] internal property of numberFormat
        //    to mnsd, and the [[maximumSignificantDigits]] internal property of
        //    numberFormat to mxsd.
        internal['[[minimumSignificantDigits]]'] = mnsd;
        internal['[[maximumSignificantDigits]]'] = mxsd;
    }
    // 34. Let g be the result of calling the GetOption abstract operation with the
    //     arguments options, "useGrouping", "boolean", undefined, and true.
    var g = GetOption(options, 'useGrouping', 'boolean', undefined, true);

    // 35. Set the [[useGrouping]] internal property of numberFormat to g.
    internal['[[useGrouping]]'] = g;

    // 36. Let dataLocaleData be the result of calling the [[Get]] internal method of
    //     localeData with argument dataLocale.
    var dataLocaleData = localeData[dataLocale];

    // 37. Let patterns be the result of calling the [[Get]] internal method of
    //     dataLocaleData with argument "patterns".
    var patterns = dataLocaleData.patterns;

    // 38. Assert: patterns is an object (see 11.2.3)

    // 39. Let stylePatterns be the result of calling the [[Get]] internal method of
    //     patterns with argument s.
    var stylePatterns = patterns[s];

    // 40. Set the [[positivePattern]] internal property of numberFormat to the
    //     result of calling the [[Get]] internal method of stylePatterns with the
    //     argument "positivePattern".
    internal['[[positivePattern]]'] = stylePatterns.positivePattern;

    // 41. Set the [[negativePattern]] internal property of numberFormat to the
    //     result of calling the [[Get]] internal method of stylePatterns with the
    //     argument "negativePattern".
    internal['[[negativePattern]]'] = stylePatterns.negativePattern;

    // 42. Set the [[boundFormat]] internal property of numberFormat to undefined.
    internal['[[boundFormat]]'] = undefined;

    // 43. Set the [[initializedNumberFormat]] internal property of numberFormat to
    //     true.
    internal['[[initializedNumberFormat]]'] = true;

    // In ES3, we need to pre-bind the format() function
    if (es3) numberFormat.format = GetFormatNumber.call(numberFormat);

    // Restore the RegExp properties
    regexpRestore();

    // Return the newly initialised object
    return numberFormat;
}

function CurrencyDigits(currency) {
    // When the CurrencyDigits abstract operation is called with an argument currency
    // (which must be an upper case String value), the following steps are taken:

    // 1. If the ISO 4217 currency and funds code list contains currency as an
    // alphabetic code, then return the minor unit value corresponding to the
    // currency from the list; else return 2.
    return currencyMinorUnits[currency] !== undefined ? currencyMinorUnits[currency] : 2;
}

/* 11.2.3 */internals.NumberFormat = {
    '[[availableLocales]]': [],
    '[[relevantExtensionKeys]]': ['nu'],
    '[[localeData]]': {}
};

/**
 * When the supportedLocalesOf method of Intl.NumberFormat is called, the
 * following steps are taken:
 */
/* 11.2.2 */
defineProperty(Intl.NumberFormat, 'supportedLocalesOf', {
    configurable: true,
    writable: true,
    value: fnBind.call(function (locales) {
        // Bound functions only have the `this` value altered if being used as a constructor,
        // this lets us imitate a native function that has no constructor
        if (!hop.call(this, '[[availableLocales]]')) throw new TypeError('supportedLocalesOf() is not a constructor');

        // Create an object whose props can be used to restore the values of RegExp props
        var regexpRestore = createRegExpRestore(),


        // 1. If options is not provided, then let options be undefined.
        options = arguments[1],


        // 2. Let availableLocales be the value of the [[availableLocales]] internal
        //    property of the standard built-in object that is the initial value of
        //    Intl.NumberFormat.

        availableLocales = this['[[availableLocales]]'],


        // 3. Let requestedLocales be the result of calling the CanonicalizeLocaleList
        //    abstract operation (defined in 9.2.1) with argument locales.
        requestedLocales = CanonicalizeLocaleList(locales);

        // Restore the RegExp properties
        regexpRestore();

        // 4. Return the result of calling the SupportedLocales abstract operation
        //    (defined in 9.2.8) with arguments availableLocales, requestedLocales,
        //    and options.
        return SupportedLocales(availableLocales, requestedLocales, options);
    }, internals.NumberFormat)
});

/**
 * This named accessor property returns a function that formats a number
 * according to the effective locale and the formatting options of this
 * NumberFormat object.
 */
/* 11.3.2 */defineProperty(Intl.NumberFormat.prototype, 'format', {
    configurable: true,
    get: GetFormatNumber
});

function GetFormatNumber() {
    var internal = this !== null && babelHelpers$1["typeof"](this) === 'object' && getInternalProperties(this);

    // Satisfy test 11.3_b
    if (!internal || !internal['[[initializedNumberFormat]]']) throw new TypeError('`this` value for format() is not an initialized Intl.NumberFormat object.');

    // The value of the [[Get]] attribute is a function that takes the following
    // steps:

    // 1. If the [[boundFormat]] internal property of this NumberFormat object
    //    is undefined, then:
    if (internal['[[boundFormat]]'] === undefined) {
        // a. Let F be a Function object, with internal properties set as
        //    specified for built-in functions in ES5, 15, or successor, and the
        //    length property set to 1, that takes the argument value and
        //    performs the following steps:
        var F = function F(value) {
            // i. If value is not provided, then let value be undefined.
            // ii. Let x be ToNumber(value).
            // iii. Return the result of calling the FormatNumber abstract
            //      operation (defined below) with arguments this and x.
            return FormatNumber(this, /* x = */Number(value));
        };

        // b. Let bind be the standard built-in function object defined in ES5,
        //    15.3.4.5.
        // c. Let bf be the result of calling the [[Call]] internal method of
        //    bind with F as the this value and an argument list containing
        //    the single item this.
        var bf = fnBind.call(F, this);

        // d. Set the [[boundFormat]] internal property of this NumberFormat
        //    object to bf.
        internal['[[boundFormat]]'] = bf;
    }
    // Return the value of the [[boundFormat]] internal property of this
    // NumberFormat object.
    return internal['[[boundFormat]]'];
}

function formatToParts() {
    var value = arguments.length <= 0 || arguments[0] === undefined ? undefined : arguments[0];

    var internal = this !== null && babelHelpers$1["typeof"](this) === 'object' && getInternalProperties(this);
    if (!internal || !internal['[[initializedNumberFormat]]']) throw new TypeError('`this` value for formatToParts() is not an initialized Intl.NumberFormat object.');

    var x = Number(value);
    return FormatNumberToParts(this, x);
}

Object.defineProperty(Intl.NumberFormat.prototype, 'formatToParts', {
    configurable: true,
    enumerable: false,
    writable: true,
    value: formatToParts
});

/*
 * @spec[stasm/ecma402/number-format-to-parts/spec/numberformat.html]
 * @clause[sec-formatnumbertoparts]
 */
function FormatNumberToParts(numberFormat, x) {
    // 1. Let parts be ? PartitionNumberPattern(numberFormat, x).
    var parts = PartitionNumberPattern(numberFormat, x);
    // 2. Let result be ArrayCreate(0).
    var result = [];
    // 3. Let n be 0.
    var n = 0;
    // 4. For each part in parts, do:
    for (var i = 0; parts.length > i; i++) {
        var part = parts[i];
        // a. Let O be ObjectCreate(%ObjectPrototype%).
        var O = {};
        // a. Perform ? CreateDataPropertyOrThrow(O, "type", part.[[type]]).
        O.type = part['[[type]]'];
        // a. Perform ? CreateDataPropertyOrThrow(O, "value", part.[[value]]).
        O.value = part['[[value]]'];
        // a. Perform ? CreateDataPropertyOrThrow(result, ? ToString(n), O).
        result[n] = O;
        // a. Increment n by 1.
        n += 1;
    }
    // 5. Return result.
    return result;
}

/*
 * @spec[stasm/ecma402/number-format-to-parts/spec/numberformat.html]
 * @clause[sec-partitionnumberpattern]
 */
function PartitionNumberPattern(numberFormat, x) {

    var internal = getInternalProperties(numberFormat),
        locale = internal['[[dataLocale]]'],
        nums = internal['[[numberingSystem]]'],
        data = internals.NumberFormat['[[localeData]]'][locale],
        ild = data.symbols[nums] || data.symbols.latn,
        pattern = void 0;

    // 1. If x is not NaN and x < 0, then:
    if (!isNaN(x) && x < 0) {
        // a. Let x be -x.
        x = -x;
        // a. Let pattern be the value of numberFormat.[[negativePattern]].
        pattern = internal['[[negativePattern]]'];
    }
    // 2. Else,
    else {
            // a. Let pattern be the value of numberFormat.[[positivePattern]].
            pattern = internal['[[positivePattern]]'];
        }
    // 3. Let result be a new empty List.
    var result = new List();
    // 4. Let beginIndex be Call(%StringProto_indexOf%, pattern, "{", 0).
    var beginIndex = pattern.indexOf('{', 0);
    // 5. Let endIndex be 0.
    var endIndex = 0;
    // 6. Let nextIndex be 0.
    var nextIndex = 0;
    // 7. Let length be the number of code units in pattern.
    var length = pattern.length;
    // 8. Repeat while beginIndex is an integer index into pattern:
    while (beginIndex > -1 && beginIndex < length) {
        // a. Set endIndex to Call(%StringProto_indexOf%, pattern, "}", beginIndex)
        endIndex = pattern.indexOf('}', beginIndex);
        // a. If endIndex = -1, throw new Error exception.
        if (endIndex === -1) throw new Error();
        // a. If beginIndex is greater than nextIndex, then:
        if (beginIndex > nextIndex) {
            // i. Let literal be a substring of pattern from position nextIndex, inclusive, to position beginIndex, exclusive.
            var literal = pattern.substring(nextIndex, beginIndex);
            // ii. Add new part record { [[type]]: "literal", [[value]]: literal } as a new element of the list result.
            arrPush.call(result, { '[[type]]': 'literal', '[[value]]': literal });
        }
        // a. Let p be the substring of pattern from position beginIndex, exclusive, to position endIndex, exclusive.
        var p = pattern.substring(beginIndex + 1, endIndex);
        // a. If p is equal "number", then:
        if (p === "number") {
            // i. If x is NaN,
            if (isNaN(x)) {
                // 1. Let n be an ILD String value indicating the NaN value.
                var n = ild.nan;
                // 2. Add new part record { [[type]]: "nan", [[value]]: n } as a new element of the list result.
                arrPush.call(result, { '[[type]]': 'nan', '[[value]]': n });
            }
            // ii. Else if isFinite(x) is false,
            else if (!isFinite(x)) {
                    // 1. Let n be an ILD String value indicating infinity.
                    var _n = ild.infinity;
                    // 2. Add new part record { [[type]]: "infinity", [[value]]: n } as a new element of the list result.
                    arrPush.call(result, { '[[type]]': 'infinity', '[[value]]': _n });
                }
                // iii. Else,
                else {
                        // 1. If the value of numberFormat.[[style]] is "percent" and isFinite(x), let x be 100 × x.
                        if (internal['[[style]]'] === 'percent' && isFinite(x)) x *= 100;

                        var _n2 = void 0;
                        // 2. If the numberFormat.[[minimumSignificantDigits]] and numberFormat.[[maximumSignificantDigits]] are present, then
                        if (hop.call(internal, '[[minimumSignificantDigits]]') && hop.call(internal, '[[maximumSignificantDigits]]')) {
                            // a. Let n be ToRawPrecision(x, numberFormat.[[minimumSignificantDigits]], numberFormat.[[maximumSignificantDigits]]).
                            _n2 = ToRawPrecision(x, internal['[[minimumSignificantDigits]]'], internal['[[maximumSignificantDigits]]']);
                        }
                        // 3. Else,
                        else {
                                // a. Let n be ToRawFixed(x, numberFormat.[[minimumIntegerDigits]], numberFormat.[[minimumFractionDigits]], numberFormat.[[maximumFractionDigits]]).
                                _n2 = ToRawFixed(x, internal['[[minimumIntegerDigits]]'], internal['[[minimumFractionDigits]]'], internal['[[maximumFractionDigits]]']);
                            }
                        // 4. If the value of the numberFormat.[[numberingSystem]] matches one of the values in the "Numbering System" column of Table 2 below, then
                        if (numSys[nums]) {
                            (function () {
                                // a. Let digits be an array whose 10 String valued elements are the UTF-16 string representations of the 10 digits specified in the "Digits" column of the matching row in Table 2.
                                var digits = numSys[nums];
                                // a. Replace each digit in n with the value of digits[digit].
                                _n2 = String(_n2).replace(/\d/g, function (digit) {
                                    return digits[digit];
                                });
                            })();
                        }
                        // 5. Else use an implementation dependent algorithm to map n to the appropriate representation of n in the given numbering system.
                        else _n2 = String(_n2); // ###TODO###

                        var integer = void 0;
                        var fraction = void 0;
                        // 6. Let decimalSepIndex be Call(%StringProto_indexOf%, n, ".", 0).
                        var decimalSepIndex = _n2.indexOf('.', 0);
                        // 7. If decimalSepIndex > 0, then:
                        if (decimalSepIndex > 0) {
                            // a. Let integer be the substring of n from position 0, inclusive, to position decimalSepIndex, exclusive.
                            integer = _n2.substring(0, decimalSepIndex);
                            // a. Let fraction be the substring of n from position decimalSepIndex, exclusive, to the end of n.
                            fraction = _n2.substring(decimalSepIndex + 1, decimalSepIndex.length);
                        }
                        // 8. Else:
                        else {
                                // a. Let integer be n.
                                integer = _n2;
                                // a. Let fraction be undefined.
                                fraction = undefined;
                            }
                        // 9. If the value of the numberFormat.[[useGrouping]] is true,
                        if (internal['[[useGrouping]]'] === true) {
                            // a. Let groupSepSymbol be the ILND String representing the grouping separator.
                            var groupSepSymbol = ild.group;
                            // a. Let groups be a List whose elements are, in left to right order, the substrings defined by ILND set of locations within the integer.
                            var groups = [];
                            // ----> implementation:
                            // Primary group represents the group closest to the decimal
                            var pgSize = data.patterns.primaryGroupSize || 3;
                            // Secondary group is every other group
                            var sgSize = data.patterns.secondaryGroupSize || pgSize;
                            // Group only if necessary
                            if (integer.length > pgSize) {
                                // Index of the primary grouping separator
                                var end = integer.length - pgSize;
                                // Starting index for our loop
                                var idx = end % sgSize;
                                var start = integer.slice(0, idx);
                                if (start.length) arrPush.call(groups, start);
                                // Loop to separate into secondary grouping digits
                                while (idx < end) {
                                    arrPush.call(groups, integer.slice(idx, idx + sgSize));
                                    idx += sgSize;
                                }
                                // Add the primary grouping digits
                                arrPush.call(groups, integer.slice(end));
                            } else {
                                arrPush.call(groups, integer);
                            }
                            // a. Assert: The number of elements in groups List is greater than 0.
                            if (groups.length === 0) throw new Error();
                            // a. Repeat, while groups List is not empty:
                            while (groups.length) {
                                // i. Remove the first element from groups and let integerGroup be the value of that element.
                                var integerGroup = arrShift.call(groups);
                                // ii. Add new part record { [[type]]: "integer", [[value]]: integerGroup } as a new element of the list result.
                                arrPush.call(result, { '[[type]]': 'integer', '[[value]]': integerGroup });
                                // iii. If groups List is not empty, then:
                                if (groups.length) {
                                    // 1. Add new part record { [[type]]: "group", [[value]]: groupSepSymbol } as a new element of the list result.
                                    arrPush.call(result, { '[[type]]': 'group', '[[value]]': groupSepSymbol });
                                }
                            }
                        }
                        // 10. Else,
                        else {
                                // a. Add new part record { [[type]]: "integer", [[value]]: integer } as a new element of the list result.
                                arrPush.call(result, { '[[type]]': 'integer', '[[value]]': integer });
                            }
                        // 11. If fraction is not undefined, then:
                        if (fraction !== undefined) {
                            // a. Let decimalSepSymbol be the ILND String representing the decimal separator.
                            var decimalSepSymbol = ild.decimal;
                            // a. Add new part record { [[type]]: "decimal", [[value]]: decimalSepSymbol } as a new element of the list result.
                            arrPush.call(result, { '[[type]]': 'decimal', '[[value]]': decimalSepSymbol });
                            // a. Add new part record { [[type]]: "fraction", [[value]]: fraction } as a new element of the list result.
                            arrPush.call(result, { '[[type]]': 'fraction', '[[value]]': fraction });
                        }
                    }
        }
        // a. Else if p is equal "plusSign", then:
        else if (p === "plusSign") {
                // i. Let plusSignSymbol be the ILND String representing the plus sign.
                var plusSignSymbol = ild.plusSign;
                // ii. Add new part record { [[type]]: "plusSign", [[value]]: plusSignSymbol } as a new element of the list result.
                arrPush.call(result, { '[[type]]': 'plusSign', '[[value]]': plusSignSymbol });
            }
            // a. Else if p is equal "minusSign", then:
            else if (p === "minusSign") {
                    // i. Let minusSignSymbol be the ILND String representing the minus sign.
                    var minusSignSymbol = ild.minusSign;
                    // ii. Add new part record { [[type]]: "minusSign", [[value]]: minusSignSymbol } as a new element of the list result.
                    arrPush.call(result, { '[[type]]': 'minusSign', '[[value]]': minusSignSymbol });
                }
                // a. Else if p is equal "percentSign" and numberFormat.[[style]] is "percent", then:
                else if (p === "percentSign" && internal['[[style]]'] === "percent") {
                        // i. Let percentSignSymbol be the ILND String representing the percent sign.
                        var percentSignSymbol = ild.percentSign;
                        // ii. Add new part record { [[type]]: "percentSign", [[value]]: percentSignSymbol } as a new element of the list result.
                        arrPush.call(result, { '[[type]]': 'literal', '[[value]]': percentSignSymbol });
                    }
                    // a. Else if p is equal "currency" and numberFormat.[[style]] is "currency", then:
                    else if (p === "currency" && internal['[[style]]'] === "currency") {
                            // i. Let currency be the value of numberFormat.[[currency]].
                            var currency = internal['[[currency]]'];

                            var cd = void 0;

                            // ii. If numberFormat.[[currencyDisplay]] is "code", then
                            if (internal['[[currencyDisplay]]'] === "code") {
                                // 1. Let cd be currency.
                                cd = currency;
                            }
                            // iii. Else if numberFormat.[[currencyDisplay]] is "symbol", then
                            else if (internal['[[currencyDisplay]]'] === "symbol") {
                                    // 1. Let cd be an ILD string representing currency in short form. If the implementation does not have such a representation of currency, use currency itself.
                                    cd = data.currencies[currency] || currency;
                                }
                                // iv. Else if numberFormat.[[currencyDisplay]] is "name", then
                                else if (internal['[[currencyDisplay]]'] === "name") {
                                        // 1. Let cd be an ILD string representing currency in long form. If the implementation does not have such a representation of currency, then use currency itself.
                                        cd = currency;
                                    }
                            // v. Add new part record { [[type]]: "currency", [[value]]: cd } as a new element of the list result.
                            arrPush.call(result, { '[[type]]': 'currency', '[[value]]': cd });
                        }
                        // a. Else,
                        else {
                                // i. Let literal be the substring of pattern from position beginIndex, inclusive, to position endIndex, inclusive.
                                var _literal = pattern.substring(beginIndex, endIndex);
                                // ii. Add new part record { [[type]]: "literal", [[value]]: literal } as a new element of the list result.
                                arrPush.call(result, { '[[type]]': 'literal', '[[value]]': _literal });
                            }
        // a. Set nextIndex to endIndex + 1.
        nextIndex = endIndex + 1;
        // a. Set beginIndex to Call(%StringProto_indexOf%, pattern, "{", nextIndex)
        beginIndex = pattern.indexOf('{', nextIndex);
    }
    // 9. If nextIndex is less than length, then:
    if (nextIndex < length) {
        // a. Let literal be the substring of pattern from position nextIndex, inclusive, to position length, exclusive.
        var _literal2 = pattern.substring(nextIndex, length);
        // a. Add new part record { [[type]]: "literal", [[value]]: literal } as a new element of the list result.
        arrPush.call(result, { '[[type]]': 'literal', '[[value]]': _literal2 });
    }
    // 10. Return result.
    return result;
}

/*
 * @spec[stasm/ecma402/number-format-to-parts/spec/numberformat.html]
 * @clause[sec-formatnumber]
 */
function FormatNumber(numberFormat, x) {
    // 1. Let parts be ? PartitionNumberPattern(numberFormat, x).
    var parts = PartitionNumberPattern(numberFormat, x);
    // 2. Let result be an empty String.
    var result = '';
    // 3. For each part in parts, do:
    for (var i = 0; parts.length > i; i++) {
        var part = parts[i];
        // a. Set result to a String value produced by concatenating result and part.[[value]].
        result += part['[[value]]'];
    }
    // 4. Return result.
    return result;
}

/**
 * When the ToRawPrecision abstract operation is called with arguments x (which
 * must be a finite non-negative number), minPrecision, and maxPrecision (both
 * must be integers between 1 and 21) the following steps are taken:
 */
function ToRawPrecision(x, minPrecision, maxPrecision) {
    // 1. Let p be maxPrecision.
    var p = maxPrecision;

    var m = void 0,
        e = void 0;

    // 2. If x = 0, then
    if (x === 0) {
        // a. Let m be the String consisting of p occurrences of the character "0".
        m = arrJoin.call(Array(p + 1), '0');
        // b. Let e be 0.
        e = 0;
    }
    // 3. Else
    else {
            // a. Let e and n be integers such that 10ᵖ⁻¹ ≤ n < 10ᵖ and for which the
            //    exact mathematical value of n × 10ᵉ⁻ᵖ⁺¹ – x is as close to zero as
            //    possible. If there are two such sets of e and n, pick the e and n for
            //    which n × 10ᵉ⁻ᵖ⁺¹ is larger.
            e = log10Floor(Math.abs(x));

            // Easier to get to m from here
            var f = Math.round(Math.exp(Math.abs(e - p + 1) * Math.LN10));

            // b. Let m be the String consisting of the digits of the decimal
            //    representation of n (in order, with no leading zeroes)
            m = String(Math.round(e - p + 1 < 0 ? x * f : x / f));
        }

    // 4. If e ≥ p, then
    if (e >= p)
        // a. Return the concatenation of m and e-p+1 occurrences of the character "0".
        return m + arrJoin.call(Array(e - p + 1 + 1), '0');

        // 5. If e = p-1, then
    else if (e === p - 1)
            // a. Return m.
            return m;

            // 6. If e ≥ 0, then
        else if (e >= 0)
                // a. Let m be the concatenation of the first e+1 characters of m, the character
                //    ".", and the remaining p–(e+1) characters of m.
                m = m.slice(0, e + 1) + '.' + m.slice(e + 1);

                // 7. If e < 0, then
            else if (e < 0)
                    // a. Let m be the concatenation of the String "0.", –(e+1) occurrences of the
                    //    character "0", and the string m.
                    m = '0.' + arrJoin.call(Array(-(e + 1) + 1), '0') + m;

    // 8. If m contains the character ".", and maxPrecision > minPrecision, then
    if (m.indexOf(".") >= 0 && maxPrecision > minPrecision) {
        // a. Let cut be maxPrecision – minPrecision.
        var cut = maxPrecision - minPrecision;

        // b. Repeat while cut > 0 and the last character of m is "0":
        while (cut > 0 && m.charAt(m.length - 1) === '0') {
            //  i. Remove the last character from m.
            m = m.slice(0, -1);

            //  ii. Decrease cut by 1.
            cut--;
        }

        // c. If the last character of m is ".", then
        if (m.charAt(m.length - 1) === '.')
            //    i. Remove the last character from m.
            m = m.slice(0, -1);
    }
    // 9. Return m.
    return m;
}

/**
 * @spec[tc39/ecma402/master/spec/numberformat.html]
 * @clause[sec-torawfixed]
 * When the ToRawFixed abstract operation is called with arguments x (which must
 * be a finite non-negative number), minInteger (which must be an integer between
 * 1 and 21), minFraction, and maxFraction (which must be integers between 0 and
 * 20) the following steps are taken:
 */
function ToRawFixed(x, minInteger, minFraction, maxFraction) {
    // 1. Let f be maxFraction.
    var f = maxFraction;
    // 2. Let n be an integer for which the exact mathematical value of n ÷ 10f – x is as close to zero as possible. If there are two such n, pick the larger n.
    var n = Math.pow(10, f) * x; // diverging...
    // 3. If n = 0, let m be the String "0". Otherwise, let m be the String consisting of the digits of the decimal representation of n (in order, with no leading zeroes).
    var m = n === 0 ? "0" : n.toFixed(0); // divering...

    {
        // this diversion is needed to take into consideration big numbers, e.g.:
        // 1.2344501e+37 -> 12344501000000000000000000000000000000
        var idx = void 0;
        var exp = (idx = m.indexOf('e')) > -1 ? m.slice(idx + 1) : 0;
        if (exp) {
            m = m.slice(0, idx).replace('.', '');
            m += arrJoin.call(Array(exp - (m.length - 1) + 1), '0');
        }
    }

    var int = void 0;
    // 4. If f ≠ 0, then
    if (f !== 0) {
        // a. Let k be the number of characters in m.
        var k = m.length;
        // a. If k ≤ f, then
        if (k <= f) {
            // i. Let z be the String consisting of f+1–k occurrences of the character "0".
            var z = arrJoin.call(Array(f + 1 - k + 1), '0');
            // ii. Let m be the concatenation of Strings z and m.
            m = z + m;
            // iii. Let k be f+1.
            k = f + 1;
        }
        // a. Let a be the first k–f characters of m, and let b be the remaining f characters of m.
        var a = m.substring(0, k - f),
            b = m.substring(k - f, m.length);
        // a. Let m be the concatenation of the three Strings a, ".", and b.
        m = a + "." + b;
        // a. Let int be the number of characters in a.
        int = a.length;
    }
    // 5. Else, let int be the number of characters in m.
    else int = m.length;
    // 6. Let cut be maxFraction – minFraction.
    var cut = maxFraction - minFraction;
    // 7. Repeat while cut > 0 and the last character of m is "0":
    while (cut > 0 && m.slice(-1) === "0") {
        // a. Remove the last character from m.
        m = m.slice(0, -1);
        // a. Decrease cut by 1.
        cut--;
    }
    // 8. If the last character of m is ".", then
    if (m.slice(-1) === ".") {
        // a. Remove the last character from m.
        m = m.slice(0, -1);
    }
    // 9. If int < minInteger, then
    if (int < minInteger) {
        // a. Let z be the String consisting of minInteger–int occurrences of the character "0".
        var _z = arrJoin.call(Array(minInteger - int + 1), '0');
        // a. Let m be the concatenation of Strings z and m.
        m = _z + m;
    }
    // 10. Return m.
    return m;
}

// Sect 11.3.2 Table 2, Numbering systems
// ======================================
var numSys = {
    arab: ["٠", "١", "٢", "٣", "٤", "٥", "٦", "٧", "٨", "٩"],
    arabext: ["۰", "۱", "۲", "۳", "۴", "۵", "۶", "۷", "۸", "۹"],
    bali: ["᭐", "᭑", "᭒", "᭓", "᭔", "᭕", "᭖", "᭗", "᭘", "᭙"],
    beng: ["০", "১", "২", "৩", "৪", "৫", "৬", "৭", "৮", "৯"],
    deva: ["०", "१", "२", "३", "४", "५", "६", "७", "८", "९"],
    fullwide: ["０", "１", "２", "３", "４", "５", "６", "７", "８", "９"],
    gujr: ["૦", "૧", "૨", "૩", "૪", "૫", "૬", "૭", "૮", "૯"],
    guru: ["੦", "੧", "੨", "੩", "੪", "੫", "੬", "੭", "੮", "੯"],
    hanidec: ["〇", "一", "二", "三", "四", "五", "六", "七", "八", "九"],
    khmr: ["០", "១", "២", "៣", "៤", "៥", "៦", "៧", "៨", "៩"],
    knda: ["೦", "೧", "೨", "೩", "೪", "೫", "೬", "೭", "೮", "೯"],
    laoo: ["໐", "໑", "໒", "໓", "໔", "໕", "໖", "໗", "໘", "໙"],
    latn: ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"],
    limb: ["᥆", "᥇", "᥈", "᥉", "᥊", "᥋", "᥌", "᥍", "᥎", "᥏"],
    mlym: ["൦", "൧", "൨", "൩", "൪", "൫", "൬", "൭", "൮", "൯"],
    mong: ["᠐", "᠑", "᠒", "᠓", "᠔", "᠕", "᠖", "᠗", "᠘", "᠙"],
    mymr: ["၀", "၁", "၂", "၃", "၄", "၅", "၆", "၇", "၈", "၉"],
    orya: ["୦", "୧", "୨", "୩", "୪", "୫", "୬", "୭", "୮", "୯"],
    tamldec: ["௦", "௧", "௨", "௩", "௪", "௫", "௬", "௭", "௮", "௯"],
    telu: ["౦", "౧", "౨", "౩", "౪", "౫", "౬", "౭", "౮", "౯"],
    thai: ["๐", "๑", "๒", "๓", "๔", "๕", "๖", "๗", "๘", "๙"],
    tibt: ["༠", "༡", "༢", "༣", "༤", "༥", "༦", "༧", "༨", "༩"]
};

/**
 * This function provides access to the locale and formatting options computed
 * during initialization of the object.
 *
 * The function returns a new object whose properties and attributes are set as
 * if constructed by an object literal assigning to each of the following
 * properties the value of the corresponding internal property of this
 * NumberFormat object (see 11.4): locale, numberingSystem, style, currency,
 * currencyDisplay, minimumIntegerDigits, minimumFractionDigits,
 * maximumFractionDigits, minimumSignificantDigits, maximumSignificantDigits, and
 * useGrouping. Properties whose corresponding internal properties are not present
 * are not assigned.
 */
/* 11.3.3 */defineProperty(Intl.NumberFormat.prototype, 'resolvedOptions', {
    configurable: true,
    writable: true,
    value: function value() {
        var prop = void 0,
            descs = new Record(),
            props = ['locale', 'numberingSystem', 'style', 'currency', 'currencyDisplay', 'minimumIntegerDigits', 'minimumFractionDigits', 'maximumFractionDigits', 'minimumSignificantDigits', 'maximumSignificantDigits', 'useGrouping'],
            internal = this !== null && babelHelpers$1["typeof"](this) === 'object' && getInternalProperties(this);

        // Satisfy test 11.3_b
        if (!internal || !internal['[[initializedNumberFormat]]']) throw new TypeError('`this` value for resolvedOptions() is not an initialized Intl.NumberFormat object.');

        for (var i = 0, max = props.length; i < max; i++) {
            if (hop.call(internal, prop = '[[' + props[i] + ']]')) descs[props[i]] = { value: internal[prop], writable: true, configurable: true, enumerable: true };
        }

        return objCreate({}, descs);
    }
});

/* jslint esnext: true */

// Match these datetime components in a CLDR pattern, except those in single quotes
var expDTComponents = /(?:[Eec]{1,6}|G{1,5}|[Qq]{1,5}|(?:[yYur]+|U{1,5})|[ML]{1,5}|d{1,2}|D{1,3}|F{1}|[abB]{1,5}|[hkHK]{1,2}|w{1,2}|W{1}|m{1,2}|s{1,2}|[zZOvVxX]{1,4})(?=([^']*'[^']*')*[^']*$)/g;
// trim patterns after transformations
var expPatternTrimmer = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;
// Skip over patterns with these datetime components because we don't have data
// to back them up:
// timezone, weekday, amoung others
var unwantedDTCs = /[rqQASjJgwWIQq]/; // xXVO were removed from this list in favor of computing matches with timeZoneName values but printing as empty string

var dtKeys = ["era", "year", "month", "day", "weekday", "quarter"];
var tmKeys = ["hour", "minute", "second", "hour12", "timeZoneName"];

function isDateFormatOnly(obj) {
    for (var i = 0; i < tmKeys.length; i += 1) {
        if (obj.hasOwnProperty(tmKeys[i])) {
            return false;
        }
    }
    return true;
}

function isTimeFormatOnly(obj) {
    for (var i = 0; i < dtKeys.length; i += 1) {
        if (obj.hasOwnProperty(dtKeys[i])) {
            return false;
        }
    }
    return true;
}

function joinDateAndTimeFormats(dateFormatObj, timeFormatObj) {
    var o = { _: {} };
    for (var i = 0; i < dtKeys.length; i += 1) {
        if (dateFormatObj[dtKeys[i]]) {
            o[dtKeys[i]] = dateFormatObj[dtKeys[i]];
        }
        if (dateFormatObj._[dtKeys[i]]) {
            o._[dtKeys[i]] = dateFormatObj._[dtKeys[i]];
        }
    }
    for (var j = 0; j < tmKeys.length; j += 1) {
        if (timeFormatObj[tmKeys[j]]) {
            o[tmKeys[j]] = timeFormatObj[tmKeys[j]];
        }
        if (timeFormatObj._[tmKeys[j]]) {
            o._[tmKeys[j]] = timeFormatObj._[tmKeys[j]];
        }
    }
    return o;
}

function computeFinalPatterns(formatObj) {
    // From http://www.unicode.org/reports/tr35/tr35-dates.html#Date_Format_Patterns:
    //  'In patterns, two single quotes represents a literal single quote, either
    //   inside or outside single quotes. Text within single quotes is not
    //   interpreted in any way (except for two adjacent single quotes).'
    formatObj.pattern12 = formatObj.extendedPattern.replace(/'([^']*)'/g, function ($0, literal) {
        return literal ? literal : "'";
    });

    // pattern 12 is always the default. we can produce the 24 by removing {ampm}
    formatObj.pattern = formatObj.pattern12.replace('{ampm}', '').replace(expPatternTrimmer, '');
    return formatObj;
}

function expDTComponentsMeta($0, formatObj) {
    switch ($0.charAt(0)) {
        // --- Era
        case 'G':
            formatObj.era = ['short', 'short', 'short', 'long', 'narrow'][$0.length - 1];
            return '{era}';

        // --- Year
        case 'y':
        case 'Y':
        case 'u':
        case 'U':
        case 'r':
            formatObj.year = $0.length === 2 ? '2-digit' : 'numeric';
            return '{year}';

        // --- Quarter (not supported in this polyfill)
        case 'Q':
        case 'q':
            formatObj.quarter = ['numeric', '2-digit', 'short', 'long', 'narrow'][$0.length - 1];
            return '{quarter}';

        // --- Month
        case 'M':
        case 'L':
            formatObj.month = ['numeric', '2-digit', 'short', 'long', 'narrow'][$0.length - 1];
            return '{month}';

        // --- Week (not supported in this polyfill)
        case 'w':
            // week of the year
            formatObj.week = $0.length === 2 ? '2-digit' : 'numeric';
            return '{weekday}';
        case 'W':
            // week of the month
            formatObj.week = 'numeric';
            return '{weekday}';

        // --- Day
        case 'd':
            // day of the month
            formatObj.day = $0.length === 2 ? '2-digit' : 'numeric';
            return '{day}';
        case 'D': // day of the year
        case 'F': // day of the week
        case 'g':
            // 1..n: Modified Julian day
            formatObj.day = 'numeric';
            return '{day}';

        // --- Week Day
        case 'E':
            // day of the week
            formatObj.weekday = ['short', 'short', 'short', 'long', 'narrow', 'short'][$0.length - 1];
            return '{weekday}';
        case 'e':
            // local day of the week
            formatObj.weekday = ['numeric', '2-digit', 'short', 'long', 'narrow', 'short'][$0.length - 1];
            return '{weekday}';
        case 'c':
            // stand alone local day of the week
            formatObj.weekday = ['numeric', undefined, 'short', 'long', 'narrow', 'short'][$0.length - 1];
            return '{weekday}';

        // --- Period
        case 'a': // AM, PM
        case 'b': // am, pm, noon, midnight
        case 'B':
            // flexible day periods
            formatObj.hour12 = true;
            return '{ampm}';

        // --- Hour
        case 'h':
        case 'H':
            formatObj.hour = $0.length === 2 ? '2-digit' : 'numeric';
            return '{hour}';
        case 'k':
        case 'K':
            formatObj.hour12 = true; // 12-hour-cycle time formats (using h or K)
            formatObj.hour = $0.length === 2 ? '2-digit' : 'numeric';
            return '{hour}';

        // --- Minute
        case 'm':
            formatObj.minute = $0.length === 2 ? '2-digit' : 'numeric';
            return '{minute}';

        // --- Second
        case 's':
            formatObj.second = $0.length === 2 ? '2-digit' : 'numeric';
            return '{second}';
        case 'S':
        case 'A':
            formatObj.second = 'numeric';
            return '{second}';

        // --- Timezone
        case 'z': // 1..3, 4: specific non-location format
        case 'Z': // 1..3, 4, 5: The ISO8601 varios formats
        case 'O': // 1, 4: miliseconds in day short, long
        case 'v': // 1, 4: generic non-location format
        case 'V': // 1, 2, 3, 4: time zone ID or city
        case 'X': // 1, 2, 3, 4: The ISO8601 varios formats
        case 'x':
            // 1, 2, 3, 4: The ISO8601 varios formats
            // this polyfill only supports much, for now, we are just doing something dummy
            formatObj.timeZoneName = $0.length < 4 ? 'short' : 'long';
            return '{timeZoneName}';
    }
}

/**
 * Converts the CLDR availableFormats into the objects and patterns required by
 * the ECMAScript Internationalization API specification.
 */
function createDateTimeFormat(skeleton, pattern) {
    // we ignore certain patterns that are unsupported to avoid this expensive op.
    if (unwantedDTCs.test(pattern)) return undefined;

    var formatObj = {
        originalPattern: pattern,
        _: {}
    };

    // Replace the pattern string with the one required by the specification, whilst
    // at the same time evaluating it for the subsets and formats
    formatObj.extendedPattern = pattern.replace(expDTComponents, function ($0) {
        // See which symbol we're dealing with
        return expDTComponentsMeta($0, formatObj._);
    });

    // Match the skeleton string with the one required by the specification
    // this implementation is based on the Date Field Symbol Table:
    // http://unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table
    // Note: we are adding extra data to the formatObject even though this polyfill
    //       might not support it.
    skeleton.replace(expDTComponents, function ($0) {
        // See which symbol we're dealing with
        return expDTComponentsMeta($0, formatObj);
    });

    return computeFinalPatterns(formatObj);
}

/**
 * Processes DateTime formats from CLDR to an easier-to-parse format.
 * the result of this operation should be cached the first time a particular
 * calendar is analyzed.
 *
 * The specification requires we support at least the following subsets of
 * date/time components:
 *
 *   - 'weekday', 'year', 'month', 'day', 'hour', 'minute', 'second'
 *   - 'weekday', 'year', 'month', 'day'
 *   - 'year', 'month', 'day'
 *   - 'year', 'month'
 *   - 'month', 'day'
 *   - 'hour', 'minute', 'second'
 *   - 'hour', 'minute'
 *
 * We need to cherry pick at least these subsets from the CLDR data and convert
 * them into the pattern objects used in the ECMA-402 API.
 */
function createDateTimeFormats(formats) {
    var availableFormats = formats.availableFormats;
    var timeFormats = formats.timeFormats;
    var dateFormats = formats.dateFormats;
    var result = [];
    var skeleton = void 0,
        pattern = void 0,
        computed = void 0,
        i = void 0,
        j = void 0;
    var timeRelatedFormats = [];
    var dateRelatedFormats = [];

    // Map available (custom) formats into a pattern for createDateTimeFormats
    for (skeleton in availableFormats) {
        if (availableFormats.hasOwnProperty(skeleton)) {
            pattern = availableFormats[skeleton];
            computed = createDateTimeFormat(skeleton, pattern);
            if (computed) {
                result.push(computed);
                // in some cases, the format is only displaying date specific props
                // or time specific props, in which case we need to also produce the
                // combined formats.
                if (isDateFormatOnly(computed)) {
                    dateRelatedFormats.push(computed);
                } else if (isTimeFormatOnly(computed)) {
                    timeRelatedFormats.push(computed);
                }
            }
        }
    }

    // Map time formats into a pattern for createDateTimeFormats
    for (skeleton in timeFormats) {
        if (timeFormats.hasOwnProperty(skeleton)) {
            pattern = timeFormats[skeleton];
            computed = createDateTimeFormat(skeleton, pattern);
            if (computed) {
                result.push(computed);
                timeRelatedFormats.push(computed);
            }
        }
    }

    // Map date formats into a pattern for createDateTimeFormats
    for (skeleton in dateFormats) {
        if (dateFormats.hasOwnProperty(skeleton)) {
            pattern = dateFormats[skeleton];
            computed = createDateTimeFormat(skeleton, pattern);
            if (computed) {
                result.push(computed);
                dateRelatedFormats.push(computed);
            }
        }
    }

    // combine custom time and custom date formats when they are orthogonals to complete the
    // formats supported by CLDR.
    // This Algo is based on section "Missing Skeleton Fields" from:
    // http://unicode.org/reports/tr35/tr35-dates.html#availableFormats_appendItems
    for (i = 0; i < timeRelatedFormats.length; i += 1) {
        for (j = 0; j < dateRelatedFormats.length; j += 1) {
            if (dateRelatedFormats[j].month === 'long') {
                pattern = dateRelatedFormats[j].weekday ? formats.full : formats.long;
            } else if (dateRelatedFormats[j].month === 'short') {
                pattern = formats.medium;
            } else {
                pattern = formats.short;
            }
            computed = joinDateAndTimeFormats(dateRelatedFormats[j], timeRelatedFormats[i]);
            computed.originalPattern = pattern;
            computed.extendedPattern = pattern.replace('{0}', timeRelatedFormats[i].extendedPattern).replace('{1}', dateRelatedFormats[j].extendedPattern).replace(/^[,\s]+|[,\s]+$/gi, '');
            result.push(computeFinalPatterns(computed));
        }
    }

    return result;
}

// this represents the exceptions of the rule that are not covered by CLDR availableFormats
// for single property configurations, they play no role when using multiple properties, and
// those that are not in this table, are not exceptions or are not covered by the data we
// provide.
var validSyntheticProps = {
    second: {
        numeric: 's',
        '2-digit': 'ss'
    },
    minute: {
        numeric: 'm',
        '2-digit': 'mm'
    },
    year: {
        numeric: 'y',
        '2-digit': 'yy'
    },
    day: {
        numeric: 'd',
        '2-digit': 'dd'
    },
    month: {
        numeric: 'L',
        '2-digit': 'LL',
        narrow: 'LLLLL',
        short: 'LLL',
        long: 'LLLL'
    },
    weekday: {
        narrow: 'ccccc',
        short: 'ccc',
        long: 'cccc'
    }
};

function generateSyntheticFormat(propName, propValue) {
    if (validSyntheticProps[propName] && validSyntheticProps[propName][propValue]) {
        var _ref2;

        return _ref2 = {
            originalPattern: validSyntheticProps[propName][propValue],
            _: defineProperty$1({}, propName, propValue),
            extendedPattern: "{" + propName + "}"
        }, defineProperty$1(_ref2, propName, propValue), defineProperty$1(_ref2, "pattern12", "{" + propName + "}"), defineProperty$1(_ref2, "pattern", "{" + propName + "}"), _ref2;
    }
}

// An object map of date component keys, saves using a regex later
var dateWidths = objCreate(null, { narrow: {}, short: {}, long: {} });

/**
 * Returns a string for a date component, resolved using multiple inheritance as specified
 * as specified in the Unicode Technical Standard 35.
 */
function resolveDateString(data, ca, component, width, key) {
    // From http://www.unicode.org/reports/tr35/tr35.html#Multiple_Inheritance:
    // 'In clearly specified instances, resources may inherit from within the same locale.
    //  For example, ... the Buddhist calendar inherits from the Gregorian calendar.'
    var obj = data[ca] && data[ca][component] ? data[ca][component] : data.gregory[component],


    // "sideways" inheritance resolves strings when a key doesn't exist
    alts = {
        narrow: ['short', 'long'],
        short: ['long', 'narrow'],
        long: ['short', 'narrow']
    },


    //
    resolved = hop.call(obj, width) ? obj[width] : hop.call(obj, alts[width][0]) ? obj[alts[width][0]] : obj[alts[width][1]];

    // `key` wouldn't be specified for components 'dayPeriods'
    return key !== null ? resolved[key] : resolved;
}

// Define the DateTimeFormat constructor internally so it cannot be tainted
function DateTimeFormatConstructor() {
    var locales = arguments[0];
    var options = arguments[1];

    if (!this || this === Intl) {
        return new Intl.DateTimeFormat(locales, options);
    }
    return InitializeDateTimeFormat(toObject(this), locales, options);
}

defineProperty(Intl, 'DateTimeFormat', {
    configurable: true,
    writable: true,
    value: DateTimeFormatConstructor
});

// Must explicitly set prototypes as unwritable
defineProperty(DateTimeFormatConstructor, 'prototype', {
    writable: false
});

/**
 * The abstract operation InitializeDateTimeFormat accepts the arguments dateTimeFormat
 * (which must be an object), locales, and options. It initializes dateTimeFormat as a
 * DateTimeFormat object.
 */
function /* 12.1.1.1 */InitializeDateTimeFormat(dateTimeFormat, locales, options) {
    // This will be a internal properties object if we're not already initialized
    var internal = getInternalProperties(dateTimeFormat);

    // Create an object whose props can be used to restore the values of RegExp props
    var regexpRestore = createRegExpRestore();

    // 1. If dateTimeFormat has an [[initializedIntlObject]] internal property with
    //    value true, throw a TypeError exception.
    if (internal['[[initializedIntlObject]]'] === true) throw new TypeError('`this` object has already been initialized as an Intl object');

    // Need this to access the `internal` object
    defineProperty(dateTimeFormat, '__getInternalProperties', {
        value: function value() {
            // NOTE: Non-standard, for internal use only
            if (arguments[0] === secret) return internal;
        }
    });

    // 2. Set the [[initializedIntlObject]] internal property of numberFormat to true.
    internal['[[initializedIntlObject]]'] = true;

    // 3. Let requestedLocales be the result of calling the CanonicalizeLocaleList
    //    abstract operation (defined in 9.2.1) with argument locales.
    var requestedLocales = CanonicalizeLocaleList(locales);

    // 4. Let options be the result of calling the ToDateTimeOptions abstract
    //    operation (defined below) with arguments options, "any", and "date".
    options = ToDateTimeOptions(options, 'any', 'date');

    // 5. Let opt be a new Record.
    var opt = new Record();

    // 6. Let matcher be the result of calling the GetOption abstract operation
    //    (defined in 9.2.9) with arguments options, "localeMatcher", "string", a List
    //    containing the two String values "lookup" and "best fit", and "best fit".
    var matcher = GetOption(options, 'localeMatcher', 'string', new List('lookup', 'best fit'), 'best fit');

    // 7. Set opt.[[localeMatcher]] to matcher.
    opt['[[localeMatcher]]'] = matcher;

    // 8. Let DateTimeFormat be the standard built-in object that is the initial
    //    value of Intl.DateTimeFormat.
    var DateTimeFormat = internals.DateTimeFormat; // This is what we *really* need

    // 9. Let localeData be the value of the [[localeData]] internal property of
    //    DateTimeFormat.
    var localeData = DateTimeFormat['[[localeData]]'];

    // 10. Let r be the result of calling the ResolveLocale abstract operation
    //     (defined in 9.2.5) with the [[availableLocales]] internal property of
    //      DateTimeFormat, requestedLocales, opt, the [[relevantExtensionKeys]]
    //      internal property of DateTimeFormat, and localeData.
    var r = ResolveLocale(DateTimeFormat['[[availableLocales]]'], requestedLocales, opt, DateTimeFormat['[[relevantExtensionKeys]]'], localeData);

    // 11. Set the [[locale]] internal property of dateTimeFormat to the value of
    //     r.[[locale]].
    internal['[[locale]]'] = r['[[locale]]'];

    // 12. Set the [[calendar]] internal property of dateTimeFormat to the value of
    //     r.[[ca]].
    internal['[[calendar]]'] = r['[[ca]]'];

    // 13. Set the [[numberingSystem]] internal property of dateTimeFormat to the value of
    //     r.[[nu]].
    internal['[[numberingSystem]]'] = r['[[nu]]'];

    // The specification doesn't tell us to do this, but it's helpful later on
    internal['[[dataLocale]]'] = r['[[dataLocale]]'];

    // 14. Let dataLocale be the value of r.[[dataLocale]].
    var dataLocale = r['[[dataLocale]]'];

    // 15. Let tz be the result of calling the [[Get]] internal method of options with
    //     argument "timeZone".
    var tz = options.timeZone;

    // 16. If tz is not undefined, then
    if (tz !== undefined) {
        // a. Let tz be ToString(tz).
        // b. Convert tz to upper case as described in 6.1.
        //    NOTE: If an implementation accepts additional time zone values, as permitted
        //          under certain conditions by the Conformance clause, different casing
        //          rules apply.
        tz = toLatinUpperCase(tz);

        // c. If tz is not "UTC", then throw a RangeError exception.
        // ###TODO: accept more time zones###
        if (tz !== 'UTC') throw new RangeError('timeZone is not supported.');
    }

    // 17. Set the [[timeZone]] internal property of dateTimeFormat to tz.
    internal['[[timeZone]]'] = tz;

    // 18. Let opt be a new Record.
    opt = new Record();

    // 19. For each row of Table 3, except the header row, do:
    for (var prop in dateTimeComponents) {
        if (!hop.call(dateTimeComponents, prop)) continue;

        // 20. Let prop be the name given in the Property column of the row.
        // 21. Let value be the result of calling the GetOption abstract operation,
        //     passing as argument options, the name given in the Property column of the
        //     row, "string", a List containing the strings given in the Values column of
        //     the row, and undefined.
        var value = GetOption(options, prop, 'string', dateTimeComponents[prop]);

        // 22. Set opt.[[<prop>]] to value.
        opt['[[' + prop + ']]'] = value;
    }

    // Assigned a value below
    var bestFormat = void 0;

    // 23. Let dataLocaleData be the result of calling the [[Get]] internal method of
    //     localeData with argument dataLocale.
    var dataLocaleData = localeData[dataLocale];

    // 24. Let formats be the result of calling the [[Get]] internal method of
    //     dataLocaleData with argument "formats".
    //     Note: we process the CLDR formats into the spec'd structure
    var formats = ToDateTimeFormats(dataLocaleData.formats);

    // 25. Let matcher be the result of calling the GetOption abstract operation with
    //     arguments options, "formatMatcher", "string", a List containing the two String
    //     values "basic" and "best fit", and "best fit".
    matcher = GetOption(options, 'formatMatcher', 'string', new List('basic', 'best fit'), 'best fit');

    // Optimization: caching the processed formats as a one time operation by
    // replacing the initial structure from localeData
    dataLocaleData.formats = formats;

    // 26. If matcher is "basic", then
    if (matcher === 'basic') {
        // 27. Let bestFormat be the result of calling the BasicFormatMatcher abstract
        //     operation (defined below) with opt and formats.
        bestFormat = BasicFormatMatcher(opt, formats);

        // 28. Else
    } else {
        {
            // diverging
            var _hr = GetOption(options, 'hour12', 'boolean' /*, undefined, undefined*/);
            opt.hour12 = _hr === undefined ? dataLocaleData.hour12 : _hr;
        }
        // 29. Let bestFormat be the result of calling the BestFitFormatMatcher
        //     abstract operation (defined below) with opt and formats.
        bestFormat = BestFitFormatMatcher(opt, formats);
    }

    // 30. For each row in Table 3, except the header row, do
    for (var _prop in dateTimeComponents) {
        if (!hop.call(dateTimeComponents, _prop)) continue;

        // a. Let prop be the name given in the Property column of the row.
        // b. Let pDesc be the result of calling the [[GetOwnProperty]] internal method of
        //    bestFormat with argument prop.
        // c. If pDesc is not undefined, then
        if (hop.call(bestFormat, _prop)) {
            // i. Let p be the result of calling the [[Get]] internal method of bestFormat
            //    with argument prop.
            var p = bestFormat[_prop];
            {
                // diverging
                p = bestFormat._ && hop.call(bestFormat._, _prop) ? bestFormat._[_prop] : p;
            }

            // ii. Set the [[<prop>]] internal property of dateTimeFormat to p.
            internal['[[' + _prop + ']]'] = p;
        }
    }

    var pattern = void 0; // Assigned a value below

    // 31. Let hr12 be the result of calling the GetOption abstract operation with
    //     arguments options, "hour12", "boolean", undefined, and undefined.
    var hr12 = GetOption(options, 'hour12', 'boolean' /*, undefined, undefined*/);

    // 32. If dateTimeFormat has an internal property [[hour]], then
    if (internal['[[hour]]']) {
        // a. If hr12 is undefined, then let hr12 be the result of calling the [[Get]]
        //    internal method of dataLocaleData with argument "hour12".
        hr12 = hr12 === undefined ? dataLocaleData.hour12 : hr12;

        // b. Set the [[hour12]] internal property of dateTimeFormat to hr12.
        internal['[[hour12]]'] = hr12;

        // c. If hr12 is true, then
        if (hr12 === true) {
            // i. Let hourNo0 be the result of calling the [[Get]] internal method of
            //    dataLocaleData with argument "hourNo0".
            var hourNo0 = dataLocaleData.hourNo0;

            // ii. Set the [[hourNo0]] internal property of dateTimeFormat to hourNo0.
            internal['[[hourNo0]]'] = hourNo0;

            // iii. Let pattern be the result of calling the [[Get]] internal method of
            //      bestFormat with argument "pattern12".
            pattern = bestFormat.pattern12;
        }

        // d. Else
        else
            // i. Let pattern be the result of calling the [[Get]] internal method of
            //    bestFormat with argument "pattern".
            pattern = bestFormat.pattern;
    }

    // 33. Else
    else
        // a. Let pattern be the result of calling the [[Get]] internal method of
        //    bestFormat with argument "pattern".
        pattern = bestFormat.pattern;

    // 34. Set the [[pattern]] internal property of dateTimeFormat to pattern.
    internal['[[pattern]]'] = pattern;

    // 35. Set the [[boundFormat]] internal property of dateTimeFormat to undefined.
    internal['[[boundFormat]]'] = undefined;

    // 36. Set the [[initializedDateTimeFormat]] internal property of dateTimeFormat to
    //     true.
    internal['[[initializedDateTimeFormat]]'] = true;

    // In ES3, we need to pre-bind the format() function
    if (es3) dateTimeFormat.format = GetFormatDateTime.call(dateTimeFormat);

    // Restore the RegExp properties
    regexpRestore();

    // Return the newly initialised object
    return dateTimeFormat;
}

/**
 * Several DateTimeFormat algorithms use values from the following table, which provides
 * property names and allowable values for the components of date and time formats:
 */
var dateTimeComponents = {
    weekday: ["narrow", "short", "long"],
    era: ["narrow", "short", "long"],
    year: ["2-digit", "numeric"],
    month: ["2-digit", "numeric", "narrow", "short", "long"],
    day: ["2-digit", "numeric"],
    hour: ["2-digit", "numeric"],
    minute: ["2-digit", "numeric"],
    second: ["2-digit", "numeric"],
    timeZoneName: ["short", "long"]
};

/**
 * When the ToDateTimeOptions abstract operation is called with arguments options,
 * required, and defaults, the following steps are taken:
 */
function ToDateTimeFormats(formats) {
    if (Object.prototype.toString.call(formats) === '[object Array]') {
        return formats;
    }
    return createDateTimeFormats(formats);
}

/**
 * When the ToDateTimeOptions abstract operation is called with arguments options,
 * required, and defaults, the following steps are taken:
 */
function ToDateTimeOptions(options, required, defaults) {
    // 1. If options is undefined, then let options be null, else let options be
    //    ToObject(options).
    if (options === undefined) options = null;else {
        // (#12) options needs to be a Record, but it also needs to inherit properties
        var opt2 = toObject(options);
        options = new Record();

        for (var k in opt2) {
            options[k] = opt2[k];
        }
    }

    // 2. Let create be the standard built-in function object defined in ES5, 15.2.3.5.
    var create = objCreate;

    // 3. Let options be the result of calling the [[Call]] internal method of create with
    //    undefined as the this value and an argument list containing the single item
    //    options.
    options = create(options);

    // 4. Let needDefaults be true.
    var needDefaults = true;

    // 5. If required is "date" or "any", then
    if (required === 'date' || required === 'any') {
        // a. For each of the property names "weekday", "year", "month", "day":
        // i. If the result of calling the [[Get]] internal method of options with the
        //    property name is not undefined, then let needDefaults be false.
        if (options.weekday !== undefined || options.year !== undefined || options.month !== undefined || options.day !== undefined) needDefaults = false;
    }

    // 6. If required is "time" or "any", then
    if (required === 'time' || required === 'any') {
        // a. For each of the property names "hour", "minute", "second":
        // i. If the result of calling the [[Get]] internal method of options with the
        //    property name is not undefined, then let needDefaults be false.
        if (options.hour !== undefined || options.minute !== undefined || options.second !== undefined) needDefaults = false;
    }

    // 7. If needDefaults is true and defaults is either "date" or "all", then
    if (needDefaults && (defaults === 'date' || defaults === 'all'))
        // a. For each of the property names "year", "month", "day":
        // i. Call the [[DefineOwnProperty]] internal method of options with the
        //    property name, Property Descriptor {[[Value]]: "numeric", [[Writable]]:
        //    true, [[Enumerable]]: true, [[Configurable]]: true}, and false.
        options.year = options.month = options.day = 'numeric';

    // 8. If needDefaults is true and defaults is either "time" or "all", then
    if (needDefaults && (defaults === 'time' || defaults === 'all'))
        // a. For each of the property names "hour", "minute", "second":
        // i. Call the [[DefineOwnProperty]] internal method of options with the
        //    property name, Property Descriptor {[[Value]]: "numeric", [[Writable]]:
        //    true, [[Enumerable]]: true, [[Configurable]]: true}, and false.
        options.hour = options.minute = options.second = 'numeric';

    // 9. Return options.
    return options;
}

/**
 * When the BasicFormatMatcher abstract operation is called with two arguments options and
 * formats, the following steps are taken:
 */
function BasicFormatMatcher(options, formats) {
    // 1. Let removalPenalty be 120.
    var removalPenalty = 120;

    // 2. Let additionPenalty be 20.
    var additionPenalty = 20;

    // 3. Let longLessPenalty be 8.
    var longLessPenalty = 8;

    // 4. Let longMorePenalty be 6.
    var longMorePenalty = 6;

    // 5. Let shortLessPenalty be 6.
    var shortLessPenalty = 6;

    // 6. Let shortMorePenalty be 3.
    var shortMorePenalty = 3;

    // 7. Let bestScore be -Infinity.
    var bestScore = -Infinity;

    // 8. Let bestFormat be undefined.
    var bestFormat = void 0;

    // 9. Let i be 0.
    var i = 0;

    // 10. Assert: formats is an Array object.

    // 11. Let len be the result of calling the [[Get]] internal method of formats with argument "length".
    var len = formats.length;

    // 12. Repeat while i < len:
    while (i < len) {
        // a. Let format be the result of calling the [[Get]] internal method of formats with argument ToString(i).
        var format = formats[i];

        // b. Let score be 0.
        var score = 0;

        // c. For each property shown in Table 3:
        for (var property in dateTimeComponents) {
            if (!hop.call(dateTimeComponents, property)) continue;

            // i. Let optionsProp be options.[[<property>]].
            var optionsProp = options['[[' + property + ']]'];

            // ii. Let formatPropDesc be the result of calling the [[GetOwnProperty]] internal method of format
            //     with argument property.
            // iii. If formatPropDesc is not undefined, then
            //     1. Let formatProp be the result of calling the [[Get]] internal method of format with argument property.
            var formatProp = hop.call(format, property) ? format[property] : undefined;

            // iv. If optionsProp is undefined and formatProp is not undefined, then decrease score by
            //     additionPenalty.
            if (optionsProp === undefined && formatProp !== undefined) score -= additionPenalty;

            // v. Else if optionsProp is not undefined and formatProp is undefined, then decrease score by
            //    removalPenalty.
            else if (optionsProp !== undefined && formatProp === undefined) score -= removalPenalty;

                // vi. Else
                else {
                        // 1. Let values be the array ["2-digit", "numeric", "narrow", "short",
                        //    "long"].
                        var values = ['2-digit', 'numeric', 'narrow', 'short', 'long'];

                        // 2. Let optionsPropIndex be the index of optionsProp within values.
                        var optionsPropIndex = arrIndexOf.call(values, optionsProp);

                        // 3. Let formatPropIndex be the index of formatProp within values.
                        var formatPropIndex = arrIndexOf.call(values, formatProp);

                        // 4. Let delta be max(min(formatPropIndex - optionsPropIndex, 2), -2).
                        var delta = Math.max(Math.min(formatPropIndex - optionsPropIndex, 2), -2);

                        // 5. If delta = 2, decrease score by longMorePenalty.
                        if (delta === 2) score -= longMorePenalty;

                        // 6. Else if delta = 1, decrease score by shortMorePenalty.
                        else if (delta === 1) score -= shortMorePenalty;

                            // 7. Else if delta = -1, decrease score by shortLessPenalty.
                            else if (delta === -1) score -= shortLessPenalty;

                                // 8. Else if delta = -2, decrease score by longLessPenalty.
                                else if (delta === -2) score -= longLessPenalty;
                    }
        }

        // d. If score > bestScore, then
        if (score > bestScore) {
            // i. Let bestScore be score.
            bestScore = score;

            // ii. Let bestFormat be format.
            bestFormat = format;
        }

        // e. Increase i by 1.
        i++;
    }

    // 13. Return bestFormat.
    return bestFormat;
}

/**
 * When the BestFitFormatMatcher abstract operation is called with two arguments options
 * and formats, it performs implementation dependent steps, which should return a set of
 * component representations that a typical user of the selected locale would perceive as
 * at least as good as the one returned by BasicFormatMatcher.
 *
 * This polyfill defines the algorithm to be the same as BasicFormatMatcher,
 * with the addition of bonus points awarded where the requested format is of
 * the same data type as the potentially matching format.
 *
 * This algo relies on the concept of closest distance matching described here:
 * http://unicode.org/reports/tr35/tr35-dates.html#Matching_Skeletons
 * Typically a “best match” is found using a closest distance match, such as:
 *
 * Symbols requesting a best choice for the locale are replaced.
 *      j → one of {H, k, h, K}; C → one of {a, b, B}
 * -> Covered by cldr.js matching process
 *
 * For fields with symbols representing the same type (year, month, day, etc):
 *     Most symbols have a small distance from each other.
 *         M ≅ L; E ≅ c; a ≅ b ≅ B; H ≅ k ≅ h ≅ K; ...
 *     -> Covered by cldr.js matching process
 *
 *     Width differences among fields, other than those marking text vs numeric, are given small distance from each other.
 *         MMM ≅ MMMM
 *         MM ≅ M
 *     Numeric and text fields are given a larger distance from each other.
 *         MMM ≈ MM
 *     Symbols representing substantial differences (week of year vs week of month) are given much larger a distances from each other.
 *         d ≋ D; ...
 *     Missing or extra fields cause a match to fail. (But see Missing Skeleton Fields).
 *
 *
 * For example,
 *
 *     { month: 'numeric', day: 'numeric' }
 *
 * should match
 *
 *     { month: '2-digit', day: '2-digit' }
 *
 * rather than
 *
 *     { month: 'short', day: 'numeric' }
 *
 * This makes sense because a user requesting a formatted date with numeric parts would
 * not expect to see the returned format containing narrow, short or long part names
 */
function BestFitFormatMatcher(options, formats) {
    /** Diverging: this block implements the hack for single property configuration, eg.:
     *
     *      `new Intl.DateTimeFormat('en', {day: 'numeric'})`
     *
     * should produce a single digit with the day of the month. This is needed because
     * CLDR `availableFormats` data structure doesn't cover these cases.
     */
    {
        var optionsPropNames = [];
        for (var property in dateTimeComponents) {
            if (!hop.call(dateTimeComponents, property)) continue;

            if (options['[[' + property + ']]'] !== undefined) {
                optionsPropNames.push(property);
            }
        }
        if (optionsPropNames.length === 1) {
            var _bestFormat = generateSyntheticFormat(optionsPropNames[0], options['[[' + optionsPropNames[0] + ']]']);
            if (_bestFormat) {
                return _bestFormat;
            }
        }
    }

    // 1. Let removalPenalty be 120.
    var removalPenalty = 120;

    // 2. Let additionPenalty be 20.
    var additionPenalty = 20;

    // 3. Let longLessPenalty be 8.
    var longLessPenalty = 8;

    // 4. Let longMorePenalty be 6.
    var longMorePenalty = 6;

    // 5. Let shortLessPenalty be 6.
    var shortLessPenalty = 6;

    // 6. Let shortMorePenalty be 3.
    var shortMorePenalty = 3;

    var patternPenalty = 2;

    var hour12Penalty = 1;

    // 7. Let bestScore be -Infinity.
    var bestScore = -Infinity;

    // 8. Let bestFormat be undefined.
    var bestFormat = void 0;

    // 9. Let i be 0.
    var i = 0;

    // 10. Assert: formats is an Array object.

    // 11. Let len be the result of calling the [[Get]] internal method of formats with argument "length".
    var len = formats.length;

    // 12. Repeat while i < len:
    while (i < len) {
        // a. Let format be the result of calling the [[Get]] internal method of formats with argument ToString(i).
        var format = formats[i];

        // b. Let score be 0.
        var score = 0;

        // c. For each property shown in Table 3:
        for (var _property in dateTimeComponents) {
            if (!hop.call(dateTimeComponents, _property)) continue;

            // i. Let optionsProp be options.[[<property>]].
            var optionsProp = options['[[' + _property + ']]'];

            // ii. Let formatPropDesc be the result of calling the [[GetOwnProperty]] internal method of format
            //     with argument property.
            // iii. If formatPropDesc is not undefined, then
            //     1. Let formatProp be the result of calling the [[Get]] internal method of format with argument property.
            var formatProp = hop.call(format, _property) ? format[_property] : undefined;

            // Diverging: using the default properties produced by the pattern/skeleton
            // to match it with user options, and apply a penalty
            var patternProp = hop.call(format._, _property) ? format._[_property] : undefined;
            if (optionsProp !== patternProp) {
                score -= patternPenalty;
            }

            // iv. If optionsProp is undefined and formatProp is not undefined, then decrease score by
            //     additionPenalty.
            if (optionsProp === undefined && formatProp !== undefined) score -= additionPenalty;

            // v. Else if optionsProp is not undefined and formatProp is undefined, then decrease score by
            //    removalPenalty.
            else if (optionsProp !== undefined && formatProp === undefined) score -= removalPenalty;

                // vi. Else
                else {
                        // 1. Let values be the array ["2-digit", "numeric", "narrow", "short",
                        //    "long"].
                        var values = ['2-digit', 'numeric', 'narrow', 'short', 'long'];

                        // 2. Let optionsPropIndex be the index of optionsProp within values.
                        var optionsPropIndex = arrIndexOf.call(values, optionsProp);

                        // 3. Let formatPropIndex be the index of formatProp within values.
                        var formatPropIndex = arrIndexOf.call(values, formatProp);

                        // 4. Let delta be max(min(formatPropIndex - optionsPropIndex, 2), -2).
                        var delta = Math.max(Math.min(formatPropIndex - optionsPropIndex, 2), -2);

                        {
                            // diverging from spec
                            // When the bestFit argument is true, subtract additional penalty where data types are not the same
                            if (formatPropIndex <= 1 && optionsPropIndex >= 2 || formatPropIndex >= 2 && optionsPropIndex <= 1) {
                                // 5. If delta = 2, decrease score by longMorePenalty.
                                if (delta > 0) score -= longMorePenalty;else if (delta < 0) score -= longLessPenalty;
                            } else {
                                // 5. If delta = 2, decrease score by longMorePenalty.
                                if (delta > 1) score -= shortMorePenalty;else if (delta < -1) score -= shortLessPenalty;
                            }
                        }
                    }
        }

        {
            // diverging to also take into consideration differences between 12 or 24 hours
            // which is special for the best fit only.
            if (format._.hour12 !== options.hour12) {
                score -= hour12Penalty;
            }
        }

        // d. If score > bestScore, then
        if (score > bestScore) {
            // i. Let bestScore be score.
            bestScore = score;
            // ii. Let bestFormat be format.
            bestFormat = format;
        }

        // e. Increase i by 1.
        i++;
    }

    // 13. Return bestFormat.
    return bestFormat;
}

/* 12.2.3 */internals.DateTimeFormat = {
    '[[availableLocales]]': [],
    '[[relevantExtensionKeys]]': ['ca', 'nu'],
    '[[localeData]]': {}
};

/**
 * When the supportedLocalesOf method of Intl.DateTimeFormat is called, the
 * following steps are taken:
 */
/* 12.2.2 */
defineProperty(Intl.DateTimeFormat, 'supportedLocalesOf', {
    configurable: true,
    writable: true,
    value: fnBind.call(function (locales) {
        // Bound functions only have the `this` value altered if being used as a constructor,
        // this lets us imitate a native function that has no constructor
        if (!hop.call(this, '[[availableLocales]]')) throw new TypeError('supportedLocalesOf() is not a constructor');

        // Create an object whose props can be used to restore the values of RegExp props
        var regexpRestore = createRegExpRestore(),


        // 1. If options is not provided, then let options be undefined.
        options = arguments[1],


        // 2. Let availableLocales be the value of the [[availableLocales]] internal
        //    property of the standard built-in object that is the initial value of
        //    Intl.NumberFormat.

        availableLocales = this['[[availableLocales]]'],


        // 3. Let requestedLocales be the result of calling the CanonicalizeLocaleList
        //    abstract operation (defined in 9.2.1) with argument locales.
        requestedLocales = CanonicalizeLocaleList(locales);

        // Restore the RegExp properties
        regexpRestore();

        // 4. Return the result of calling the SupportedLocales abstract operation
        //    (defined in 9.2.8) with arguments availableLocales, requestedLocales,
        //    and options.
        return SupportedLocales(availableLocales, requestedLocales, options);
    }, internals.NumberFormat)
});

/**
 * This named accessor property returns a function that formats a number
 * according to the effective locale and the formatting options of this
 * DateTimeFormat object.
 */
/* 12.3.2 */defineProperty(Intl.DateTimeFormat.prototype, 'format', {
    configurable: true,
    get: GetFormatDateTime
});

function GetFormatDateTime() {
    var internal = this !== null && babelHelpers$1["typeof"](this) === 'object' && getInternalProperties(this);

    // Satisfy test 12.3_b
    if (!internal || !internal['[[initializedDateTimeFormat]]']) throw new TypeError('`this` value for format() is not an initialized Intl.DateTimeFormat object.');

    // The value of the [[Get]] attribute is a function that takes the following
    // steps:

    // 1. If the [[boundFormat]] internal property of this DateTimeFormat object
    //    is undefined, then:
    if (internal['[[boundFormat]]'] === undefined) {
        // a. Let F be a Function object, with internal properties set as
        //    specified for built-in functions in ES5, 15, or successor, and the
        //    length property set to 0, that takes the argument date and
        //    performs the following steps:
        var F = function F() {
            var date = arguments.length <= 0 || arguments[0] === undefined ? undefined : arguments[0];

            //   i. If date is not provided or is undefined, then let x be the
            //      result as if by the expression Date.now() where Date.now is
            //      the standard built-in function defined in ES5, 15.9.4.4.
            //  ii. Else let x be ToNumber(date).
            // iii. Return the result of calling the FormatDateTime abstract
            //      operation (defined below) with arguments this and x.
            var x = date === undefined ? Date.now() : toNumber(date);
            return FormatDateTime(this, x);
        };
        // b. Let bind be the standard built-in function object defined in ES5,
        //    15.3.4.5.
        // c. Let bf be the result of calling the [[Call]] internal method of
        //    bind with F as the this value and an argument list containing
        //    the single item this.
        var bf = fnBind.call(F, this);
        // d. Set the [[boundFormat]] internal property of this NumberFormat
        //    object to bf.
        internal['[[boundFormat]]'] = bf;
    }
    // Return the value of the [[boundFormat]] internal property of this
    // NumberFormat object.
    return internal['[[boundFormat]]'];
}

function formatToParts$1() {
    var date = arguments.length <= 0 || arguments[0] === undefined ? undefined : arguments[0];

    var internal = this !== null && babelHelpers$1["typeof"](this) === 'object' && getInternalProperties(this);

    if (!internal || !internal['[[initializedDateTimeFormat]]']) throw new TypeError('`this` value for formatToParts() is not an initialized Intl.DateTimeFormat object.');

    var x = date === undefined ? Date.now() : toNumber(date);
    return FormatToPartsDateTime(this, x);
}

Object.defineProperty(Intl.DateTimeFormat.prototype, 'formatToParts', {
    enumerable: false,
    writable: true,
    configurable: true,
    value: formatToParts$1
});

function CreateDateTimeParts(dateTimeFormat, x) {
    // 1. If x is not a finite Number, then throw a RangeError exception.
    if (!isFinite(x)) throw new RangeError('Invalid valid date passed to format');

    var internal = dateTimeFormat.__getInternalProperties(secret);

    // Creating restore point for properties on the RegExp object... please wait
    /* let regexpRestore = */createRegExpRestore(); // ###TODO: review this

    // 2. Let locale be the value of the [[locale]] internal property of dateTimeFormat.
    var locale = internal['[[locale]]'];

    // 3. Let nf be the result of creating a new NumberFormat object as if by the
    // expression new Intl.NumberFormat([locale], {useGrouping: false}) where
    // Intl.NumberFormat is the standard built-in constructor defined in 11.1.3.
    var nf = new Intl.NumberFormat([locale], { useGrouping: false });

    // 4. Let nf2 be the result of creating a new NumberFormat object as if by the
    // expression new Intl.NumberFormat([locale], {minimumIntegerDigits: 2, useGrouping:
    // false}) where Intl.NumberFormat is the standard built-in constructor defined in
    // 11.1.3.
    var nf2 = new Intl.NumberFormat([locale], { minimumIntegerDigits: 2, useGrouping: false });

    // 5. Let tm be the result of calling the ToLocalTime abstract operation (defined
    // below) with x, the value of the [[calendar]] internal property of dateTimeFormat,
    // and the value of the [[timeZone]] internal property of dateTimeFormat.
    var tm = ToLocalTime(x, internal['[[calendar]]'], internal['[[timeZone]]']);

    // 6. Let result be the value of the [[pattern]] internal property of dateTimeFormat.
    var pattern = internal['[[pattern]]'];

    // 7.
    var result = new List();

    // 8.
    var index = 0;

    // 9.
    var beginIndex = pattern.indexOf('{');

    // 10.
    var endIndex = 0;

    // Need the locale minus any extensions
    var dataLocale = internal['[[dataLocale]]'];

    // Need the calendar data from CLDR
    var localeData = internals.DateTimeFormat['[[localeData]]'][dataLocale].calendars;
    var ca = internal['[[calendar]]'];

    // 11.
    while (beginIndex !== -1) {
        var fv = void 0;
        // a.
        endIndex = pattern.indexOf('}', beginIndex);
        // b.
        if (endIndex === -1) {
            throw new Error('Unclosed pattern');
        }
        // c.
        if (beginIndex > index) {
            arrPush.call(result, {
                type: 'literal',
                value: pattern.substring(index, beginIndex)
            });
        }
        // d.
        var p = pattern.substring(beginIndex + 1, endIndex);
        // e.
        if (dateTimeComponents.hasOwnProperty(p)) {
            //   i. Let f be the value of the [[<p>]] internal property of dateTimeFormat.
            var f = internal['[[' + p + ']]'];
            //  ii. Let v be the value of tm.[[<p>]].
            var v = tm['[[' + p + ']]'];
            // iii. If p is "year" and v ≤ 0, then let v be 1 - v.
            if (p === 'year' && v <= 0) {
                v = 1 - v;
            }
            //  iv. If p is "month", then increase v by 1.
            else if (p === 'month') {
                    v++;
                }
                //   v. If p is "hour" and the value of the [[hour12]] internal property of
                //      dateTimeFormat is true, then
                else if (p === 'hour' && internal['[[hour12]]'] === true) {
                        // 1. Let v be v modulo 12.
                        v = v % 12;
                        // 2. If v is 0 and the value of the [[hourNo0]] internal property of
                        //    dateTimeFormat is true, then let v be 12.
                        if (v === 0 && internal['[[hourNo0]]'] === true) {
                            v = 12;
                        }
                    }

            //  vi. If f is "numeric", then
            if (f === 'numeric') {
                // 1. Let fv be the result of calling the FormatNumber abstract operation
                //    (defined in 11.3.2) with arguments nf and v.
                fv = FormatNumber(nf, v);
            }
            // vii. Else if f is "2-digit", then
            else if (f === '2-digit') {
                    // 1. Let fv be the result of calling the FormatNumber abstract operation
                    //    with arguments nf2 and v.
                    fv = FormatNumber(nf2, v);
                    // 2. If the length of fv is greater than 2, let fv be the substring of fv
                    //    containing the last two characters.
                    if (fv.length > 2) {
                        fv = fv.slice(-2);
                    }
                }
                // viii. Else if f is "narrow", "short", or "long", then let fv be a String
                //     value representing f in the desired form; the String value depends upon
                //     the implementation and the effective locale and calendar of
                //     dateTimeFormat. If p is "month", then the String value may also depend
                //     on whether dateTimeFormat has a [[day]] internal property. If p is
                //     "timeZoneName", then the String value may also depend on the value of
                //     the [[inDST]] field of tm.
                else if (f in dateWidths) {
                        switch (p) {
                            case 'month':
                                fv = resolveDateString(localeData, ca, 'months', f, tm['[[' + p + ']]']);
                                break;

                            case 'weekday':
                                try {
                                    fv = resolveDateString(localeData, ca, 'days', f, tm['[[' + p + ']]']);
                                    // fv = resolveDateString(ca.days, f)[tm['[['+ p +']]']];
                                } catch (e) {
                                    throw new Error('Could not find weekday data for locale ' + locale);
                                }
                                break;

                            case 'timeZoneName':
                                fv = ''; // ###TODO
                                break;

                            case 'era':
                                try {
                                    fv = resolveDateString(localeData, ca, 'eras', f, tm['[[' + p + ']]']);
                                } catch (e) {
                                    throw new Error('Could not find era data for locale ' + locale);
                                }
                                break;

                            default:
                                fv = tm['[[' + p + ']]'];
                        }
                    }
            // ix
            arrPush.call(result, {
                type: p,
                value: fv
            });
            // f.
        } else if (p === 'ampm') {
            // i.
            var _v = tm['[[hour]]'];
            // ii./iii.
            fv = resolveDateString(localeData, ca, 'dayPeriods', _v > 11 ? 'pm' : 'am', null);
            // iv.
            arrPush.call(result, {
                type: 'dayPeriod',
                value: fv
            });
            // g.
        } else {
            arrPush.call(result, {
                type: 'literal',
                value: pattern.substring(beginIndex, endIndex + 1)
            });
        }
        // h.
        index = endIndex + 1;
        // i.
        beginIndex = pattern.indexOf('{', index);
    }
    // 12.
    if (endIndex < pattern.length - 1) {
        arrPush.call(result, {
            type: 'literal',
            value: pattern.substr(endIndex + 1)
        });
    }
    // 13.
    return result;
}

/**
 * When the FormatDateTime abstract operation is called with arguments dateTimeFormat
 * (which must be an object initialized as a DateTimeFormat) and x (which must be a Number
 * value), it returns a String value representing x (interpreted as a time value as
 * specified in ES5, 15.9.1.1) according to the effective locale and the formatting
 * options of dateTimeFormat.
 */
function FormatDateTime(dateTimeFormat, x) {
    var parts = CreateDateTimeParts(dateTimeFormat, x);
    var result = '';

    for (var i = 0; parts.length > i; i++) {
        var part = parts[i];
        result += part.value;
    }
    return result;
}

function FormatToPartsDateTime(dateTimeFormat, x) {
    var parts = CreateDateTimeParts(dateTimeFormat, x);
    var result = [];
    for (var i = 0; parts.length > i; i++) {
        var part = parts[i];
        result.push({
            type: part.type,
            value: part.value
        });
    }
    return result;
}

/**
 * When the ToLocalTime abstract operation is called with arguments date, calendar, and
 * timeZone, the following steps are taken:
 */
function ToLocalTime(date, calendar, timeZone) {
    // 1. Apply calendrical calculations on date for the given calendar and time zone to
    //    produce weekday, era, year, month, day, hour, minute, second, and inDST values.
    //    The calculations should use best available information about the specified
    //    calendar and time zone. If the calendar is "gregory", then the calculations must
    //    match the algorithms specified in ES5, 15.9.1, except that calculations are not
    //    bound by the restrictions on the use of best available information on time zones
    //    for local time zone adjustment and daylight saving time adjustment imposed by
    //    ES5, 15.9.1.7 and 15.9.1.8.
    // ###TODO###
    var d = new Date(date),
        m = 'get' + (timeZone || '');

    // 2. Return a Record with fields [[weekday]], [[era]], [[year]], [[month]], [[day]],
    //    [[hour]], [[minute]], [[second]], and [[inDST]], each with the corresponding
    //    calculated value.
    return new Record({
        '[[weekday]]': d[m + 'Day'](),
        '[[era]]': +(d[m + 'FullYear']() >= 0),
        '[[year]]': d[m + 'FullYear'](),
        '[[month]]': d[m + 'Month'](),
        '[[day]]': d[m + 'Date'](),
        '[[hour]]': d[m + 'Hours'](),
        '[[minute]]': d[m + 'Minutes'](),
        '[[second]]': d[m + 'Seconds'](),
        '[[inDST]]': false // ###TODO###
    });
}

/**
 * The function returns a new object whose properties and attributes are set as if
 * constructed by an object literal assigning to each of the following properties the
 * value of the corresponding internal property of this DateTimeFormat object (see 12.4):
 * locale, calendar, numberingSystem, timeZone, hour12, weekday, era, year, month, day,
 * hour, minute, second, and timeZoneName. Properties whose corresponding internal
 * properties are not present are not assigned.
 */
/* 12.3.3 */defineProperty(Intl.DateTimeFormat.prototype, 'resolvedOptions', {
    writable: true,
    configurable: true,
    value: function value() {
        var prop = void 0,
            descs = new Record(),
            props = ['locale', 'calendar', 'numberingSystem', 'timeZone', 'hour12', 'weekday', 'era', 'year', 'month', 'day', 'hour', 'minute', 'second', 'timeZoneName'],
            internal = this !== null && babelHelpers$1["typeof"](this) === 'object' && getInternalProperties(this);

        // Satisfy test 12.3_b
        if (!internal || !internal['[[initializedDateTimeFormat]]']) throw new TypeError('`this` value for resolvedOptions() is not an initialized Intl.DateTimeFormat object.');

        for (var i = 0, max = props.length; i < max; i++) {
            if (hop.call(internal, prop = '[[' + props[i] + ']]')) descs[props[i]] = { value: internal[prop], writable: true, configurable: true, enumerable: true };
        }

        return objCreate({}, descs);
    }
});

var ls = Intl.__localeSensitiveProtos = {
    Number: {},
    Date: {}
};

/**
 * When the toLocaleString method is called with optional arguments locales and options,
 * the following steps are taken:
 */
/* 13.2.1 */ls.Number.toLocaleString = function () {
    // Satisfy test 13.2.1_1
    if (Object.prototype.toString.call(this) !== '[object Number]') throw new TypeError('`this` value must be a number for Number.prototype.toLocaleString()');

    // 1. Let x be this Number value (as defined in ES5, 15.7.4).
    // 2. If locales is not provided, then let locales be undefined.
    // 3. If options is not provided, then let options be undefined.
    // 4. Let numberFormat be the result of creating a new object as if by the
    //    expression new Intl.NumberFormat(locales, options) where
    //    Intl.NumberFormat is the standard built-in constructor defined in 11.1.3.
    // 5. Return the result of calling the FormatNumber abstract operation
    //    (defined in 11.3.2) with arguments numberFormat and x.
    return FormatNumber(new NumberFormatConstructor(arguments[0], arguments[1]), this);
};

/**
 * When the toLocaleString method is called with optional arguments locales and options,
 * the following steps are taken:
 */
/* 13.3.1 */ls.Date.toLocaleString = function () {
    // Satisfy test 13.3.0_1
    if (Object.prototype.toString.call(this) !== '[object Date]') throw new TypeError('`this` value must be a Date instance for Date.prototype.toLocaleString()');

    // 1. Let x be this time value (as defined in ES5, 15.9.5).
    var x = +this;

    // 2. If x is NaN, then return "Invalid Date".
    if (isNaN(x)) return 'Invalid Date';

    // 3. If locales is not provided, then let locales be undefined.
    var locales = arguments[0];

    // 4. If options is not provided, then let options be undefined.
    var options = arguments[1];

    // 5. Let options be the result of calling the ToDateTimeOptions abstract
    //    operation (defined in 12.1.1) with arguments options, "any", and "all".
    options = ToDateTimeOptions(options, 'any', 'all');

    // 6. Let dateTimeFormat be the result of creating a new object as if by the
    //    expression new Intl.DateTimeFormat(locales, options) where
    //    Intl.DateTimeFormat is the standard built-in constructor defined in 12.1.3.
    var dateTimeFormat = new DateTimeFormatConstructor(locales, options);

    // 7. Return the result of calling the FormatDateTime abstract operation (defined
    //    in 12.3.2) with arguments dateTimeFormat and x.
    return FormatDateTime(dateTimeFormat, x);
};

/**
 * When the toLocaleDateString method is called with optional arguments locales and
 * options, the following steps are taken:
 */
/* 13.3.2 */ls.Date.toLocaleDateString = function () {
    // Satisfy test 13.3.0_1
    if (Object.prototype.toString.call(this) !== '[object Date]') throw new TypeError('`this` value must be a Date instance for Date.prototype.toLocaleDateString()');

    // 1. Let x be this time value (as defined in ES5, 15.9.5).
    var x = +this;

    // 2. If x is NaN, then return "Invalid Date".
    if (isNaN(x)) return 'Invalid Date';

    // 3. If locales is not provided, then let locales be undefined.
    var locales = arguments[0],


    // 4. If options is not provided, then let options be undefined.
    options = arguments[1];

    // 5. Let options be the result of calling the ToDateTimeOptions abstract
    //    operation (defined in 12.1.1) with arguments options, "date", and "date".
    options = ToDateTimeOptions(options, 'date', 'date');

    // 6. Let dateTimeFormat be the result of creating a new object as if by the
    //    expression new Intl.DateTimeFormat(locales, options) where
    //    Intl.DateTimeFormat is the standard built-in constructor defined in 12.1.3.
    var dateTimeFormat = new DateTimeFormatConstructor(locales, options);

    // 7. Return the result of calling the FormatDateTime abstract operation (defined
    //    in 12.3.2) with arguments dateTimeFormat and x.
    return FormatDateTime(dateTimeFormat, x);
};

/**
 * When the toLocaleTimeString method is called with optional arguments locales and
 * options, the following steps are taken:
 */
/* 13.3.3 */ls.Date.toLocaleTimeString = function () {
    // Satisfy test 13.3.0_1
    if (Object.prototype.toString.call(this) !== '[object Date]') throw new TypeError('`this` value must be a Date instance for Date.prototype.toLocaleTimeString()');

    // 1. Let x be this time value (as defined in ES5, 15.9.5).
    var x = +this;

    // 2. If x is NaN, then return "Invalid Date".
    if (isNaN(x)) return 'Invalid Date';

    // 3. If locales is not provided, then let locales be undefined.
    var locales = arguments[0];

    // 4. If options is not provided, then let options be undefined.
    var options = arguments[1];

    // 5. Let options be the result of calling the ToDateTimeOptions abstract
    //    operation (defined in 12.1.1) with arguments options, "time", and "time".
    options = ToDateTimeOptions(options, 'time', 'time');

    // 6. Let dateTimeFormat be the result of creating a new object as if by the
    //    expression new Intl.DateTimeFormat(locales, options) where
    //    Intl.DateTimeFormat is the standard built-in constructor defined in 12.1.3.
    var dateTimeFormat = new DateTimeFormatConstructor(locales, options);

    // 7. Return the result of calling the FormatDateTime abstract operation (defined
    //    in 12.3.2) with arguments dateTimeFormat and x.
    return FormatDateTime(dateTimeFormat, x);
};

defineProperty(Intl, '__applyLocaleSensitivePrototypes', {
    writable: true,
    configurable: true,
    value: function value() {
        defineProperty(Number.prototype, 'toLocaleString', { writable: true, configurable: true, value: ls.Number.toLocaleString });
        // Need this here for IE 8, to avoid the _DontEnum_ bug
        defineProperty(Date.prototype, 'toLocaleString', { writable: true, configurable: true, value: ls.Date.toLocaleString });

        for (var k in ls.Date) {
            if (hop.call(ls.Date, k)) defineProperty(Date.prototype, k, { writable: true, configurable: true, value: ls.Date[k] });
        }
    }
});

/**
 * Can't really ship a single script with data for hundreds of locales, so we provide
 * this __addLocaleData method as a means for the developer to add the data on an
 * as-needed basis
 */
defineProperty(Intl, '__addLocaleData', {
    value: function value(data) {
        if (!IsStructurallyValidLanguageTag(data.locale)) throw new Error("Object passed doesn't identify itself with a valid language tag");

        addLocaleData(data, data.locale);
    }
});

function addLocaleData(data, tag) {
    // Both NumberFormat and DateTimeFormat require number data, so throw if it isn't present
    if (!data.number) throw new Error("Object passed doesn't contain locale data for Intl.NumberFormat");

    var locale = void 0,
        locales = [tag],
        parts = tag.split('-');

    // Create fallbacks for locale data with scripts, e.g. Latn, Hans, Vaii, etc
    if (parts.length > 2 && parts[1].length === 4) arrPush.call(locales, parts[0] + '-' + parts[2]);

    while (locale = arrShift.call(locales)) {
        // Add to NumberFormat internal properties as per 11.2.3
        arrPush.call(internals.NumberFormat['[[availableLocales]]'], locale);
        internals.NumberFormat['[[localeData]]'][locale] = data.number;

        // ...and DateTimeFormat internal properties as per 12.2.3
        if (data.date) {
            data.date.nu = data.number.nu;
            arrPush.call(internals.DateTimeFormat['[[availableLocales]]'], locale);
            internals.DateTimeFormat['[[localeData]]'][locale] = data.date;
        }
    }

    // If this is the first set of locale data added, make it the default
    if (defaultLocale === undefined) setDefaultLocale(tag);
}

defineProperty(Intl, '__disableRegExpRestore', {
    value: function value() {
        internals.disableRegExpRestore = true;
    }
});

module.exports = Intl;
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],24:[function(require,module,exports){
IntlPolyfill.__addLocaleData({locale:"en-US",date:{ca:["gregory","buddhist","chinese","coptic","dangi","ethioaa","ethiopic","generic","hebrew","indian","islamic","islamicc","japanese","persian","roc"],hourNo0:true,hour12:true,formats:{short:"{1}, {0}",medium:"{1}, {0}",full:"{1} 'at' {0}",long:"{1} 'at' {0}",availableFormats:{"d":"d","E":"ccc",Ed:"d E",Ehm:"E h:mm a",EHm:"E HH:mm",Ehms:"E h:mm:ss a",EHms:"E HH:mm:ss",Gy:"y G",GyMMM:"MMM y G",GyMMMd:"MMM d, y G",GyMMMEd:"E, MMM d, y G","h":"h a","H":"HH",hm:"h:mm a",Hm:"HH:mm",hms:"h:mm:ss a",Hms:"HH:mm:ss",hmsv:"h:mm:ss a v",Hmsv:"HH:mm:ss v",hmv:"h:mm a v",Hmv:"HH:mm v","M":"L",Md:"M/d",MEd:"E, M/d",MMM:"LLL",MMMd:"MMM d",MMMEd:"E, MMM d",MMMMd:"MMMM d",ms:"mm:ss","y":"y",yM:"M/y",yMd:"M/d/y",yMEd:"E, M/d/y",yMMM:"MMM y",yMMMd:"MMM d, y",yMMMEd:"E, MMM d, y",yMMMM:"MMMM y",yQQQ:"QQQ y",yQQQQ:"QQQQ y"},dateFormats:{yMMMMEEEEd:"EEEE, MMMM d, y",yMMMMd:"MMMM d, y",yMMMd:"MMM d, y",yMd:"M/d/yy"},timeFormats:{hmmsszzzz:"h:mm:ss a zzzz",hmsz:"h:mm:ss a z",hms:"h:mm:ss a",hm:"h:mm a"}},calendars:{buddhist:{months:{narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],short:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],long:["January","February","March","April","May","June","July","August","September","October","November","December"]},days:{narrow:["S","M","T","W","T","F","S"],short:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],long:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},eras:{narrow:["BE"],short:["BE"],long:["BE"]},dayPeriods:{am:"AM",pm:"PM"}},chinese:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["Mo1","Mo2","Mo3","Mo4","Mo5","Mo6","Mo7","Mo8","Mo9","Mo10","Mo11","Mo12"],long:["Month1","Month2","Month3","Month4","Month5","Month6","Month7","Month8","Month9","Month10","Month11","Month12"]},days:{narrow:["S","M","T","W","T","F","S"],short:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],long:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},dayPeriods:{am:"AM",pm:"PM"}},coptic:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12","13"],short:["Tout","Baba","Hator","Kiahk","Toba","Amshir","Baramhat","Baramouda","Bashans","Paona","Epep","Mesra","Nasie"],long:["Tout","Baba","Hator","Kiahk","Toba","Amshir","Baramhat","Baramouda","Bashans","Paona","Epep","Mesra","Nasie"]},days:{narrow:["S","M","T","W","T","F","S"],short:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],long:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},eras:{narrow:["ERA0","ERA1"],short:["ERA0","ERA1"],long:["ERA0","ERA1"]},dayPeriods:{am:"AM",pm:"PM"}},dangi:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["Mo1","Mo2","Mo3","Mo4","Mo5","Mo6","Mo7","Mo8","Mo9","Mo10","Mo11","Mo12"],long:["Month1","Month2","Month3","Month4","Month5","Month6","Month7","Month8","Month9","Month10","Month11","Month12"]},days:{narrow:["S","M","T","W","T","F","S"],short:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],long:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},dayPeriods:{am:"AM",pm:"PM"}},ethiopic:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12","13"],short:["Meskerem","Tekemt","Hedar","Tahsas","Ter","Yekatit","Megabit","Miazia","Genbot","Sene","Hamle","Nehasse","Pagumen"],long:["Meskerem","Tekemt","Hedar","Tahsas","Ter","Yekatit","Megabit","Miazia","Genbot","Sene","Hamle","Nehasse","Pagumen"]},days:{narrow:["S","M","T","W","T","F","S"],short:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],long:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},eras:{narrow:["ERA0","ERA1"],short:["ERA0","ERA1"],long:["ERA0","ERA1"]},dayPeriods:{am:"AM",pm:"PM"}},ethioaa:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12","13"],short:["Meskerem","Tekemt","Hedar","Tahsas","Ter","Yekatit","Megabit","Miazia","Genbot","Sene","Hamle","Nehasse","Pagumen"],long:["Meskerem","Tekemt","Hedar","Tahsas","Ter","Yekatit","Megabit","Miazia","Genbot","Sene","Hamle","Nehasse","Pagumen"]},days:{narrow:["S","M","T","W","T","F","S"],short:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],long:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},eras:{narrow:["ERA0"],short:["ERA0"],long:["ERA0"]},dayPeriods:{am:"AM",pm:"PM"}},generic:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["M01","M02","M03","M04","M05","M06","M07","M08","M09","M10","M11","M12"],long:["M01","M02","M03","M04","M05","M06","M07","M08","M09","M10","M11","M12"]},days:{narrow:["S","M","T","W","T","F","S"],short:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],long:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},eras:{narrow:["ERA0","ERA1"],short:["ERA0","ERA1"],long:["ERA0","ERA1"]},dayPeriods:{am:"AM",pm:"PM"}},gregory:{months:{narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],short:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],long:["January","February","March","April","May","June","July","August","September","October","November","December"]},days:{narrow:["S","M","T","W","T","F","S"],short:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],long:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},eras:{narrow:["B","A","BCE","CE"],short:["BC","AD","BCE","CE"],long:["Before Christ","Anno Domini","Before Common Era","Common Era"]},dayPeriods:{am:"AM",pm:"PM"}},hebrew:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12","13","7"],short:["Tishri","Heshvan","Kislev","Tevet","Shevat","Adar I","Adar","Nisan","Iyar","Sivan","Tamuz","Av","Elul","Adar II"],long:["Tishri","Heshvan","Kislev","Tevet","Shevat","Adar I","Adar","Nisan","Iyar","Sivan","Tamuz","Av","Elul","Adar II"]},days:{narrow:["S","M","T","W","T","F","S"],short:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],long:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},eras:{narrow:["AM"],short:["AM"],long:["AM"]},dayPeriods:{am:"AM",pm:"PM"}},indian:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["Chaitra","Vaisakha","Jyaistha","Asadha","Sravana","Bhadra","Asvina","Kartika","Agrahayana","Pausa","Magha","Phalguna"],long:["Chaitra","Vaisakha","Jyaistha","Asadha","Sravana","Bhadra","Asvina","Kartika","Agrahayana","Pausa","Magha","Phalguna"]},days:{narrow:["S","M","T","W","T","F","S"],short:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],long:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},eras:{narrow:["Saka"],short:["Saka"],long:["Saka"]},dayPeriods:{am:"AM",pm:"PM"}},islamic:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["Muh.","Saf.","Rab. I","Rab. II","Jum. I","Jum. II","Raj.","Sha.","Ram.","Shaw.","Dhuʻl-Q.","Dhuʻl-H."],long:["Muharram","Safar","Rabiʻ I","Rabiʻ II","Jumada I","Jumada II","Rajab","Shaʻban","Ramadan","Shawwal","Dhuʻl-Qiʻdah","Dhuʻl-Hijjah"]},days:{narrow:["S","M","T","W","T","F","S"],short:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],long:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},eras:{narrow:["AH"],short:["AH"],long:["AH"]},dayPeriods:{am:"AM",pm:"PM"}},islamicc:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["Muh.","Saf.","Rab. I","Rab. II","Jum. I","Jum. II","Raj.","Sha.","Ram.","Shaw.","Dhuʻl-Q.","Dhuʻl-H."],long:["Muharram","Safar","Rabiʻ I","Rabiʻ II","Jumada I","Jumada II","Rajab","Shaʻban","Ramadan","Shawwal","Dhuʻl-Qiʻdah","Dhuʻl-Hijjah"]},days:{narrow:["S","M","T","W","T","F","S"],short:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],long:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},eras:{narrow:["AH"],short:["AH"],long:["AH"]},dayPeriods:{am:"AM",pm:"PM"}},japanese:{months:{narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],short:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],long:["January","February","March","April","May","June","July","August","September","October","November","December"]},days:{narrow:["S","M","T","W","T","F","S"],short:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],long:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},eras:{narrow:["Taika (645–650)","Hakuchi (650–671)","Hakuhō (672–686)","Shuchō (686–701)","Taihō (701–704)","Keiun (704–708)","Wadō (708–715)","Reiki (715–717)","Yōrō (717–724)","Jinki (724–729)","Tenpyō (729–749)","Tenpyō-kampō (749-749)","Tenpyō-shōhō (749-757)","Tenpyō-hōji (757-765)","Tenpyō-jingo (765-767)","Jingo-keiun (767-770)","Hōki (770–780)","Ten-ō (781-782)","Enryaku (782–806)","Daidō (806–810)","Kōnin (810–824)","Tenchō (824–834)","Jōwa (834–848)","Kajō (848–851)","Ninju (851–854)","Saikō (854–857)","Ten-an (857-859)","Jōgan (859–877)","Gangyō (877–885)","Ninna (885–889)","Kanpyō (889–898)","Shōtai (898–901)","Engi (901–923)","Enchō (923–931)","Jōhei (931–938)","Tengyō (938–947)","Tenryaku (947–957)","Tentoku (957–961)","Ōwa (961–964)","Kōhō (964–968)","Anna (968–970)","Tenroku (970–973)","Ten’en (973–976)","Jōgen (976–978)","Tengen (978–983)","Eikan (983–985)","Kanna (985–987)","Eien (987–989)","Eiso (989–990)","Shōryaku (990–995)","Chōtoku (995–999)","Chōhō (999–1004)","Kankō (1004–1012)","Chōwa (1012–1017)","Kannin (1017–1021)","Jian (1021–1024)","Manju (1024–1028)","Chōgen (1028–1037)","Chōryaku (1037–1040)","Chōkyū (1040–1044)","Kantoku (1044–1046)","Eishō (1046–1053)","Tengi (1053–1058)","Kōhei (1058–1065)","Jiryaku (1065–1069)","Enkyū (1069–1074)","Shōho (1074–1077)","Shōryaku (1077–1081)","Eihō (1081–1084)","Ōtoku (1084–1087)","Kanji (1087–1094)","Kahō (1094–1096)","Eichō (1096–1097)","Jōtoku (1097–1099)","Kōwa (1099–1104)","Chōji (1104–1106)","Kashō (1106–1108)","Tennin (1108–1110)","Ten-ei (1110-1113)","Eikyū (1113–1118)","Gen’ei (1118–1120)","Hōan (1120–1124)","Tenji (1124–1126)","Daiji (1126–1131)","Tenshō (1131–1132)","Chōshō (1132–1135)","Hōen (1135–1141)","Eiji (1141–1142)","Kōji (1142–1144)","Ten’yō (1144–1145)","Kyūan (1145–1151)","Ninpei (1151–1154)","Kyūju (1154–1156)","Hōgen (1156–1159)","Heiji (1159–1160)","Eiryaku (1160–1161)","Ōho (1161–1163)","Chōkan (1163–1165)","Eiman (1165–1166)","Nin’an (1166–1169)","Kaō (1169–1171)","Shōan (1171–1175)","Angen (1175–1177)","Jishō (1177–1181)","Yōwa (1181–1182)","Juei (1182–1184)","Genryaku (1184–1185)","Bunji (1185–1190)","Kenkyū (1190–1199)","Shōji (1199–1201)","Kennin (1201–1204)","Genkyū (1204–1206)","Ken’ei (1206–1207)","Jōgen (1207–1211)","Kenryaku (1211–1213)","Kenpō (1213–1219)","Jōkyū (1219–1222)","Jōō (1222–1224)","Gennin (1224–1225)","Karoku (1225–1227)","Antei (1227–1229)","Kanki (1229–1232)","Jōei (1232–1233)","Tenpuku (1233–1234)","Bunryaku (1234–1235)","Katei (1235–1238)","Ryakunin (1238–1239)","En’ō (1239–1240)","Ninji (1240–1243)","Kangen (1243–1247)","Hōji (1247–1249)","Kenchō (1249–1256)","Kōgen (1256–1257)","Shōka (1257–1259)","Shōgen (1259–1260)","Bun’ō (1260–1261)","Kōchō (1261–1264)","Bun’ei (1264–1275)","Kenji (1275–1278)","Kōan (1278–1288)","Shōō (1288–1293)","Einin (1293–1299)","Shōan (1299–1302)","Kengen (1302–1303)","Kagen (1303–1306)","Tokuji (1306–1308)","Enkyō (1308–1311)","Ōchō (1311–1312)","Shōwa (1312–1317)","Bunpō (1317–1319)","Genō (1319–1321)","Genkō (1321–1324)","Shōchū (1324–1326)","Karyaku (1326–1329)","Gentoku (1329–1331)","Genkō (1331–1334)","Kenmu (1334–1336)","Engen (1336–1340)","Kōkoku (1340–1346)","Shōhei (1346–1370)","Kentoku (1370–1372)","Bunchū (1372–1375)","Tenju (1375–1379)","Kōryaku (1379–1381)","Kōwa (1381–1384)","Genchū (1384–1392)","Meitoku (1384–1387)","Kakei (1387–1389)","Kōō (1389–1390)","Meitoku (1390–1394)","Ōei (1394–1428)","Shōchō (1428–1429)","Eikyō (1429–1441)","Kakitsu (1441–1444)","Bun’an (1444–1449)","Hōtoku (1449–1452)","Kyōtoku (1452–1455)","Kōshō (1455–1457)","Chōroku (1457–1460)","Kanshō (1460–1466)","Bunshō (1466–1467)","Ōnin (1467–1469)","Bunmei (1469–1487)","Chōkyō (1487–1489)","Entoku (1489–1492)","Meiō (1492–1501)","Bunki (1501–1504)","Eishō (1504–1521)","Taiei (1521–1528)","Kyōroku (1528–1532)","Tenbun (1532–1555)","Kōji (1555–1558)","Eiroku (1558–1570)","Genki (1570–1573)","Tenshō (1573–1592)","Bunroku (1592–1596)","Keichō (1596–1615)","Genna (1615–1624)","Kan’ei (1624–1644)","Shōho (1644–1648)","Keian (1648–1652)","Jōō (1652–1655)","Meireki (1655–1658)","Manji (1658–1661)","Kanbun (1661–1673)","Enpō (1673–1681)","Tenna (1681–1684)","Jōkyō (1684–1688)","Genroku (1688–1704)","Hōei (1704–1711)","Shōtoku (1711–1716)","Kyōhō (1716–1736)","Genbun (1736–1741)","Kanpō (1741–1744)","Enkyō (1744–1748)","Kan’en (1748–1751)","Hōreki (1751–1764)","Meiwa (1764–1772)","An’ei (1772–1781)","Tenmei (1781–1789)","Kansei (1789–1801)","Kyōwa (1801–1804)","Bunka (1804–1818)","Bunsei (1818–1830)","Tenpō (1830–1844)","Kōka (1844–1848)","Kaei (1848–1854)","Ansei (1854–1860)","Man’en (1860–1861)","Bunkyū (1861–1864)","Genji (1864–1865)","Keiō (1865–1868)","M","T","S","H"],short:["Taika (645–650)","Hakuchi (650–671)","Hakuhō (672–686)","Shuchō (686–701)","Taihō (701–704)","Keiun (704–708)","Wadō (708–715)","Reiki (715–717)","Yōrō (717–724)","Jinki (724–729)","Tenpyō (729–749)","Tenpyō-kampō (749-749)","Tenpyō-shōhō (749-757)","Tenpyō-hōji (757-765)","Tenpyō-jingo (765-767)","Jingo-keiun (767-770)","Hōki (770–780)","Ten-ō (781-782)","Enryaku (782–806)","Daidō (806–810)","Kōnin (810–824)","Tenchō (824–834)","Jōwa (834–848)","Kajō (848–851)","Ninju (851–854)","Saikō (854–857)","Ten-an (857-859)","Jōgan (859–877)","Gangyō (877–885)","Ninna (885–889)","Kanpyō (889–898)","Shōtai (898–901)","Engi (901–923)","Enchō (923–931)","Jōhei (931–938)","Tengyō (938–947)","Tenryaku (947–957)","Tentoku (957–961)","Ōwa (961–964)","Kōhō (964–968)","Anna (968–970)","Tenroku (970–973)","Ten’en (973–976)","Jōgen (976–978)","Tengen (978–983)","Eikan (983–985)","Kanna (985–987)","Eien (987–989)","Eiso (989–990)","Shōryaku (990–995)","Chōtoku (995–999)","Chōhō (999–1004)","Kankō (1004–1012)","Chōwa (1012–1017)","Kannin (1017–1021)","Jian (1021–1024)","Manju (1024–1028)","Chōgen (1028–1037)","Chōryaku (1037–1040)","Chōkyū (1040–1044)","Kantoku (1044–1046)","Eishō (1046–1053)","Tengi (1053–1058)","Kōhei (1058–1065)","Jiryaku (1065–1069)","Enkyū (1069–1074)","Shōho (1074–1077)","Shōryaku (1077–1081)","Eihō (1081–1084)","Ōtoku (1084–1087)","Kanji (1087–1094)","Kahō (1094–1096)","Eichō (1096–1097)","Jōtoku (1097–1099)","Kōwa (1099–1104)","Chōji (1104–1106)","Kashō (1106–1108)","Tennin (1108–1110)","Ten-ei (1110-1113)","Eikyū (1113–1118)","Gen’ei (1118–1120)","Hōan (1120–1124)","Tenji (1124–1126)","Daiji (1126–1131)","Tenshō (1131–1132)","Chōshō (1132–1135)","Hōen (1135–1141)","Eiji (1141–1142)","Kōji (1142–1144)","Ten’yō (1144–1145)","Kyūan (1145–1151)","Ninpei (1151–1154)","Kyūju (1154–1156)","Hōgen (1156–1159)","Heiji (1159–1160)","Eiryaku (1160–1161)","Ōho (1161–1163)","Chōkan (1163–1165)","Eiman (1165–1166)","Nin’an (1166–1169)","Kaō (1169–1171)","Shōan (1171–1175)","Angen (1175–1177)","Jishō (1177–1181)","Yōwa (1181–1182)","Juei (1182–1184)","Genryaku (1184–1185)","Bunji (1185–1190)","Kenkyū (1190–1199)","Shōji (1199–1201)","Kennin (1201–1204)","Genkyū (1204–1206)","Ken’ei (1206–1207)","Jōgen (1207–1211)","Kenryaku (1211–1213)","Kenpō (1213–1219)","Jōkyū (1219–1222)","Jōō (1222–1224)","Gennin (1224–1225)","Karoku (1225–1227)","Antei (1227–1229)","Kanki (1229–1232)","Jōei (1232–1233)","Tenpuku (1233–1234)","Bunryaku (1234–1235)","Katei (1235–1238)","Ryakunin (1238–1239)","En’ō (1239–1240)","Ninji (1240–1243)","Kangen (1243–1247)","Hōji (1247–1249)","Kenchō (1249–1256)","Kōgen (1256–1257)","Shōka (1257–1259)","Shōgen (1259–1260)","Bun’ō (1260–1261)","Kōchō (1261–1264)","Bun’ei (1264–1275)","Kenji (1275–1278)","Kōan (1278–1288)","Shōō (1288–1293)","Einin (1293–1299)","Shōan (1299–1302)","Kengen (1302–1303)","Kagen (1303–1306)","Tokuji (1306–1308)","Enkyō (1308–1311)","Ōchō (1311–1312)","Shōwa (1312–1317)","Bunpō (1317–1319)","Genō (1319–1321)","Genkō (1321–1324)","Shōchū (1324–1326)","Karyaku (1326–1329)","Gentoku (1329–1331)","Genkō (1331–1334)","Kenmu (1334–1336)","Engen (1336–1340)","Kōkoku (1340–1346)","Shōhei (1346–1370)","Kentoku (1370–1372)","Bunchū (1372–1375)","Tenju (1375–1379)","Kōryaku (1379–1381)","Kōwa (1381–1384)","Genchū (1384–1392)","Meitoku (1384–1387)","Kakei (1387–1389)","Kōō (1389–1390)","Meitoku (1390–1394)","Ōei (1394–1428)","Shōchō (1428–1429)","Eikyō (1429–1441)","Kakitsu (1441–1444)","Bun’an (1444–1449)","Hōtoku (1449–1452)","Kyōtoku (1452–1455)","Kōshō (1455–1457)","Chōroku (1457–1460)","Kanshō (1460–1466)","Bunshō (1466–1467)","Ōnin (1467–1469)","Bunmei (1469–1487)","Chōkyō (1487–1489)","Entoku (1489–1492)","Meiō (1492–1501)","Bunki (1501–1504)","Eishō (1504–1521)","Taiei (1521–1528)","Kyōroku (1528–1532)","Tenbun (1532–1555)","Kōji (1555–1558)","Eiroku (1558–1570)","Genki (1570–1573)","Tenshō (1573–1592)","Bunroku (1592–1596)","Keichō (1596–1615)","Genna (1615–1624)","Kan’ei (1624–1644)","Shōho (1644–1648)","Keian (1648–1652)","Jōō (1652–1655)","Meireki (1655–1658)","Manji (1658–1661)","Kanbun (1661–1673)","Enpō (1673–1681)","Tenna (1681–1684)","Jōkyō (1684–1688)","Genroku (1688–1704)","Hōei (1704–1711)","Shōtoku (1711–1716)","Kyōhō (1716–1736)","Genbun (1736–1741)","Kanpō (1741–1744)","Enkyō (1744–1748)","Kan’en (1748–1751)","Hōreki (1751–1764)","Meiwa (1764–1772)","An’ei (1772–1781)","Tenmei (1781–1789)","Kansei (1789–1801)","Kyōwa (1801–1804)","Bunka (1804–1818)","Bunsei (1818–1830)","Tenpō (1830–1844)","Kōka (1844–1848)","Kaei (1848–1854)","Ansei (1854–1860)","Man’en (1860–1861)","Bunkyū (1861–1864)","Genji (1864–1865)","Keiō (1865–1868)","Meiji","Taishō","Shōwa","Heisei"],long:["Taika (645–650)","Hakuchi (650–671)","Hakuhō (672–686)","Shuchō (686–701)","Taihō (701–704)","Keiun (704–708)","Wadō (708–715)","Reiki (715–717)","Yōrō (717–724)","Jinki (724–729)","Tenpyō (729–749)","Tenpyō-kampō (749-749)","Tenpyō-shōhō (749-757)","Tenpyō-hōji (757-765)","Tenpyō-jingo (765-767)","Jingo-keiun (767-770)","Hōki (770–780)","Ten-ō (781-782)","Enryaku (782–806)","Daidō (806–810)","Kōnin (810–824)","Tenchō (824–834)","Jōwa (834–848)","Kajō (848–851)","Ninju (851–854)","Saikō (854–857)","Ten-an (857-859)","Jōgan (859–877)","Gangyō (877–885)","Ninna (885–889)","Kanpyō (889–898)","Shōtai (898–901)","Engi (901–923)","Enchō (923–931)","Jōhei (931–938)","Tengyō (938–947)","Tenryaku (947–957)","Tentoku (957–961)","Ōwa (961–964)","Kōhō (964–968)","Anna (968–970)","Tenroku (970–973)","Ten’en (973–976)","Jōgen (976–978)","Tengen (978–983)","Eikan (983–985)","Kanna (985–987)","Eien (987–989)","Eiso (989–990)","Shōryaku (990–995)","Chōtoku (995–999)","Chōhō (999–1004)","Kankō (1004–1012)","Chōwa (1012–1017)","Kannin (1017–1021)","Jian (1021–1024)","Manju (1024–1028)","Chōgen (1028–1037)","Chōryaku (1037–1040)","Chōkyū (1040–1044)","Kantoku (1044–1046)","Eishō (1046–1053)","Tengi (1053–1058)","Kōhei (1058–1065)","Jiryaku (1065–1069)","Enkyū (1069–1074)","Shōho (1074–1077)","Shōryaku (1077–1081)","Eihō (1081–1084)","Ōtoku (1084–1087)","Kanji (1087–1094)","Kahō (1094–1096)","Eichō (1096–1097)","Jōtoku (1097–1099)","Kōwa (1099–1104)","Chōji (1104–1106)","Kashō (1106–1108)","Tennin (1108–1110)","Ten-ei (1110-1113)","Eikyū (1113–1118)","Gen’ei (1118–1120)","Hōan (1120–1124)","Tenji (1124–1126)","Daiji (1126–1131)","Tenshō (1131–1132)","Chōshō (1132–1135)","Hōen (1135–1141)","Eiji (1141–1142)","Kōji (1142–1144)","Ten’yō (1144–1145)","Kyūan (1145–1151)","Ninpei (1151–1154)","Kyūju (1154–1156)","Hōgen (1156–1159)","Heiji (1159–1160)","Eiryaku (1160–1161)","Ōho (1161–1163)","Chōkan (1163–1165)","Eiman (1165–1166)","Nin’an (1166–1169)","Kaō (1169–1171)","Shōan (1171–1175)","Angen (1175–1177)","Jishō (1177–1181)","Yōwa (1181–1182)","Juei (1182–1184)","Genryaku (1184–1185)","Bunji (1185–1190)","Kenkyū (1190–1199)","Shōji (1199–1201)","Kennin (1201–1204)","Genkyū (1204–1206)","Ken’ei (1206–1207)","Jōgen (1207–1211)","Kenryaku (1211–1213)","Kenpō (1213–1219)","Jōkyū (1219–1222)","Jōō (1222–1224)","Gennin (1224–1225)","Karoku (1225–1227)","Antei (1227–1229)","Kanki (1229–1232)","Jōei (1232–1233)","Tenpuku (1233–1234)","Bunryaku (1234–1235)","Katei (1235–1238)","Ryakunin (1238–1239)","En’ō (1239–1240)","Ninji (1240–1243)","Kangen (1243–1247)","Hōji (1247–1249)","Kenchō (1249–1256)","Kōgen (1256–1257)","Shōka (1257–1259)","Shōgen (1259–1260)","Bun’ō (1260–1261)","Kōchō (1261–1264)","Bun’ei (1264–1275)","Kenji (1275–1278)","Kōan (1278–1288)","Shōō (1288–1293)","Einin (1293–1299)","Shōan (1299–1302)","Kengen (1302–1303)","Kagen (1303–1306)","Tokuji (1306–1308)","Enkyō (1308–1311)","Ōchō (1311–1312)","Shōwa (1312–1317)","Bunpō (1317–1319)","Genō (1319–1321)","Genkō (1321–1324)","Shōchū (1324–1326)","Karyaku (1326–1329)","Gentoku (1329–1331)","Genkō (1331–1334)","Kenmu (1334–1336)","Engen (1336–1340)","Kōkoku (1340–1346)","Shōhei (1346–1370)","Kentoku (1370–1372)","Bunchū (1372–1375)","Tenju (1375–1379)","Kōryaku (1379–1381)","Kōwa (1381–1384)","Genchū (1384–1392)","Meitoku (1384–1387)","Kakei (1387–1389)","Kōō (1389–1390)","Meitoku (1390–1394)","Ōei (1394–1428)","Shōchō (1428–1429)","Eikyō (1429–1441)","Kakitsu (1441–1444)","Bun’an (1444–1449)","Hōtoku (1449–1452)","Kyōtoku (1452–1455)","Kōshō (1455–1457)","Chōroku (1457–1460)","Kanshō (1460–1466)","Bunshō (1466–1467)","Ōnin (1467–1469)","Bunmei (1469–1487)","Chōkyō (1487–1489)","Entoku (1489–1492)","Meiō (1492–1501)","Bunki (1501–1504)","Eishō (1504–1521)","Taiei (1521–1528)","Kyōroku (1528–1532)","Tenbun (1532–1555)","Kōji (1555–1558)","Eiroku (1558–1570)","Genki (1570–1573)","Tenshō (1573–1592)","Bunroku (1592–1596)","Keichō (1596–1615)","Genna (1615–1624)","Kan’ei (1624–1644)","Shōho (1644–1648)","Keian (1648–1652)","Jōō (1652–1655)","Meireki (1655–1658)","Manji (1658–1661)","Kanbun (1661–1673)","Enpō (1673–1681)","Tenna (1681–1684)","Jōkyō (1684–1688)","Genroku (1688–1704)","Hōei (1704–1711)","Shōtoku (1711–1716)","Kyōhō (1716–1736)","Genbun (1736–1741)","Kanpō (1741–1744)","Enkyō (1744–1748)","Kan’en (1748–1751)","Hōreki (1751–1764)","Meiwa (1764–1772)","An’ei (1772–1781)","Tenmei (1781–1789)","Kansei (1789–1801)","Kyōwa (1801–1804)","Bunka (1804–1818)","Bunsei (1818–1830)","Tenpō (1830–1844)","Kōka (1844–1848)","Kaei (1848–1854)","Ansei (1854–1860)","Man’en (1860–1861)","Bunkyū (1861–1864)","Genji (1864–1865)","Keiō (1865–1868)","Meiji","Taishō","Shōwa","Heisei"]},dayPeriods:{am:"AM",pm:"PM"}},persian:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["Farvardin","Ordibehesht","Khordad","Tir","Mordad","Shahrivar","Mehr","Aban","Azar","Dey","Bahman","Esfand"],long:["Farvardin","Ordibehesht","Khordad","Tir","Mordad","Shahrivar","Mehr","Aban","Azar","Dey","Bahman","Esfand"]},days:{narrow:["S","M","T","W","T","F","S"],short:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],long:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},eras:{narrow:["AP"],short:["AP"],long:["AP"]},dayPeriods:{am:"AM",pm:"PM"}},roc:{months:{narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],short:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],long:["January","February","March","April","May","June","July","August","September","October","November","December"]},days:{narrow:["S","M","T","W","T","F","S"],short:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],long:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},eras:{narrow:["Before R.O.C.","Minguo"],short:["Before R.O.C.","Minguo"],long:["Before R.O.C.","Minguo"]},dayPeriods:{am:"AM",pm:"PM"}}}},number:{nu:["latn"],patterns:{decimal:{positivePattern:"{number}",negativePattern:"{minusSign}{number}"},currency:{positivePattern:"{currency}{number}",negativePattern:"{minusSign}{currency}{number}"},percent:{positivePattern:"{number}{percentSign}",negativePattern:"{minusSign}{number}{percentSign}"}},symbols:{latn:{decimal:".",group:",",nan:"NaN",plusSign:"+",minusSign:"-",percentSign:"%",infinity:"∞"}},currencies:{AUD:"A$",BRL:"R$",CAD:"CA$",CNY:"CN¥",EUR:"€",GBP:"£",HKD:"HK$",ILS:"₪",INR:"₹",JPY:"¥",KRW:"₩",MXN:"MX$",NZD:"NZ$",TWD:"NT$",USD:"$",VND:"₫",XAF:"FCFA",XCD:"EC$",XOF:"CFA",XPF:"CFPF"}}});
},{}],25:[function(require,module,exports){
IntlPolyfill.__addLocaleData({locale:"es",date:{ca:["gregory","buddhist","chinese","coptic","dangi","ethioaa","ethiopic","generic","hebrew","indian","islamic","islamicc","japanese","persian","roc"],hourNo0:true,hour12:false,formats:{short:"{1} {0}",medium:"{1} {0}",full:"{1}, {0}",long:"{1}, {0}",availableFormats:{"d":"d","E":"ccc",Ed:"E d",Ehm:"E, h:mm a",EHm:"E, H:mm",Ehms:"E, h:mm:ss a",EHms:"E, H:mm:ss",Gy:"y G",GyMMM:"MMM y G",GyMMMd:"d MMM y G",GyMMMEd:"E, d MMM y G",GyMMMM:"MMMM 'de' y G",GyMMMMd:"d 'de' MMMM 'de' y G",GyMMMMEd:"E, d 'de' MMMM 'de' y G","h":"h a","H":"H",hm:"h:mm a",Hm:"H:mm",hms:"h:mm:ss a",Hms:"H:mm:ss",hmsv:"h:mm:ss a v",Hmsv:"H:mm:ss v",hmsvvvv:"h:mm:ss a (vvvv)",Hmsvvvv:"H:mm:ss (vvvv)",hmv:"h:mm a v",Hmv:"H:mm v","M":"L",Md:"d/M",MEd:"E, d/M",MMd:"d/M",MMdd:"d/M",MMM:"LLL",MMMd:"d MMM",MMMEd:"E, d MMM",MMMMd:"d 'de' MMMM",MMMMEd:"E, d 'de' MMMM",ms:"mm:ss","y":"y",yM:"M/y",yMd:"d/M/y",yMEd:"EEE, d/M/y",yMM:"M/y",yMMM:"MMM y",yMMMd:"d MMM y",yMMMEd:"EEE, d MMM y",yMMMM:"MMMM 'de' y",yMMMMd:"d 'de' MMMM 'de' y",yMMMMEd:"EEE, d 'de' MMMM 'de' y",yQQQ:"QQQ y",yQQQQ:"QQQQ 'de' y"},dateFormats:{yMMMMEEEEd:"EEEE, d 'de' MMMM 'de' y",yMMMMd:"d 'de' MMMM 'de' y",yMMMd:"d MMM y",yMd:"d/M/yy"},timeFormats:{hmmsszzzz:"H:mm:ss (zzzz)",hmsz:"H:mm:ss z",hms:"H:mm:ss",hm:"H:mm"}},calendars:{buddhist:{months:{narrow:["E","F","M","A","M","J","J","A","S","O","N","D"],short:["ene.","feb.","mar.","abr.","may.","jun.","jul.","ago.","sept.","oct.","nov.","dic."],long:["enero","febrero","marzo","abril","mayo","junio","julio","agosto","septiembre","octubre","noviembre","diciembre"]},days:{narrow:["D","L","M","X","J","V","S"],short:["dom.","lun.","mar.","mié.","jue.","vie.","sáb."],long:["domingo","lunes","martes","miércoles","jueves","viernes","sábado"]},eras:{narrow:["BE"],short:["BE"],long:["BE"]},dayPeriods:{am:"a. m.",pm:"p. m."}},chinese:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["M01","M02","M03","M04","M05","M06","M07","M08","M09","M10","M11","M12"],long:["M01","M02","M03","M04","M05","M06","M07","M08","M09","M10","M11","M12"]},days:{narrow:["D","L","M","X","J","V","S"],short:["dom.","lun.","mar.","mié.","jue.","vie.","sáb."],long:["domingo","lunes","martes","miércoles","jueves","viernes","sábado"]},dayPeriods:{am:"a. m.",pm:"p. m."}},coptic:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12","13"],short:["Tout","Baba","Hator","Kiahk","Toba","Amshir","Baramhat","Baramouda","Bashans","Paona","Epep","Mesra","Nasie"],long:["Tout","Baba","Hator","Kiahk","Toba","Amshir","Baramhat","Baramouda","Bashans","Paona","Epep","Mesra","Nasie"]},days:{narrow:["D","L","M","X","J","V","S"],short:["dom.","lun.","mar.","mié.","jue.","vie.","sáb."],long:["domingo","lunes","martes","miércoles","jueves","viernes","sábado"]},eras:{narrow:["ERA0","ERA1"],short:["ERA0","ERA1"],long:["ERA0","ERA1"]},dayPeriods:{am:"a. m.",pm:"p. m."}},dangi:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["M01","M02","M03","M04","M05","M06","M07","M08","M09","M10","M11","M12"],long:["M01","M02","M03","M04","M05","M06","M07","M08","M09","M10","M11","M12"]},days:{narrow:["D","L","M","X","J","V","S"],short:["dom.","lun.","mar.","mié.","jue.","vie.","sáb."],long:["domingo","lunes","martes","miércoles","jueves","viernes","sábado"]},dayPeriods:{am:"a. m.",pm:"p. m."}},ethiopic:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12","13"],short:["Meskerem","Tekemt","Hedar","Tahsas","Ter","Yekatit","Megabit","Miazia","Genbot","Sene","Hamle","Nehasse","Pagumen"],long:["Meskerem","Tekemt","Hedar","Tahsas","Ter","Yekatit","Megabit","Miazia","Genbot","Sene","Hamle","Nehasse","Pagumen"]},days:{narrow:["D","L","M","X","J","V","S"],short:["dom.","lun.","mar.","mié.","jue.","vie.","sáb."],long:["domingo","lunes","martes","miércoles","jueves","viernes","sábado"]},eras:{narrow:["ERA0","ERA1"],short:["ERA0","ERA1"],long:["ERA0","ERA1"]},dayPeriods:{am:"a. m.",pm:"p. m."}},ethioaa:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12","13"],short:["Meskerem","Tekemt","Hedar","Tahsas","Ter","Yekatit","Megabit","Miazia","Genbot","Sene","Hamle","Nehasse","Pagumen"],long:["Meskerem","Tekemt","Hedar","Tahsas","Ter","Yekatit","Megabit","Miazia","Genbot","Sene","Hamle","Nehasse","Pagumen"]},days:{narrow:["D","L","M","X","J","V","S"],short:["dom.","lun.","mar.","mié.","jue.","vie.","sáb."],long:["domingo","lunes","martes","miércoles","jueves","viernes","sábado"]},eras:{narrow:["ERA0"],short:["ERA0"],long:["ERA0"]},dayPeriods:{am:"a. m.",pm:"p. m."}},generic:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["M01","M02","M03","M04","M05","M06","M07","M08","M09","M10","M11","M12"],long:["M01","M02","M03","M04","M05","M06","M07","M08","M09","M10","M11","M12"]},days:{narrow:["D","L","M","X","J","V","S"],short:["dom.","lun.","mar.","mié.","jue.","vie.","sáb."],long:["domingo","lunes","martes","miércoles","jueves","viernes","sábado"]},eras:{narrow:["ERA0","ERA1"],short:["ERA0","ERA1"],long:["ERA0","ERA1"]},dayPeriods:{am:"a. m.",pm:"p. m."}},gregory:{months:{narrow:["E","F","M","A","M","J","J","A","S","O","N","D"],short:["ene.","feb.","mar.","abr.","may.","jun.","jul.","ago.","sept.","oct.","nov.","dic."],long:["enero","febrero","marzo","abril","mayo","junio","julio","agosto","septiembre","octubre","noviembre","diciembre"]},days:{narrow:["D","L","M","X","J","V","S"],short:["dom.","lun.","mar.","mié.","jue.","vie.","sáb."],long:["domingo","lunes","martes","miércoles","jueves","viernes","sábado"]},eras:{narrow:["a. C.","d. C.","a. e. c.","e. c."],short:["a. C.","d. C.","a. e. c.","e. c."],long:["antes de Cristo","después de Cristo","antes de la era común","era común"]},dayPeriods:{am:"a. m.",pm:"p. m."}},hebrew:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12","13","7"],short:["Tishri","Heshvan","Kislev","Tevet","Shevat","Adar I","Adar","Nisan","Iyar","Sivan","Tamuz","Av","Elul","Adar II"],long:["Tishri","Heshvan","Kislev","Tevet","Shevat","Adar I","Adar","Nisan","Iyar","Sivan","Tamuz","Av","Elul","Adar II"]},days:{narrow:["D","L","M","X","J","V","S"],short:["dom.","lun.","mar.","mié.","jue.","vie.","sáb."],long:["domingo","lunes","martes","miércoles","jueves","viernes","sábado"]},eras:{narrow:["AM"],short:["AM"],long:["AM"]},dayPeriods:{am:"a. m.",pm:"p. m."}},indian:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["Chaitra","Vaisakha","Jyaistha","Asadha","Sravana","Bhadra","Asvina","Kartika","Agrahayana","Pausa","Magha","Phalguna"],long:["Chaitra","Vaisakha","Jyaistha","Asadha","Sravana","Bhadra","Asvina","Kartika","Agrahayana","Pausa","Magha","Phalguna"]},days:{narrow:["D","L","M","X","J","V","S"],short:["dom.","lun.","mar.","mié.","jue.","vie.","sáb."],long:["domingo","lunes","martes","miércoles","jueves","viernes","sábado"]},eras:{narrow:["Saka"],short:["Saka"],long:["Saka"]},dayPeriods:{am:"a. m.",pm:"p. m."}},islamic:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["Muh.","Saf.","Rab. I","Rab. II","Jum. I","Jum. II","Raj.","Sha.","Ram.","Shaw.","Dhuʻl-Q.","Dhuʻl-H."],long:["Muharram","Safar","Rabiʻ I","Rabiʻ II","Jumada I","Jumada II","Rajab","Shaʻban","Ramadan","Shawwal","Dhuʻl-Qiʻdah","Dhuʻl-Hijjah"]},days:{narrow:["D","L","M","X","J","V","S"],short:["dom.","lun.","mar.","mié.","jue.","vie.","sáb."],long:["domingo","lunes","martes","miércoles","jueves","viernes","sábado"]},eras:{narrow:["AH"],short:["AH"],long:["AH"]},dayPeriods:{am:"a. m.",pm:"p. m."}},islamicc:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["Muh.","Saf.","Rab. I","Rab. II","Jum. I","Jum. II","Raj.","Sha.","Ram.","Shaw.","Dhuʻl-Q.","Dhuʻl-H."],long:["Muharram","Safar","Rabiʻ I","Rabiʻ II","Jumada I","Jumada II","Rajab","Shaʻban","Ramadan","Shawwal","Dhuʻl-Qiʻdah","Dhuʻl-Hijjah"]},days:{narrow:["D","L","M","X","J","V","S"],short:["dom.","lun.","mar.","mié.","jue.","vie.","sáb."],long:["domingo","lunes","martes","miércoles","jueves","viernes","sábado"]},eras:{narrow:["AH"],short:["AH"],long:["AH"]},dayPeriods:{am:"a. m.",pm:"p. m."}},japanese:{months:{narrow:["E","F","M","A","M","J","J","A","S","O","N","D"],short:["ene.","feb.","mar.","abr.","may.","jun.","jul.","ago.","sept.","oct.","nov.","dic."],long:["enero","febrero","marzo","abril","mayo","junio","julio","agosto","septiembre","octubre","noviembre","diciembre"]},days:{narrow:["D","L","M","X","J","V","S"],short:["dom.","lun.","mar.","mié.","jue.","vie.","sáb."],long:["domingo","lunes","martes","miércoles","jueves","viernes","sábado"]},eras:{narrow:["Taika (645–650)","Hakuchi (650–671)","Hakuhō (672–686)","Shuchō (686–701)","Taihō (701–704)","Keiun (704–708)","Wadō (708–715)","Reiki (715–717)","Yōrō (717–724)","Jinki (724–729)","Tenpyō (729–749)","Tenpyō-kampō (749-749)","Tenpyō-shōhō (749-757)","Tenpyō-hōji (757-765)","Tenpyō-jingo (765-767)","Jingo-keiun (767-770)","Hōki (770–780)","Ten-ō (781-782)","Enryaku (782–806)","Daidō (806–810)","Kōnin (810–824)","Tenchō (824–834)","Jōwa (834–848)","Kajō (848–851)","Ninju (851–854)","Saikō (854–857)","Ten-an (857-859)","Jōgan (859–877)","Gangyō (877–885)","Ninna (885–889)","Kanpyō (889–898)","Shōtai (898–901)","Engi (901–923)","Enchō (923–931)","Jōhei (931–938)","Tengyō (938–947)","Tenryaku (947–957)","Tentoku (957–961)","Ōwa (961–964)","Kōhō (964–968)","Anna (968–970)","Tenroku (970–973)","Ten’en (973–976)","Jōgen (976–978)","Tengen (978–983)","Eikan (983–985)","Kanna (985–987)","Eien (987–989)","Eiso (989–990)","Shōryaku (990–995)","Chōtoku (995–999)","Chōhō (999–1004)","Kankō (1004–1012)","Chōwa (1012–1017)","Kannin (1017–1021)","Jian (1021–1024)","Manju (1024–1028)","Chōgen (1028–1037)","Chōryaku (1037–1040)","Chōkyū (1040–1044)","Kantoku (1044–1046)","Eishō (1046–1053)","Tengi (1053–1058)","Kōhei (1058–1065)","Jiryaku (1065–1069)","Enkyū (1069–1074)","Shōho (1074–1077)","Shōryaku (1077–1081)","Eihō (1081–1084)","Ōtoku (1084–1087)","Kanji (1087–1094)","Kahō (1094–1096)","Eichō (1096–1097)","Jōtoku (1097–1099)","Kōwa (1099–1104)","Chōji (1104–1106)","Kashō (1106–1108)","Tennin (1108–1110)","Ten-ei (1110-1113)","Eikyū (1113–1118)","Gen’ei (1118–1120)","Hōan (1120–1124)","Tenji (1124–1126)","Daiji (1126–1131)","Tenshō (1131–1132)","Chōshō (1132–1135)","Hōen (1135–1141)","Eiji (1141–1142)","Kōji (1142–1144)","Ten’yō (1144–1145)","Kyūan (1145–1151)","Ninpei (1151–1154)","Kyūju (1154–1156)","Hōgen (1156–1159)","Heiji (1159–1160)","Eiryaku (1160–1161)","Ōho (1161–1163)","Chōkan (1163–1165)","Eiman (1165–1166)","Nin’an (1166–1169)","Kaō (1169–1171)","Shōan (1171–1175)","Angen (1175–1177)","Jishō (1177–1181)","Yōwa (1181–1182)","Juei (1182–1184)","Genryaku (1184–1185)","Bunji (1185–1190)","Kenkyū (1190–1199)","Shōji (1199–1201)","Kennin (1201–1204)","Genkyū (1204–1206)","Ken’ei (1206–1207)","Jōgen (1207–1211)","Kenryaku (1211–1213)","Kenpō (1213–1219)","Jōkyū (1219–1222)","Jōō (1222–1224)","Gennin (1224–1225)","Karoku (1225–1227)","Antei (1227–1229)","Kanki (1229–1232)","Jōei (1232–1233)","Tenpuku (1233–1234)","Bunryaku (1234–1235)","Katei (1235–1238)","Ryakunin (1238–1239)","En’ō (1239–1240)","Ninji (1240–1243)","Kangen (1243–1247)","Hōji (1247–1249)","Kenchō (1249–1256)","Kōgen (1256–1257)","Shōka (1257–1259)","Shōgen (1259–1260)","Bun’ō (1260–1261)","Kōchō (1261–1264)","Bun’ei (1264–1275)","Kenji (1275–1278)","Kōan (1278–1288)","Shōō (1288–1293)","Einin (1293–1299)","Shōan (1299–1302)","Kengen (1302–1303)","Kagen (1303–1306)","Tokuji (1306–1308)","Enkyō (1308–1311)","Ōchō (1311–1312)","Shōwa (1312–1317)","Bunpō (1317–1319)","Genō (1319–1321)","Genkō (1321–1324)","Shōchū (1324–1326)","Karyaku (1326–1329)","Gentoku (1329–1331)","Genkō (1331–1334)","Kenmu (1334–1336)","Engen (1336–1340)","Kōkoku (1340–1346)","Shōhei (1346–1370)","Kentoku (1370–1372)","Bunchū (1372–1375)","Tenju (1375–1379)","Kōryaku (1379–1381)","Kōwa (1381–1384)","Genchū (1384–1392)","Meitoku (1384–1387)","Kakei (1387–1389)","Kōō (1389–1390)","Meitoku (1390–1394)","Ōei (1394–1428)","Shōchō (1428–1429)","Eikyō (1429–1441)","Kakitsu (1441–1444)","Bun’an (1444–1449)","Hōtoku (1449–1452)","Kyōtoku (1452–1455)","Kōshō (1455–1457)","Chōroku (1457–1460)","Kanshō (1460–1466)","Bunshō (1466–1467)","Ōnin (1467–1469)","Bunmei (1469–1487)","Chōkyō (1487–1489)","Entoku (1489–1492)","Meiō (1492–1501)","Bunki (1501–1504)","Eishō (1504–1521)","Taiei (1521–1528)","Kyōroku (1528–1532)","Tenbun (1532–1555)","Kōji (1555–1558)","Eiroku (1558–1570)","Genki (1570–1573)","Tenshō (1573–1592)","Bunroku (1592–1596)","Keichō (1596–1615)","Genna (1615–1624)","Kan’ei (1624–1644)","Shōho (1644–1648)","Keian (1648–1652)","Jōō (1652–1655)","Meireki (1655–1658)","Manji (1658–1661)","Kanbun (1661–1673)","Enpō (1673–1681)","Tenna (1681–1684)","Jōkyō (1684–1688)","Genroku (1688–1704)","Hōei (1704–1711)","Shōtoku (1711–1716)","Kyōhō (1716–1736)","Genbun (1736–1741)","Kanpō (1741–1744)","Enkyō (1744–1748)","Kan’en (1748–1751)","Hōreki (1751–1764)","Meiwa (1764–1772)","An’ei (1772–1781)","Tenmei (1781–1789)","Kansei (1789–1801)","Kyōwa (1801–1804)","Bunka (1804–1818)","Bunsei (1818–1830)","Tenpō (1830–1844)","Kōka (1844–1848)","Kaei (1848–1854)","Ansei (1854–1860)","Man’en (1860–1861)","Bunkyū (1861–1864)","Genji (1864–1865)","Keiō (1865–1868)","M","T","S","H"],short:["Taika (645–650)","Hakuchi (650–671)","Hakuhō (672–686)","Shuchō (686–701)","Taihō (701–704)","Keiun (704–708)","Wadō (708–715)","Reiki (715–717)","Yōrō (717–724)","Jinki (724–729)","Tenpyō (729–749)","Tenpyō-kampō (749-749)","Tenpyō-shōhō (749-757)","Tenpyō-hōji (757-765)","Tenpyō-jingo (765-767)","Jingo-keiun (767-770)","Hōki (770–780)","Ten-ō (781-782)","Enryaku (782–806)","Daidō (806–810)","Kōnin (810–824)","Tenchō (824–834)","Jōwa (834–848)","Kajō (848–851)","Ninju (851–854)","Saikō (854–857)","Ten-an (857-859)","Jōgan (859–877)","Gangyō (877–885)","Ninna (885–889)","Kanpyō (889–898)","Shōtai (898–901)","Engi (901–923)","Enchō (923–931)","Jōhei (931–938)","Tengyō (938–947)","Tenryaku (947–957)","Tentoku (957–961)","Ōwa (961–964)","Kōhō (964–968)","Anna (968–970)","Tenroku (970–973)","Ten’en (973–976)","Jōgen (976–978)","Tengen (978–983)","Eikan (983–985)","Kanna (985–987)","Eien (987–989)","Eiso (989–990)","Shōryaku (990–995)","Chōtoku (995–999)","Chōhō (999–1004)","Kankō (1004–1012)","Chōwa (1012–1017)","Kannin (1017–1021)","Jian (1021–1024)","Manju (1024–1028)","Chōgen (1028–1037)","Chōryaku (1037–1040)","Chōkyū (1040–1044)","Kantoku (1044–1046)","Eishō (1046–1053)","Tengi (1053–1058)","Kōhei (1058–1065)","Jiryaku (1065–1069)","Enkyū (1069–1074)","Shōho (1074–1077)","Shōryaku (1077–1081)","Eihō (1081–1084)","Ōtoku (1084–1087)","Kanji (1087–1094)","Kahō (1094–1096)","Eichō (1096–1097)","Jōtoku (1097–1099)","Kōwa (1099–1104)","Chōji (1104–1106)","Kashō (1106–1108)","Tennin (1108–1110)","Ten-ei (1110-1113)","Eikyū (1113–1118)","Gen’ei (1118–1120)","Hōan (1120–1124)","Tenji (1124–1126)","Daiji (1126–1131)","Tenshō (1131–1132)","Chōshō (1132–1135)","Hōen (1135–1141)","Eiji (1141–1142)","Kōji (1142–1144)","Ten’yō (1144–1145)","Kyūan (1145–1151)","Ninpei (1151–1154)","Kyūju (1154–1156)","Hōgen (1156–1159)","Heiji (1159–1160)","Eiryaku (1160–1161)","Ōho (1161–1163)","Chōkan (1163–1165)","Eiman (1165–1166)","Nin’an (1166–1169)","Kaō (1169–1171)","Shōan (1171–1175)","Angen (1175–1177)","Jishō (1177–1181)","Yōwa (1181–1182)","Juei (1182–1184)","Genryaku (1184–1185)","Bunji (1185–1190)","Kenkyū (1190–1199)","Shōji (1199–1201)","Kennin (1201–1204)","Genkyū (1204–1206)","Ken’ei (1206–1207)","Jōgen (1207–1211)","Kenryaku (1211–1213)","Kenpō (1213–1219)","Jōkyū (1219–1222)","Jōō (1222–1224)","Gennin (1224–1225)","Karoku (1225–1227)","Antei (1227–1229)","Kanki (1229–1232)","Jōei (1232–1233)","Tenpuku (1233–1234)","Bunryaku (1234–1235)","Katei (1235–1238)","Ryakunin (1238–1239)","En’ō (1239–1240)","Ninji (1240–1243)","Kangen (1243–1247)","Hōji (1247–1249)","Kenchō (1249–1256)","Kōgen (1256–1257)","Shōka (1257–1259)","Shōgen (1259–1260)","Bun’ō (1260–1261)","Kōchō (1261–1264)","Bun’ei (1264–1275)","Kenji (1275–1278)","Kōan (1278–1288)","Shōō (1288–1293)","Einin (1293–1299)","Shōan (1299–1302)","Kengen (1302–1303)","Kagen (1303–1306)","Tokuji (1306–1308)","Enkyō (1308–1311)","Ōchō (1311–1312)","Shōwa (1312–1317)","Bunpō (1317–1319)","Genō (1319–1321)","Genkō (1321–1324)","Shōchū (1324–1326)","Karyaku (1326–1329)","Gentoku (1329–1331)","Genkō (1331–1334)","Kenmu (1334–1336)","Engen (1336–1340)","Kōkoku (1340–1346)","Shōhei (1346–1370)","Kentoku (1370–1372)","Bunchū (1372–1375)","Tenju (1375–1379)","Kōryaku (1379–1381)","Kōwa (1381–1384)","Genchū (1384–1392)","Meitoku (1384–1387)","Kakei (1387–1389)","Kōō (1389–1390)","Meitoku (1390–1394)","Ōei (1394–1428)","Shōchō (1428–1429)","Eikyō (1429–1441)","Kakitsu (1441–1444)","Bun’an (1444–1449)","Hōtoku (1449–1452)","Kyōtoku (1452–1455)","Kōshō (1455–1457)","Chōroku (1457–1460)","Kanshō (1460–1466)","Bunshō (1466–1467)","Ōnin (1467–1469)","Bunmei (1469–1487)","Chōkyō (1487–1489)","Entoku (1489–1492)","Meiō (1492–1501)","Bunki (1501–1504)","Eishō (1504–1521)","Taiei (1521–1528)","Kyōroku (1528–1532)","Tenbun (1532–1555)","Kōji (1555–1558)","Eiroku (1558–1570)","Genki (1570–1573)","Tenshō (1573–1592)","Bunroku (1592–1596)","Keichō (1596–1615)","Genna (1615–1624)","Kan’ei (1624–1644)","Shōho (1644–1648)","Keian (1648–1652)","Jōō (1652–1655)","Meireki (1655–1658)","Manji (1658–1661)","Kanbun (1661–1673)","Enpō (1673–1681)","Tenna (1681–1684)","Jōkyō (1684–1688)","Genroku (1688–1704)","Hōei (1704–1711)","Shōtoku (1711–1716)","Kyōhō (1716–1736)","Genbun (1736–1741)","Kanpō (1741–1744)","Enkyō (1744–1748)","Kan’en (1748–1751)","Hōreki (1751–1764)","Meiwa (1764–1772)","An’ei (1772–1781)","Tenmei (1781–1789)","Kansei (1789–1801)","Kyōwa (1801–1804)","Bunka (1804–1818)","Bunsei (1818–1830)","Tenpō (1830–1844)","Kōka (1844–1848)","Kaei (1848–1854)","Ansei (1854–1860)","Man’en (1860–1861)","Bunkyū (1861–1864)","Genji (1864–1865)","Keiō (1865–1868)","Meiji","Taishō","Shōwa","Heisei"],long:["Taika (645–650)","Hakuchi (650–671)","Hakuhō (672–686)","Shuchō (686–701)","Taihō (701–704)","Keiun (704–708)","Wadō (708–715)","Reiki (715–717)","Yōrō (717–724)","Jinki (724–729)","Tenpyō (729–749)","Tenpyō-kampō (749-749)","Tenpyō-shōhō (749-757)","Tenpyō-hōji (757-765)","Tenpyō-jingo (765-767)","Jingo-keiun (767-770)","Hōki (770–780)","Ten-ō (781-782)","Enryaku (782–806)","Daidō (806–810)","Kōnin (810–824)","Tenchō (824–834)","Jōwa (834–848)","Kajō (848–851)","Ninju (851–854)","Saikō (854–857)","Ten-an (857-859)","Jōgan (859–877)","Gangyō (877–885)","Ninna (885–889)","Kanpyō (889–898)","Shōtai (898–901)","Engi (901–923)","Enchō (923–931)","Jōhei (931–938)","Tengyō (938–947)","Tenryaku (947–957)","Tentoku (957–961)","Ōwa (961–964)","Kōhō (964–968)","Anna (968–970)","Tenroku (970–973)","Ten’en (973–976)","Jōgen (976–978)","Tengen (978–983)","Eikan (983–985)","Kanna (985–987)","Eien (987–989)","Eiso (989–990)","Shōryaku (990–995)","Chōtoku (995–999)","Chōhō (999–1004)","Kankō (1004–1012)","Chōwa (1012–1017)","Kannin (1017–1021)","Jian (1021–1024)","Manju (1024–1028)","Chōgen (1028–1037)","Chōryaku (1037–1040)","Chōkyū (1040–1044)","Kantoku (1044–1046)","Eishō (1046–1053)","Tengi (1053–1058)","Kōhei (1058–1065)","Jiryaku (1065–1069)","Enkyū (1069–1074)","Shōho (1074–1077)","Shōryaku (1077–1081)","Eihō (1081–1084)","Ōtoku (1084–1087)","Kanji (1087–1094)","Kahō (1094–1096)","Eichō (1096–1097)","Jōtoku (1097–1099)","Kōwa (1099–1104)","Chōji (1104–1106)","Kashō (1106–1108)","Tennin (1108–1110)","Ten-ei (1110-1113)","Eikyū (1113–1118)","Gen’ei (1118–1120)","Hōan (1120–1124)","Tenji (1124–1126)","Daiji (1126–1131)","Tenshō (1131–1132)","Chōshō (1132–1135)","Hōen (1135–1141)","Eiji (1141–1142)","Kōji (1142–1144)","Ten’yō (1144–1145)","Kyūan (1145–1151)","Ninpei (1151–1154)","Kyūju (1154–1156)","Hōgen (1156–1159)","Heiji (1159–1160)","Eiryaku (1160–1161)","Ōho (1161–1163)","Chōkan (1163–1165)","Eiman (1165–1166)","Nin’an (1166–1169)","Kaō (1169–1171)","Shōan (1171–1175)","Angen (1175–1177)","Jishō (1177–1181)","Yōwa (1181–1182)","Juei (1182–1184)","Genryaku (1184–1185)","Bunji (1185–1190)","Kenkyū (1190–1199)","Shōji (1199–1201)","Kennin (1201–1204)","Genkyū (1204–1206)","Ken’ei (1206–1207)","Jōgen (1207–1211)","Kenryaku (1211–1213)","Kenpō (1213–1219)","Jōkyū (1219–1222)","Jōō (1222–1224)","Gennin (1224–1225)","Karoku (1225–1227)","Antei (1227–1229)","Kanki (1229–1232)","Jōei (1232–1233)","Tenpuku (1233–1234)","Bunryaku (1234–1235)","Katei (1235–1238)","Ryakunin (1238–1239)","En’ō (1239–1240)","Ninji (1240–1243)","Kangen (1243–1247)","Hōji (1247–1249)","Kenchō (1249–1256)","Kōgen (1256–1257)","Shōka (1257–1259)","Shōgen (1259–1260)","Bun’ō (1260–1261)","Kōchō (1261–1264)","Bun’ei (1264–1275)","Kenji (1275–1278)","Kōan (1278–1288)","Shōō (1288–1293)","Einin (1293–1299)","Shōan (1299–1302)","Kengen (1302–1303)","Kagen (1303–1306)","Tokuji (1306–1308)","Enkyō (1308–1311)","Ōchō (1311–1312)","Shōwa (1312–1317)","Bunpō (1317–1319)","Genō (1319–1321)","Genkō (1321–1324)","Shōchū (1324–1326)","Karyaku (1326–1329)","Gentoku (1329–1331)","Genkō (1331–1334)","Kenmu (1334–1336)","Engen (1336–1340)","Kōkoku (1340–1346)","Shōhei (1346–1370)","Kentoku (1370–1372)","Bunchū (1372–1375)","Tenju (1375–1379)","Kōryaku (1379–1381)","Kōwa (1381–1384)","Genchū (1384–1392)","Meitoku (1384–1387)","Kakei (1387–1389)","Kōō (1389–1390)","Meitoku (1390–1394)","Ōei (1394–1428)","Shōchō (1428–1429)","Eikyō (1429–1441)","Kakitsu (1441–1444)","Bun’an (1444–1449)","Hōtoku (1449–1452)","Kyōtoku (1452–1455)","Kōshō (1455–1457)","Chōroku (1457–1460)","Kanshō (1460–1466)","Bunshō (1466–1467)","Ōnin (1467–1469)","Bunmei (1469–1487)","Chōkyō (1487–1489)","Entoku (1489–1492)","Meiō (1492–1501)","Bunki (1501–1504)","Eishō (1504–1521)","Taiei (1521–1528)","Kyōroku (1528–1532)","Tenbun (1532–1555)","Kōji (1555–1558)","Eiroku (1558–1570)","Genki (1570–1573)","Tenshō (1573–1592)","Bunroku (1592–1596)","Keichō (1596–1615)","Genna (1615–1624)","Kan’ei (1624–1644)","Shōho (1644–1648)","Keian (1648–1652)","Jōō (1652–1655)","Meireki (1655–1658)","Manji (1658–1661)","Kanbun (1661–1673)","Enpō (1673–1681)","Tenna (1681–1684)","Jōkyō (1684–1688)","Genroku (1688–1704)","Hōei (1704–1711)","Shōtoku (1711–1716)","Kyōhō (1716–1736)","Genbun (1736–1741)","Kanpō (1741–1744)","Enkyō (1744–1748)","Kan’en (1748–1751)","Hōreki (1751–1764)","Meiwa (1764–1772)","An’ei (1772–1781)","Tenmei (1781–1789)","Kansei (1789–1801)","Kyōwa (1801–1804)","Bunka (1804–1818)","Bunsei (1818–1830)","Tenpō (1830–1844)","Kōka (1844–1848)","Kaei (1848–1854)","Ansei (1854–1860)","Man’en (1860–1861)","Bunkyū (1861–1864)","Genji (1864–1865)","Keiō (1865–1868)","Meiji","Taishō","Shōwa","Heisei"]},dayPeriods:{am:"a. m.",pm:"p. m."}},persian:{months:{narrow:["1","2","3","4","5","6","7","8","9","10","11","12"],short:["Farvardin","Ordibehesht","Khordad","Tir","Mordad","Shahrivar","Mehr","Aban","Azar","Dey","Bahman","Esfand"],long:["Farvardin","Ordibehesht","Khordad","Tir","Mordad","Shahrivar","Mehr","Aban","Azar","Dey","Bahman","Esfand"]},days:{narrow:["D","L","M","X","J","V","S"],short:["dom.","lun.","mar.","mié.","jue.","vie.","sáb."],long:["domingo","lunes","martes","miércoles","jueves","viernes","sábado"]},eras:{narrow:["AP"],short:["AP"],long:["AP"]},dayPeriods:{am:"a. m.",pm:"p. m."}},roc:{months:{narrow:["E","F","M","A","M","J","J","A","S","O","N","D"],short:["ene.","feb.","mar.","abr.","may.","jun.","jul.","ago.","sept.","oct.","nov.","dic."],long:["enero","febrero","marzo","abril","mayo","junio","julio","agosto","septiembre","octubre","noviembre","diciembre"]},days:{narrow:["D","L","M","X","J","V","S"],short:["dom.","lun.","mar.","mié.","jue.","vie.","sáb."],long:["domingo","lunes","martes","miércoles","jueves","viernes","sábado"]},eras:{narrow:["antes de R.O.C.","R.O.C."],short:["antes de R.O.C.","R.O.C."],long:["antes de R.O.C.","R.O.C."]},dayPeriods:{am:"a. m.",pm:"p. m."}}}},number:{nu:["latn"],patterns:{decimal:{positivePattern:"{number}",negativePattern:"{minusSign}{number}"},currency:{positivePattern:"{number} {currency}",negativePattern:"{minusSign}{number} {currency}"},percent:{positivePattern:"{number} {percentSign}",negativePattern:"{minusSign}{number} {percentSign}"}},symbols:{latn:{decimal:",",group:".",nan:"NaN",plusSign:"+",minusSign:"-",percentSign:"%",infinity:"∞"}},currencies:{CAD:"CA$",ESP:"₧",EUR:"€",THB:"฿",USD:"$",VND:"₫",XPF:"CFPF"}}});
},{}],26:[function(require,module,exports){
/*!
 * jQuery JavaScript Library v3.1.1
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2016-09-22T22:30Z
 */
( function( global, factory ) {

	"use strict";

	if ( typeof module === "object" && typeof module.exports === "object" ) {

		// For CommonJS and CommonJS-like environments where a proper `window`
		// is present, execute the factory and get jQuery.
		// For environments that do not have a `window` with a `document`
		// (such as Node.js), expose a factory as module.exports.
		// This accentuates the need for the creation of a real `window`.
		// e.g. var jQuery = require("jquery")(window);
		// See ticket #14549 for more info.
		module.exports = global.document ?
			factory( global, true ) :
			function( w ) {
				if ( !w.document ) {
					throw new Error( "jQuery requires a window with a document" );
				}
				return factory( w );
			};
	} else {
		factory( global );
	}

// Pass this if window is not defined yet
} )( typeof window !== "undefined" ? window : this, function( window, noGlobal ) {

// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1
// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode
// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common
// enough that all such attempts are guarded in a try block.
"use strict";

var arr = [];

var document = window.document;

var getProto = Object.getPrototypeOf;

var slice = arr.slice;

var concat = arr.concat;

var push = arr.push;

var indexOf = arr.indexOf;

var class2type = {};

var toString = class2type.toString;

var hasOwn = class2type.hasOwnProperty;

var fnToString = hasOwn.toString;

var ObjectFunctionString = fnToString.call( Object );

var support = {};



	function DOMEval( code, doc ) {
		doc = doc || document;

		var script = doc.createElement( "script" );

		script.text = code;
		doc.head.appendChild( script ).parentNode.removeChild( script );
	}
/* global Symbol */
// Defining this global in .eslintrc.json would create a danger of using the global
// unguarded in another place, it seems safer to define global only for this module



var
	version = "3.1.1",

	// Define a local copy of jQuery
	jQuery = function( selector, context ) {

		// The jQuery object is actually just the init constructor 'enhanced'
		// Need init if jQuery is called (just allow error to be thrown if not included)
		return new jQuery.fn.init( selector, context );
	},

	// Support: Android <=4.0 only
	// Make sure we trim BOM and NBSP
	rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,

	// Matches dashed string for camelizing
	rmsPrefix = /^-ms-/,
	rdashAlpha = /-([a-z])/g,

	// Used by jQuery.camelCase as callback to replace()
	fcamelCase = function( all, letter ) {
		return letter.toUpperCase();
	};

jQuery.fn = jQuery.prototype = {

	// The current version of jQuery being used
	jquery: version,

	constructor: jQuery,

	// The default length of a jQuery object is 0
	length: 0,

	toArray: function() {
		return slice.call( this );
	},

	// Get the Nth element in the matched element set OR
	// Get the whole matched element set as a clean array
	get: function( num ) {

		// Return all the elements in a clean array
		if ( num == null ) {
			return slice.call( this );
		}

		// Return just the one element from the set
		return num < 0 ? this[ num + this.length ] : this[ num ];
	},

	// Take an array of elements and push it onto the stack
	// (returning the new matched element set)
	pushStack: function( elems ) {

		// Build a new jQuery matched element set
		var ret = jQuery.merge( this.constructor(), elems );

		// Add the old object onto the stack (as a reference)
		ret.prevObject = this;

		// Return the newly-formed element set
		return ret;
	},

	// Execute a callback for every element in the matched set.
	each: function( callback ) {
		return jQuery.each( this, callback );
	},

	map: function( callback ) {
		return this.pushStack( jQuery.map( this, function( elem, i ) {
			return callback.call( elem, i, elem );
		} ) );
	},

	slice: function() {
		return this.pushStack( slice.apply( this, arguments ) );
	},

	first: function() {
		return this.eq( 0 );
	},

	last: function() {
		return this.eq( -1 );
	},

	eq: function( i ) {
		var len = this.length,
			j = +i + ( i < 0 ? len : 0 );
		return this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );
	},

	end: function() {
		return this.prevObject || this.constructor();
	},

	// For internal use only.
	// Behaves like an Array's method, not like a jQuery method.
	push: push,
	sort: arr.sort,
	splice: arr.splice
};

jQuery.extend = jQuery.fn.extend = function() {
	var options, name, src, copy, copyIsArray, clone,
		target = arguments[ 0 ] || {},
		i = 1,
		length = arguments.length,
		deep = false;

	// Handle a deep copy situation
	if ( typeof target === "boolean" ) {
		deep = target;

		// Skip the boolean and the target
		target = arguments[ i ] || {};
		i++;
	}

	// Handle case when target is a string or something (possible in deep copy)
	if ( typeof target !== "object" && !jQuery.isFunction( target ) ) {
		target = {};
	}

	// Extend jQuery itself if only one argument is passed
	if ( i === length ) {
		target = this;
		i--;
	}

	for ( ; i < length; i++ ) {

		// Only deal with non-null/undefined values
		if ( ( options = arguments[ i ] ) != null ) {

			// Extend the base object
			for ( name in options ) {
				src = target[ name ];
				copy = options[ name ];

				// Prevent never-ending loop
				if ( target === copy ) {
					continue;
				}

				// Recurse if we're merging plain objects or arrays
				if ( deep && copy && ( jQuery.isPlainObject( copy ) ||
					( copyIsArray = jQuery.isArray( copy ) ) ) ) {

					if ( copyIsArray ) {
						copyIsArray = false;
						clone = src && jQuery.isArray( src ) ? src : [];

					} else {
						clone = src && jQuery.isPlainObject( src ) ? src : {};
					}

					// Never move original objects, clone them
					target[ name ] = jQuery.extend( deep, clone, copy );

				// Don't bring in undefined values
				} else if ( copy !== undefined ) {
					target[ name ] = copy;
				}
			}
		}
	}

	// Return the modified object
	return target;
};

jQuery.extend( {

	// Unique for each copy of jQuery on the page
	expando: "jQuery" + ( version + Math.random() ).replace( /\D/g, "" ),

	// Assume jQuery is ready without the ready module
	isReady: true,

	error: function( msg ) {
		throw new Error( msg );
	},

	noop: function() {},

	isFunction: function( obj ) {
		return jQuery.type( obj ) === "function";
	},

	isArray: Array.isArray,

	isWindow: function( obj ) {
		return obj != null && obj === obj.window;
	},

	isNumeric: function( obj ) {

		// As of jQuery 3.0, isNumeric is limited to
		// strings and numbers (primitives or objects)
		// that can be coerced to finite numbers (gh-2662)
		var type = jQuery.type( obj );
		return ( type === "number" || type === "string" ) &&

			// parseFloat NaNs numeric-cast false positives ("")
			// ...but misinterprets leading-number strings, particularly hex literals ("0x...")
			// subtraction forces infinities to NaN
			!isNaN( obj - parseFloat( obj ) );
	},

	isPlainObject: function( obj ) {
		var proto, Ctor;

		// Detect obvious negatives
		// Use toString instead of jQuery.type to catch host objects
		if ( !obj || toString.call( obj ) !== "[object Object]" ) {
			return false;
		}

		proto = getProto( obj );

		// Objects with no prototype (e.g., `Object.create( null )`) are plain
		if ( !proto ) {
			return true;
		}

		// Objects with prototype are plain iff they were constructed by a global Object function
		Ctor = hasOwn.call( proto, "constructor" ) && proto.constructor;
		return typeof Ctor === "function" && fnToString.call( Ctor ) === ObjectFunctionString;
	},

	isEmptyObject: function( obj ) {

		/* eslint-disable no-unused-vars */
		// See https://github.com/eslint/eslint/issues/6125
		var name;

		for ( name in obj ) {
			return false;
		}
		return true;
	},

	type: function( obj ) {
		if ( obj == null ) {
			return obj + "";
		}

		// Support: Android <=2.3 only (functionish RegExp)
		return typeof obj === "object" || typeof obj === "function" ?
			class2type[ toString.call( obj ) ] || "object" :
			typeof obj;
	},

	// Evaluates a script in a global context
	globalEval: function( code ) {
		DOMEval( code );
	},

	// Convert dashed to camelCase; used by the css and data modules
	// Support: IE <=9 - 11, Edge 12 - 13
	// Microsoft forgot to hump their vendor prefix (#9572)
	camelCase: function( string ) {
		return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
	},

	nodeName: function( elem, name ) {
		return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();
	},

	each: function( obj, callback ) {
		var length, i = 0;

		if ( isArrayLike( obj ) ) {
			length = obj.length;
			for ( ; i < length; i++ ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		} else {
			for ( i in obj ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		}

		return obj;
	},

	// Support: Android <=4.0 only
	trim: function( text ) {
		return text == null ?
			"" :
			( text + "" ).replace( rtrim, "" );
	},

	// results is for internal usage only
	makeArray: function( arr, results ) {
		var ret = results || [];

		if ( arr != null ) {
			if ( isArrayLike( Object( arr ) ) ) {
				jQuery.merge( ret,
					typeof arr === "string" ?
					[ arr ] : arr
				);
			} else {
				push.call( ret, arr );
			}
		}

		return ret;
	},

	inArray: function( elem, arr, i ) {
		return arr == null ? -1 : indexOf.call( arr, elem, i );
	},

	// Support: Android <=4.0 only, PhantomJS 1 only
	// push.apply(_, arraylike) throws on ancient WebKit
	merge: function( first, second ) {
		var len = +second.length,
			j = 0,
			i = first.length;

		for ( ; j < len; j++ ) {
			first[ i++ ] = second[ j ];
		}

		first.length = i;

		return first;
	},

	grep: function( elems, callback, invert ) {
		var callbackInverse,
			matches = [],
			i = 0,
			length = elems.length,
			callbackExpect = !invert;

		// Go through the array, only saving the items
		// that pass the validator function
		for ( ; i < length; i++ ) {
			callbackInverse = !callback( elems[ i ], i );
			if ( callbackInverse !== callbackExpect ) {
				matches.push( elems[ i ] );
			}
		}

		return matches;
	},

	// arg is for internal usage only
	map: function( elems, callback, arg ) {
		var length, value,
			i = 0,
			ret = [];

		// Go through the array, translating each of the items to their new values
		if ( isArrayLike( elems ) ) {
			length = elems.length;
			for ( ; i < length; i++ ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}

		// Go through every key on the object,
		} else {
			for ( i in elems ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}
		}

		// Flatten any nested arrays
		return concat.apply( [], ret );
	},

	// A global GUID counter for objects
	guid: 1,

	// Bind a function to a context, optionally partially applying any
	// arguments.
	proxy: function( fn, context ) {
		var tmp, args, proxy;

		if ( typeof context === "string" ) {
			tmp = fn[ context ];
			context = fn;
			fn = tmp;
		}

		// Quick check to determine if target is callable, in the spec
		// this throws a TypeError, but we will just return undefined.
		if ( !jQuery.isFunction( fn ) ) {
			return undefined;
		}

		// Simulated bind
		args = slice.call( arguments, 2 );
		proxy = function() {
			return fn.apply( context || this, args.concat( slice.call( arguments ) ) );
		};

		// Set the guid of unique handler to the same of original handler, so it can be removed
		proxy.guid = fn.guid = fn.guid || jQuery.guid++;

		return proxy;
	},

	now: Date.now,

	// jQuery.support is not used in Core but other projects attach their
	// properties to it so it needs to exist.
	support: support
} );

if ( typeof Symbol === "function" ) {
	jQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];
}

// Populate the class2type map
jQuery.each( "Boolean Number String Function Array Date RegExp Object Error Symbol".split( " " ),
function( i, name ) {
	class2type[ "[object " + name + "]" ] = name.toLowerCase();
} );

function isArrayLike( obj ) {

	// Support: real iOS 8.2 only (not reproducible in simulator)
	// `in` check used to prevent JIT error (gh-2145)
	// hasOwn isn't used here due to false negatives
	// regarding Nodelist length in IE
	var length = !!obj && "length" in obj && obj.length,
		type = jQuery.type( obj );

	if ( type === "function" || jQuery.isWindow( obj ) ) {
		return false;
	}

	return type === "array" || length === 0 ||
		typeof length === "number" && length > 0 && ( length - 1 ) in obj;
}
var Sizzle =
/*!
 * Sizzle CSS Selector Engine v2.3.3
 * https://sizzlejs.com/
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2016-08-08
 */
(function( window ) {

var i,
	support,
	Expr,
	getText,
	isXML,
	tokenize,
	compile,
	select,
	outermostContext,
	sortInput,
	hasDuplicate,

	// Local document vars
	setDocument,
	document,
	docElem,
	documentIsHTML,
	rbuggyQSA,
	rbuggyMatches,
	matches,
	contains,

	// Instance-specific data
	expando = "sizzle" + 1 * new Date(),
	preferredDoc = window.document,
	dirruns = 0,
	done = 0,
	classCache = createCache(),
	tokenCache = createCache(),
	compilerCache = createCache(),
	sortOrder = function( a, b ) {
		if ( a === b ) {
			hasDuplicate = true;
		}
		return 0;
	},

	// Instance methods
	hasOwn = ({}).hasOwnProperty,
	arr = [],
	pop = arr.pop,
	push_native = arr.push,
	push = arr.push,
	slice = arr.slice,
	// Use a stripped-down indexOf as it's faster than native
	// https://jsperf.com/thor-indexof-vs-for/5
	indexOf = function( list, elem ) {
		var i = 0,
			len = list.length;
		for ( ; i < len; i++ ) {
			if ( list[i] === elem ) {
				return i;
			}
		}
		return -1;
	},

	booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",

	// Regular expressions

	// http://www.w3.org/TR/css3-selectors/#whitespace
	whitespace = "[\\x20\\t\\r\\n\\f]",

	// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier
	identifier = "(?:\\\\.|[\\w-]|[^\0-\\xa0])+",

	// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
	attributes = "\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace +
		// Operator (capture 2)
		"*([*^$|!~]?=)" + whitespace +
		// "Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]"
		"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" + whitespace +
		"*\\]",

	pseudos = ":(" + identifier + ")(?:\\((" +
		// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
		// 1. quoted (capture 3; capture 4 or capture 5)
		"('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" +
		// 2. simple (capture 6)
		"((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" +
		// 3. anything else (capture 2)
		".*" +
		")\\)|)",

	// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
	rwhitespace = new RegExp( whitespace + "+", "g" ),
	rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g" ),

	rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
	rcombinators = new RegExp( "^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*" ),

	rattributeQuotes = new RegExp( "=" + whitespace + "*([^\\]'\"]*?)" + whitespace + "*\\]", "g" ),

	rpseudo = new RegExp( pseudos ),
	ridentifier = new RegExp( "^" + identifier + "$" ),

	matchExpr = {
		"ID": new RegExp( "^#(" + identifier + ")" ),
		"CLASS": new RegExp( "^\\.(" + identifier + ")" ),
		"TAG": new RegExp( "^(" + identifier + "|[*])" ),
		"ATTR": new RegExp( "^" + attributes ),
		"PSEUDO": new RegExp( "^" + pseudos ),
		"CHILD": new RegExp( "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace +
			"*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace +
			"*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
		"bool": new RegExp( "^(?:" + booleans + ")$", "i" ),
		// For use in libraries implementing .is()
		// We use this for POS matching in `select`
		"needsContext": new RegExp( "^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +
			whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i" )
	},

	rinputs = /^(?:input|select|textarea|button)$/i,
	rheader = /^h\d$/i,

	rnative = /^[^{]+\{\s*\[native \w/,

	// Easily-parseable/retrievable ID or TAG or CLASS selectors
	rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,

	rsibling = /[+~]/,

	// CSS escapes
	// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
	runescape = new RegExp( "\\\\([\\da-f]{1,6}" + whitespace + "?|(" + whitespace + ")|.)", "ig" ),
	funescape = function( _, escaped, escapedWhitespace ) {
		var high = "0x" + escaped - 0x10000;
		// NaN means non-codepoint
		// Support: Firefox<24
		// Workaround erroneous numeric interpretation of +"0x"
		return high !== high || escapedWhitespace ?
			escaped :
			high < 0 ?
				// BMP codepoint
				String.fromCharCode( high + 0x10000 ) :
				// Supplemental Plane codepoint (surrogate pair)
				String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
	},

	// CSS string/identifier serialization
	// https://drafts.csswg.org/cssom/#common-serializing-idioms
	rcssescape = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,
	fcssescape = function( ch, asCodePoint ) {
		if ( asCodePoint ) {

			// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER
			if ( ch === "\0" ) {
				return "\uFFFD";
			}

			// Control characters and (dependent upon position) numbers get escaped as code points
			return ch.slice( 0, -1 ) + "\\" + ch.charCodeAt( ch.length - 1 ).toString( 16 ) + " ";
		}

		// Other potentially-special ASCII characters get backslash-escaped
		return "\\" + ch;
	},

	// Used for iframes
	// See setDocument()
	// Removing the function wrapper causes a "Permission Denied"
	// error in IE
	unloadHandler = function() {
		setDocument();
	},

	disabledAncestor = addCombinator(
		function( elem ) {
			return elem.disabled === true && ("form" in elem || "label" in elem);
		},
		{ dir: "parentNode", next: "legend" }
	);

// Optimize for push.apply( _, NodeList )
try {
	push.apply(
		(arr = slice.call( preferredDoc.childNodes )),
		preferredDoc.childNodes
	);
	// Support: Android<4.0
	// Detect silently failing push.apply
	arr[ preferredDoc.childNodes.length ].nodeType;
} catch ( e ) {
	push = { apply: arr.length ?

		// Leverage slice if possible
		function( target, els ) {
			push_native.apply( target, slice.call(els) );
		} :

		// Support: IE<9
		// Otherwise append directly
		function( target, els ) {
			var j = target.length,
				i = 0;
			// Can't trust NodeList.length
			while ( (target[j++] = els[i++]) ) {}
			target.length = j - 1;
		}
	};
}

function Sizzle( selector, context, results, seed ) {
	var m, i, elem, nid, match, groups, newSelector,
		newContext = context && context.ownerDocument,

		// nodeType defaults to 9, since context defaults to document
		nodeType = context ? context.nodeType : 9;

	results = results || [];

	// Return early from calls with invalid selector or context
	if ( typeof selector !== "string" || !selector ||
		nodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {

		return results;
	}

	// Try to shortcut find operations (as opposed to filters) in HTML documents
	if ( !seed ) {

		if ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {
			setDocument( context );
		}
		context = context || document;

		if ( documentIsHTML ) {

			// If the selector is sufficiently simple, try using a "get*By*" DOM method
			// (excepting DocumentFragment context, where the methods don't exist)
			if ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {

				// ID selector
				if ( (m = match[1]) ) {

					// Document context
					if ( nodeType === 9 ) {
						if ( (elem = context.getElementById( m )) ) {

							// Support: IE, Opera, Webkit
							// TODO: identify versions
							// getElementById can match elements by name instead of ID
							if ( elem.id === m ) {
								results.push( elem );
								return results;
							}
						} else {
							return results;
						}

					// Element context
					} else {

						// Support: IE, Opera, Webkit
						// TODO: identify versions
						// getElementById can match elements by name instead of ID
						if ( newContext && (elem = newContext.getElementById( m )) &&
							contains( context, elem ) &&
							elem.id === m ) {

							results.push( elem );
							return results;
						}
					}

				// Type selector
				} else if ( match[2] ) {
					push.apply( results, context.getElementsByTagName( selector ) );
					return results;

				// Class selector
				} else if ( (m = match[3]) && support.getElementsByClassName &&
					context.getElementsByClassName ) {

					push.apply( results, context.getElementsByClassName( m ) );
					return results;
				}
			}

			// Take advantage of querySelectorAll
			if ( support.qsa &&
				!compilerCache[ selector + " " ] &&
				(!rbuggyQSA || !rbuggyQSA.test( selector )) ) {

				if ( nodeType !== 1 ) {
					newContext = context;
					newSelector = selector;

				// qSA looks outside Element context, which is not what we want
				// Thanks to Andrew Dupont for this workaround technique
				// Support: IE <=8
				// Exclude object elements
				} else if ( context.nodeName.toLowerCase() !== "object" ) {

					// Capture the context ID, setting it first if necessary
					if ( (nid = context.getAttribute( "id" )) ) {
						nid = nid.replace( rcssescape, fcssescape );
					} else {
						context.setAttribute( "id", (nid = expando) );
					}

					// Prefix every selector in the list
					groups = tokenize( selector );
					i = groups.length;
					while ( i-- ) {
						groups[i] = "#" + nid + " " + toSelector( groups[i] );
					}
					newSelector = groups.join( "," );

					// Expand context for sibling selectors
					newContext = rsibling.test( selector ) && testContext( context.parentNode ) ||
						context;
				}

				if ( newSelector ) {
					try {
						push.apply( results,
							newContext.querySelectorAll( newSelector )
						);
						return results;
					} catch ( qsaError ) {
					} finally {
						if ( nid === expando ) {
							context.removeAttribute( "id" );
						}
					}
				}
			}
		}
	}

	// All others
	return select( selector.replace( rtrim, "$1" ), context, results, seed );
}

/**
 * Create key-value caches of limited size
 * @returns {function(string, object)} Returns the Object data after storing it on itself with
 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
 *	deleting the oldest entry
 */
function createCache() {
	var keys = [];

	function cache( key, value ) {
		// Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
		if ( keys.push( key + " " ) > Expr.cacheLength ) {
			// Only keep the most recent entries
			delete cache[ keys.shift() ];
		}
		return (cache[ key + " " ] = value);
	}
	return cache;
}

/**
 * Mark a function for special use by Sizzle
 * @param {Function} fn The function to mark
 */
function markFunction( fn ) {
	fn[ expando ] = true;
	return fn;
}

/**
 * Support testing using an element
 * @param {Function} fn Passed the created element and returns a boolean result
 */
function assert( fn ) {
	var el = document.createElement("fieldset");

	try {
		return !!fn( el );
	} catch (e) {
		return false;
	} finally {
		// Remove from its parent by default
		if ( el.parentNode ) {
			el.parentNode.removeChild( el );
		}
		// release memory in IE
		el = null;
	}
}

/**
 * Adds the same handler for all of the specified attrs
 * @param {String} attrs Pipe-separated list of attributes
 * @param {Function} handler The method that will be applied
 */
function addHandle( attrs, handler ) {
	var arr = attrs.split("|"),
		i = arr.length;

	while ( i-- ) {
		Expr.attrHandle[ arr[i] ] = handler;
	}
}

/**
 * Checks document order of two siblings
 * @param {Element} a
 * @param {Element} b
 * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
 */
function siblingCheck( a, b ) {
	var cur = b && a,
		diff = cur && a.nodeType === 1 && b.nodeType === 1 &&
			a.sourceIndex - b.sourceIndex;

	// Use IE sourceIndex if available on both nodes
	if ( diff ) {
		return diff;
	}

	// Check if b follows a
	if ( cur ) {
		while ( (cur = cur.nextSibling) ) {
			if ( cur === b ) {
				return -1;
			}
		}
	}

	return a ? 1 : -1;
}

/**
 * Returns a function to use in pseudos for input types
 * @param {String} type
 */
function createInputPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return name === "input" && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for buttons
 * @param {String} type
 */
function createButtonPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return (name === "input" || name === "button") && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for :enabled/:disabled
 * @param {Boolean} disabled true for :disabled; false for :enabled
 */
function createDisabledPseudo( disabled ) {

	// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable
	return function( elem ) {

		// Only certain elements can match :enabled or :disabled
		// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled
		// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled
		if ( "form" in elem ) {

			// Check for inherited disabledness on relevant non-disabled elements:
			// * listed form-associated elements in a disabled fieldset
			//   https://html.spec.whatwg.org/multipage/forms.html#category-listed
			//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled
			// * option elements in a disabled optgroup
			//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled
			// All such elements have a "form" property.
			if ( elem.parentNode && elem.disabled === false ) {

				// Option elements defer to a parent optgroup if present
				if ( "label" in elem ) {
					if ( "label" in elem.parentNode ) {
						return elem.parentNode.disabled === disabled;
					} else {
						return elem.disabled === disabled;
					}
				}

				// Support: IE 6 - 11
				// Use the isDisabled shortcut property to check for disabled fieldset ancestors
				return elem.isDisabled === disabled ||

					// Where there is no isDisabled, check manually
					/* jshint -W018 */
					elem.isDisabled !== !disabled &&
						disabledAncestor( elem ) === disabled;
			}

			return elem.disabled === disabled;

		// Try to winnow out elements that can't be disabled before trusting the disabled property.
		// Some victims get caught in our net (label, legend, menu, track), but it shouldn't
		// even exist on them, let alone have a boolean value.
		} else if ( "label" in elem ) {
			return elem.disabled === disabled;
		}

		// Remaining elements are neither :enabled nor :disabled
		return false;
	};
}

/**
 * Returns a function to use in pseudos for positionals
 * @param {Function} fn
 */
function createPositionalPseudo( fn ) {
	return markFunction(function( argument ) {
		argument = +argument;
		return markFunction(function( seed, matches ) {
			var j,
				matchIndexes = fn( [], seed.length, argument ),
				i = matchIndexes.length;

			// Match elements found at the specified indexes
			while ( i-- ) {
				if ( seed[ (j = matchIndexes[i]) ] ) {
					seed[j] = !(matches[j] = seed[j]);
				}
			}
		});
	});
}

/**
 * Checks a node for validity as a Sizzle context
 * @param {Element|Object=} context
 * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
 */
function testContext( context ) {
	return context && typeof context.getElementsByTagName !== "undefined" && context;
}

// Expose support vars for convenience
support = Sizzle.support = {};

/**
 * Detects XML nodes
 * @param {Element|Object} elem An element or a document
 * @returns {Boolean} True iff elem is a non-HTML XML node
 */
isXML = Sizzle.isXML = function( elem ) {
	// documentElement is verified for cases where it doesn't yet exist
	// (such as loading iframes in IE - #4833)
	var documentElement = elem && (elem.ownerDocument || elem).documentElement;
	return documentElement ? documentElement.nodeName !== "HTML" : false;
};

/**
 * Sets document-related variables once based on the current document
 * @param {Element|Object} [doc] An element or document object to use to set the document
 * @returns {Object} Returns the current document
 */
setDocument = Sizzle.setDocument = function( node ) {
	var hasCompare, subWindow,
		doc = node ? node.ownerDocument || node : preferredDoc;

	// Return early if doc is invalid or already selected
	if ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {
		return document;
	}

	// Update global variables
	document = doc;
	docElem = document.documentElement;
	documentIsHTML = !isXML( document );

	// Support: IE 9-11, Edge
	// Accessing iframe documents after unload throws "permission denied" errors (jQuery #13936)
	if ( preferredDoc !== document &&
		(subWindow = document.defaultView) && subWindow.top !== subWindow ) {

		// Support: IE 11, Edge
		if ( subWindow.addEventListener ) {
			subWindow.addEventListener( "unload", unloadHandler, false );

		// Support: IE 9 - 10 only
		} else if ( subWindow.attachEvent ) {
			subWindow.attachEvent( "onunload", unloadHandler );
		}
	}

	/* Attributes
	---------------------------------------------------------------------- */

	// Support: IE<8
	// Verify that getAttribute really returns attributes and not properties
	// (excepting IE8 booleans)
	support.attributes = assert(function( el ) {
		el.className = "i";
		return !el.getAttribute("className");
	});

	/* getElement(s)By*
	---------------------------------------------------------------------- */

	// Check if getElementsByTagName("*") returns only elements
	support.getElementsByTagName = assert(function( el ) {
		el.appendChild( document.createComment("") );
		return !el.getElementsByTagName("*").length;
	});

	// Support: IE<9
	support.getElementsByClassName = rnative.test( document.getElementsByClassName );

	// Support: IE<10
	// Check if getElementById returns elements by name
	// The broken getElementById methods don't pick up programmatically-set names,
	// so use a roundabout getElementsByName test
	support.getById = assert(function( el ) {
		docElem.appendChild( el ).id = expando;
		return !document.getElementsByName || !document.getElementsByName( expando ).length;
	});

	// ID filter and find
	if ( support.getById ) {
		Expr.filter["ID"] = function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				return elem.getAttribute("id") === attrId;
			};
		};
		Expr.find["ID"] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var elem = context.getElementById( id );
				return elem ? [ elem ] : [];
			}
		};
	} else {
		Expr.filter["ID"] =  function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				var node = typeof elem.getAttributeNode !== "undefined" &&
					elem.getAttributeNode("id");
				return node && node.value === attrId;
			};
		};

		// Support: IE 6 - 7 only
		// getElementById is not reliable as a find shortcut
		Expr.find["ID"] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var node, i, elems,
					elem = context.getElementById( id );

				if ( elem ) {

					// Verify the id attribute
					node = elem.getAttributeNode("id");
					if ( node && node.value === id ) {
						return [ elem ];
					}

					// Fall back on getElementsByName
					elems = context.getElementsByName( id );
					i = 0;
					while ( (elem = elems[i++]) ) {
						node = elem.getAttributeNode("id");
						if ( node && node.value === id ) {
							return [ elem ];
						}
					}
				}

				return [];
			}
		};
	}

	// Tag
	Expr.find["TAG"] = support.getElementsByTagName ?
		function( tag, context ) {
			if ( typeof context.getElementsByTagName !== "undefined" ) {
				return context.getElementsByTagName( tag );

			// DocumentFragment nodes don't have gEBTN
			} else if ( support.qsa ) {
				return context.querySelectorAll( tag );
			}
		} :

		function( tag, context ) {
			var elem,
				tmp = [],
				i = 0,
				// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too
				results = context.getElementsByTagName( tag );

			// Filter out possible comments
			if ( tag === "*" ) {
				while ( (elem = results[i++]) ) {
					if ( elem.nodeType === 1 ) {
						tmp.push( elem );
					}
				}

				return tmp;
			}
			return results;
		};

	// Class
	Expr.find["CLASS"] = support.getElementsByClassName && function( className, context ) {
		if ( typeof context.getElementsByClassName !== "undefined" && documentIsHTML ) {
			return context.getElementsByClassName( className );
		}
	};

	/* QSA/matchesSelector
	---------------------------------------------------------------------- */

	// QSA and matchesSelector support

	// matchesSelector(:active) reports false when true (IE9/Opera 11.5)
	rbuggyMatches = [];

	// qSa(:focus) reports false when true (Chrome 21)
	// We allow this because of a bug in IE8/9 that throws an error
	// whenever `document.activeElement` is accessed on an iframe
	// So, we allow :focus to pass through QSA all the time to avoid the IE error
	// See https://bugs.jquery.com/ticket/13378
	rbuggyQSA = [];

	if ( (support.qsa = rnative.test( document.querySelectorAll )) ) {
		// Build QSA regex
		// Regex strategy adopted from Diego Perini
		assert(function( el ) {
			// Select is set to empty string on purpose
			// This is to test IE's treatment of not explicitly
			// setting a boolean content attribute,
			// since its presence should be enough
			// https://bugs.jquery.com/ticket/12359
			docElem.appendChild( el ).innerHTML = "<a id='" + expando + "'></a>" +
				"<select id='" + expando + "-\r\\' msallowcapture=''>" +
				"<option selected=''></option></select>";

			// Support: IE8, Opera 11-12.16
			// Nothing should be selected when empty strings follow ^= or $= or *=
			// The test attribute must be unknown in Opera but "safe" for WinRT
			// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section
			if ( el.querySelectorAll("[msallowcapture^='']").length ) {
				rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:''|\"\")" );
			}

			// Support: IE8
			// Boolean attributes and "value" are not treated correctly
			if ( !el.querySelectorAll("[selected]").length ) {
				rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
			}

			// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+
			if ( !el.querySelectorAll( "[id~=" + expando + "-]" ).length ) {
				rbuggyQSA.push("~=");
			}

			// Webkit/Opera - :checked should return selected option elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			// IE8 throws error here and will not see later tests
			if ( !el.querySelectorAll(":checked").length ) {
				rbuggyQSA.push(":checked");
			}

			// Support: Safari 8+, iOS 8+
			// https://bugs.webkit.org/show_bug.cgi?id=136851
			// In-page `selector#id sibling-combinator selector` fails
			if ( !el.querySelectorAll( "a#" + expando + "+*" ).length ) {
				rbuggyQSA.push(".#.+[+~]");
			}
		});

		assert(function( el ) {
			el.innerHTML = "<a href='' disabled='disabled'></a>" +
				"<select disabled='disabled'><option/></select>";

			// Support: Windows 8 Native Apps
			// The type and name attributes are restricted during .innerHTML assignment
			var input = document.createElement("input");
			input.setAttribute( "type", "hidden" );
			el.appendChild( input ).setAttribute( "name", "D" );

			// Support: IE8
			// Enforce case-sensitivity of name attribute
			if ( el.querySelectorAll("[name=d]").length ) {
				rbuggyQSA.push( "name" + whitespace + "*[*^$|!~]?=" );
			}

			// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
			// IE8 throws error here and will not see later tests
			if ( el.querySelectorAll(":enabled").length !== 2 ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Support: IE9-11+
			// IE's :disabled selector does not pick up the children of disabled fieldsets
			docElem.appendChild( el ).disabled = true;
			if ( el.querySelectorAll(":disabled").length !== 2 ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Opera 10-11 does not throw on post-comma invalid pseudos
			el.querySelectorAll("*,:x");
			rbuggyQSA.push(",.*:");
		});
	}

	if ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||
		docElem.webkitMatchesSelector ||
		docElem.mozMatchesSelector ||
		docElem.oMatchesSelector ||
		docElem.msMatchesSelector) )) ) {

		assert(function( el ) {
			// Check to see if it's possible to do matchesSelector
			// on a disconnected node (IE 9)
			support.disconnectedMatch = matches.call( el, "*" );

			// This should fail with an exception
			// Gecko does not error, returns false instead
			matches.call( el, "[s!='']:x" );
			rbuggyMatches.push( "!=", pseudos );
		});
	}

	rbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join("|") );
	rbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join("|") );

	/* Contains
	---------------------------------------------------------------------- */
	hasCompare = rnative.test( docElem.compareDocumentPosition );

	// Element contains another
	// Purposefully self-exclusive
	// As in, an element does not contain itself
	contains = hasCompare || rnative.test( docElem.contains ) ?
		function( a, b ) {
			var adown = a.nodeType === 9 ? a.documentElement : a,
				bup = b && b.parentNode;
			return a === bup || !!( bup && bup.nodeType === 1 && (
				adown.contains ?
					adown.contains( bup ) :
					a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16
			));
		} :
		function( a, b ) {
			if ( b ) {
				while ( (b = b.parentNode) ) {
					if ( b === a ) {
						return true;
					}
				}
			}
			return false;
		};

	/* Sorting
	---------------------------------------------------------------------- */

	// Document order sorting
	sortOrder = hasCompare ?
	function( a, b ) {

		// Flag for duplicate removal
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		// Sort on method existence if only one input has compareDocumentPosition
		var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
		if ( compare ) {
			return compare;
		}

		// Calculate position if both inputs belong to the same document
		compare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?
			a.compareDocumentPosition( b ) :

			// Otherwise we know they are disconnected
			1;

		// Disconnected nodes
		if ( compare & 1 ||
			(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {

			// Choose the first element that is related to our preferred document
			if ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {
				return -1;
			}
			if ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {
				return 1;
			}

			// Maintain original order
			return sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;
		}

		return compare & 4 ? -1 : 1;
	} :
	function( a, b ) {
		// Exit early if the nodes are identical
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		var cur,
			i = 0,
			aup = a.parentNode,
			bup = b.parentNode,
			ap = [ a ],
			bp = [ b ];

		// Parentless nodes are either documents or disconnected
		if ( !aup || !bup ) {
			return a === document ? -1 :
				b === document ? 1 :
				aup ? -1 :
				bup ? 1 :
				sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;

		// If the nodes are siblings, we can do a quick check
		} else if ( aup === bup ) {
			return siblingCheck( a, b );
		}

		// Otherwise we need full lists of their ancestors for comparison
		cur = a;
		while ( (cur = cur.parentNode) ) {
			ap.unshift( cur );
		}
		cur = b;
		while ( (cur = cur.parentNode) ) {
			bp.unshift( cur );
		}

		// Walk down the tree looking for a discrepancy
		while ( ap[i] === bp[i] ) {
			i++;
		}

		return i ?
			// Do a sibling check if the nodes have a common ancestor
			siblingCheck( ap[i], bp[i] ) :

			// Otherwise nodes in our document sort first
			ap[i] === preferredDoc ? -1 :
			bp[i] === preferredDoc ? 1 :
			0;
	};

	return document;
};

Sizzle.matches = function( expr, elements ) {
	return Sizzle( expr, null, null, elements );
};

Sizzle.matchesSelector = function( elem, expr ) {
	// Set document vars if needed
	if ( ( elem.ownerDocument || elem ) !== document ) {
		setDocument( elem );
	}

	// Make sure that attribute selectors are quoted
	expr = expr.replace( rattributeQuotes, "='$1']" );

	if ( support.matchesSelector && documentIsHTML &&
		!compilerCache[ expr + " " ] &&
		( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&
		( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {

		try {
			var ret = matches.call( elem, expr );

			// IE 9's matchesSelector returns false on disconnected nodes
			if ( ret || support.disconnectedMatch ||
					// As well, disconnected nodes are said to be in a document
					// fragment in IE 9
					elem.document && elem.document.nodeType !== 11 ) {
				return ret;
			}
		} catch (e) {}
	}

	return Sizzle( expr, document, null, [ elem ] ).length > 0;
};

Sizzle.contains = function( context, elem ) {
	// Set document vars if needed
	if ( ( context.ownerDocument || context ) !== document ) {
		setDocument( context );
	}
	return contains( context, elem );
};

Sizzle.attr = function( elem, name ) {
	// Set document vars if needed
	if ( ( elem.ownerDocument || elem ) !== document ) {
		setDocument( elem );
	}

	var fn = Expr.attrHandle[ name.toLowerCase() ],
		// Don't get fooled by Object.prototype properties (jQuery #13807)
		val = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?
			fn( elem, name, !documentIsHTML ) :
			undefined;

	return val !== undefined ?
		val :
		support.attributes || !documentIsHTML ?
			elem.getAttribute( name ) :
			(val = elem.getAttributeNode(name)) && val.specified ?
				val.value :
				null;
};

Sizzle.escape = function( sel ) {
	return (sel + "").replace( rcssescape, fcssescape );
};

Sizzle.error = function( msg ) {
	throw new Error( "Syntax error, unrecognized expression: " + msg );
};

/**
 * Document sorting and removing duplicates
 * @param {ArrayLike} results
 */
Sizzle.uniqueSort = function( results ) {
	var elem,
		duplicates = [],
		j = 0,
		i = 0;

	// Unless we *know* we can detect duplicates, assume their presence
	hasDuplicate = !support.detectDuplicates;
	sortInput = !support.sortStable && results.slice( 0 );
	results.sort( sortOrder );

	if ( hasDuplicate ) {
		while ( (elem = results[i++]) ) {
			if ( elem === results[ i ] ) {
				j = duplicates.push( i );
			}
		}
		while ( j-- ) {
			results.splice( duplicates[ j ], 1 );
		}
	}

	// Clear input after sorting to release objects
	// See https://github.com/jquery/sizzle/pull/225
	sortInput = null;

	return results;
};

/**
 * Utility function for retrieving the text value of an array of DOM nodes
 * @param {Array|Element} elem
 */
getText = Sizzle.getText = function( elem ) {
	var node,
		ret = "",
		i = 0,
		nodeType = elem.nodeType;

	if ( !nodeType ) {
		// If no nodeType, this is expected to be an array
		while ( (node = elem[i++]) ) {
			// Do not traverse comment nodes
			ret += getText( node );
		}
	} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {
		// Use textContent for elements
		// innerText usage removed for consistency of new lines (jQuery #11153)
		if ( typeof elem.textContent === "string" ) {
			return elem.textContent;
		} else {
			// Traverse its children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				ret += getText( elem );
			}
		}
	} else if ( nodeType === 3 || nodeType === 4 ) {
		return elem.nodeValue;
	}
	// Do not include comment or processing instruction nodes

	return ret;
};

Expr = Sizzle.selectors = {

	// Can be adjusted by the user
	cacheLength: 50,

	createPseudo: markFunction,

	match: matchExpr,

	attrHandle: {},

	find: {},

	relative: {
		">": { dir: "parentNode", first: true },
		" ": { dir: "parentNode" },
		"+": { dir: "previousSibling", first: true },
		"~": { dir: "previousSibling" }
	},

	preFilter: {
		"ATTR": function( match ) {
			match[1] = match[1].replace( runescape, funescape );

			// Move the given value to match[3] whether quoted or unquoted
			match[3] = ( match[3] || match[4] || match[5] || "" ).replace( runescape, funescape );

			if ( match[2] === "~=" ) {
				match[3] = " " + match[3] + " ";
			}

			return match.slice( 0, 4 );
		},

		"CHILD": function( match ) {
			/* matches from matchExpr["CHILD"]
				1 type (only|nth|...)
				2 what (child|of-type)
				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				4 xn-component of xn+y argument ([+-]?\d*n|)
				5 sign of xn-component
				6 x of xn-component
				7 sign of y-component
				8 y of y-component
			*/
			match[1] = match[1].toLowerCase();

			if ( match[1].slice( 0, 3 ) === "nth" ) {
				// nth-* requires argument
				if ( !match[3] ) {
					Sizzle.error( match[0] );
				}

				// numeric x and y parameters for Expr.filter.CHILD
				// remember that false/true cast respectively to 0/1
				match[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === "even" || match[3] === "odd" ) );
				match[5] = +( ( match[7] + match[8] ) || match[3] === "odd" );

			// other types prohibit arguments
			} else if ( match[3] ) {
				Sizzle.error( match[0] );
			}

			return match;
		},

		"PSEUDO": function( match ) {
			var excess,
				unquoted = !match[6] && match[2];

			if ( matchExpr["CHILD"].test( match[0] ) ) {
				return null;
			}

			// Accept quoted arguments as-is
			if ( match[3] ) {
				match[2] = match[4] || match[5] || "";

			// Strip excess characters from unquoted arguments
			} else if ( unquoted && rpseudo.test( unquoted ) &&
				// Get excess from tokenize (recursively)
				(excess = tokenize( unquoted, true )) &&
				// advance to the next closing parenthesis
				(excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length) ) {

				// excess is a negative index
				match[0] = match[0].slice( 0, excess );
				match[2] = unquoted.slice( 0, excess );
			}

			// Return only captures needed by the pseudo filter method (type and argument)
			return match.slice( 0, 3 );
		}
	},

	filter: {

		"TAG": function( nodeNameSelector ) {
			var nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();
			return nodeNameSelector === "*" ?
				function() { return true; } :
				function( elem ) {
					return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
				};
		},

		"CLASS": function( className ) {
			var pattern = classCache[ className + " " ];

			return pattern ||
				(pattern = new RegExp( "(^|" + whitespace + ")" + className + "(" + whitespace + "|$)" )) &&
				classCache( className, function( elem ) {
					return pattern.test( typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== "undefined" && elem.getAttribute("class") || "" );
				});
		},

		"ATTR": function( name, operator, check ) {
			return function( elem ) {
				var result = Sizzle.attr( elem, name );

				if ( result == null ) {
					return operator === "!=";
				}
				if ( !operator ) {
					return true;
				}

				result += "";

				return operator === "=" ? result === check :
					operator === "!=" ? result !== check :
					operator === "^=" ? check && result.indexOf( check ) === 0 :
					operator === "*=" ? check && result.indexOf( check ) > -1 :
					operator === "$=" ? check && result.slice( -check.length ) === check :
					operator === "~=" ? ( " " + result.replace( rwhitespace, " " ) + " " ).indexOf( check ) > -1 :
					operator === "|=" ? result === check || result.slice( 0, check.length + 1 ) === check + "-" :
					false;
			};
		},

		"CHILD": function( type, what, argument, first, last ) {
			var simple = type.slice( 0, 3 ) !== "nth",
				forward = type.slice( -4 ) !== "last",
				ofType = what === "of-type";

			return first === 1 && last === 0 ?

				// Shortcut for :nth-*(n)
				function( elem ) {
					return !!elem.parentNode;
				} :

				function( elem, context, xml ) {
					var cache, uniqueCache, outerCache, node, nodeIndex, start,
						dir = simple !== forward ? "nextSibling" : "previousSibling",
						parent = elem.parentNode,
						name = ofType && elem.nodeName.toLowerCase(),
						useCache = !xml && !ofType,
						diff = false;

					if ( parent ) {

						// :(first|last|only)-(child|of-type)
						if ( simple ) {
							while ( dir ) {
								node = elem;
								while ( (node = node[ dir ]) ) {
									if ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) {

										return false;
									}
								}
								// Reverse direction for :only-* (if we haven't yet done so)
								start = dir = type === "only" && !start && "nextSibling";
							}
							return true;
						}

						start = [ forward ? parent.firstChild : parent.lastChild ];

						// non-xml :nth-child(...) stores cache data on `parent`
						if ( forward && useCache ) {

							// Seek `elem` from a previously-cached index

							// ...in a gzip-friendly way
							node = parent;
							outerCache = node[ expando ] || (node[ expando ] = {});

							// Support: IE <9 only
							// Defend against cloned attroperties (jQuery gh-1709)
							uniqueCache = outerCache[ node.uniqueID ] ||
								(outerCache[ node.uniqueID ] = {});

							cache = uniqueCache[ type ] || [];
							nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
							diff = nodeIndex && cache[ 2 ];
							node = nodeIndex && parent.childNodes[ nodeIndex ];

							while ( (node = ++nodeIndex && node && node[ dir ] ||

								// Fallback to seeking `elem` from the start
								(diff = nodeIndex = 0) || start.pop()) ) {

								// When found, cache indexes on `parent` and break
								if ( node.nodeType === 1 && ++diff && node === elem ) {
									uniqueCache[ type ] = [ dirruns, nodeIndex, diff ];
									break;
								}
							}

						} else {
							// Use previously-cached element index if available
							if ( useCache ) {
								// ...in a gzip-friendly way
								node = elem;
								outerCache = node[ expando ] || (node[ expando ] = {});

								// Support: IE <9 only
								// Defend against cloned attroperties (jQuery gh-1709)
								uniqueCache = outerCache[ node.uniqueID ] ||
									(outerCache[ node.uniqueID ] = {});

								cache = uniqueCache[ type ] || [];
								nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
								diff = nodeIndex;
							}

							// xml :nth-child(...)
							// or :nth-last-child(...) or :nth(-last)?-of-type(...)
							if ( diff === false ) {
								// Use the same loop as above to seek `elem` from the start
								while ( (node = ++nodeIndex && node && node[ dir ] ||
									(diff = nodeIndex = 0) || start.pop()) ) {

									if ( ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) &&
										++diff ) {

										// Cache the index of each encountered element
										if ( useCache ) {
											outerCache = node[ expando ] || (node[ expando ] = {});

											// Support: IE <9 only
											// Defend against cloned attroperties (jQuery gh-1709)
											uniqueCache = outerCache[ node.uniqueID ] ||
												(outerCache[ node.uniqueID ] = {});

											uniqueCache[ type ] = [ dirruns, diff ];
										}

										if ( node === elem ) {
											break;
										}
									}
								}
							}
						}

						// Incorporate the offset, then check against cycle size
						diff -= last;
						return diff === first || ( diff % first === 0 && diff / first >= 0 );
					}
				};
		},

		"PSEUDO": function( pseudo, argument ) {
			// pseudo-class names are case-insensitive
			// http://www.w3.org/TR/selectors/#pseudo-classes
			// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
			// Remember that setFilters inherits from pseudos
			var args,
				fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
					Sizzle.error( "unsupported pseudo: " + pseudo );

			// The user may use createPseudo to indicate that
			// arguments are needed to create the filter function
			// just as Sizzle does
			if ( fn[ expando ] ) {
				return fn( argument );
			}

			// But maintain support for old signatures
			if ( fn.length > 1 ) {
				args = [ pseudo, pseudo, "", argument ];
				return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
					markFunction(function( seed, matches ) {
						var idx,
							matched = fn( seed, argument ),
							i = matched.length;
						while ( i-- ) {
							idx = indexOf( seed, matched[i] );
							seed[ idx ] = !( matches[ idx ] = matched[i] );
						}
					}) :
					function( elem ) {
						return fn( elem, 0, args );
					};
			}

			return fn;
		}
	},

	pseudos: {
		// Potentially complex pseudos
		"not": markFunction(function( selector ) {
			// Trim the selector passed to compile
			// to avoid treating leading and trailing
			// spaces as combinators
			var input = [],
				results = [],
				matcher = compile( selector.replace( rtrim, "$1" ) );

			return matcher[ expando ] ?
				markFunction(function( seed, matches, context, xml ) {
					var elem,
						unmatched = matcher( seed, null, xml, [] ),
						i = seed.length;

					// Match elements unmatched by `matcher`
					while ( i-- ) {
						if ( (elem = unmatched[i]) ) {
							seed[i] = !(matches[i] = elem);
						}
					}
				}) :
				function( elem, context, xml ) {
					input[0] = elem;
					matcher( input, null, xml, results );
					// Don't keep the element (issue #299)
					input[0] = null;
					return !results.pop();
				};
		}),

		"has": markFunction(function( selector ) {
			return function( elem ) {
				return Sizzle( selector, elem ).length > 0;
			};
		}),

		"contains": markFunction(function( text ) {
			text = text.replace( runescape, funescape );
			return function( elem ) {
				return ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;
			};
		}),

		// "Whether an element is represented by a :lang() selector
		// is based solely on the element's language value
		// being equal to the identifier C,
		// or beginning with the identifier C immediately followed by "-".
		// The matching of C against the element's language value is performed case-insensitively.
		// The identifier C does not have to be a valid language name."
		// http://www.w3.org/TR/selectors/#lang-pseudo
		"lang": markFunction( function( lang ) {
			// lang value must be a valid identifier
			if ( !ridentifier.test(lang || "") ) {
				Sizzle.error( "unsupported lang: " + lang );
			}
			lang = lang.replace( runescape, funescape ).toLowerCase();
			return function( elem ) {
				var elemLang;
				do {
					if ( (elemLang = documentIsHTML ?
						elem.lang :
						elem.getAttribute("xml:lang") || elem.getAttribute("lang")) ) {

						elemLang = elemLang.toLowerCase();
						return elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;
					}
				} while ( (elem = elem.parentNode) && elem.nodeType === 1 );
				return false;
			};
		}),

		// Miscellaneous
		"target": function( elem ) {
			var hash = window.location && window.location.hash;
			return hash && hash.slice( 1 ) === elem.id;
		},

		"root": function( elem ) {
			return elem === docElem;
		},

		"focus": function( elem ) {
			return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
		},

		// Boolean properties
		"enabled": createDisabledPseudo( false ),
		"disabled": createDisabledPseudo( true ),

		"checked": function( elem ) {
			// In CSS3, :checked should return both checked and selected elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			var nodeName = elem.nodeName.toLowerCase();
			return (nodeName === "input" && !!elem.checked) || (nodeName === "option" && !!elem.selected);
		},

		"selected": function( elem ) {
			// Accessing this property makes selected-by-default
			// options in Safari work properly
			if ( elem.parentNode ) {
				elem.parentNode.selectedIndex;
			}

			return elem.selected === true;
		},

		// Contents
		"empty": function( elem ) {
			// http://www.w3.org/TR/selectors/#empty-pseudo
			// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
			//   but not by others (comment: 8; processing instruction: 7; etc.)
			// nodeType < 6 works because attributes (2) do not appear as children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				if ( elem.nodeType < 6 ) {
					return false;
				}
			}
			return true;
		},

		"parent": function( elem ) {
			return !Expr.pseudos["empty"]( elem );
		},

		// Element/input types
		"header": function( elem ) {
			return rheader.test( elem.nodeName );
		},

		"input": function( elem ) {
			return rinputs.test( elem.nodeName );
		},

		"button": function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return name === "input" && elem.type === "button" || name === "button";
		},

		"text": function( elem ) {
			var attr;
			return elem.nodeName.toLowerCase() === "input" &&
				elem.type === "text" &&

				// Support: IE<8
				// New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
				( (attr = elem.getAttribute("type")) == null || attr.toLowerCase() === "text" );
		},

		// Position-in-collection
		"first": createPositionalPseudo(function() {
			return [ 0 ];
		}),

		"last": createPositionalPseudo(function( matchIndexes, length ) {
			return [ length - 1 ];
		}),

		"eq": createPositionalPseudo(function( matchIndexes, length, argument ) {
			return [ argument < 0 ? argument + length : argument ];
		}),

		"even": createPositionalPseudo(function( matchIndexes, length ) {
			var i = 0;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"odd": createPositionalPseudo(function( matchIndexes, length ) {
			var i = 1;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"lt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; --i >= 0; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"gt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; ++i < length; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		})
	}
};

Expr.pseudos["nth"] = Expr.pseudos["eq"];

// Add button/input type pseudos
for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {
	Expr.pseudos[ i ] = createInputPseudo( i );
}
for ( i in { submit: true, reset: true } ) {
	Expr.pseudos[ i ] = createButtonPseudo( i );
}

// Easy API for creating new setFilters
function setFilters() {}
setFilters.prototype = Expr.filters = Expr.pseudos;
Expr.setFilters = new setFilters();

tokenize = Sizzle.tokenize = function( selector, parseOnly ) {
	var matched, match, tokens, type,
		soFar, groups, preFilters,
		cached = tokenCache[ selector + " " ];

	if ( cached ) {
		return parseOnly ? 0 : cached.slice( 0 );
	}

	soFar = selector;
	groups = [];
	preFilters = Expr.preFilter;

	while ( soFar ) {

		// Comma and first run
		if ( !matched || (match = rcomma.exec( soFar )) ) {
			if ( match ) {
				// Don't consume trailing commas as valid
				soFar = soFar.slice( match[0].length ) || soFar;
			}
			groups.push( (tokens = []) );
		}

		matched = false;

		// Combinators
		if ( (match = rcombinators.exec( soFar )) ) {
			matched = match.shift();
			tokens.push({
				value: matched,
				// Cast descendant combinators to space
				type: match[0].replace( rtrim, " " )
			});
			soFar = soFar.slice( matched.length );
		}

		// Filters
		for ( type in Expr.filter ) {
			if ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||
				(match = preFilters[ type ]( match ))) ) {
				matched = match.shift();
				tokens.push({
					value: matched,
					type: type,
					matches: match
				});
				soFar = soFar.slice( matched.length );
			}
		}

		if ( !matched ) {
			break;
		}
	}

	// Return the length of the invalid excess
	// if we're just parsing
	// Otherwise, throw an error or return tokens
	return parseOnly ?
		soFar.length :
		soFar ?
			Sizzle.error( selector ) :
			// Cache the tokens
			tokenCache( selector, groups ).slice( 0 );
};

function toSelector( tokens ) {
	var i = 0,
		len = tokens.length,
		selector = "";
	for ( ; i < len; i++ ) {
		selector += tokens[i].value;
	}
	return selector;
}

function addCombinator( matcher, combinator, base ) {
	var dir = combinator.dir,
		skip = combinator.next,
		key = skip || dir,
		checkNonElements = base && key === "parentNode",
		doneName = done++;

	return combinator.first ?
		// Check against closest ancestor/preceding element
		function( elem, context, xml ) {
			while ( (elem = elem[ dir ]) ) {
				if ( elem.nodeType === 1 || checkNonElements ) {
					return matcher( elem, context, xml );
				}
			}
			return false;
		} :

		// Check against all ancestor/preceding elements
		function( elem, context, xml ) {
			var oldCache, uniqueCache, outerCache,
				newCache = [ dirruns, doneName ];

			// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching
			if ( xml ) {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						if ( matcher( elem, context, xml ) ) {
							return true;
						}
					}
				}
			} else {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						outerCache = elem[ expando ] || (elem[ expando ] = {});

						// Support: IE <9 only
						// Defend against cloned attroperties (jQuery gh-1709)
						uniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});

						if ( skip && skip === elem.nodeName.toLowerCase() ) {
							elem = elem[ dir ] || elem;
						} else if ( (oldCache = uniqueCache[ key ]) &&
							oldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {

							// Assign to newCache so results back-propagate to previous elements
							return (newCache[ 2 ] = oldCache[ 2 ]);
						} else {
							// Reuse newcache so results back-propagate to previous elements
							uniqueCache[ key ] = newCache;

							// A match means we're done; a fail means we have to keep checking
							if ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {
								return true;
							}
						}
					}
				}
			}
			return false;
		};
}

function elementMatcher( matchers ) {
	return matchers.length > 1 ?
		function( elem, context, xml ) {
			var i = matchers.length;
			while ( i-- ) {
				if ( !matchers[i]( elem, context, xml ) ) {
					return false;
				}
			}
			return true;
		} :
		matchers[0];
}

function multipleContexts( selector, contexts, results ) {
	var i = 0,
		len = contexts.length;
	for ( ; i < len; i++ ) {
		Sizzle( selector, contexts[i], results );
	}
	return results;
}

function condense( unmatched, map, filter, context, xml ) {
	var elem,
		newUnmatched = [],
		i = 0,
		len = unmatched.length,
		mapped = map != null;

	for ( ; i < len; i++ ) {
		if ( (elem = unmatched[i]) ) {
			if ( !filter || filter( elem, context, xml ) ) {
				newUnmatched.push( elem );
				if ( mapped ) {
					map.push( i );
				}
			}
		}
	}

	return newUnmatched;
}

function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
	if ( postFilter && !postFilter[ expando ] ) {
		postFilter = setMatcher( postFilter );
	}
	if ( postFinder && !postFinder[ expando ] ) {
		postFinder = setMatcher( postFinder, postSelector );
	}
	return markFunction(function( seed, results, context, xml ) {
		var temp, i, elem,
			preMap = [],
			postMap = [],
			preexisting = results.length,

			// Get initial elements from seed or context
			elems = seed || multipleContexts( selector || "*", context.nodeType ? [ context ] : context, [] ),

			// Prefilter to get matcher input, preserving a map for seed-results synchronization
			matcherIn = preFilter && ( seed || !selector ) ?
				condense( elems, preMap, preFilter, context, xml ) :
				elems,

			matcherOut = matcher ?
				// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
				postFinder || ( seed ? preFilter : preexisting || postFilter ) ?

					// ...intermediate processing is necessary
					[] :

					// ...otherwise use results directly
					results :
				matcherIn;

		// Find primary matches
		if ( matcher ) {
			matcher( matcherIn, matcherOut, context, xml );
		}

		// Apply postFilter
		if ( postFilter ) {
			temp = condense( matcherOut, postMap );
			postFilter( temp, [], context, xml );

			// Un-match failing elements by moving them back to matcherIn
			i = temp.length;
			while ( i-- ) {
				if ( (elem = temp[i]) ) {
					matcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);
				}
			}
		}

		if ( seed ) {
			if ( postFinder || preFilter ) {
				if ( postFinder ) {
					// Get the final matcherOut by condensing this intermediate into postFinder contexts
					temp = [];
					i = matcherOut.length;
					while ( i-- ) {
						if ( (elem = matcherOut[i]) ) {
							// Restore matcherIn since elem is not yet a final match
							temp.push( (matcherIn[i] = elem) );
						}
					}
					postFinder( null, (matcherOut = []), temp, xml );
				}

				// Move matched elements from seed to results to keep them synchronized
				i = matcherOut.length;
				while ( i-- ) {
					if ( (elem = matcherOut[i]) &&
						(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {

						seed[temp] = !(results[temp] = elem);
					}
				}
			}

		// Add elements to results, through postFinder if defined
		} else {
			matcherOut = condense(
				matcherOut === results ?
					matcherOut.splice( preexisting, matcherOut.length ) :
					matcherOut
			);
			if ( postFinder ) {
				postFinder( null, results, matcherOut, xml );
			} else {
				push.apply( results, matcherOut );
			}
		}
	});
}

function matcherFromTokens( tokens ) {
	var checkContext, matcher, j,
		len = tokens.length,
		leadingRelative = Expr.relative[ tokens[0].type ],
		implicitRelative = leadingRelative || Expr.relative[" "],
		i = leadingRelative ? 1 : 0,

		// The foundational matcher ensures that elements are reachable from top-level context(s)
		matchContext = addCombinator( function( elem ) {
			return elem === checkContext;
		}, implicitRelative, true ),
		matchAnyContext = addCombinator( function( elem ) {
			return indexOf( checkContext, elem ) > -1;
		}, implicitRelative, true ),
		matchers = [ function( elem, context, xml ) {
			var ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (
				(checkContext = context).nodeType ?
					matchContext( elem, context, xml ) :
					matchAnyContext( elem, context, xml ) );
			// Avoid hanging onto element (issue #299)
			checkContext = null;
			return ret;
		} ];

	for ( ; i < len; i++ ) {
		if ( (matcher = Expr.relative[ tokens[i].type ]) ) {
			matchers = [ addCombinator(elementMatcher( matchers ), matcher) ];
		} else {
			matcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );

			// Return special upon seeing a positional matcher
			if ( matcher[ expando ] ) {
				// Find the next relative operator (if any) for proper handling
				j = ++i;
				for ( ; j < len; j++ ) {
					if ( Expr.relative[ tokens[j].type ] ) {
						break;
					}
				}
				return setMatcher(
					i > 1 && elementMatcher( matchers ),
					i > 1 && toSelector(
						// If the preceding token was a descendant combinator, insert an implicit any-element `*`
						tokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === " " ? "*" : "" })
					).replace( rtrim, "$1" ),
					matcher,
					i < j && matcherFromTokens( tokens.slice( i, j ) ),
					j < len && matcherFromTokens( (tokens = tokens.slice( j )) ),
					j < len && toSelector( tokens )
				);
			}
			matchers.push( matcher );
		}
	}

	return elementMatcher( matchers );
}

function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
	var bySet = setMatchers.length > 0,
		byElement = elementMatchers.length > 0,
		superMatcher = function( seed, context, xml, results, outermost ) {
			var elem, j, matcher,
				matchedCount = 0,
				i = "0",
				unmatched = seed && [],
				setMatched = [],
				contextBackup = outermostContext,
				// We must always have either seed elements or outermost context
				elems = seed || byElement && Expr.find["TAG"]( "*", outermost ),
				// Use integer dirruns iff this is the outermost matcher
				dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),
				len = elems.length;

			if ( outermost ) {
				outermostContext = context === document || context || outermost;
			}

			// Add elements passing elementMatchers directly to results
			// Support: IE<9, Safari
			// Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id
			for ( ; i !== len && (elem = elems[i]) != null; i++ ) {
				if ( byElement && elem ) {
					j = 0;
					if ( !context && elem.ownerDocument !== document ) {
						setDocument( elem );
						xml = !documentIsHTML;
					}
					while ( (matcher = elementMatchers[j++]) ) {
						if ( matcher( elem, context || document, xml) ) {
							results.push( elem );
							break;
						}
					}
					if ( outermost ) {
						dirruns = dirrunsUnique;
					}
				}

				// Track unmatched elements for set filters
				if ( bySet ) {
					// They will have gone through all possible matchers
					if ( (elem = !matcher && elem) ) {
						matchedCount--;
					}

					// Lengthen the array for every element, matched or not
					if ( seed ) {
						unmatched.push( elem );
					}
				}
			}

			// `i` is now the count of elements visited above, and adding it to `matchedCount`
			// makes the latter nonnegative.
			matchedCount += i;

			// Apply set filters to unmatched elements
			// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`
			// equals `i`), unless we didn't visit _any_ elements in the above loop because we have
			// no element matchers and no seed.
			// Incrementing an initially-string "0" `i` allows `i` to remain a string only in that
			// case, which will result in a "00" `matchedCount` that differs from `i` but is also
			// numerically zero.
			if ( bySet && i !== matchedCount ) {
				j = 0;
				while ( (matcher = setMatchers[j++]) ) {
					matcher( unmatched, setMatched, context, xml );
				}

				if ( seed ) {
					// Reintegrate element matches to eliminate the need for sorting
					if ( matchedCount > 0 ) {
						while ( i-- ) {
							if ( !(unmatched[i] || setMatched[i]) ) {
								setMatched[i] = pop.call( results );
							}
						}
					}

					// Discard index placeholder values to get only actual matches
					setMatched = condense( setMatched );
				}

				// Add matches to results
				push.apply( results, setMatched );

				// Seedless set matches succeeding multiple successful matchers stipulate sorting
				if ( outermost && !seed && setMatched.length > 0 &&
					( matchedCount + setMatchers.length ) > 1 ) {

					Sizzle.uniqueSort( results );
				}
			}

			// Override manipulation of globals by nested matchers
			if ( outermost ) {
				dirruns = dirrunsUnique;
				outermostContext = contextBackup;
			}

			return unmatched;
		};

	return bySet ?
		markFunction( superMatcher ) :
		superMatcher;
}

compile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {
	var i,
		setMatchers = [],
		elementMatchers = [],
		cached = compilerCache[ selector + " " ];

	if ( !cached ) {
		// Generate a function of recursive functions that can be used to check each element
		if ( !match ) {
			match = tokenize( selector );
		}
		i = match.length;
		while ( i-- ) {
			cached = matcherFromTokens( match[i] );
			if ( cached[ expando ] ) {
				setMatchers.push( cached );
			} else {
				elementMatchers.push( cached );
			}
		}

		// Cache the compiled function
		cached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );

		// Save selector and tokenization
		cached.selector = selector;
	}
	return cached;
};

/**
 * A low-level selection function that works with Sizzle's compiled
 *  selector functions
 * @param {String|Function} selector A selector or a pre-compiled
 *  selector function built with Sizzle.compile
 * @param {Element} context
 * @param {Array} [results]
 * @param {Array} [seed] A set of elements to match against
 */
select = Sizzle.select = function( selector, context, results, seed ) {
	var i, tokens, token, type, find,
		compiled = typeof selector === "function" && selector,
		match = !seed && tokenize( (selector = compiled.selector || selector) );

	results = results || [];

	// Try to minimize operations if there is only one selector in the list and no seed
	// (the latter of which guarantees us context)
	if ( match.length === 1 ) {

		// Reduce context if the leading compound selector is an ID
		tokens = match[0] = match[0].slice( 0 );
		if ( tokens.length > 2 && (token = tokens[0]).type === "ID" &&
				context.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[1].type ] ) {

			context = ( Expr.find["ID"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];
			if ( !context ) {
				return results;

			// Precompiled matchers will still verify ancestry, so step up a level
			} else if ( compiled ) {
				context = context.parentNode;
			}

			selector = selector.slice( tokens.shift().value.length );
		}

		// Fetch a seed set for right-to-left matching
		i = matchExpr["needsContext"].test( selector ) ? 0 : tokens.length;
		while ( i-- ) {
			token = tokens[i];

			// Abort if we hit a combinator
			if ( Expr.relative[ (type = token.type) ] ) {
				break;
			}
			if ( (find = Expr.find[ type ]) ) {
				// Search, expanding context for leading sibling combinators
				if ( (seed = find(
					token.matches[0].replace( runescape, funescape ),
					rsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context
				)) ) {

					// If seed is empty or no tokens remain, we can return early
					tokens.splice( i, 1 );
					selector = seed.length && toSelector( tokens );
					if ( !selector ) {
						push.apply( results, seed );
						return results;
					}

					break;
				}
			}
		}
	}

	// Compile and execute a filtering function if one is not provided
	// Provide `match` to avoid retokenization if we modified the selector above
	( compiled || compile( selector, match ) )(
		seed,
		context,
		!documentIsHTML,
		results,
		!context || rsibling.test( selector ) && testContext( context.parentNode ) || context
	);
	return results;
};

// One-time assignments

// Sort stability
support.sortStable = expando.split("").sort( sortOrder ).join("") === expando;

// Support: Chrome 14-35+
// Always assume duplicates if they aren't passed to the comparison function
support.detectDuplicates = !!hasDuplicate;

// Initialize against the default document
setDocument();

// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
// Detached nodes confoundingly follow *each other*
support.sortDetached = assert(function( el ) {
	// Should return 1, but returns 4 (following)
	return el.compareDocumentPosition( document.createElement("fieldset") ) & 1;
});

// Support: IE<8
// Prevent attribute/property "interpolation"
// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
if ( !assert(function( el ) {
	el.innerHTML = "<a href='#'></a>";
	return el.firstChild.getAttribute("href") === "#" ;
}) ) {
	addHandle( "type|href|height|width", function( elem, name, isXML ) {
		if ( !isXML ) {
			return elem.getAttribute( name, name.toLowerCase() === "type" ? 1 : 2 );
		}
	});
}

// Support: IE<9
// Use defaultValue in place of getAttribute("value")
if ( !support.attributes || !assert(function( el ) {
	el.innerHTML = "<input/>";
	el.firstChild.setAttribute( "value", "" );
	return el.firstChild.getAttribute( "value" ) === "";
}) ) {
	addHandle( "value", function( elem, name, isXML ) {
		if ( !isXML && elem.nodeName.toLowerCase() === "input" ) {
			return elem.defaultValue;
		}
	});
}

// Support: IE<9
// Use getAttributeNode to fetch booleans when getAttribute lies
if ( !assert(function( el ) {
	return el.getAttribute("disabled") == null;
}) ) {
	addHandle( booleans, function( elem, name, isXML ) {
		var val;
		if ( !isXML ) {
			return elem[ name ] === true ? name.toLowerCase() :
					(val = elem.getAttributeNode( name )) && val.specified ?
					val.value :
				null;
		}
	});
}

return Sizzle;

})( window );



jQuery.find = Sizzle;
jQuery.expr = Sizzle.selectors;

// Deprecated
jQuery.expr[ ":" ] = jQuery.expr.pseudos;
jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;
jQuery.text = Sizzle.getText;
jQuery.isXMLDoc = Sizzle.isXML;
jQuery.contains = Sizzle.contains;
jQuery.escapeSelector = Sizzle.escape;




var dir = function( elem, dir, until ) {
	var matched = [],
		truncate = until !== undefined;

	while ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {
		if ( elem.nodeType === 1 ) {
			if ( truncate && jQuery( elem ).is( until ) ) {
				break;
			}
			matched.push( elem );
		}
	}
	return matched;
};


var siblings = function( n, elem ) {
	var matched = [];

	for ( ; n; n = n.nextSibling ) {
		if ( n.nodeType === 1 && n !== elem ) {
			matched.push( n );
		}
	}

	return matched;
};


var rneedsContext = jQuery.expr.match.needsContext;

var rsingleTag = ( /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i );



var risSimple = /^.[^:#\[\.,]*$/;

// Implement the identical functionality for filter and not
function winnow( elements, qualifier, not ) {
	if ( jQuery.isFunction( qualifier ) ) {
		return jQuery.grep( elements, function( elem, i ) {
			return !!qualifier.call( elem, i, elem ) !== not;
		} );
	}

	// Single element
	if ( qualifier.nodeType ) {
		return jQuery.grep( elements, function( elem ) {
			return ( elem === qualifier ) !== not;
		} );
	}

	// Arraylike of elements (jQuery, arguments, Array)
	if ( typeof qualifier !== "string" ) {
		return jQuery.grep( elements, function( elem ) {
			return ( indexOf.call( qualifier, elem ) > -1 ) !== not;
		} );
	}

	// Simple selector that can be filtered directly, removing non-Elements
	if ( risSimple.test( qualifier ) ) {
		return jQuery.filter( qualifier, elements, not );
	}

	// Complex selector, compare the two sets, removing non-Elements
	qualifier = jQuery.filter( qualifier, elements );
	return jQuery.grep( elements, function( elem ) {
		return ( indexOf.call( qualifier, elem ) > -1 ) !== not && elem.nodeType === 1;
	} );
}

jQuery.filter = function( expr, elems, not ) {
	var elem = elems[ 0 ];

	if ( not ) {
		expr = ":not(" + expr + ")";
	}

	if ( elems.length === 1 && elem.nodeType === 1 ) {
		return jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];
	}

	return jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {
		return elem.nodeType === 1;
	} ) );
};

jQuery.fn.extend( {
	find: function( selector ) {
		var i, ret,
			len = this.length,
			self = this;

		if ( typeof selector !== "string" ) {
			return this.pushStack( jQuery( selector ).filter( function() {
				for ( i = 0; i < len; i++ ) {
					if ( jQuery.contains( self[ i ], this ) ) {
						return true;
					}
				}
			} ) );
		}

		ret = this.pushStack( [] );

		for ( i = 0; i < len; i++ ) {
			jQuery.find( selector, self[ i ], ret );
		}

		return len > 1 ? jQuery.uniqueSort( ret ) : ret;
	},
	filter: function( selector ) {
		return this.pushStack( winnow( this, selector || [], false ) );
	},
	not: function( selector ) {
		return this.pushStack( winnow( this, selector || [], true ) );
	},
	is: function( selector ) {
		return !!winnow(
			this,

			// If this is a positional/relative selector, check membership in the returned set
			// so $("p:first").is("p:last") won't return true for a doc with two "p".
			typeof selector === "string" && rneedsContext.test( selector ) ?
				jQuery( selector ) :
				selector || [],
			false
		).length;
	}
} );


// Initialize a jQuery object


// A central reference to the root jQuery(document)
var rootjQuery,

	// A simple way to check for HTML strings
	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
	// Strict HTML recognition (#11290: must start with <)
	// Shortcut simple #id case for speed
	rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,

	init = jQuery.fn.init = function( selector, context, root ) {
		var match, elem;

		// HANDLE: $(""), $(null), $(undefined), $(false)
		if ( !selector ) {
			return this;
		}

		// Method init() accepts an alternate rootjQuery
		// so migrate can support jQuery.sub (gh-2101)
		root = root || rootjQuery;

		// Handle HTML strings
		if ( typeof selector === "string" ) {
			if ( selector[ 0 ] === "<" &&
				selector[ selector.length - 1 ] === ">" &&
				selector.length >= 3 ) {

				// Assume that strings that start and end with <> are HTML and skip the regex check
				match = [ null, selector, null ];

			} else {
				match = rquickExpr.exec( selector );
			}

			// Match html or make sure no context is specified for #id
			if ( match && ( match[ 1 ] || !context ) ) {

				// HANDLE: $(html) -> $(array)
				if ( match[ 1 ] ) {
					context = context instanceof jQuery ? context[ 0 ] : context;

					// Option to run scripts is true for back-compat
					// Intentionally let the error be thrown if parseHTML is not present
					jQuery.merge( this, jQuery.parseHTML(
						match[ 1 ],
						context && context.nodeType ? context.ownerDocument || context : document,
						true
					) );

					// HANDLE: $(html, props)
					if ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {
						for ( match in context ) {

							// Properties of context are called as methods if possible
							if ( jQuery.isFunction( this[ match ] ) ) {
								this[ match ]( context[ match ] );

							// ...and otherwise set as attributes
							} else {
								this.attr( match, context[ match ] );
							}
						}
					}

					return this;

				// HANDLE: $(#id)
				} else {
					elem = document.getElementById( match[ 2 ] );

					if ( elem ) {

						// Inject the element directly into the jQuery object
						this[ 0 ] = elem;
						this.length = 1;
					}
					return this;
				}

			// HANDLE: $(expr, $(...))
			} else if ( !context || context.jquery ) {
				return ( context || root ).find( selector );

			// HANDLE: $(expr, context)
			// (which is just equivalent to: $(context).find(expr)
			} else {
				return this.constructor( context ).find( selector );
			}

		// HANDLE: $(DOMElement)
		} else if ( selector.nodeType ) {
			this[ 0 ] = selector;
			this.length = 1;
			return this;

		// HANDLE: $(function)
		// Shortcut for document ready
		} else if ( jQuery.isFunction( selector ) ) {
			return root.ready !== undefined ?
				root.ready( selector ) :

				// Execute immediately if ready is not present
				selector( jQuery );
		}

		return jQuery.makeArray( selector, this );
	};

// Give the init function the jQuery prototype for later instantiation
init.prototype = jQuery.fn;

// Initialize central reference
rootjQuery = jQuery( document );


var rparentsprev = /^(?:parents|prev(?:Until|All))/,

	// Methods guaranteed to produce a unique set when starting from a unique set
	guaranteedUnique = {
		children: true,
		contents: true,
		next: true,
		prev: true
	};

jQuery.fn.extend( {
	has: function( target ) {
		var targets = jQuery( target, this ),
			l = targets.length;

		return this.filter( function() {
			var i = 0;
			for ( ; i < l; i++ ) {
				if ( jQuery.contains( this, targets[ i ] ) ) {
					return true;
				}
			}
		} );
	},

	closest: function( selectors, context ) {
		var cur,
			i = 0,
			l = this.length,
			matched = [],
			targets = typeof selectors !== "string" && jQuery( selectors );

		// Positional selectors never match, since there's no _selection_ context
		if ( !rneedsContext.test( selectors ) ) {
			for ( ; i < l; i++ ) {
				for ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {

					// Always skip document fragments
					if ( cur.nodeType < 11 && ( targets ?
						targets.index( cur ) > -1 :

						// Don't pass non-elements to Sizzle
						cur.nodeType === 1 &&
							jQuery.find.matchesSelector( cur, selectors ) ) ) {

						matched.push( cur );
						break;
					}
				}
			}
		}

		return this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );
	},

	// Determine the position of an element within the set
	index: function( elem ) {

		// No argument, return index in parent
		if ( !elem ) {
			return ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;
		}

		// Index in selector
		if ( typeof elem === "string" ) {
			return indexOf.call( jQuery( elem ), this[ 0 ] );
		}

		// Locate the position of the desired element
		return indexOf.call( this,

			// If it receives a jQuery object, the first element is used
			elem.jquery ? elem[ 0 ] : elem
		);
	},

	add: function( selector, context ) {
		return this.pushStack(
			jQuery.uniqueSort(
				jQuery.merge( this.get(), jQuery( selector, context ) )
			)
		);
	},

	addBack: function( selector ) {
		return this.add( selector == null ?
			this.prevObject : this.prevObject.filter( selector )
		);
	}
} );

function sibling( cur, dir ) {
	while ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}
	return cur;
}

jQuery.each( {
	parent: function( elem ) {
		var parent = elem.parentNode;
		return parent && parent.nodeType !== 11 ? parent : null;
	},
	parents: function( elem ) {
		return dir( elem, "parentNode" );
	},
	parentsUntil: function( elem, i, until ) {
		return dir( elem, "parentNode", until );
	},
	next: function( elem ) {
		return sibling( elem, "nextSibling" );
	},
	prev: function( elem ) {
		return sibling( elem, "previousSibling" );
	},
	nextAll: function( elem ) {
		return dir( elem, "nextSibling" );
	},
	prevAll: function( elem ) {
		return dir( elem, "previousSibling" );
	},
	nextUntil: function( elem, i, until ) {
		return dir( elem, "nextSibling", until );
	},
	prevUntil: function( elem, i, until ) {
		return dir( elem, "previousSibling", until );
	},
	siblings: function( elem ) {
		return siblings( ( elem.parentNode || {} ).firstChild, elem );
	},
	children: function( elem ) {
		return siblings( elem.firstChild );
	},
	contents: function( elem ) {
		return elem.contentDocument || jQuery.merge( [], elem.childNodes );
	}
}, function( name, fn ) {
	jQuery.fn[ name ] = function( until, selector ) {
		var matched = jQuery.map( this, fn, until );

		if ( name.slice( -5 ) !== "Until" ) {
			selector = until;
		}

		if ( selector && typeof selector === "string" ) {
			matched = jQuery.filter( selector, matched );
		}

		if ( this.length > 1 ) {

			// Remove duplicates
			if ( !guaranteedUnique[ name ] ) {
				jQuery.uniqueSort( matched );
			}

			// Reverse order for parents* and prev-derivatives
			if ( rparentsprev.test( name ) ) {
				matched.reverse();
			}
		}

		return this.pushStack( matched );
	};
} );
var rnothtmlwhite = ( /[^\x20\t\r\n\f]+/g );



// Convert String-formatted options into Object-formatted ones
function createOptions( options ) {
	var object = {};
	jQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {
		object[ flag ] = true;
	} );
	return object;
}

/*
 * Create a callback list using the following parameters:
 *
 *	options: an optional list of space-separated options that will change how
 *			the callback list behaves or a more traditional option object
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible options:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */
jQuery.Callbacks = function( options ) {

	// Convert options from String-formatted to Object-formatted if needed
	// (we check in cache first)
	options = typeof options === "string" ?
		createOptions( options ) :
		jQuery.extend( {}, options );

	var // Flag to know if list is currently firing
		firing,

		// Last fire value for non-forgettable lists
		memory,

		// Flag to know if list was already fired
		fired,

		// Flag to prevent firing
		locked,

		// Actual callback list
		list = [],

		// Queue of execution data for repeatable lists
		queue = [],

		// Index of currently firing callback (modified by add/remove as needed)
		firingIndex = -1,

		// Fire callbacks
		fire = function() {

			// Enforce single-firing
			locked = options.once;

			// Execute callbacks for all pending executions,
			// respecting firingIndex overrides and runtime changes
			fired = firing = true;
			for ( ; queue.length; firingIndex = -1 ) {
				memory = queue.shift();
				while ( ++firingIndex < list.length ) {

					// Run callback and check for early termination
					if ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&
						options.stopOnFalse ) {

						// Jump to end and forget the data so .add doesn't re-fire
						firingIndex = list.length;
						memory = false;
					}
				}
			}

			// Forget the data if we're done with it
			if ( !options.memory ) {
				memory = false;
			}

			firing = false;

			// Clean up if we're done firing for good
			if ( locked ) {

				// Keep an empty list if we have data for future add calls
				if ( memory ) {
					list = [];

				// Otherwise, this object is spent
				} else {
					list = "";
				}
			}
		},

		// Actual Callbacks object
		self = {

			// Add a callback or a collection of callbacks to the list
			add: function() {
				if ( list ) {

					// If we have memory from a past run, we should fire after adding
					if ( memory && !firing ) {
						firingIndex = list.length - 1;
						queue.push( memory );
					}

					( function add( args ) {
						jQuery.each( args, function( _, arg ) {
							if ( jQuery.isFunction( arg ) ) {
								if ( !options.unique || !self.has( arg ) ) {
									list.push( arg );
								}
							} else if ( arg && arg.length && jQuery.type( arg ) !== "string" ) {

								// Inspect recursively
								add( arg );
							}
						} );
					} )( arguments );

					if ( memory && !firing ) {
						fire();
					}
				}
				return this;
			},

			// Remove a callback from the list
			remove: function() {
				jQuery.each( arguments, function( _, arg ) {
					var index;
					while ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
						list.splice( index, 1 );

						// Handle firing indexes
						if ( index <= firingIndex ) {
							firingIndex--;
						}
					}
				} );
				return this;
			},

			// Check if a given callback is in the list.
			// If no argument is given, return whether or not list has callbacks attached.
			has: function( fn ) {
				return fn ?
					jQuery.inArray( fn, list ) > -1 :
					list.length > 0;
			},

			// Remove all callbacks from the list
			empty: function() {
				if ( list ) {
					list = [];
				}
				return this;
			},

			// Disable .fire and .add
			// Abort any current/pending executions
			// Clear all callbacks and values
			disable: function() {
				locked = queue = [];
				list = memory = "";
				return this;
			},
			disabled: function() {
				return !list;
			},

			// Disable .fire
			// Also disable .add unless we have memory (since it would have no effect)
			// Abort any pending executions
			lock: function() {
				locked = queue = [];
				if ( !memory && !firing ) {
					list = memory = "";
				}
				return this;
			},
			locked: function() {
				return !!locked;
			},

			// Call all callbacks with the given context and arguments
			fireWith: function( context, args ) {
				if ( !locked ) {
					args = args || [];
					args = [ context, args.slice ? args.slice() : args ];
					queue.push( args );
					if ( !firing ) {
						fire();
					}
				}
				return this;
			},

			// Call all the callbacks with the given arguments
			fire: function() {
				self.fireWith( this, arguments );
				return this;
			},

			// To know if the callbacks have already been called at least once
			fired: function() {
				return !!fired;
			}
		};

	return self;
};


function Identity( v ) {
	return v;
}
function Thrower( ex ) {
	throw ex;
}

function adoptValue( value, resolve, reject ) {
	var method;

	try {

		// Check for promise aspect first to privilege synchronous behavior
		if ( value && jQuery.isFunction( ( method = value.promise ) ) ) {
			method.call( value ).done( resolve ).fail( reject );

		// Other thenables
		} else if ( value && jQuery.isFunction( ( method = value.then ) ) ) {
			method.call( value, resolve, reject );

		// Other non-thenables
		} else {

			// Support: Android 4.0 only
			// Strict mode functions invoked without .call/.apply get global-object context
			resolve.call( undefined, value );
		}

	// For Promises/A+, convert exceptions into rejections
	// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in
	// Deferred#then to conditionally suppress rejection.
	} catch ( value ) {

		// Support: Android 4.0 only
		// Strict mode functions invoked without .call/.apply get global-object context
		reject.call( undefined, value );
	}
}

jQuery.extend( {

	Deferred: function( func ) {
		var tuples = [

				// action, add listener, callbacks,
				// ... .then handlers, argument index, [final state]
				[ "notify", "progress", jQuery.Callbacks( "memory" ),
					jQuery.Callbacks( "memory" ), 2 ],
				[ "resolve", "done", jQuery.Callbacks( "once memory" ),
					jQuery.Callbacks( "once memory" ), 0, "resolved" ],
				[ "reject", "fail", jQuery.Callbacks( "once memory" ),
					jQuery.Callbacks( "once memory" ), 1, "rejected" ]
			],
			state = "pending",
			promise = {
				state: function() {
					return state;
				},
				always: function() {
					deferred.done( arguments ).fail( arguments );
					return this;
				},
				"catch": function( fn ) {
					return promise.then( null, fn );
				},

				// Keep pipe for back-compat
				pipe: function( /* fnDone, fnFail, fnProgress */ ) {
					var fns = arguments;

					return jQuery.Deferred( function( newDefer ) {
						jQuery.each( tuples, function( i, tuple ) {

							// Map tuples (progress, done, fail) to arguments (done, fail, progress)
							var fn = jQuery.isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];

							// deferred.progress(function() { bind to newDefer or newDefer.notify })
							// deferred.done(function() { bind to newDefer or newDefer.resolve })
							// deferred.fail(function() { bind to newDefer or newDefer.reject })
							deferred[ tuple[ 1 ] ]( function() {
								var returned = fn && fn.apply( this, arguments );
								if ( returned && jQuery.isFunction( returned.promise ) ) {
									returned.promise()
										.progress( newDefer.notify )
										.done( newDefer.resolve )
										.fail( newDefer.reject );
								} else {
									newDefer[ tuple[ 0 ] + "With" ](
										this,
										fn ? [ returned ] : arguments
									);
								}
							} );
						} );
						fns = null;
					} ).promise();
				},
				then: function( onFulfilled, onRejected, onProgress ) {
					var maxDepth = 0;
					function resolve( depth, deferred, handler, special ) {
						return function() {
							var that = this,
								args = arguments,
								mightThrow = function() {
									var returned, then;

									// Support: Promises/A+ section 2.3.3.3.3
									// https://promisesaplus.com/#point-59
									// Ignore double-resolution attempts
									if ( depth < maxDepth ) {
										return;
									}

									returned = handler.apply( that, args );

									// Support: Promises/A+ section 2.3.1
									// https://promisesaplus.com/#point-48
									if ( returned === deferred.promise() ) {
										throw new TypeError( "Thenable self-resolution" );
									}

									// Support: Promises/A+ sections 2.3.3.1, 3.5
									// https://promisesaplus.com/#point-54
									// https://promisesaplus.com/#point-75
									// Retrieve `then` only once
									then = returned &&

										// Support: Promises/A+ section 2.3.4
										// https://promisesaplus.com/#point-64
										// Only check objects and functions for thenability
										( typeof returned === "object" ||
											typeof returned === "function" ) &&
										returned.then;

									// Handle a returned thenable
									if ( jQuery.isFunction( then ) ) {

										// Special processors (notify) just wait for resolution
										if ( special ) {
											then.call(
												returned,
												resolve( maxDepth, deferred, Identity, special ),
												resolve( maxDepth, deferred, Thrower, special )
											);

										// Normal processors (resolve) also hook into progress
										} else {

											// ...and disregard older resolution values
											maxDepth++;

											then.call(
												returned,
												resolve( maxDepth, deferred, Identity, special ),
												resolve( maxDepth, deferred, Thrower, special ),
												resolve( maxDepth, deferred, Identity,
													deferred.notifyWith )
											);
										}

									// Handle all other returned values
									} else {

										// Only substitute handlers pass on context
										// and multiple values (non-spec behavior)
										if ( handler !== Identity ) {
											that = undefined;
											args = [ returned ];
										}

										// Process the value(s)
										// Default process is resolve
										( special || deferred.resolveWith )( that, args );
									}
								},

								// Only normal processors (resolve) catch and reject exceptions
								process = special ?
									mightThrow :
									function() {
										try {
											mightThrow();
										} catch ( e ) {

											if ( jQuery.Deferred.exceptionHook ) {
												jQuery.Deferred.exceptionHook( e,
													process.stackTrace );
											}

											// Support: Promises/A+ section 2.3.3.3.4.1
											// https://promisesaplus.com/#point-61
											// Ignore post-resolution exceptions
											if ( depth + 1 >= maxDepth ) {

												// Only substitute handlers pass on context
												// and multiple values (non-spec behavior)
												if ( handler !== Thrower ) {
													that = undefined;
													args = [ e ];
												}

												deferred.rejectWith( that, args );
											}
										}
									};

							// Support: Promises/A+ section 2.3.3.3.1
							// https://promisesaplus.com/#point-57
							// Re-resolve promises immediately to dodge false rejection from
							// subsequent errors
							if ( depth ) {
								process();
							} else {

								// Call an optional hook to record the stack, in case of exception
								// since it's otherwise lost when execution goes async
								if ( jQuery.Deferred.getStackHook ) {
									process.stackTrace = jQuery.Deferred.getStackHook();
								}
								window.setTimeout( process );
							}
						};
					}

					return jQuery.Deferred( function( newDefer ) {

						// progress_handlers.add( ... )
						tuples[ 0 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								jQuery.isFunction( onProgress ) ?
									onProgress :
									Identity,
								newDefer.notifyWith
							)
						);

						// fulfilled_handlers.add( ... )
						tuples[ 1 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								jQuery.isFunction( onFulfilled ) ?
									onFulfilled :
									Identity
							)
						);

						// rejected_handlers.add( ... )
						tuples[ 2 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								jQuery.isFunction( onRejected ) ?
									onRejected :
									Thrower
							)
						);
					} ).promise();
				},

				// Get a promise for this deferred
				// If obj is provided, the promise aspect is added to the object
				promise: function( obj ) {
					return obj != null ? jQuery.extend( obj, promise ) : promise;
				}
			},
			deferred = {};

		// Add list-specific methods
		jQuery.each( tuples, function( i, tuple ) {
			var list = tuple[ 2 ],
				stateString = tuple[ 5 ];

			// promise.progress = list.add
			// promise.done = list.add
			// promise.fail = list.add
			promise[ tuple[ 1 ] ] = list.add;

			// Handle state
			if ( stateString ) {
				list.add(
					function() {

						// state = "resolved" (i.e., fulfilled)
						// state = "rejected"
						state = stateString;
					},

					// rejected_callbacks.disable
					// fulfilled_callbacks.disable
					tuples[ 3 - i ][ 2 ].disable,

					// progress_callbacks.lock
					tuples[ 0 ][ 2 ].lock
				);
			}

			// progress_handlers.fire
			// fulfilled_handlers.fire
			// rejected_handlers.fire
			list.add( tuple[ 3 ].fire );

			// deferred.notify = function() { deferred.notifyWith(...) }
			// deferred.resolve = function() { deferred.resolveWith(...) }
			// deferred.reject = function() { deferred.rejectWith(...) }
			deferred[ tuple[ 0 ] ] = function() {
				deferred[ tuple[ 0 ] + "With" ]( this === deferred ? undefined : this, arguments );
				return this;
			};

			// deferred.notifyWith = list.fireWith
			// deferred.resolveWith = list.fireWith
			// deferred.rejectWith = list.fireWith
			deferred[ tuple[ 0 ] + "With" ] = list.fireWith;
		} );

		// Make the deferred a promise
		promise.promise( deferred );

		// Call given func if any
		if ( func ) {
			func.call( deferred, deferred );
		}

		// All done!
		return deferred;
	},

	// Deferred helper
	when: function( singleValue ) {
		var

			// count of uncompleted subordinates
			remaining = arguments.length,

			// count of unprocessed arguments
			i = remaining,

			// subordinate fulfillment data
			resolveContexts = Array( i ),
			resolveValues = slice.call( arguments ),

			// the master Deferred
			master = jQuery.Deferred(),

			// subordinate callback factory
			updateFunc = function( i ) {
				return function( value ) {
					resolveContexts[ i ] = this;
					resolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;
					if ( !( --remaining ) ) {
						master.resolveWith( resolveContexts, resolveValues );
					}
				};
			};

		// Single- and empty arguments are adopted like Promise.resolve
		if ( remaining <= 1 ) {
			adoptValue( singleValue, master.done( updateFunc( i ) ).resolve, master.reject );

			// Use .then() to unwrap secondary thenables (cf. gh-3000)
			if ( master.state() === "pending" ||
				jQuery.isFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {

				return master.then();
			}
		}

		// Multiple arguments are aggregated like Promise.all array elements
		while ( i-- ) {
			adoptValue( resolveValues[ i ], updateFunc( i ), master.reject );
		}

		return master.promise();
	}
} );


// These usually indicate a programmer mistake during development,
// warn about them ASAP rather than swallowing them by default.
var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;

jQuery.Deferred.exceptionHook = function( error, stack ) {

	// Support: IE 8 - 9 only
	// Console exists when dev tools are open, which can happen at any time
	if ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {
		window.console.warn( "jQuery.Deferred exception: " + error.message, error.stack, stack );
	}
};




jQuery.readyException = function( error ) {
	window.setTimeout( function() {
		throw error;
	} );
};




// The deferred used on DOM ready
var readyList = jQuery.Deferred();

jQuery.fn.ready = function( fn ) {

	readyList
		.then( fn )

		// Wrap jQuery.readyException in a function so that the lookup
		// happens at the time of error handling instead of callback
		// registration.
		.catch( function( error ) {
			jQuery.readyException( error );
		} );

	return this;
};

jQuery.extend( {

	// Is the DOM ready to be used? Set to true once it occurs.
	isReady: false,

	// A counter to track how many items to wait for before
	// the ready event fires. See #6781
	readyWait: 1,

	// Hold (or release) the ready event
	holdReady: function( hold ) {
		if ( hold ) {
			jQuery.readyWait++;
		} else {
			jQuery.ready( true );
		}
	},

	// Handle when the DOM is ready
	ready: function( wait ) {

		// Abort if there are pending holds or we're already ready
		if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
			return;
		}

		// Remember that the DOM is ready
		jQuery.isReady = true;

		// If a normal DOM Ready event fired, decrement, and wait if need be
		if ( wait !== true && --jQuery.readyWait > 0 ) {
			return;
		}

		// If there are functions bound, to execute
		readyList.resolveWith( document, [ jQuery ] );
	}
} );

jQuery.ready.then = readyList.then;

// The ready event handler and self cleanup method
function completed() {
	document.removeEventListener( "DOMContentLoaded", completed );
	window.removeEventListener( "load", completed );
	jQuery.ready();
}

// Catch cases where $(document).ready() is called
// after the browser event has already occurred.
// Support: IE <=9 - 10 only
// Older IE sometimes signals "interactive" too soon
if ( document.readyState === "complete" ||
	( document.readyState !== "loading" && !document.documentElement.doScroll ) ) {

	// Handle it asynchronously to allow scripts the opportunity to delay ready
	window.setTimeout( jQuery.ready );

} else {

	// Use the handy event callback
	document.addEventListener( "DOMContentLoaded", completed );

	// A fallback to window.onload, that will always work
	window.addEventListener( "load", completed );
}




// Multifunctional method to get and set values of a collection
// The value/s can optionally be executed if it's a function
var access = function( elems, fn, key, value, chainable, emptyGet, raw ) {
	var i = 0,
		len = elems.length,
		bulk = key == null;

	// Sets many values
	if ( jQuery.type( key ) === "object" ) {
		chainable = true;
		for ( i in key ) {
			access( elems, fn, i, key[ i ], true, emptyGet, raw );
		}

	// Sets one value
	} else if ( value !== undefined ) {
		chainable = true;

		if ( !jQuery.isFunction( value ) ) {
			raw = true;
		}

		if ( bulk ) {

			// Bulk operations run against the entire set
			if ( raw ) {
				fn.call( elems, value );
				fn = null;

			// ...except when executing function values
			} else {
				bulk = fn;
				fn = function( elem, key, value ) {
					return bulk.call( jQuery( elem ), value );
				};
			}
		}

		if ( fn ) {
			for ( ; i < len; i++ ) {
				fn(
					elems[ i ], key, raw ?
					value :
					value.call( elems[ i ], i, fn( elems[ i ], key ) )
				);
			}
		}
	}

	if ( chainable ) {
		return elems;
	}

	// Gets
	if ( bulk ) {
		return fn.call( elems );
	}

	return len ? fn( elems[ 0 ], key ) : emptyGet;
};
var acceptData = function( owner ) {

	// Accepts only:
	//  - Node
	//    - Node.ELEMENT_NODE
	//    - Node.DOCUMENT_NODE
	//  - Object
	//    - Any
	return owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );
};




function Data() {
	this.expando = jQuery.expando + Data.uid++;
}

Data.uid = 1;

Data.prototype = {

	cache: function( owner ) {

		// Check if the owner object already has a cache
		var value = owner[ this.expando ];

		// If not, create one
		if ( !value ) {
			value = {};

			// We can accept data for non-element nodes in modern browsers,
			// but we should not, see #8335.
			// Always return an empty object.
			if ( acceptData( owner ) ) {

				// If it is a node unlikely to be stringify-ed or looped over
				// use plain assignment
				if ( owner.nodeType ) {
					owner[ this.expando ] = value;

				// Otherwise secure it in a non-enumerable property
				// configurable must be true to allow the property to be
				// deleted when data is removed
				} else {
					Object.defineProperty( owner, this.expando, {
						value: value,
						configurable: true
					} );
				}
			}
		}

		return value;
	},
	set: function( owner, data, value ) {
		var prop,
			cache = this.cache( owner );

		// Handle: [ owner, key, value ] args
		// Always use camelCase key (gh-2257)
		if ( typeof data === "string" ) {
			cache[ jQuery.camelCase( data ) ] = value;

		// Handle: [ owner, { properties } ] args
		} else {

			// Copy the properties one-by-one to the cache object
			for ( prop in data ) {
				cache[ jQuery.camelCase( prop ) ] = data[ prop ];
			}
		}
		return cache;
	},
	get: function( owner, key ) {
		return key === undefined ?
			this.cache( owner ) :

			// Always use camelCase key (gh-2257)
			owner[ this.expando ] && owner[ this.expando ][ jQuery.camelCase( key ) ];
	},
	access: function( owner, key, value ) {

		// In cases where either:
		//
		//   1. No key was specified
		//   2. A string key was specified, but no value provided
		//
		// Take the "read" path and allow the get method to determine
		// which value to return, respectively either:
		//
		//   1. The entire cache object
		//   2. The data stored at the key
		//
		if ( key === undefined ||
				( ( key && typeof key === "string" ) && value === undefined ) ) {

			return this.get( owner, key );
		}

		// When the key is not a string, or both a key and value
		// are specified, set or extend (existing objects) with either:
		//
		//   1. An object of properties
		//   2. A key and value
		//
		this.set( owner, key, value );

		// Since the "set" path can have two possible entry points
		// return the expected data based on which path was taken[*]
		return value !== undefined ? value : key;
	},
	remove: function( owner, key ) {
		var i,
			cache = owner[ this.expando ];

		if ( cache === undefined ) {
			return;
		}

		if ( key !== undefined ) {

			// Support array or space separated string of keys
			if ( jQuery.isArray( key ) ) {

				// If key is an array of keys...
				// We always set camelCase keys, so remove that.
				key = key.map( jQuery.camelCase );
			} else {
				key = jQuery.camelCase( key );

				// If a key with the spaces exists, use it.
				// Otherwise, create an array by matching non-whitespace
				key = key in cache ?
					[ key ] :
					( key.match( rnothtmlwhite ) || [] );
			}

			i = key.length;

			while ( i-- ) {
				delete cache[ key[ i ] ];
			}
		}

		// Remove the expando if there's no more data
		if ( key === undefined || jQuery.isEmptyObject( cache ) ) {

			// Support: Chrome <=35 - 45
			// Webkit & Blink performance suffers when deleting properties
			// from DOM nodes, so set to undefined instead
			// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)
			if ( owner.nodeType ) {
				owner[ this.expando ] = undefined;
			} else {
				delete owner[ this.expando ];
			}
		}
	},
	hasData: function( owner ) {
		var cache = owner[ this.expando ];
		return cache !== undefined && !jQuery.isEmptyObject( cache );
	}
};
var dataPriv = new Data();

var dataUser = new Data();



//	Implementation Summary
//
//	1. Enforce API surface and semantic compatibility with 1.9.x branch
//	2. Improve the module's maintainability by reducing the storage
//		paths to a single mechanism.
//	3. Use the same single mechanism to support "private" and "user" data.
//	4. _Never_ expose "private" data to user code (TODO: Drop _data, _removeData)
//	5. Avoid exposing implementation details on user objects (eg. expando properties)
//	6. Provide a clear path for implementation upgrade to WeakMap in 2014

var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
	rmultiDash = /[A-Z]/g;

function getData( data ) {
	if ( data === "true" ) {
		return true;
	}

	if ( data === "false" ) {
		return false;
	}

	if ( data === "null" ) {
		return null;
	}

	// Only convert to a number if it doesn't change the string
	if ( data === +data + "" ) {
		return +data;
	}

	if ( rbrace.test( data ) ) {
		return JSON.parse( data );
	}

	return data;
}

function dataAttr( elem, key, data ) {
	var name;

	// If nothing was found internally, try to fetch any
	// data from the HTML5 data-* attribute
	if ( data === undefined && elem.nodeType === 1 ) {
		name = "data-" + key.replace( rmultiDash, "-$&" ).toLowerCase();
		data = elem.getAttribute( name );

		if ( typeof data === "string" ) {
			try {
				data = getData( data );
			} catch ( e ) {}

			// Make sure we set the data so it isn't changed later
			dataUser.set( elem, key, data );
		} else {
			data = undefined;
		}
	}
	return data;
}

jQuery.extend( {
	hasData: function( elem ) {
		return dataUser.hasData( elem ) || dataPriv.hasData( elem );
	},

	data: function( elem, name, data ) {
		return dataUser.access( elem, name, data );
	},

	removeData: function( elem, name ) {
		dataUser.remove( elem, name );
	},

	// TODO: Now that all calls to _data and _removeData have been replaced
	// with direct calls to dataPriv methods, these can be deprecated.
	_data: function( elem, name, data ) {
		return dataPriv.access( elem, name, data );
	},

	_removeData: function( elem, name ) {
		dataPriv.remove( elem, name );
	}
} );

jQuery.fn.extend( {
	data: function( key, value ) {
		var i, name, data,
			elem = this[ 0 ],
			attrs = elem && elem.attributes;

		// Gets all values
		if ( key === undefined ) {
			if ( this.length ) {
				data = dataUser.get( elem );

				if ( elem.nodeType === 1 && !dataPriv.get( elem, "hasDataAttrs" ) ) {
					i = attrs.length;
					while ( i-- ) {

						// Support: IE 11 only
						// The attrs elements can be null (#14894)
						if ( attrs[ i ] ) {
							name = attrs[ i ].name;
							if ( name.indexOf( "data-" ) === 0 ) {
								name = jQuery.camelCase( name.slice( 5 ) );
								dataAttr( elem, name, data[ name ] );
							}
						}
					}
					dataPriv.set( elem, "hasDataAttrs", true );
				}
			}

			return data;
		}

		// Sets multiple values
		if ( typeof key === "object" ) {
			return this.each( function() {
				dataUser.set( this, key );
			} );
		}

		return access( this, function( value ) {
			var data;

			// The calling jQuery object (element matches) is not empty
			// (and therefore has an element appears at this[ 0 ]) and the
			// `value` parameter was not undefined. An empty jQuery object
			// will result in `undefined` for elem = this[ 0 ] which will
			// throw an exception if an attempt to read a data cache is made.
			if ( elem && value === undefined ) {

				// Attempt to get data from the cache
				// The key will always be camelCased in Data
				data = dataUser.get( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// Attempt to "discover" the data in
				// HTML5 custom data-* attrs
				data = dataAttr( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// We tried really hard, but the data doesn't exist.
				return;
			}

			// Set the data...
			this.each( function() {

				// We always store the camelCased key
				dataUser.set( this, key, value );
			} );
		}, null, value, arguments.length > 1, null, true );
	},

	removeData: function( key ) {
		return this.each( function() {
			dataUser.remove( this, key );
		} );
	}
} );


jQuery.extend( {
	queue: function( elem, type, data ) {
		var queue;

		if ( elem ) {
			type = ( type || "fx" ) + "queue";
			queue = dataPriv.get( elem, type );

			// Speed up dequeue by getting out quickly if this is just a lookup
			if ( data ) {
				if ( !queue || jQuery.isArray( data ) ) {
					queue = dataPriv.access( elem, type, jQuery.makeArray( data ) );
				} else {
					queue.push( data );
				}
			}
			return queue || [];
		}
	},

	dequeue: function( elem, type ) {
		type = type || "fx";

		var queue = jQuery.queue( elem, type ),
			startLength = queue.length,
			fn = queue.shift(),
			hooks = jQuery._queueHooks( elem, type ),
			next = function() {
				jQuery.dequeue( elem, type );
			};

		// If the fx queue is dequeued, always remove the progress sentinel
		if ( fn === "inprogress" ) {
			fn = queue.shift();
			startLength--;
		}

		if ( fn ) {

			// Add a progress sentinel to prevent the fx queue from being
			// automatically dequeued
			if ( type === "fx" ) {
				queue.unshift( "inprogress" );
			}

			// Clear up the last queue stop function
			delete hooks.stop;
			fn.call( elem, next, hooks );
		}

		if ( !startLength && hooks ) {
			hooks.empty.fire();
		}
	},

	// Not public - generate a queueHooks object, or return the current one
	_queueHooks: function( elem, type ) {
		var key = type + "queueHooks";
		return dataPriv.get( elem, key ) || dataPriv.access( elem, key, {
			empty: jQuery.Callbacks( "once memory" ).add( function() {
				dataPriv.remove( elem, [ type + "queue", key ] );
			} )
		} );
	}
} );

jQuery.fn.extend( {
	queue: function( type, data ) {
		var setter = 2;

		if ( typeof type !== "string" ) {
			data = type;
			type = "fx";
			setter--;
		}

		if ( arguments.length < setter ) {
			return jQuery.queue( this[ 0 ], type );
		}

		return data === undefined ?
			this :
			this.each( function() {
				var queue = jQuery.queue( this, type, data );

				// Ensure a hooks for this queue
				jQuery._queueHooks( this, type );

				if ( type === "fx" && queue[ 0 ] !== "inprogress" ) {
					jQuery.dequeue( this, type );
				}
			} );
	},
	dequeue: function( type ) {
		return this.each( function() {
			jQuery.dequeue( this, type );
		} );
	},
	clearQueue: function( type ) {
		return this.queue( type || "fx", [] );
	},

	// Get a promise resolved when queues of a certain type
	// are emptied (fx is the type by default)
	promise: function( type, obj ) {
		var tmp,
			count = 1,
			defer = jQuery.Deferred(),
			elements = this,
			i = this.length,
			resolve = function() {
				if ( !( --count ) ) {
					defer.resolveWith( elements, [ elements ] );
				}
			};

		if ( typeof type !== "string" ) {
			obj = type;
			type = undefined;
		}
		type = type || "fx";

		while ( i-- ) {
			tmp = dataPriv.get( elements[ i ], type + "queueHooks" );
			if ( tmp && tmp.empty ) {
				count++;
				tmp.empty.add( resolve );
			}
		}
		resolve();
		return defer.promise( obj );
	}
} );
var pnum = ( /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/ ).source;

var rcssNum = new RegExp( "^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i" );


var cssExpand = [ "Top", "Right", "Bottom", "Left" ];

var isHiddenWithinTree = function( elem, el ) {

		// isHiddenWithinTree might be called from jQuery#filter function;
		// in that case, element will be second argument
		elem = el || elem;

		// Inline style trumps all
		return elem.style.display === "none" ||
			elem.style.display === "" &&

			// Otherwise, check computed style
			// Support: Firefox <=43 - 45
			// Disconnected elements can have computed display: none, so first confirm that elem is
			// in the document.
			jQuery.contains( elem.ownerDocument, elem ) &&

			jQuery.css( elem, "display" ) === "none";
	};

var swap = function( elem, options, callback, args ) {
	var ret, name,
		old = {};

	// Remember the old values, and insert the new ones
	for ( name in options ) {
		old[ name ] = elem.style[ name ];
		elem.style[ name ] = options[ name ];
	}

	ret = callback.apply( elem, args || [] );

	// Revert the old values
	for ( name in options ) {
		elem.style[ name ] = old[ name ];
	}

	return ret;
};




function adjustCSS( elem, prop, valueParts, tween ) {
	var adjusted,
		scale = 1,
		maxIterations = 20,
		currentValue = tween ?
			function() {
				return tween.cur();
			} :
			function() {
				return jQuery.css( elem, prop, "" );
			},
		initial = currentValue(),
		unit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? "" : "px" ),

		// Starting value computation is required for potential unit mismatches
		initialInUnit = ( jQuery.cssNumber[ prop ] || unit !== "px" && +initial ) &&
			rcssNum.exec( jQuery.css( elem, prop ) );

	if ( initialInUnit && initialInUnit[ 3 ] !== unit ) {

		// Trust units reported by jQuery.css
		unit = unit || initialInUnit[ 3 ];

		// Make sure we update the tween properties later on
		valueParts = valueParts || [];

		// Iteratively approximate from a nonzero starting point
		initialInUnit = +initial || 1;

		do {

			// If previous iteration zeroed out, double until we get *something*.
			// Use string for doubling so we don't accidentally see scale as unchanged below
			scale = scale || ".5";

			// Adjust and apply
			initialInUnit = initialInUnit / scale;
			jQuery.style( elem, prop, initialInUnit + unit );

		// Update scale, tolerating zero or NaN from tween.cur()
		// Break the loop if scale is unchanged or perfect, or if we've just had enough.
		} while (
			scale !== ( scale = currentValue() / initial ) && scale !== 1 && --maxIterations
		);
	}

	if ( valueParts ) {
		initialInUnit = +initialInUnit || +initial || 0;

		// Apply relative offset (+=/-=) if specified
		adjusted = valueParts[ 1 ] ?
			initialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :
			+valueParts[ 2 ];
		if ( tween ) {
			tween.unit = unit;
			tween.start = initialInUnit;
			tween.end = adjusted;
		}
	}
	return adjusted;
}


var defaultDisplayMap = {};

function getDefaultDisplay( elem ) {
	var temp,
		doc = elem.ownerDocument,
		nodeName = elem.nodeName,
		display = defaultDisplayMap[ nodeName ];

	if ( display ) {
		return display;
	}

	temp = doc.body.appendChild( doc.createElement( nodeName ) );
	display = jQuery.css( temp, "display" );

	temp.parentNode.removeChild( temp );

	if ( display === "none" ) {
		display = "block";
	}
	defaultDisplayMap[ nodeName ] = display;

	return display;
}

function showHide( elements, show ) {
	var display, elem,
		values = [],
		index = 0,
		length = elements.length;

	// Determine new display value for elements that need to change
	for ( ; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}

		display = elem.style.display;
		if ( show ) {

			// Since we force visibility upon cascade-hidden elements, an immediate (and slow)
			// check is required in this first loop unless we have a nonempty display value (either
			// inline or about-to-be-restored)
			if ( display === "none" ) {
				values[ index ] = dataPriv.get( elem, "display" ) || null;
				if ( !values[ index ] ) {
					elem.style.display = "";
				}
			}
			if ( elem.style.display === "" && isHiddenWithinTree( elem ) ) {
				values[ index ] = getDefaultDisplay( elem );
			}
		} else {
			if ( display !== "none" ) {
				values[ index ] = "none";

				// Remember what we're overwriting
				dataPriv.set( elem, "display", display );
			}
		}
	}

	// Set the display of the elements in a second loop to avoid constant reflow
	for ( index = 0; index < length; index++ ) {
		if ( values[ index ] != null ) {
			elements[ index ].style.display = values[ index ];
		}
	}

	return elements;
}

jQuery.fn.extend( {
	show: function() {
		return showHide( this, true );
	},
	hide: function() {
		return showHide( this );
	},
	toggle: function( state ) {
		if ( typeof state === "boolean" ) {
			return state ? this.show() : this.hide();
		}

		return this.each( function() {
			if ( isHiddenWithinTree( this ) ) {
				jQuery( this ).show();
			} else {
				jQuery( this ).hide();
			}
		} );
	}
} );
var rcheckableType = ( /^(?:checkbox|radio)$/i );

var rtagName = ( /<([a-z][^\/\0>\x20\t\r\n\f]+)/i );

var rscriptType = ( /^$|\/(?:java|ecma)script/i );



// We have to close these tags to support XHTML (#13200)
var wrapMap = {

	// Support: IE <=9 only
	option: [ 1, "<select multiple='multiple'>", "</select>" ],

	// XHTML parsers do not magically insert elements in the
	// same way that tag soup parsers do. So we cannot shorten
	// this by omitting <tbody> or other required elements.
	thead: [ 1, "<table>", "</table>" ],
	col: [ 2, "<table><colgroup>", "</colgroup></table>" ],
	tr: [ 2, "<table><tbody>", "</tbody></table>" ],
	td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],

	_default: [ 0, "", "" ]
};

// Support: IE <=9 only
wrapMap.optgroup = wrapMap.option;

wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
wrapMap.th = wrapMap.td;


function getAll( context, tag ) {

	// Support: IE <=9 - 11 only
	// Use typeof to avoid zero-argument method invocation on host objects (#15151)
	var ret;

	if ( typeof context.getElementsByTagName !== "undefined" ) {
		ret = context.getElementsByTagName( tag || "*" );

	} else if ( typeof context.querySelectorAll !== "undefined" ) {
		ret = context.querySelectorAll( tag || "*" );

	} else {
		ret = [];
	}

	if ( tag === undefined || tag && jQuery.nodeName( context, tag ) ) {
		return jQuery.merge( [ context ], ret );
	}

	return ret;
}


// Mark scripts as having already been evaluated
function setGlobalEval( elems, refElements ) {
	var i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		dataPriv.set(
			elems[ i ],
			"globalEval",
			!refElements || dataPriv.get( refElements[ i ], "globalEval" )
		);
	}
}


var rhtml = /<|&#?\w+;/;

function buildFragment( elems, context, scripts, selection, ignored ) {
	var elem, tmp, tag, wrap, contains, j,
		fragment = context.createDocumentFragment(),
		nodes = [],
		i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		elem = elems[ i ];

		if ( elem || elem === 0 ) {

			// Add nodes directly
			if ( jQuery.type( elem ) === "object" ) {

				// Support: Android <=4.0 only, PhantomJS 1 only
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );

			// Convert non-html into a text node
			} else if ( !rhtml.test( elem ) ) {
				nodes.push( context.createTextNode( elem ) );

			// Convert html into DOM nodes
			} else {
				tmp = tmp || fragment.appendChild( context.createElement( "div" ) );

				// Deserialize a standard representation
				tag = ( rtagName.exec( elem ) || [ "", "" ] )[ 1 ].toLowerCase();
				wrap = wrapMap[ tag ] || wrapMap._default;
				tmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];

				// Descend through wrappers to the right content
				j = wrap[ 0 ];
				while ( j-- ) {
					tmp = tmp.lastChild;
				}

				// Support: Android <=4.0 only, PhantomJS 1 only
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, tmp.childNodes );

				// Remember the top-level container
				tmp = fragment.firstChild;

				// Ensure the created nodes are orphaned (#12392)
				tmp.textContent = "";
			}
		}
	}

	// Remove wrapper from fragment
	fragment.textContent = "";

	i = 0;
	while ( ( elem = nodes[ i++ ] ) ) {

		// Skip elements already in the context collection (trac-4087)
		if ( selection && jQuery.inArray( elem, selection ) > -1 ) {
			if ( ignored ) {
				ignored.push( elem );
			}
			continue;
		}

		contains = jQuery.contains( elem.ownerDocument, elem );

		// Append to fragment
		tmp = getAll( fragment.appendChild( elem ), "script" );

		// Preserve script evaluation history
		if ( contains ) {
			setGlobalEval( tmp );
		}

		// Capture executables
		if ( scripts ) {
			j = 0;
			while ( ( elem = tmp[ j++ ] ) ) {
				if ( rscriptType.test( elem.type || "" ) ) {
					scripts.push( elem );
				}
			}
		}
	}

	return fragment;
}


( function() {
	var fragment = document.createDocumentFragment(),
		div = fragment.appendChild( document.createElement( "div" ) ),
		input = document.createElement( "input" );

	// Support: Android 4.0 - 4.3 only
	// Check state lost if the name is set (#11217)
	// Support: Windows Web Apps (WWA)
	// `name` and `type` must use .setAttribute for WWA (#14901)
	input.setAttribute( "type", "radio" );
	input.setAttribute( "checked", "checked" );
	input.setAttribute( "name", "t" );

	div.appendChild( input );

	// Support: Android <=4.1 only
	// Older WebKit doesn't clone checked state correctly in fragments
	support.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;

	// Support: IE <=11 only
	// Make sure textarea (and checkbox) defaultValue is properly cloned
	div.innerHTML = "<textarea>x</textarea>";
	support.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;
} )();
var documentElement = document.documentElement;



var
	rkeyEvent = /^key/,
	rmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
	rtypenamespace = /^([^.]*)(?:\.(.+)|)/;

function returnTrue() {
	return true;
}

function returnFalse() {
	return false;
}

// Support: IE <=9 only
// See #13393 for more info
function safeActiveElement() {
	try {
		return document.activeElement;
	} catch ( err ) { }
}

function on( elem, types, selector, data, fn, one ) {
	var origFn, type;

	// Types can be a map of types/handlers
	if ( typeof types === "object" ) {

		// ( types-Object, selector, data )
		if ( typeof selector !== "string" ) {

			// ( types-Object, data )
			data = data || selector;
			selector = undefined;
		}
		for ( type in types ) {
			on( elem, type, selector, data, types[ type ], one );
		}
		return elem;
	}

	if ( data == null && fn == null ) {

		// ( types, fn )
		fn = selector;
		data = selector = undefined;
	} else if ( fn == null ) {
		if ( typeof selector === "string" ) {

			// ( types, selector, fn )
			fn = data;
			data = undefined;
		} else {

			// ( types, data, fn )
			fn = data;
			data = selector;
			selector = undefined;
		}
	}
	if ( fn === false ) {
		fn = returnFalse;
	} else if ( !fn ) {
		return elem;
	}

	if ( one === 1 ) {
		origFn = fn;
		fn = function( event ) {

			// Can use an empty set, since event contains the info
			jQuery().off( event );
			return origFn.apply( this, arguments );
		};

		// Use same guid so caller can remove using origFn
		fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
	}
	return elem.each( function() {
		jQuery.event.add( this, types, fn, data, selector );
	} );
}

/*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */
jQuery.event = {

	global: {},

	add: function( elem, types, handler, data, selector ) {

		var handleObjIn, eventHandle, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.get( elem );

		// Don't attach events to noData or text/comment nodes (but allow plain objects)
		if ( !elemData ) {
			return;
		}

		// Caller can pass in an object of custom data in lieu of the handler
		if ( handler.handler ) {
			handleObjIn = handler;
			handler = handleObjIn.handler;
			selector = handleObjIn.selector;
		}

		// Ensure that invalid selectors throw exceptions at attach time
		// Evaluate against documentElement in case elem is a non-element node (e.g., document)
		if ( selector ) {
			jQuery.find.matchesSelector( documentElement, selector );
		}

		// Make sure that the handler has a unique ID, used to find/remove it later
		if ( !handler.guid ) {
			handler.guid = jQuery.guid++;
		}

		// Init the element's event structure and main handler, if this is the first
		if ( !( events = elemData.events ) ) {
			events = elemData.events = {};
		}
		if ( !( eventHandle = elemData.handle ) ) {
			eventHandle = elemData.handle = function( e ) {

				// Discard the second event of a jQuery.event.trigger() and
				// when an event is called after a page has unloaded
				return typeof jQuery !== "undefined" && jQuery.event.triggered !== e.type ?
					jQuery.event.dispatch.apply( elem, arguments ) : undefined;
			};
		}

		// Handle multiple events separated by a space
		types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// There *must* be a type, no attaching namespace-only handlers
			if ( !type ) {
				continue;
			}

			// If event changes its type, use the special event handlers for the changed type
			special = jQuery.event.special[ type ] || {};

			// If selector defined, determine special event api type, otherwise given type
			type = ( selector ? special.delegateType : special.bindType ) || type;

			// Update special based on newly reset type
			special = jQuery.event.special[ type ] || {};

			// handleObj is passed to all event handlers
			handleObj = jQuery.extend( {
				type: type,
				origType: origType,
				data: data,
				handler: handler,
				guid: handler.guid,
				selector: selector,
				needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
				namespace: namespaces.join( "." )
			}, handleObjIn );

			// Init the event handler queue if we're the first
			if ( !( handlers = events[ type ] ) ) {
				handlers = events[ type ] = [];
				handlers.delegateCount = 0;

				// Only use addEventListener if the special events handler returns false
				if ( !special.setup ||
					special.setup.call( elem, data, namespaces, eventHandle ) === false ) {

					if ( elem.addEventListener ) {
						elem.addEventListener( type, eventHandle );
					}
				}
			}

			if ( special.add ) {
				special.add.call( elem, handleObj );

				if ( !handleObj.handler.guid ) {
					handleObj.handler.guid = handler.guid;
				}
			}

			// Add to the element's handler list, delegates in front
			if ( selector ) {
				handlers.splice( handlers.delegateCount++, 0, handleObj );
			} else {
				handlers.push( handleObj );
			}

			// Keep track of which events have ever been used, for event optimization
			jQuery.event.global[ type ] = true;
		}

	},

	// Detach an event or set of events from an element
	remove: function( elem, types, handler, selector, mappedTypes ) {

		var j, origCount, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.hasData( elem ) && dataPriv.get( elem );

		if ( !elemData || !( events = elemData.events ) ) {
			return;
		}

		// Once for each type.namespace in types; type may be omitted
		types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// Unbind all events (on this namespace, if provided) for the element
			if ( !type ) {
				for ( type in events ) {
					jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
				}
				continue;
			}

			special = jQuery.event.special[ type ] || {};
			type = ( selector ? special.delegateType : special.bindType ) || type;
			handlers = events[ type ] || [];
			tmp = tmp[ 2 ] &&
				new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" );

			// Remove matching events
			origCount = j = handlers.length;
			while ( j-- ) {
				handleObj = handlers[ j ];

				if ( ( mappedTypes || origType === handleObj.origType ) &&
					( !handler || handler.guid === handleObj.guid ) &&
					( !tmp || tmp.test( handleObj.namespace ) ) &&
					( !selector || selector === handleObj.selector ||
						selector === "**" && handleObj.selector ) ) {
					handlers.splice( j, 1 );

					if ( handleObj.selector ) {
						handlers.delegateCount--;
					}
					if ( special.remove ) {
						special.remove.call( elem, handleObj );
					}
				}
			}

			// Remove generic event handler if we removed something and no more handlers exist
			// (avoids potential for endless recursion during removal of special event handlers)
			if ( origCount && !handlers.length ) {
				if ( !special.teardown ||
					special.teardown.call( elem, namespaces, elemData.handle ) === false ) {

					jQuery.removeEvent( elem, type, elemData.handle );
				}

				delete events[ type ];
			}
		}

		// Remove data and the expando if it's no longer used
		if ( jQuery.isEmptyObject( events ) ) {
			dataPriv.remove( elem, "handle events" );
		}
	},

	dispatch: function( nativeEvent ) {

		// Make a writable jQuery.Event from the native event object
		var event = jQuery.event.fix( nativeEvent );

		var i, j, ret, matched, handleObj, handlerQueue,
			args = new Array( arguments.length ),
			handlers = ( dataPriv.get( this, "events" ) || {} )[ event.type ] || [],
			special = jQuery.event.special[ event.type ] || {};

		// Use the fix-ed jQuery.Event rather than the (read-only) native event
		args[ 0 ] = event;

		for ( i = 1; i < arguments.length; i++ ) {
			args[ i ] = arguments[ i ];
		}

		event.delegateTarget = this;

		// Call the preDispatch hook for the mapped type, and let it bail if desired
		if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
			return;
		}

		// Determine handlers
		handlerQueue = jQuery.event.handlers.call( this, event, handlers );

		// Run delegates first; they may want to stop propagation beneath us
		i = 0;
		while ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {
			event.currentTarget = matched.elem;

			j = 0;
			while ( ( handleObj = matched.handlers[ j++ ] ) &&
				!event.isImmediatePropagationStopped() ) {

				// Triggered event must either 1) have no namespace, or 2) have namespace(s)
				// a subset or equal to those in the bound event (both can have no namespace).
				if ( !event.rnamespace || event.rnamespace.test( handleObj.namespace ) ) {

					event.handleObj = handleObj;
					event.data = handleObj.data;

					ret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||
						handleObj.handler ).apply( matched.elem, args );

					if ( ret !== undefined ) {
						if ( ( event.result = ret ) === false ) {
							event.preventDefault();
							event.stopPropagation();
						}
					}
				}
			}
		}

		// Call the postDispatch hook for the mapped type
		if ( special.postDispatch ) {
			special.postDispatch.call( this, event );
		}

		return event.result;
	},

	handlers: function( event, handlers ) {
		var i, handleObj, sel, matchedHandlers, matchedSelectors,
			handlerQueue = [],
			delegateCount = handlers.delegateCount,
			cur = event.target;

		// Find delegate handlers
		if ( delegateCount &&

			// Support: IE <=9
			// Black-hole SVG <use> instance trees (trac-13180)
			cur.nodeType &&

			// Support: Firefox <=42
			// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)
			// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click
			// Support: IE 11 only
			// ...but not arrow key "clicks" of radio inputs, which can have `button` -1 (gh-2343)
			!( event.type === "click" && event.button >= 1 ) ) {

			for ( ; cur !== this; cur = cur.parentNode || this ) {

				// Don't check non-elements (#13208)
				// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
				if ( cur.nodeType === 1 && !( event.type === "click" && cur.disabled === true ) ) {
					matchedHandlers = [];
					matchedSelectors = {};
					for ( i = 0; i < delegateCount; i++ ) {
						handleObj = handlers[ i ];

						// Don't conflict with Object.prototype properties (#13203)
						sel = handleObj.selector + " ";

						if ( matchedSelectors[ sel ] === undefined ) {
							matchedSelectors[ sel ] = handleObj.needsContext ?
								jQuery( sel, this ).index( cur ) > -1 :
								jQuery.find( sel, this, null, [ cur ] ).length;
						}
						if ( matchedSelectors[ sel ] ) {
							matchedHandlers.push( handleObj );
						}
					}
					if ( matchedHandlers.length ) {
						handlerQueue.push( { elem: cur, handlers: matchedHandlers } );
					}
				}
			}
		}

		// Add the remaining (directly-bound) handlers
		cur = this;
		if ( delegateCount < handlers.length ) {
			handlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );
		}

		return handlerQueue;
	},

	addProp: function( name, hook ) {
		Object.defineProperty( jQuery.Event.prototype, name, {
			enumerable: true,
			configurable: true,

			get: jQuery.isFunction( hook ) ?
				function() {
					if ( this.originalEvent ) {
							return hook( this.originalEvent );
					}
				} :
				function() {
					if ( this.originalEvent ) {
							return this.originalEvent[ name ];
					}
				},

			set: function( value ) {
				Object.defineProperty( this, name, {
					enumerable: true,
					configurable: true,
					writable: true,
					value: value
				} );
			}
		} );
	},

	fix: function( originalEvent ) {
		return originalEvent[ jQuery.expando ] ?
			originalEvent :
			new jQuery.Event( originalEvent );
	},

	special: {
		load: {

			// Prevent triggered image.load events from bubbling to window.load
			noBubble: true
		},
		focus: {

			// Fire native event if possible so blur/focus sequence is correct
			trigger: function() {
				if ( this !== safeActiveElement() && this.focus ) {
					this.focus();
					return false;
				}
			},
			delegateType: "focusin"
		},
		blur: {
			trigger: function() {
				if ( this === safeActiveElement() && this.blur ) {
					this.blur();
					return false;
				}
			},
			delegateType: "focusout"
		},
		click: {

			// For checkbox, fire native event so checked state will be right
			trigger: function() {
				if ( this.type === "checkbox" && this.click && jQuery.nodeName( this, "input" ) ) {
					this.click();
					return false;
				}
			},

			// For cross-browser consistency, don't fire native .click() on links
			_default: function( event ) {
				return jQuery.nodeName( event.target, "a" );
			}
		},

		beforeunload: {
			postDispatch: function( event ) {

				// Support: Firefox 20+
				// Firefox doesn't alert if the returnValue field is not set.
				if ( event.result !== undefined && event.originalEvent ) {
					event.originalEvent.returnValue = event.result;
				}
			}
		}
	}
};

jQuery.removeEvent = function( elem, type, handle ) {

	// This "if" is needed for plain objects
	if ( elem.removeEventListener ) {
		elem.removeEventListener( type, handle );
	}
};

jQuery.Event = function( src, props ) {

	// Allow instantiation without the 'new' keyword
	if ( !( this instanceof jQuery.Event ) ) {
		return new jQuery.Event( src, props );
	}

	// Event object
	if ( src && src.type ) {
		this.originalEvent = src;
		this.type = src.type;

		// Events bubbling up the document may have been marked as prevented
		// by a handler lower down the tree; reflect the correct value.
		this.isDefaultPrevented = src.defaultPrevented ||
				src.defaultPrevented === undefined &&

				// Support: Android <=2.3 only
				src.returnValue === false ?
			returnTrue :
			returnFalse;

		// Create target properties
		// Support: Safari <=6 - 7 only
		// Target should not be a text node (#504, #13143)
		this.target = ( src.target && src.target.nodeType === 3 ) ?
			src.target.parentNode :
			src.target;

		this.currentTarget = src.currentTarget;
		this.relatedTarget = src.relatedTarget;

	// Event type
	} else {
		this.type = src;
	}

	// Put explicitly provided properties onto the event object
	if ( props ) {
		jQuery.extend( this, props );
	}

	// Create a timestamp if incoming event doesn't have one
	this.timeStamp = src && src.timeStamp || jQuery.now();

	// Mark it as fixed
	this[ jQuery.expando ] = true;
};

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
jQuery.Event.prototype = {
	constructor: jQuery.Event,
	isDefaultPrevented: returnFalse,
	isPropagationStopped: returnFalse,
	isImmediatePropagationStopped: returnFalse,
	isSimulated: false,

	preventDefault: function() {
		var e = this.originalEvent;

		this.isDefaultPrevented = returnTrue;

		if ( e && !this.isSimulated ) {
			e.preventDefault();
		}
	},
	stopPropagation: function() {
		var e = this.originalEvent;

		this.isPropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopPropagation();
		}
	},
	stopImmediatePropagation: function() {
		var e = this.originalEvent;

		this.isImmediatePropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopImmediatePropagation();
		}

		this.stopPropagation();
	}
};

// Includes all common event props including KeyEvent and MouseEvent specific props
jQuery.each( {
	altKey: true,
	bubbles: true,
	cancelable: true,
	changedTouches: true,
	ctrlKey: true,
	detail: true,
	eventPhase: true,
	metaKey: true,
	pageX: true,
	pageY: true,
	shiftKey: true,
	view: true,
	"char": true,
	charCode: true,
	key: true,
	keyCode: true,
	button: true,
	buttons: true,
	clientX: true,
	clientY: true,
	offsetX: true,
	offsetY: true,
	pointerId: true,
	pointerType: true,
	screenX: true,
	screenY: true,
	targetTouches: true,
	toElement: true,
	touches: true,

	which: function( event ) {
		var button = event.button;

		// Add which for key events
		if ( event.which == null && rkeyEvent.test( event.type ) ) {
			return event.charCode != null ? event.charCode : event.keyCode;
		}

		// Add which for click: 1 === left; 2 === middle; 3 === right
		if ( !event.which && button !== undefined && rmouseEvent.test( event.type ) ) {
			if ( button & 1 ) {
				return 1;
			}

			if ( button & 2 ) {
				return 3;
			}

			if ( button & 4 ) {
				return 2;
			}

			return 0;
		}

		return event.which;
	}
}, jQuery.event.addProp );

// Create mouseenter/leave events using mouseover/out and event-time checks
// so that event delegation works in jQuery.
// Do the same for pointerenter/pointerleave and pointerover/pointerout
//
// Support: Safari 7 only
// Safari sends mouseenter too often; see:
// https://bugs.chromium.org/p/chromium/issues/detail?id=470258
// for the description of the bug (it existed in older Chrome versions as well).
jQuery.each( {
	mouseenter: "mouseover",
	mouseleave: "mouseout",
	pointerenter: "pointerover",
	pointerleave: "pointerout"
}, function( orig, fix ) {
	jQuery.event.special[ orig ] = {
		delegateType: fix,
		bindType: fix,

		handle: function( event ) {
			var ret,
				target = this,
				related = event.relatedTarget,
				handleObj = event.handleObj;

			// For mouseenter/leave call the handler if related is outside the target.
			// NB: No relatedTarget if the mouse left/entered the browser window
			if ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {
				event.type = handleObj.origType;
				ret = handleObj.handler.apply( this, arguments );
				event.type = fix;
			}
			return ret;
		}
	};
} );

jQuery.fn.extend( {

	on: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn );
	},
	one: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn, 1 );
	},
	off: function( types, selector, fn ) {
		var handleObj, type;
		if ( types && types.preventDefault && types.handleObj ) {

			// ( event )  dispatched jQuery.Event
			handleObj = types.handleObj;
			jQuery( types.delegateTarget ).off(
				handleObj.namespace ?
					handleObj.origType + "." + handleObj.namespace :
					handleObj.origType,
				handleObj.selector,
				handleObj.handler
			);
			return this;
		}
		if ( typeof types === "object" ) {

			// ( types-object [, selector] )
			for ( type in types ) {
				this.off( type, selector, types[ type ] );
			}
			return this;
		}
		if ( selector === false || typeof selector === "function" ) {

			// ( types [, fn] )
			fn = selector;
			selector = undefined;
		}
		if ( fn === false ) {
			fn = returnFalse;
		}
		return this.each( function() {
			jQuery.event.remove( this, types, fn, selector );
		} );
	}
} );


var

	/* eslint-disable max-len */

	// See https://github.com/eslint/eslint/issues/3229
	rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,

	/* eslint-enable */

	// Support: IE <=10 - 11, Edge 12 - 13
	// In IE/Edge using regex groups here causes severe slowdowns.
	// See https://connect.microsoft.com/IE/feedback/details/1736512/
	rnoInnerhtml = /<script|<style|<link/i,

	// checked="checked" or checked
	rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
	rscriptTypeMasked = /^true\/(.*)/,
	rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;

function manipulationTarget( elem, content ) {
	if ( jQuery.nodeName( elem, "table" ) &&
		jQuery.nodeName( content.nodeType !== 11 ? content : content.firstChild, "tr" ) ) {

		return elem.getElementsByTagName( "tbody" )[ 0 ] || elem;
	}

	return elem;
}

// Replace/restore the type attribute of script elements for safe DOM manipulation
function disableScript( elem ) {
	elem.type = ( elem.getAttribute( "type" ) !== null ) + "/" + elem.type;
	return elem;
}
function restoreScript( elem ) {
	var match = rscriptTypeMasked.exec( elem.type );

	if ( match ) {
		elem.type = match[ 1 ];
	} else {
		elem.removeAttribute( "type" );
	}

	return elem;
}

function cloneCopyEvent( src, dest ) {
	var i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;

	if ( dest.nodeType !== 1 ) {
		return;
	}

	// 1. Copy private data: events, handlers, etc.
	if ( dataPriv.hasData( src ) ) {
		pdataOld = dataPriv.access( src );
		pdataCur = dataPriv.set( dest, pdataOld );
		events = pdataOld.events;

		if ( events ) {
			delete pdataCur.handle;
			pdataCur.events = {};

			for ( type in events ) {
				for ( i = 0, l = events[ type ].length; i < l; i++ ) {
					jQuery.event.add( dest, type, events[ type ][ i ] );
				}
			}
		}
	}

	// 2. Copy user data
	if ( dataUser.hasData( src ) ) {
		udataOld = dataUser.access( src );
		udataCur = jQuery.extend( {}, udataOld );

		dataUser.set( dest, udataCur );
	}
}

// Fix IE bugs, see support tests
function fixInput( src, dest ) {
	var nodeName = dest.nodeName.toLowerCase();

	// Fails to persist the checked state of a cloned checkbox or radio button.
	if ( nodeName === "input" && rcheckableType.test( src.type ) ) {
		dest.checked = src.checked;

	// Fails to return the selected option to the default selected state when cloning options
	} else if ( nodeName === "input" || nodeName === "textarea" ) {
		dest.defaultValue = src.defaultValue;
	}
}

function domManip( collection, args, callback, ignored ) {

	// Flatten any nested arrays
	args = concat.apply( [], args );

	var fragment, first, scripts, hasScripts, node, doc,
		i = 0,
		l = collection.length,
		iNoClone = l - 1,
		value = args[ 0 ],
		isFunction = jQuery.isFunction( value );

	// We can't cloneNode fragments that contain checked, in WebKit
	if ( isFunction ||
			( l > 1 && typeof value === "string" &&
				!support.checkClone && rchecked.test( value ) ) ) {
		return collection.each( function( index ) {
			var self = collection.eq( index );
			if ( isFunction ) {
				args[ 0 ] = value.call( this, index, self.html() );
			}
			domManip( self, args, callback, ignored );
		} );
	}

	if ( l ) {
		fragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );
		first = fragment.firstChild;

		if ( fragment.childNodes.length === 1 ) {
			fragment = first;
		}

		// Require either new content or an interest in ignored elements to invoke the callback
		if ( first || ignored ) {
			scripts = jQuery.map( getAll( fragment, "script" ), disableScript );
			hasScripts = scripts.length;

			// Use the original fragment for the last item
			// instead of the first because it can end up
			// being emptied incorrectly in certain situations (#8070).
			for ( ; i < l; i++ ) {
				node = fragment;

				if ( i !== iNoClone ) {
					node = jQuery.clone( node, true, true );

					// Keep references to cloned scripts for later restoration
					if ( hasScripts ) {

						// Support: Android <=4.0 only, PhantomJS 1 only
						// push.apply(_, arraylike) throws on ancient WebKit
						jQuery.merge( scripts, getAll( node, "script" ) );
					}
				}

				callback.call( collection[ i ], node, i );
			}

			if ( hasScripts ) {
				doc = scripts[ scripts.length - 1 ].ownerDocument;

				// Reenable scripts
				jQuery.map( scripts, restoreScript );

				// Evaluate executable scripts on first document insertion
				for ( i = 0; i < hasScripts; i++ ) {
					node = scripts[ i ];
					if ( rscriptType.test( node.type || "" ) &&
						!dataPriv.access( node, "globalEval" ) &&
						jQuery.contains( doc, node ) ) {

						if ( node.src ) {

							// Optional AJAX dependency, but won't run scripts if not present
							if ( jQuery._evalUrl ) {
								jQuery._evalUrl( node.src );
							}
						} else {
							DOMEval( node.textContent.replace( rcleanScript, "" ), doc );
						}
					}
				}
			}
		}
	}

	return collection;
}

function remove( elem, selector, keepData ) {
	var node,
		nodes = selector ? jQuery.filter( selector, elem ) : elem,
		i = 0;

	for ( ; ( node = nodes[ i ] ) != null; i++ ) {
		if ( !keepData && node.nodeType === 1 ) {
			jQuery.cleanData( getAll( node ) );
		}

		if ( node.parentNode ) {
			if ( keepData && jQuery.contains( node.ownerDocument, node ) ) {
				setGlobalEval( getAll( node, "script" ) );
			}
			node.parentNode.removeChild( node );
		}
	}

	return elem;
}

jQuery.extend( {
	htmlPrefilter: function( html ) {
		return html.replace( rxhtmlTag, "<$1></$2>" );
	},

	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
		var i, l, srcElements, destElements,
			clone = elem.cloneNode( true ),
			inPage = jQuery.contains( elem.ownerDocument, elem );

		// Fix IE cloning issues
		if ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&
				!jQuery.isXMLDoc( elem ) ) {

			// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2
			destElements = getAll( clone );
			srcElements = getAll( elem );

			for ( i = 0, l = srcElements.length; i < l; i++ ) {
				fixInput( srcElements[ i ], destElements[ i ] );
			}
		}

		// Copy the events from the original to the clone
		if ( dataAndEvents ) {
			if ( deepDataAndEvents ) {
				srcElements = srcElements || getAll( elem );
				destElements = destElements || getAll( clone );

				for ( i = 0, l = srcElements.length; i < l; i++ ) {
					cloneCopyEvent( srcElements[ i ], destElements[ i ] );
				}
			} else {
				cloneCopyEvent( elem, clone );
			}
		}

		// Preserve script evaluation history
		destElements = getAll( clone, "script" );
		if ( destElements.length > 0 ) {
			setGlobalEval( destElements, !inPage && getAll( elem, "script" ) );
		}

		// Return the cloned set
		return clone;
	},

	cleanData: function( elems ) {
		var data, elem, type,
			special = jQuery.event.special,
			i = 0;

		for ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {
			if ( acceptData( elem ) ) {
				if ( ( data = elem[ dataPriv.expando ] ) ) {
					if ( data.events ) {
						for ( type in data.events ) {
							if ( special[ type ] ) {
								jQuery.event.remove( elem, type );

							// This is a shortcut to avoid jQuery.event.remove's overhead
							} else {
								jQuery.removeEvent( elem, type, data.handle );
							}
						}
					}

					// Support: Chrome <=35 - 45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataPriv.expando ] = undefined;
				}
				if ( elem[ dataUser.expando ] ) {

					// Support: Chrome <=35 - 45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataUser.expando ] = undefined;
				}
			}
		}
	}
} );

jQuery.fn.extend( {
	detach: function( selector ) {
		return remove( this, selector, true );
	},

	remove: function( selector ) {
		return remove( this, selector );
	},

	text: function( value ) {
		return access( this, function( value ) {
			return value === undefined ?
				jQuery.text( this ) :
				this.empty().each( function() {
					if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
						this.textContent = value;
					}
				} );
		}, null, value, arguments.length );
	},

	append: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.appendChild( elem );
			}
		} );
	},

	prepend: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.insertBefore( elem, target.firstChild );
			}
		} );
	},

	before: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this );
			}
		} );
	},

	after: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this.nextSibling );
			}
		} );
	},

	empty: function() {
		var elem,
			i = 0;

		for ( ; ( elem = this[ i ] ) != null; i++ ) {
			if ( elem.nodeType === 1 ) {

				// Prevent memory leaks
				jQuery.cleanData( getAll( elem, false ) );

				// Remove any remaining nodes
				elem.textContent = "";
			}
		}

		return this;
	},

	clone: function( dataAndEvents, deepDataAndEvents ) {
		dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
		deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

		return this.map( function() {
			return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
		} );
	},

	html: function( value ) {
		return access( this, function( value ) {
			var elem = this[ 0 ] || {},
				i = 0,
				l = this.length;

			if ( value === undefined && elem.nodeType === 1 ) {
				return elem.innerHTML;
			}

			// See if we can take a shortcut and just use innerHTML
			if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
				!wrapMap[ ( rtagName.exec( value ) || [ "", "" ] )[ 1 ].toLowerCase() ] ) {

				value = jQuery.htmlPrefilter( value );

				try {
					for ( ; i < l; i++ ) {
						elem = this[ i ] || {};

						// Remove element nodes and prevent memory leaks
						if ( elem.nodeType === 1 ) {
							jQuery.cleanData( getAll( elem, false ) );
							elem.innerHTML = value;
						}
					}

					elem = 0;

				// If using innerHTML throws an exception, use the fallback method
				} catch ( e ) {}
			}

			if ( elem ) {
				this.empty().append( value );
			}
		}, null, value, arguments.length );
	},

	replaceWith: function() {
		var ignored = [];

		// Make the changes, replacing each non-ignored context element with the new content
		return domManip( this, arguments, function( elem ) {
			var parent = this.parentNode;

			if ( jQuery.inArray( this, ignored ) < 0 ) {
				jQuery.cleanData( getAll( this ) );
				if ( parent ) {
					parent.replaceChild( elem, this );
				}
			}

		// Force callback invocation
		}, ignored );
	}
} );

jQuery.each( {
	appendTo: "append",
	prependTo: "prepend",
	insertBefore: "before",
	insertAfter: "after",
	replaceAll: "replaceWith"
}, function( name, original ) {
	jQuery.fn[ name ] = function( selector ) {
		var elems,
			ret = [],
			insert = jQuery( selector ),
			last = insert.length - 1,
			i = 0;

		for ( ; i <= last; i++ ) {
			elems = i === last ? this : this.clone( true );
			jQuery( insert[ i ] )[ original ]( elems );

			// Support: Android <=4.0 only, PhantomJS 1 only
			// .get() because push.apply(_, arraylike) throws on ancient WebKit
			push.apply( ret, elems.get() );
		}

		return this.pushStack( ret );
	};
} );
var rmargin = ( /^margin/ );

var rnumnonpx = new RegExp( "^(" + pnum + ")(?!px)[a-z%]+$", "i" );

var getStyles = function( elem ) {

		// Support: IE <=11 only, Firefox <=30 (#15098, #14150)
		// IE throws on elements created in popups
		// FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
		var view = elem.ownerDocument.defaultView;

		if ( !view || !view.opener ) {
			view = window;
		}

		return view.getComputedStyle( elem );
	};



( function() {

	// Executing both pixelPosition & boxSizingReliable tests require only one layout
	// so they're executed at the same time to save the second computation.
	function computeStyleTests() {

		// This is a singleton, we need to execute it only once
		if ( !div ) {
			return;
		}

		div.style.cssText =
			"box-sizing:border-box;" +
			"position:relative;display:block;" +
			"margin:auto;border:1px;padding:1px;" +
			"top:1%;width:50%";
		div.innerHTML = "";
		documentElement.appendChild( container );

		var divStyle = window.getComputedStyle( div );
		pixelPositionVal = divStyle.top !== "1%";

		// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44
		reliableMarginLeftVal = divStyle.marginLeft === "2px";
		boxSizingReliableVal = divStyle.width === "4px";

		// Support: Android 4.0 - 4.3 only
		// Some styles come back with percentage values, even though they shouldn't
		div.style.marginRight = "50%";
		pixelMarginRightVal = divStyle.marginRight === "4px";

		documentElement.removeChild( container );

		// Nullify the div so it wouldn't be stored in the memory and
		// it will also be a sign that checks already performed
		div = null;
	}

	var pixelPositionVal, boxSizingReliableVal, pixelMarginRightVal, reliableMarginLeftVal,
		container = document.createElement( "div" ),
		div = document.createElement( "div" );

	// Finish early in limited (non-browser) environments
	if ( !div.style ) {
		return;
	}

	// Support: IE <=9 - 11 only
	// Style of cloned element affects source element cloned (#8908)
	div.style.backgroundClip = "content-box";
	div.cloneNode( true ).style.backgroundClip = "";
	support.clearCloneStyle = div.style.backgroundClip === "content-box";

	container.style.cssText = "border:0;width:8px;height:0;top:0;left:-9999px;" +
		"padding:0;margin-top:1px;position:absolute";
	container.appendChild( div );

	jQuery.extend( support, {
		pixelPosition: function() {
			computeStyleTests();
			return pixelPositionVal;
		},
		boxSizingReliable: function() {
			computeStyleTests();
			return boxSizingReliableVal;
		},
		pixelMarginRight: function() {
			computeStyleTests();
			return pixelMarginRightVal;
		},
		reliableMarginLeft: function() {
			computeStyleTests();
			return reliableMarginLeftVal;
		}
	} );
} )();


function curCSS( elem, name, computed ) {
	var width, minWidth, maxWidth, ret,
		style = elem.style;

	computed = computed || getStyles( elem );

	// Support: IE <=9 only
	// getPropertyValue is only needed for .css('filter') (#12537)
	if ( computed ) {
		ret = computed.getPropertyValue( name ) || computed[ name ];

		if ( ret === "" && !jQuery.contains( elem.ownerDocument, elem ) ) {
			ret = jQuery.style( elem, name );
		}

		// A tribute to the "awesome hack by Dean Edwards"
		// Android Browser returns percentage for some values,
		// but width seems to be reliably pixels.
		// This is against the CSSOM draft spec:
		// https://drafts.csswg.org/cssom/#resolved-values
		if ( !support.pixelMarginRight() && rnumnonpx.test( ret ) && rmargin.test( name ) ) {

			// Remember the original values
			width = style.width;
			minWidth = style.minWidth;
			maxWidth = style.maxWidth;

			// Put in the new values to get a computed value out
			style.minWidth = style.maxWidth = style.width = ret;
			ret = computed.width;

			// Revert the changed values
			style.width = width;
			style.minWidth = minWidth;
			style.maxWidth = maxWidth;
		}
	}

	return ret !== undefined ?

		// Support: IE <=9 - 11 only
		// IE returns zIndex value as an integer.
		ret + "" :
		ret;
}


function addGetHookIf( conditionFn, hookFn ) {

	// Define the hook, we'll check on the first run if it's really needed.
	return {
		get: function() {
			if ( conditionFn() ) {

				// Hook not needed (or it's not possible to use it due
				// to missing dependency), remove it.
				delete this.get;
				return;
			}

			// Hook needed; redefine it so that the support test is not executed again.
			return ( this.get = hookFn ).apply( this, arguments );
		}
	};
}


var

	// Swappable if display is none or starts with table
	// except "table", "table-cell", or "table-caption"
	// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
	rdisplayswap = /^(none|table(?!-c[ea]).+)/,
	cssShow = { position: "absolute", visibility: "hidden", display: "block" },
	cssNormalTransform = {
		letterSpacing: "0",
		fontWeight: "400"
	},

	cssPrefixes = [ "Webkit", "Moz", "ms" ],
	emptyStyle = document.createElement( "div" ).style;

// Return a css property mapped to a potentially vendor prefixed property
function vendorPropName( name ) {

	// Shortcut for names that are not vendor prefixed
	if ( name in emptyStyle ) {
		return name;
	}

	// Check for vendor prefixed names
	var capName = name[ 0 ].toUpperCase() + name.slice( 1 ),
		i = cssPrefixes.length;

	while ( i-- ) {
		name = cssPrefixes[ i ] + capName;
		if ( name in emptyStyle ) {
			return name;
		}
	}
}

function setPositiveNumber( elem, value, subtract ) {

	// Any relative (+/-) values have already been
	// normalized at this point
	var matches = rcssNum.exec( value );
	return matches ?

		// Guard against undefined "subtract", e.g., when used as in cssHooks
		Math.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || "px" ) :
		value;
}

function augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {
	var i,
		val = 0;

	// If we already have the right measurement, avoid augmentation
	if ( extra === ( isBorderBox ? "border" : "content" ) ) {
		i = 4;

	// Otherwise initialize for horizontal or vertical properties
	} else {
		i = name === "width" ? 1 : 0;
	}

	for ( ; i < 4; i += 2 ) {

		// Both box models exclude margin, so add it if we want it
		if ( extra === "margin" ) {
			val += jQuery.css( elem, extra + cssExpand[ i ], true, styles );
		}

		if ( isBorderBox ) {

			// border-box includes padding, so remove it if we want content
			if ( extra === "content" ) {
				val -= jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
			}

			// At this point, extra isn't border nor margin, so remove border
			if ( extra !== "margin" ) {
				val -= jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		} else {

			// At this point, extra isn't content, so add padding
			val += jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );

			// At this point, extra isn't content nor padding, so add border
			if ( extra !== "padding" ) {
				val += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		}
	}

	return val;
}

function getWidthOrHeight( elem, name, extra ) {

	// Start with offset property, which is equivalent to the border-box value
	var val,
		valueIsBorderBox = true,
		styles = getStyles( elem ),
		isBorderBox = jQuery.css( elem, "boxSizing", false, styles ) === "border-box";

	// Support: IE <=11 only
	// Running getBoundingClientRect on a disconnected node
	// in IE throws an error.
	if ( elem.getClientRects().length ) {
		val = elem.getBoundingClientRect()[ name ];
	}

	// Some non-html elements return undefined for offsetWidth, so check for null/undefined
	// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285
	// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668
	if ( val <= 0 || val == null ) {

		// Fall back to computed then uncomputed css if necessary
		val = curCSS( elem, name, styles );
		if ( val < 0 || val == null ) {
			val = elem.style[ name ];
		}

		// Computed unit is not pixels. Stop here and return.
		if ( rnumnonpx.test( val ) ) {
			return val;
		}

		// Check for style in case a browser which returns unreliable values
		// for getComputedStyle silently falls back to the reliable elem.style
		valueIsBorderBox = isBorderBox &&
			( support.boxSizingReliable() || val === elem.style[ name ] );

		// Normalize "", auto, and prepare for extra
		val = parseFloat( val ) || 0;
	}

	// Use the active box-sizing model to add/subtract irrelevant styles
	return ( val +
		augmentWidthOrHeight(
			elem,
			name,
			extra || ( isBorderBox ? "border" : "content" ),
			valueIsBorderBox,
			styles
		)
	) + "px";
}

jQuery.extend( {

	// Add in style property hooks for overriding the default
	// behavior of getting and setting a style property
	cssHooks: {
		opacity: {
			get: function( elem, computed ) {
				if ( computed ) {

					// We should always get a number back from opacity
					var ret = curCSS( elem, "opacity" );
					return ret === "" ? "1" : ret;
				}
			}
		}
	},

	// Don't automatically add "px" to these possibly-unitless properties
	cssNumber: {
		"animationIterationCount": true,
		"columnCount": true,
		"fillOpacity": true,
		"flexGrow": true,
		"flexShrink": true,
		"fontWeight": true,
		"lineHeight": true,
		"opacity": true,
		"order": true,
		"orphans": true,
		"widows": true,
		"zIndex": true,
		"zoom": true
	},

	// Add in properties whose names you wish to fix before
	// setting or getting the value
	cssProps: {
		"float": "cssFloat"
	},

	// Get and set the style property on a DOM Node
	style: function( elem, name, value, extra ) {

		// Don't set styles on text and comment nodes
		if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
			return;
		}

		// Make sure that we're working with the right name
		var ret, type, hooks,
			origName = jQuery.camelCase( name ),
			style = elem.style;

		name = jQuery.cssProps[ origName ] ||
			( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );

		// Gets hook for the prefixed version, then unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// Check if we're setting a value
		if ( value !== undefined ) {
			type = typeof value;

			// Convert "+=" or "-=" to relative numbers (#7345)
			if ( type === "string" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {
				value = adjustCSS( elem, name, ret );

				// Fixes bug #9237
				type = "number";
			}

			// Make sure that null and NaN values aren't set (#7116)
			if ( value == null || value !== value ) {
				return;
			}

			// If a number was passed in, add the unit (except for certain CSS properties)
			if ( type === "number" ) {
				value += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? "" : "px" );
			}

			// background-* props affect original clone's values
			if ( !support.clearCloneStyle && value === "" && name.indexOf( "background" ) === 0 ) {
				style[ name ] = "inherit";
			}

			// If a hook was provided, use that value, otherwise just set the specified value
			if ( !hooks || !( "set" in hooks ) ||
				( value = hooks.set( elem, value, extra ) ) !== undefined ) {

				style[ name ] = value;
			}

		} else {

			// If a hook was provided get the non-computed value from there
			if ( hooks && "get" in hooks &&
				( ret = hooks.get( elem, false, extra ) ) !== undefined ) {

				return ret;
			}

			// Otherwise just get the value from the style object
			return style[ name ];
		}
	},

	css: function( elem, name, extra, styles ) {
		var val, num, hooks,
			origName = jQuery.camelCase( name );

		// Make sure that we're working with the right name
		name = jQuery.cssProps[ origName ] ||
			( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );

		// Try prefixed name followed by the unprefixed name
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// If a hook was provided get the computed value from there
		if ( hooks && "get" in hooks ) {
			val = hooks.get( elem, true, extra );
		}

		// Otherwise, if a way to get the computed value exists, use that
		if ( val === undefined ) {
			val = curCSS( elem, name, styles );
		}

		// Convert "normal" to computed value
		if ( val === "normal" && name in cssNormalTransform ) {
			val = cssNormalTransform[ name ];
		}

		// Make numeric if forced or a qualifier was provided and val looks numeric
		if ( extra === "" || extra ) {
			num = parseFloat( val );
			return extra === true || isFinite( num ) ? num || 0 : val;
		}
		return val;
	}
} );

jQuery.each( [ "height", "width" ], function( i, name ) {
	jQuery.cssHooks[ name ] = {
		get: function( elem, computed, extra ) {
			if ( computed ) {

				// Certain elements can have dimension info if we invisibly show them
				// but it must have a current display style that would benefit
				return rdisplayswap.test( jQuery.css( elem, "display" ) ) &&

					// Support: Safari 8+
					// Table columns in Safari have non-zero offsetWidth & zero
					// getBoundingClientRect().width unless display is changed.
					// Support: IE <=11 only
					// Running getBoundingClientRect on a disconnected node
					// in IE throws an error.
					( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?
						swap( elem, cssShow, function() {
							return getWidthOrHeight( elem, name, extra );
						} ) :
						getWidthOrHeight( elem, name, extra );
			}
		},

		set: function( elem, value, extra ) {
			var matches,
				styles = extra && getStyles( elem ),
				subtract = extra && augmentWidthOrHeight(
					elem,
					name,
					extra,
					jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
					styles
				);

			// Convert to pixels if value adjustment is needed
			if ( subtract && ( matches = rcssNum.exec( value ) ) &&
				( matches[ 3 ] || "px" ) !== "px" ) {

				elem.style[ name ] = value;
				value = jQuery.css( elem, name );
			}

			return setPositiveNumber( elem, value, subtract );
		}
	};
} );

jQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,
	function( elem, computed ) {
		if ( computed ) {
			return ( parseFloat( curCSS( elem, "marginLeft" ) ) ||
				elem.getBoundingClientRect().left -
					swap( elem, { marginLeft: 0 }, function() {
						return elem.getBoundingClientRect().left;
					} )
				) + "px";
		}
	}
);

// These hooks are used by animate to expand properties
jQuery.each( {
	margin: "",
	padding: "",
	border: "Width"
}, function( prefix, suffix ) {
	jQuery.cssHooks[ prefix + suffix ] = {
		expand: function( value ) {
			var i = 0,
				expanded = {},

				// Assumes a single number if not a string
				parts = typeof value === "string" ? value.split( " " ) : [ value ];

			for ( ; i < 4; i++ ) {
				expanded[ prefix + cssExpand[ i ] + suffix ] =
					parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
			}

			return expanded;
		}
	};

	if ( !rmargin.test( prefix ) ) {
		jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
	}
} );

jQuery.fn.extend( {
	css: function( name, value ) {
		return access( this, function( elem, name, value ) {
			var styles, len,
				map = {},
				i = 0;

			if ( jQuery.isArray( name ) ) {
				styles = getStyles( elem );
				len = name.length;

				for ( ; i < len; i++ ) {
					map[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );
				}

				return map;
			}

			return value !== undefined ?
				jQuery.style( elem, name, value ) :
				jQuery.css( elem, name );
		}, name, value, arguments.length > 1 );
	}
} );


function Tween( elem, options, prop, end, easing ) {
	return new Tween.prototype.init( elem, options, prop, end, easing );
}
jQuery.Tween = Tween;

Tween.prototype = {
	constructor: Tween,
	init: function( elem, options, prop, end, easing, unit ) {
		this.elem = elem;
		this.prop = prop;
		this.easing = easing || jQuery.easing._default;
		this.options = options;
		this.start = this.now = this.cur();
		this.end = end;
		this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
	},
	cur: function() {
		var hooks = Tween.propHooks[ this.prop ];

		return hooks && hooks.get ?
			hooks.get( this ) :
			Tween.propHooks._default.get( this );
	},
	run: function( percent ) {
		var eased,
			hooks = Tween.propHooks[ this.prop ];

		if ( this.options.duration ) {
			this.pos = eased = jQuery.easing[ this.easing ](
				percent, this.options.duration * percent, 0, 1, this.options.duration
			);
		} else {
			this.pos = eased = percent;
		}
		this.now = ( this.end - this.start ) * eased + this.start;

		if ( this.options.step ) {
			this.options.step.call( this.elem, this.now, this );
		}

		if ( hooks && hooks.set ) {
			hooks.set( this );
		} else {
			Tween.propHooks._default.set( this );
		}
		return this;
	}
};

Tween.prototype.init.prototype = Tween.prototype;

Tween.propHooks = {
	_default: {
		get: function( tween ) {
			var result;

			// Use a property on the element directly when it is not a DOM element,
			// or when there is no matching style property that exists.
			if ( tween.elem.nodeType !== 1 ||
				tween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {
				return tween.elem[ tween.prop ];
			}

			// Passing an empty string as a 3rd parameter to .css will automatically
			// attempt a parseFloat and fallback to a string if the parse fails.
			// Simple values such as "10px" are parsed to Float;
			// complex values such as "rotate(1rad)" are returned as-is.
			result = jQuery.css( tween.elem, tween.prop, "" );

			// Empty strings, null, undefined and "auto" are converted to 0.
			return !result || result === "auto" ? 0 : result;
		},
		set: function( tween ) {

			// Use step hook for back compat.
			// Use cssHook if its there.
			// Use .style if available and use plain properties where available.
			if ( jQuery.fx.step[ tween.prop ] ) {
				jQuery.fx.step[ tween.prop ]( tween );
			} else if ( tween.elem.nodeType === 1 &&
				( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null ||
					jQuery.cssHooks[ tween.prop ] ) ) {
				jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
			} else {
				tween.elem[ tween.prop ] = tween.now;
			}
		}
	}
};

// Support: IE <=9 only
// Panic based approach to setting things on disconnected nodes
Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
	set: function( tween ) {
		if ( tween.elem.nodeType && tween.elem.parentNode ) {
			tween.elem[ tween.prop ] = tween.now;
		}
	}
};

jQuery.easing = {
	linear: function( p ) {
		return p;
	},
	swing: function( p ) {
		return 0.5 - Math.cos( p * Math.PI ) / 2;
	},
	_default: "swing"
};

jQuery.fx = Tween.prototype.init;

// Back compat <1.8 extension point
jQuery.fx.step = {};




var
	fxNow, timerId,
	rfxtypes = /^(?:toggle|show|hide)$/,
	rrun = /queueHooks$/;

function raf() {
	if ( timerId ) {
		window.requestAnimationFrame( raf );
		jQuery.fx.tick();
	}
}

// Animations created synchronously will run synchronously
function createFxNow() {
	window.setTimeout( function() {
		fxNow = undefined;
	} );
	return ( fxNow = jQuery.now() );
}

// Generate parameters to create a standard animation
function genFx( type, includeWidth ) {
	var which,
		i = 0,
		attrs = { height: type };

	// If we include width, step value is 1 to do all cssExpand values,
	// otherwise step value is 2 to skip over Left and Right
	includeWidth = includeWidth ? 1 : 0;
	for ( ; i < 4; i += 2 - includeWidth ) {
		which = cssExpand[ i ];
		attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
	}

	if ( includeWidth ) {
		attrs.opacity = attrs.width = type;
	}

	return attrs;
}

function createTween( value, prop, animation ) {
	var tween,
		collection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ "*" ] ),
		index = 0,
		length = collection.length;
	for ( ; index < length; index++ ) {
		if ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {

			// We're done with this property
			return tween;
		}
	}
}

function defaultPrefilter( elem, props, opts ) {
	var prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,
		isBox = "width" in props || "height" in props,
		anim = this,
		orig = {},
		style = elem.style,
		hidden = elem.nodeType && isHiddenWithinTree( elem ),
		dataShow = dataPriv.get( elem, "fxshow" );

	// Queue-skipping animations hijack the fx hooks
	if ( !opts.queue ) {
		hooks = jQuery._queueHooks( elem, "fx" );
		if ( hooks.unqueued == null ) {
			hooks.unqueued = 0;
			oldfire = hooks.empty.fire;
			hooks.empty.fire = function() {
				if ( !hooks.unqueued ) {
					oldfire();
				}
			};
		}
		hooks.unqueued++;

		anim.always( function() {

			// Ensure the complete handler is called before this completes
			anim.always( function() {
				hooks.unqueued--;
				if ( !jQuery.queue( elem, "fx" ).length ) {
					hooks.empty.fire();
				}
			} );
		} );
	}

	// Detect show/hide animations
	for ( prop in props ) {
		value = props[ prop ];
		if ( rfxtypes.test( value ) ) {
			delete props[ prop ];
			toggle = toggle || value === "toggle";
			if ( value === ( hidden ? "hide" : "show" ) ) {

				// Pretend to be hidden if this is a "show" and
				// there is still data from a stopped show/hide
				if ( value === "show" && dataShow && dataShow[ prop ] !== undefined ) {
					hidden = true;

				// Ignore all other no-op show/hide data
				} else {
					continue;
				}
			}
			orig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );
		}
	}

	// Bail out if this is a no-op like .hide().hide()
	propTween = !jQuery.isEmptyObject( props );
	if ( !propTween && jQuery.isEmptyObject( orig ) ) {
		return;
	}

	// Restrict "overflow" and "display" styles during box animations
	if ( isBox && elem.nodeType === 1 ) {

		// Support: IE <=9 - 11, Edge 12 - 13
		// Record all 3 overflow attributes because IE does not infer the shorthand
		// from identically-valued overflowX and overflowY
		opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];

		// Identify a display type, preferring old show/hide data over the CSS cascade
		restoreDisplay = dataShow && dataShow.display;
		if ( restoreDisplay == null ) {
			restoreDisplay = dataPriv.get( elem, "display" );
		}
		display = jQuery.css( elem, "display" );
		if ( display === "none" ) {
			if ( restoreDisplay ) {
				display = restoreDisplay;
			} else {

				// Get nonempty value(s) by temporarily forcing visibility
				showHide( [ elem ], true );
				restoreDisplay = elem.style.display || restoreDisplay;
				display = jQuery.css( elem, "display" );
				showHide( [ elem ] );
			}
		}

		// Animate inline elements as inline-block
		if ( display === "inline" || display === "inline-block" && restoreDisplay != null ) {
			if ( jQuery.css( elem, "float" ) === "none" ) {

				// Restore the original display value at the end of pure show/hide animations
				if ( !propTween ) {
					anim.done( function() {
						style.display = restoreDisplay;
					} );
					if ( restoreDisplay == null ) {
						display = style.display;
						restoreDisplay = display === "none" ? "" : display;
					}
				}
				style.display = "inline-block";
			}
		}
	}

	if ( opts.overflow ) {
		style.overflow = "hidden";
		anim.always( function() {
			style.overflow = opts.overflow[ 0 ];
			style.overflowX = opts.overflow[ 1 ];
			style.overflowY = opts.overflow[ 2 ];
		} );
	}

	// Implement show/hide animations
	propTween = false;
	for ( prop in orig ) {

		// General show/hide setup for this element animation
		if ( !propTween ) {
			if ( dataShow ) {
				if ( "hidden" in dataShow ) {
					hidden = dataShow.hidden;
				}
			} else {
				dataShow = dataPriv.access( elem, "fxshow", { display: restoreDisplay } );
			}

			// Store hidden/visible for toggle so `.stop().toggle()` "reverses"
			if ( toggle ) {
				dataShow.hidden = !hidden;
			}

			// Show elements before animating them
			if ( hidden ) {
				showHide( [ elem ], true );
			}

			/* eslint-disable no-loop-func */

			anim.done( function() {

			/* eslint-enable no-loop-func */

				// The final step of a "hide" animation is actually hiding the element
				if ( !hidden ) {
					showHide( [ elem ] );
				}
				dataPriv.remove( elem, "fxshow" );
				for ( prop in orig ) {
					jQuery.style( elem, prop, orig[ prop ] );
				}
			} );
		}

		// Per-property setup
		propTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );
		if ( !( prop in dataShow ) ) {
			dataShow[ prop ] = propTween.start;
			if ( hidden ) {
				propTween.end = propTween.start;
				propTween.start = 0;
			}
		}
	}
}

function propFilter( props, specialEasing ) {
	var index, name, easing, value, hooks;

	// camelCase, specialEasing and expand cssHook pass
	for ( index in props ) {
		name = jQuery.camelCase( index );
		easing = specialEasing[ name ];
		value = props[ index ];
		if ( jQuery.isArray( value ) ) {
			easing = value[ 1 ];
			value = props[ index ] = value[ 0 ];
		}

		if ( index !== name ) {
			props[ name ] = value;
			delete props[ index ];
		}

		hooks = jQuery.cssHooks[ name ];
		if ( hooks && "expand" in hooks ) {
			value = hooks.expand( value );
			delete props[ name ];

			// Not quite $.extend, this won't overwrite existing keys.
			// Reusing 'index' because we have the correct "name"
			for ( index in value ) {
				if ( !( index in props ) ) {
					props[ index ] = value[ index ];
					specialEasing[ index ] = easing;
				}
			}
		} else {
			specialEasing[ name ] = easing;
		}
	}
}

function Animation( elem, properties, options ) {
	var result,
		stopped,
		index = 0,
		length = Animation.prefilters.length,
		deferred = jQuery.Deferred().always( function() {

			// Don't match elem in the :animated selector
			delete tick.elem;
		} ),
		tick = function() {
			if ( stopped ) {
				return false;
			}
			var currentTime = fxNow || createFxNow(),
				remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),

				// Support: Android 2.3 only
				// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)
				temp = remaining / animation.duration || 0,
				percent = 1 - temp,
				index = 0,
				length = animation.tweens.length;

			for ( ; index < length; index++ ) {
				animation.tweens[ index ].run( percent );
			}

			deferred.notifyWith( elem, [ animation, percent, remaining ] );

			if ( percent < 1 && length ) {
				return remaining;
			} else {
				deferred.resolveWith( elem, [ animation ] );
				return false;
			}
		},
		animation = deferred.promise( {
			elem: elem,
			props: jQuery.extend( {}, properties ),
			opts: jQuery.extend( true, {
				specialEasing: {},
				easing: jQuery.easing._default
			}, options ),
			originalProperties: properties,
			originalOptions: options,
			startTime: fxNow || createFxNow(),
			duration: options.duration,
			tweens: [],
			createTween: function( prop, end ) {
				var tween = jQuery.Tween( elem, animation.opts, prop, end,
						animation.opts.specialEasing[ prop ] || animation.opts.easing );
				animation.tweens.push( tween );
				return tween;
			},
			stop: function( gotoEnd ) {
				var index = 0,

					// If we are going to the end, we want to run all the tweens
					// otherwise we skip this part
					length = gotoEnd ? animation.tweens.length : 0;
				if ( stopped ) {
					return this;
				}
				stopped = true;
				for ( ; index < length; index++ ) {
					animation.tweens[ index ].run( 1 );
				}

				// Resolve when we played the last frame; otherwise, reject
				if ( gotoEnd ) {
					deferred.notifyWith( elem, [ animation, 1, 0 ] );
					deferred.resolveWith( elem, [ animation, gotoEnd ] );
				} else {
					deferred.rejectWith( elem, [ animation, gotoEnd ] );
				}
				return this;
			}
		} ),
		props = animation.props;

	propFilter( props, animation.opts.specialEasing );

	for ( ; index < length; index++ ) {
		result = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );
		if ( result ) {
			if ( jQuery.isFunction( result.stop ) ) {
				jQuery._queueHooks( animation.elem, animation.opts.queue ).stop =
					jQuery.proxy( result.stop, result );
			}
			return result;
		}
	}

	jQuery.map( props, createTween, animation );

	if ( jQuery.isFunction( animation.opts.start ) ) {
		animation.opts.start.call( elem, animation );
	}

	jQuery.fx.timer(
		jQuery.extend( tick, {
			elem: elem,
			anim: animation,
			queue: animation.opts.queue
		} )
	);

	// attach callbacks from options
	return animation.progress( animation.opts.progress )
		.done( animation.opts.done, animation.opts.complete )
		.fail( animation.opts.fail )
		.always( animation.opts.always );
}

jQuery.Animation = jQuery.extend( Animation, {

	tweeners: {
		"*": [ function( prop, value ) {
			var tween = this.createTween( prop, value );
			adjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );
			return tween;
		} ]
	},

	tweener: function( props, callback ) {
		if ( jQuery.isFunction( props ) ) {
			callback = props;
			props = [ "*" ];
		} else {
			props = props.match( rnothtmlwhite );
		}

		var prop,
			index = 0,
			length = props.length;

		for ( ; index < length; index++ ) {
			prop = props[ index ];
			Animation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];
			Animation.tweeners[ prop ].unshift( callback );
		}
	},

	prefilters: [ defaultPrefilter ],

	prefilter: function( callback, prepend ) {
		if ( prepend ) {
			Animation.prefilters.unshift( callback );
		} else {
			Animation.prefilters.push( callback );
		}
	}
} );

jQuery.speed = function( speed, easing, fn ) {
	var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
		complete: fn || !fn && easing ||
			jQuery.isFunction( speed ) && speed,
		duration: speed,
		easing: fn && easing || easing && !jQuery.isFunction( easing ) && easing
	};

	// Go to the end state if fx are off or if document is hidden
	if ( jQuery.fx.off || document.hidden ) {
		opt.duration = 0;

	} else {
		if ( typeof opt.duration !== "number" ) {
			if ( opt.duration in jQuery.fx.speeds ) {
				opt.duration = jQuery.fx.speeds[ opt.duration ];

			} else {
				opt.duration = jQuery.fx.speeds._default;
			}
		}
	}

	// Normalize opt.queue - true/undefined/null -> "fx"
	if ( opt.queue == null || opt.queue === true ) {
		opt.queue = "fx";
	}

	// Queueing
	opt.old = opt.complete;

	opt.complete = function() {
		if ( jQuery.isFunction( opt.old ) ) {
			opt.old.call( this );
		}

		if ( opt.queue ) {
			jQuery.dequeue( this, opt.queue );
		}
	};

	return opt;
};

jQuery.fn.extend( {
	fadeTo: function( speed, to, easing, callback ) {

		// Show any hidden elements after setting opacity to 0
		return this.filter( isHiddenWithinTree ).css( "opacity", 0 ).show()

			// Animate to the value specified
			.end().animate( { opacity: to }, speed, easing, callback );
	},
	animate: function( prop, speed, easing, callback ) {
		var empty = jQuery.isEmptyObject( prop ),
			optall = jQuery.speed( speed, easing, callback ),
			doAnimation = function() {

				// Operate on a copy of prop so per-property easing won't be lost
				var anim = Animation( this, jQuery.extend( {}, prop ), optall );

				// Empty animations, or finishing resolves immediately
				if ( empty || dataPriv.get( this, "finish" ) ) {
					anim.stop( true );
				}
			};
			doAnimation.finish = doAnimation;

		return empty || optall.queue === false ?
			this.each( doAnimation ) :
			this.queue( optall.queue, doAnimation );
	},
	stop: function( type, clearQueue, gotoEnd ) {
		var stopQueue = function( hooks ) {
			var stop = hooks.stop;
			delete hooks.stop;
			stop( gotoEnd );
		};

		if ( typeof type !== "string" ) {
			gotoEnd = clearQueue;
			clearQueue = type;
			type = undefined;
		}
		if ( clearQueue && type !== false ) {
			this.queue( type || "fx", [] );
		}

		return this.each( function() {
			var dequeue = true,
				index = type != null && type + "queueHooks",
				timers = jQuery.timers,
				data = dataPriv.get( this );

			if ( index ) {
				if ( data[ index ] && data[ index ].stop ) {
					stopQueue( data[ index ] );
				}
			} else {
				for ( index in data ) {
					if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
						stopQueue( data[ index ] );
					}
				}
			}

			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this &&
					( type == null || timers[ index ].queue === type ) ) {

					timers[ index ].anim.stop( gotoEnd );
					dequeue = false;
					timers.splice( index, 1 );
				}
			}

			// Start the next in the queue if the last step wasn't forced.
			// Timers currently will call their complete callbacks, which
			// will dequeue but only if they were gotoEnd.
			if ( dequeue || !gotoEnd ) {
				jQuery.dequeue( this, type );
			}
		} );
	},
	finish: function( type ) {
		if ( type !== false ) {
			type = type || "fx";
		}
		return this.each( function() {
			var index,
				data = dataPriv.get( this ),
				queue = data[ type + "queue" ],
				hooks = data[ type + "queueHooks" ],
				timers = jQuery.timers,
				length = queue ? queue.length : 0;

			// Enable finishing flag on private data
			data.finish = true;

			// Empty the queue first
			jQuery.queue( this, type, [] );

			if ( hooks && hooks.stop ) {
				hooks.stop.call( this, true );
			}

			// Look for any active animations, and finish them
			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this && timers[ index ].queue === type ) {
					timers[ index ].anim.stop( true );
					timers.splice( index, 1 );
				}
			}

			// Look for any animations in the old queue and finish them
			for ( index = 0; index < length; index++ ) {
				if ( queue[ index ] && queue[ index ].finish ) {
					queue[ index ].finish.call( this );
				}
			}

			// Turn off finishing flag
			delete data.finish;
		} );
	}
} );

jQuery.each( [ "toggle", "show", "hide" ], function( i, name ) {
	var cssFn = jQuery.fn[ name ];
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return speed == null || typeof speed === "boolean" ?
			cssFn.apply( this, arguments ) :
			this.animate( genFx( name, true ), speed, easing, callback );
	};
} );

// Generate shortcuts for custom animations
jQuery.each( {
	slideDown: genFx( "show" ),
	slideUp: genFx( "hide" ),
	slideToggle: genFx( "toggle" ),
	fadeIn: { opacity: "show" },
	fadeOut: { opacity: "hide" },
	fadeToggle: { opacity: "toggle" }
}, function( name, props ) {
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return this.animate( props, speed, easing, callback );
	};
} );

jQuery.timers = [];
jQuery.fx.tick = function() {
	var timer,
		i = 0,
		timers = jQuery.timers;

	fxNow = jQuery.now();

	for ( ; i < timers.length; i++ ) {
		timer = timers[ i ];

		// Checks the timer has not already been removed
		if ( !timer() && timers[ i ] === timer ) {
			timers.splice( i--, 1 );
		}
	}

	if ( !timers.length ) {
		jQuery.fx.stop();
	}
	fxNow = undefined;
};

jQuery.fx.timer = function( timer ) {
	jQuery.timers.push( timer );
	if ( timer() ) {
		jQuery.fx.start();
	} else {
		jQuery.timers.pop();
	}
};

jQuery.fx.interval = 13;
jQuery.fx.start = function() {
	if ( !timerId ) {
		timerId = window.requestAnimationFrame ?
			window.requestAnimationFrame( raf ) :
			window.setInterval( jQuery.fx.tick, jQuery.fx.interval );
	}
};

jQuery.fx.stop = function() {
	if ( window.cancelAnimationFrame ) {
		window.cancelAnimationFrame( timerId );
	} else {
		window.clearInterval( timerId );
	}

	timerId = null;
};

jQuery.fx.speeds = {
	slow: 600,
	fast: 200,

	// Default speed
	_default: 400
};


// Based off of the plugin by Clint Helfers, with permission.
// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/
jQuery.fn.delay = function( time, type ) {
	time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
	type = type || "fx";

	return this.queue( type, function( next, hooks ) {
		var timeout = window.setTimeout( next, time );
		hooks.stop = function() {
			window.clearTimeout( timeout );
		};
	} );
};


( function() {
	var input = document.createElement( "input" ),
		select = document.createElement( "select" ),
		opt = select.appendChild( document.createElement( "option" ) );

	input.type = "checkbox";

	// Support: Android <=4.3 only
	// Default value for a checkbox should be "on"
	support.checkOn = input.value !== "";

	// Support: IE <=11 only
	// Must access selectedIndex to make default options select
	support.optSelected = opt.selected;

	// Support: IE <=11 only
	// An input loses its value after becoming a radio
	input = document.createElement( "input" );
	input.value = "t";
	input.type = "radio";
	support.radioValue = input.value === "t";
} )();


var boolHook,
	attrHandle = jQuery.expr.attrHandle;

jQuery.fn.extend( {
	attr: function( name, value ) {
		return access( this, jQuery.attr, name, value, arguments.length > 1 );
	},

	removeAttr: function( name ) {
		return this.each( function() {
			jQuery.removeAttr( this, name );
		} );
	}
} );

jQuery.extend( {
	attr: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set attributes on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		// Fallback to prop when attributes are not supported
		if ( typeof elem.getAttribute === "undefined" ) {
			return jQuery.prop( elem, name, value );
		}

		// Attribute hooks are determined by the lowercase version
		// Grab necessary hook if one is defined
		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {
			hooks = jQuery.attrHooks[ name.toLowerCase() ] ||
				( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );
		}

		if ( value !== undefined ) {
			if ( value === null ) {
				jQuery.removeAttr( elem, name );
				return;
			}

			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			elem.setAttribute( name, value + "" );
			return value;
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		ret = jQuery.find.attr( elem, name );

		// Non-existent attributes return null, we normalize to undefined
		return ret == null ? undefined : ret;
	},

	attrHooks: {
		type: {
			set: function( elem, value ) {
				if ( !support.radioValue && value === "radio" &&
					jQuery.nodeName( elem, "input" ) ) {
					var val = elem.value;
					elem.setAttribute( "type", value );
					if ( val ) {
						elem.value = val;
					}
					return value;
				}
			}
		}
	},

	removeAttr: function( elem, value ) {
		var name,
			i = 0,

			// Attribute names can contain non-HTML whitespace characters
			// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2
			attrNames = value && value.match( rnothtmlwhite );

		if ( attrNames && elem.nodeType === 1 ) {
			while ( ( name = attrNames[ i++ ] ) ) {
				elem.removeAttribute( name );
			}
		}
	}
} );

// Hooks for boolean attributes
boolHook = {
	set: function( elem, value, name ) {
		if ( value === false ) {

			// Remove boolean attributes when set to false
			jQuery.removeAttr( elem, name );
		} else {
			elem.setAttribute( name, name );
		}
		return name;
	}
};

jQuery.each( jQuery.expr.match.bool.source.match( /\w+/g ), function( i, name ) {
	var getter = attrHandle[ name ] || jQuery.find.attr;

	attrHandle[ name ] = function( elem, name, isXML ) {
		var ret, handle,
			lowercaseName = name.toLowerCase();

		if ( !isXML ) {

			// Avoid an infinite loop by temporarily removing this function from the getter
			handle = attrHandle[ lowercaseName ];
			attrHandle[ lowercaseName ] = ret;
			ret = getter( elem, name, isXML ) != null ?
				lowercaseName :
				null;
			attrHandle[ lowercaseName ] = handle;
		}
		return ret;
	};
} );




var rfocusable = /^(?:input|select|textarea|button)$/i,
	rclickable = /^(?:a|area)$/i;

jQuery.fn.extend( {
	prop: function( name, value ) {
		return access( this, jQuery.prop, name, value, arguments.length > 1 );
	},

	removeProp: function( name ) {
		return this.each( function() {
			delete this[ jQuery.propFix[ name ] || name ];
		} );
	}
} );

jQuery.extend( {
	prop: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set properties on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {

			// Fix name and attach hooks
			name = jQuery.propFix[ name ] || name;
			hooks = jQuery.propHooks[ name ];
		}

		if ( value !== undefined ) {
			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			return ( elem[ name ] = value );
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		return elem[ name ];
	},

	propHooks: {
		tabIndex: {
			get: function( elem ) {

				// Support: IE <=9 - 11 only
				// elem.tabIndex doesn't always return the
				// correct value when it hasn't been explicitly set
				// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
				// Use proper attribute retrieval(#12072)
				var tabindex = jQuery.find.attr( elem, "tabindex" );

				if ( tabindex ) {
					return parseInt( tabindex, 10 );
				}

				if (
					rfocusable.test( elem.nodeName ) ||
					rclickable.test( elem.nodeName ) &&
					elem.href
				) {
					return 0;
				}

				return -1;
			}
		}
	},

	propFix: {
		"for": "htmlFor",
		"class": "className"
	}
} );

// Support: IE <=11 only
// Accessing the selectedIndex property
// forces the browser to respect setting selected
// on the option
// The getter ensures a default option is selected
// when in an optgroup
// eslint rule "no-unused-expressions" is disabled for this code
// since it considers such accessions noop
if ( !support.optSelected ) {
	jQuery.propHooks.selected = {
		get: function( elem ) {

			/* eslint no-unused-expressions: "off" */

			var parent = elem.parentNode;
			if ( parent && parent.parentNode ) {
				parent.parentNode.selectedIndex;
			}
			return null;
		},
		set: function( elem ) {

			/* eslint no-unused-expressions: "off" */

			var parent = elem.parentNode;
			if ( parent ) {
				parent.selectedIndex;

				if ( parent.parentNode ) {
					parent.parentNode.selectedIndex;
				}
			}
		}
	};
}

jQuery.each( [
	"tabIndex",
	"readOnly",
	"maxLength",
	"cellSpacing",
	"cellPadding",
	"rowSpan",
	"colSpan",
	"useMap",
	"frameBorder",
	"contentEditable"
], function() {
	jQuery.propFix[ this.toLowerCase() ] = this;
} );




	// Strip and collapse whitespace according to HTML spec
	// https://html.spec.whatwg.org/multipage/infrastructure.html#strip-and-collapse-whitespace
	function stripAndCollapse( value ) {
		var tokens = value.match( rnothtmlwhite ) || [];
		return tokens.join( " " );
	}


function getClass( elem ) {
	return elem.getAttribute && elem.getAttribute( "class" ) || "";
}

jQuery.fn.extend( {
	addClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( jQuery.isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).addClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		if ( typeof value === "string" && value ) {
			classes = value.match( rnothtmlwhite ) || [];

			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );
				cur = elem.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {
						if ( cur.indexOf( " " + clazz + " " ) < 0 ) {
							cur += clazz + " ";
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = stripAndCollapse( cur );
					if ( curValue !== finalValue ) {
						elem.setAttribute( "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	removeClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( jQuery.isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		if ( !arguments.length ) {
			return this.attr( "class", "" );
		}

		if ( typeof value === "string" && value ) {
			classes = value.match( rnothtmlwhite ) || [];

			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );

				// This expression is here for better compressibility (see addClass)
				cur = elem.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {

						// Remove *all* instances
						while ( cur.indexOf( " " + clazz + " " ) > -1 ) {
							cur = cur.replace( " " + clazz + " ", " " );
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = stripAndCollapse( cur );
					if ( curValue !== finalValue ) {
						elem.setAttribute( "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	toggleClass: function( value, stateVal ) {
		var type = typeof value;

		if ( typeof stateVal === "boolean" && type === "string" ) {
			return stateVal ? this.addClass( value ) : this.removeClass( value );
		}

		if ( jQuery.isFunction( value ) ) {
			return this.each( function( i ) {
				jQuery( this ).toggleClass(
					value.call( this, i, getClass( this ), stateVal ),
					stateVal
				);
			} );
		}

		return this.each( function() {
			var className, i, self, classNames;

			if ( type === "string" ) {

				// Toggle individual class names
				i = 0;
				self = jQuery( this );
				classNames = value.match( rnothtmlwhite ) || [];

				while ( ( className = classNames[ i++ ] ) ) {

					// Check each className given, space separated list
					if ( self.hasClass( className ) ) {
						self.removeClass( className );
					} else {
						self.addClass( className );
					}
				}

			// Toggle whole class name
			} else if ( value === undefined || type === "boolean" ) {
				className = getClass( this );
				if ( className ) {

					// Store className if set
					dataPriv.set( this, "__className__", className );
				}

				// If the element has a class name or if we're passed `false`,
				// then remove the whole classname (if there was one, the above saved it).
				// Otherwise bring back whatever was previously saved (if anything),
				// falling back to the empty string if nothing was stored.
				if ( this.setAttribute ) {
					this.setAttribute( "class",
						className || value === false ?
						"" :
						dataPriv.get( this, "__className__" ) || ""
					);
				}
			}
		} );
	},

	hasClass: function( selector ) {
		var className, elem,
			i = 0;

		className = " " + selector + " ";
		while ( ( elem = this[ i++ ] ) ) {
			if ( elem.nodeType === 1 &&
				( " " + stripAndCollapse( getClass( elem ) ) + " " ).indexOf( className ) > -1 ) {
					return true;
			}
		}

		return false;
	}
} );




var rreturn = /\r/g;

jQuery.fn.extend( {
	val: function( value ) {
		var hooks, ret, isFunction,
			elem = this[ 0 ];

		if ( !arguments.length ) {
			if ( elem ) {
				hooks = jQuery.valHooks[ elem.type ] ||
					jQuery.valHooks[ elem.nodeName.toLowerCase() ];

				if ( hooks &&
					"get" in hooks &&
					( ret = hooks.get( elem, "value" ) ) !== undefined
				) {
					return ret;
				}

				ret = elem.value;

				// Handle most common string cases
				if ( typeof ret === "string" ) {
					return ret.replace( rreturn, "" );
				}

				// Handle cases where value is null/undef or number
				return ret == null ? "" : ret;
			}

			return;
		}

		isFunction = jQuery.isFunction( value );

		return this.each( function( i ) {
			var val;

			if ( this.nodeType !== 1 ) {
				return;
			}

			if ( isFunction ) {
				val = value.call( this, i, jQuery( this ).val() );
			} else {
				val = value;
			}

			// Treat null/undefined as ""; convert numbers to string
			if ( val == null ) {
				val = "";

			} else if ( typeof val === "number" ) {
				val += "";

			} else if ( jQuery.isArray( val ) ) {
				val = jQuery.map( val, function( value ) {
					return value == null ? "" : value + "";
				} );
			}

			hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];

			// If set returns undefined, fall back to normal setting
			if ( !hooks || !( "set" in hooks ) || hooks.set( this, val, "value" ) === undefined ) {
				this.value = val;
			}
		} );
	}
} );

jQuery.extend( {
	valHooks: {
		option: {
			get: function( elem ) {

				var val = jQuery.find.attr( elem, "value" );
				return val != null ?
					val :

					// Support: IE <=10 - 11 only
					// option.text throws exceptions (#14686, #14858)
					// Strip and collapse whitespace
					// https://html.spec.whatwg.org/#strip-and-collapse-whitespace
					stripAndCollapse( jQuery.text( elem ) );
			}
		},
		select: {
			get: function( elem ) {
				var value, option, i,
					options = elem.options,
					index = elem.selectedIndex,
					one = elem.type === "select-one",
					values = one ? null : [],
					max = one ? index + 1 : options.length;

				if ( index < 0 ) {
					i = max;

				} else {
					i = one ? index : 0;
				}

				// Loop through all the selected options
				for ( ; i < max; i++ ) {
					option = options[ i ];

					// Support: IE <=9 only
					// IE8-9 doesn't update selected after form reset (#2551)
					if ( ( option.selected || i === index ) &&

							// Don't return options that are disabled or in a disabled optgroup
							!option.disabled &&
							( !option.parentNode.disabled ||
								!jQuery.nodeName( option.parentNode, "optgroup" ) ) ) {

						// Get the specific value for the option
						value = jQuery( option ).val();

						// We don't need an array for one selects
						if ( one ) {
							return value;
						}

						// Multi-Selects return an array
						values.push( value );
					}
				}

				return values;
			},

			set: function( elem, value ) {
				var optionSet, option,
					options = elem.options,
					values = jQuery.makeArray( value ),
					i = options.length;

				while ( i-- ) {
					option = options[ i ];

					/* eslint-disable no-cond-assign */

					if ( option.selected =
						jQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1
					) {
						optionSet = true;
					}

					/* eslint-enable no-cond-assign */
				}

				// Force browsers to behave consistently when non-matching value is set
				if ( !optionSet ) {
					elem.selectedIndex = -1;
				}
				return values;
			}
		}
	}
} );

// Radios and checkboxes getter/setter
jQuery.each( [ "radio", "checkbox" ], function() {
	jQuery.valHooks[ this ] = {
		set: function( elem, value ) {
			if ( jQuery.isArray( value ) ) {
				return ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );
			}
		}
	};
	if ( !support.checkOn ) {
		jQuery.valHooks[ this ].get = function( elem ) {
			return elem.getAttribute( "value" ) === null ? "on" : elem.value;
		};
	}
} );




// Return jQuery for attributes-only inclusion


var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/;

jQuery.extend( jQuery.event, {

	trigger: function( event, data, elem, onlyHandlers ) {

		var i, cur, tmp, bubbleType, ontype, handle, special,
			eventPath = [ elem || document ],
			type = hasOwn.call( event, "type" ) ? event.type : event,
			namespaces = hasOwn.call( event, "namespace" ) ? event.namespace.split( "." ) : [];

		cur = tmp = elem = elem || document;

		// Don't do events on text and comment nodes
		if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
			return;
		}

		// focus/blur morphs to focusin/out; ensure we're not firing them right now
		if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
			return;
		}

		if ( type.indexOf( "." ) > -1 ) {

			// Namespaced trigger; create a regexp to match event type in handle()
			namespaces = type.split( "." );
			type = namespaces.shift();
			namespaces.sort();
		}
		ontype = type.indexOf( ":" ) < 0 && "on" + type;

		// Caller can pass in a jQuery.Event object, Object, or just an event type string
		event = event[ jQuery.expando ] ?
			event :
			new jQuery.Event( type, typeof event === "object" && event );

		// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
		event.isTrigger = onlyHandlers ? 2 : 3;
		event.namespace = namespaces.join( "." );
		event.rnamespace = event.namespace ?
			new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" ) :
			null;

		// Clean up the event in case it is being reused
		event.result = undefined;
		if ( !event.target ) {
			event.target = elem;
		}

		// Clone any incoming data and prepend the event, creating the handler arg list
		data = data == null ?
			[ event ] :
			jQuery.makeArray( data, [ event ] );

		// Allow special events to draw outside the lines
		special = jQuery.event.special[ type ] || {};
		if ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {
			return;
		}

		// Determine event propagation path in advance, per W3C events spec (#9951)
		// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
		if ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {

			bubbleType = special.delegateType || type;
			if ( !rfocusMorph.test( bubbleType + type ) ) {
				cur = cur.parentNode;
			}
			for ( ; cur; cur = cur.parentNode ) {
				eventPath.push( cur );
				tmp = cur;
			}

			// Only add window if we got to document (e.g., not plain obj or detached DOM)
			if ( tmp === ( elem.ownerDocument || document ) ) {
				eventPath.push( tmp.defaultView || tmp.parentWindow || window );
			}
		}

		// Fire handlers on the event path
		i = 0;
		while ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {

			event.type = i > 1 ?
				bubbleType :
				special.bindType || type;

			// jQuery handler
			handle = ( dataPriv.get( cur, "events" ) || {} )[ event.type ] &&
				dataPriv.get( cur, "handle" );
			if ( handle ) {
				handle.apply( cur, data );
			}

			// Native handler
			handle = ontype && cur[ ontype ];
			if ( handle && handle.apply && acceptData( cur ) ) {
				event.result = handle.apply( cur, data );
				if ( event.result === false ) {
					event.preventDefault();
				}
			}
		}
		event.type = type;

		// If nobody prevented the default action, do it now
		if ( !onlyHandlers && !event.isDefaultPrevented() ) {

			if ( ( !special._default ||
				special._default.apply( eventPath.pop(), data ) === false ) &&
				acceptData( elem ) ) {

				// Call a native DOM method on the target with the same name as the event.
				// Don't do default actions on window, that's where global variables be (#6170)
				if ( ontype && jQuery.isFunction( elem[ type ] ) && !jQuery.isWindow( elem ) ) {

					// Don't re-trigger an onFOO event when we call its FOO() method
					tmp = elem[ ontype ];

					if ( tmp ) {
						elem[ ontype ] = null;
					}

					// Prevent re-triggering of the same event, since we already bubbled it above
					jQuery.event.triggered = type;
					elem[ type ]();
					jQuery.event.triggered = undefined;

					if ( tmp ) {
						elem[ ontype ] = tmp;
					}
				}
			}
		}

		return event.result;
	},

	// Piggyback on a donor event to simulate a different one
	// Used only for `focus(in | out)` events
	simulate: function( type, elem, event ) {
		var e = jQuery.extend(
			new jQuery.Event(),
			event,
			{
				type: type,
				isSimulated: true
			}
		);

		jQuery.event.trigger( e, null, elem );
	}

} );

jQuery.fn.extend( {

	trigger: function( type, data ) {
		return this.each( function() {
			jQuery.event.trigger( type, data, this );
		} );
	},
	triggerHandler: function( type, data ) {
		var elem = this[ 0 ];
		if ( elem ) {
			return jQuery.event.trigger( type, data, elem, true );
		}
	}
} );


jQuery.each( ( "blur focus focusin focusout resize scroll click dblclick " +
	"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
	"change select submit keydown keypress keyup contextmenu" ).split( " " ),
	function( i, name ) {

	// Handle event binding
	jQuery.fn[ name ] = function( data, fn ) {
		return arguments.length > 0 ?
			this.on( name, null, data, fn ) :
			this.trigger( name );
	};
} );

jQuery.fn.extend( {
	hover: function( fnOver, fnOut ) {
		return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
	}
} );




support.focusin = "onfocusin" in window;


// Support: Firefox <=44
// Firefox doesn't have focus(in | out) events
// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787
//
// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1
// focus(in | out) events fire after focus & blur events,
// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order
// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857
if ( !support.focusin ) {
	jQuery.each( { focus: "focusin", blur: "focusout" }, function( orig, fix ) {

		// Attach a single capturing handler on the document while someone wants focusin/focusout
		var handler = function( event ) {
			jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );
		};

		jQuery.event.special[ fix ] = {
			setup: function() {
				var doc = this.ownerDocument || this,
					attaches = dataPriv.access( doc, fix );

				if ( !attaches ) {
					doc.addEventListener( orig, handler, true );
				}
				dataPriv.access( doc, fix, ( attaches || 0 ) + 1 );
			},
			teardown: function() {
				var doc = this.ownerDocument || this,
					attaches = dataPriv.access( doc, fix ) - 1;

				if ( !attaches ) {
					doc.removeEventListener( orig, handler, true );
					dataPriv.remove( doc, fix );

				} else {
					dataPriv.access( doc, fix, attaches );
				}
			}
		};
	} );
}
var location = window.location;

var nonce = jQuery.now();

var rquery = ( /\?/ );



// Cross-browser xml parsing
jQuery.parseXML = function( data ) {
	var xml;
	if ( !data || typeof data !== "string" ) {
		return null;
	}

	// Support: IE 9 - 11 only
	// IE throws on parseFromString with invalid input.
	try {
		xml = ( new window.DOMParser() ).parseFromString( data, "text/xml" );
	} catch ( e ) {
		xml = undefined;
	}

	if ( !xml || xml.getElementsByTagName( "parsererror" ).length ) {
		jQuery.error( "Invalid XML: " + data );
	}
	return xml;
};


var
	rbracket = /\[\]$/,
	rCRLF = /\r?\n/g,
	rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
	rsubmittable = /^(?:input|select|textarea|keygen)/i;

function buildParams( prefix, obj, traditional, add ) {
	var name;

	if ( jQuery.isArray( obj ) ) {

		// Serialize array item.
		jQuery.each( obj, function( i, v ) {
			if ( traditional || rbracket.test( prefix ) ) {

				// Treat each array item as a scalar.
				add( prefix, v );

			} else {

				// Item is non-scalar (array or object), encode its numeric index.
				buildParams(
					prefix + "[" + ( typeof v === "object" && v != null ? i : "" ) + "]",
					v,
					traditional,
					add
				);
			}
		} );

	} else if ( !traditional && jQuery.type( obj ) === "object" ) {

		// Serialize object item.
		for ( name in obj ) {
			buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
		}

	} else {

		// Serialize scalar item.
		add( prefix, obj );
	}
}

// Serialize an array of form elements or a set of
// key/values into a query string
jQuery.param = function( a, traditional ) {
	var prefix,
		s = [],
		add = function( key, valueOrFunction ) {

			// If value is a function, invoke it and use its return value
			var value = jQuery.isFunction( valueOrFunction ) ?
				valueOrFunction() :
				valueOrFunction;

			s[ s.length ] = encodeURIComponent( key ) + "=" +
				encodeURIComponent( value == null ? "" : value );
		};

	// If an array was passed in, assume that it is an array of form elements.
	if ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {

		// Serialize the form elements
		jQuery.each( a, function() {
			add( this.name, this.value );
		} );

	} else {

		// If traditional, encode the "old" way (the way 1.3.2 or older
		// did it), otherwise encode params recursively.
		for ( prefix in a ) {
			buildParams( prefix, a[ prefix ], traditional, add );
		}
	}

	// Return the resulting serialization
	return s.join( "&" );
};

jQuery.fn.extend( {
	serialize: function() {
		return jQuery.param( this.serializeArray() );
	},
	serializeArray: function() {
		return this.map( function() {

			// Can add propHook for "elements" to filter or add form elements
			var elements = jQuery.prop( this, "elements" );
			return elements ? jQuery.makeArray( elements ) : this;
		} )
		.filter( function() {
			var type = this.type;

			// Use .is( ":disabled" ) so that fieldset[disabled] works
			return this.name && !jQuery( this ).is( ":disabled" ) &&
				rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&
				( this.checked || !rcheckableType.test( type ) );
		} )
		.map( function( i, elem ) {
			var val = jQuery( this ).val();

			if ( val == null ) {
				return null;
			}

			if ( jQuery.isArray( val ) ) {
				return jQuery.map( val, function( val ) {
					return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
				} );
			}

			return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
		} ).get();
	}
} );


var
	r20 = /%20/g,
	rhash = /#.*$/,
	rantiCache = /([?&])_=[^&]*/,
	rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg,

	// #7653, #8125, #8152: local protocol detection
	rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
	rnoContent = /^(?:GET|HEAD)$/,
	rprotocol = /^\/\//,

	/* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */
	prefilters = {},

	/* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */
	transports = {},

	// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
	allTypes = "*/".concat( "*" ),

	// Anchor tag for parsing the document origin
	originAnchor = document.createElement( "a" );
	originAnchor.href = location.href;

// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
function addToPrefiltersOrTransports( structure ) {

	// dataTypeExpression is optional and defaults to "*"
	return function( dataTypeExpression, func ) {

		if ( typeof dataTypeExpression !== "string" ) {
			func = dataTypeExpression;
			dataTypeExpression = "*";
		}

		var dataType,
			i = 0,
			dataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];

		if ( jQuery.isFunction( func ) ) {

			// For each dataType in the dataTypeExpression
			while ( ( dataType = dataTypes[ i++ ] ) ) {

				// Prepend if requested
				if ( dataType[ 0 ] === "+" ) {
					dataType = dataType.slice( 1 ) || "*";
					( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );

				// Otherwise append
				} else {
					( structure[ dataType ] = structure[ dataType ] || [] ).push( func );
				}
			}
		}
	};
}

// Base inspection function for prefilters and transports
function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {

	var inspected = {},
		seekingTransport = ( structure === transports );

	function inspect( dataType ) {
		var selected;
		inspected[ dataType ] = true;
		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
			var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );
			if ( typeof dataTypeOrTransport === "string" &&
				!seekingTransport && !inspected[ dataTypeOrTransport ] ) {

				options.dataTypes.unshift( dataTypeOrTransport );
				inspect( dataTypeOrTransport );
				return false;
			} else if ( seekingTransport ) {
				return !( selected = dataTypeOrTransport );
			}
		} );
		return selected;
	}

	return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] && inspect( "*" );
}

// A special extend for ajax options
// that takes "flat" options (not to be deep extended)
// Fixes #9887
function ajaxExtend( target, src ) {
	var key, deep,
		flatOptions = jQuery.ajaxSettings.flatOptions || {};

	for ( key in src ) {
		if ( src[ key ] !== undefined ) {
			( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];
		}
	}
	if ( deep ) {
		jQuery.extend( true, target, deep );
	}

	return target;
}

/* Handles responses to an ajax request:
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */
function ajaxHandleResponses( s, jqXHR, responses ) {

	var ct, type, finalDataType, firstDataType,
		contents = s.contents,
		dataTypes = s.dataTypes;

	// Remove auto dataType and get content-type in the process
	while ( dataTypes[ 0 ] === "*" ) {
		dataTypes.shift();
		if ( ct === undefined ) {
			ct = s.mimeType || jqXHR.getResponseHeader( "Content-Type" );
		}
	}

	// Check if we're dealing with a known content-type
	if ( ct ) {
		for ( type in contents ) {
			if ( contents[ type ] && contents[ type ].test( ct ) ) {
				dataTypes.unshift( type );
				break;
			}
		}
	}

	// Check to see if we have a response for the expected dataType
	if ( dataTypes[ 0 ] in responses ) {
		finalDataType = dataTypes[ 0 ];
	} else {

		// Try convertible dataTypes
		for ( type in responses ) {
			if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[ 0 ] ] ) {
				finalDataType = type;
				break;
			}
			if ( !firstDataType ) {
				firstDataType = type;
			}
		}

		// Or just use first one
		finalDataType = finalDataType || firstDataType;
	}

	// If we found a dataType
	// We add the dataType to the list if needed
	// and return the corresponding response
	if ( finalDataType ) {
		if ( finalDataType !== dataTypes[ 0 ] ) {
			dataTypes.unshift( finalDataType );
		}
		return responses[ finalDataType ];
	}
}

/* Chain conversions given the request and the original response
 * Also sets the responseXXX fields on the jqXHR instance
 */
function ajaxConvert( s, response, jqXHR, isSuccess ) {
	var conv2, current, conv, tmp, prev,
		converters = {},

		// Work with a copy of dataTypes in case we need to modify it for conversion
		dataTypes = s.dataTypes.slice();

	// Create converters map with lowercased keys
	if ( dataTypes[ 1 ] ) {
		for ( conv in s.converters ) {
			converters[ conv.toLowerCase() ] = s.converters[ conv ];
		}
	}

	current = dataTypes.shift();

	// Convert to each sequential dataType
	while ( current ) {

		if ( s.responseFields[ current ] ) {
			jqXHR[ s.responseFields[ current ] ] = response;
		}

		// Apply the dataFilter if provided
		if ( !prev && isSuccess && s.dataFilter ) {
			response = s.dataFilter( response, s.dataType );
		}

		prev = current;
		current = dataTypes.shift();

		if ( current ) {

			// There's only work to do if current dataType is non-auto
			if ( current === "*" ) {

				current = prev;

			// Convert response if prev dataType is non-auto and differs from current
			} else if ( prev !== "*" && prev !== current ) {

				// Seek a direct converter
				conv = converters[ prev + " " + current ] || converters[ "* " + current ];

				// If none found, seek a pair
				if ( !conv ) {
					for ( conv2 in converters ) {

						// If conv2 outputs current
						tmp = conv2.split( " " );
						if ( tmp[ 1 ] === current ) {

							// If prev can be converted to accepted input
							conv = converters[ prev + " " + tmp[ 0 ] ] ||
								converters[ "* " + tmp[ 0 ] ];
							if ( conv ) {

								// Condense equivalence converters
								if ( conv === true ) {
									conv = converters[ conv2 ];

								// Otherwise, insert the intermediate dataType
								} else if ( converters[ conv2 ] !== true ) {
									current = tmp[ 0 ];
									dataTypes.unshift( tmp[ 1 ] );
								}
								break;
							}
						}
					}
				}

				// Apply converter (if not an equivalence)
				if ( conv !== true ) {

					// Unless errors are allowed to bubble, catch and return them
					if ( conv && s.throws ) {
						response = conv( response );
					} else {
						try {
							response = conv( response );
						} catch ( e ) {
							return {
								state: "parsererror",
								error: conv ? e : "No conversion from " + prev + " to " + current
							};
						}
					}
				}
			}
		}
	}

	return { state: "success", data: response };
}

jQuery.extend( {

	// Counter for holding the number of active queries
	active: 0,

	// Last-Modified header cache for next request
	lastModified: {},
	etag: {},

	ajaxSettings: {
		url: location.href,
		type: "GET",
		isLocal: rlocalProtocol.test( location.protocol ),
		global: true,
		processData: true,
		async: true,
		contentType: "application/x-www-form-urlencoded; charset=UTF-8",

		/*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		throws: false,
		traditional: false,
		headers: {},
		*/

		accepts: {
			"*": allTypes,
			text: "text/plain",
			html: "text/html",
			xml: "application/xml, text/xml",
			json: "application/json, text/javascript"
		},

		contents: {
			xml: /\bxml\b/,
			html: /\bhtml/,
			json: /\bjson\b/
		},

		responseFields: {
			xml: "responseXML",
			text: "responseText",
			json: "responseJSON"
		},

		// Data converters
		// Keys separate source (or catchall "*") and destination types with a single space
		converters: {

			// Convert anything to text
			"* text": String,

			// Text to html (true = no transformation)
			"text html": true,

			// Evaluate text as a json expression
			"text json": JSON.parse,

			// Parse text as xml
			"text xml": jQuery.parseXML
		},

		// For options that shouldn't be deep extended:
		// you can add your own custom options here if
		// and when you create one that shouldn't be
		// deep extended (see ajaxExtend)
		flatOptions: {
			url: true,
			context: true
		}
	},

	// Creates a full fledged settings object into target
	// with both ajaxSettings and settings fields.
	// If target is omitted, writes into ajaxSettings.
	ajaxSetup: function( target, settings ) {
		return settings ?

			// Building a settings object
			ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :

			// Extending ajaxSettings
			ajaxExtend( jQuery.ajaxSettings, target );
	},

	ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
	ajaxTransport: addToPrefiltersOrTransports( transports ),

	// Main method
	ajax: function( url, options ) {

		// If url is an object, simulate pre-1.5 signature
		if ( typeof url === "object" ) {
			options = url;
			url = undefined;
		}

		// Force options to be an object
		options = options || {};

		var transport,

			// URL without anti-cache param
			cacheURL,

			// Response headers
			responseHeadersString,
			responseHeaders,

			// timeout handle
			timeoutTimer,

			// Url cleanup var
			urlAnchor,

			// Request state (becomes false upon send and true upon completion)
			completed,

			// To know if global events are to be dispatched
			fireGlobals,

			// Loop variable
			i,

			// uncached part of the url
			uncached,

			// Create the final options object
			s = jQuery.ajaxSetup( {}, options ),

			// Callbacks context
			callbackContext = s.context || s,

			// Context for global events is callbackContext if it is a DOM node or jQuery collection
			globalEventContext = s.context &&
				( callbackContext.nodeType || callbackContext.jquery ) ?
					jQuery( callbackContext ) :
					jQuery.event,

			// Deferreds
			deferred = jQuery.Deferred(),
			completeDeferred = jQuery.Callbacks( "once memory" ),

			// Status-dependent callbacks
			statusCode = s.statusCode || {},

			// Headers (they are sent all at once)
			requestHeaders = {},
			requestHeadersNames = {},

			// Default abort message
			strAbort = "canceled",

			// Fake xhr
			jqXHR = {
				readyState: 0,

				// Builds headers hashtable if needed
				getResponseHeader: function( key ) {
					var match;
					if ( completed ) {
						if ( !responseHeaders ) {
							responseHeaders = {};
							while ( ( match = rheaders.exec( responseHeadersString ) ) ) {
								responseHeaders[ match[ 1 ].toLowerCase() ] = match[ 2 ];
							}
						}
						match = responseHeaders[ key.toLowerCase() ];
					}
					return match == null ? null : match;
				},

				// Raw string
				getAllResponseHeaders: function() {
					return completed ? responseHeadersString : null;
				},

				// Caches the header
				setRequestHeader: function( name, value ) {
					if ( completed == null ) {
						name = requestHeadersNames[ name.toLowerCase() ] =
							requestHeadersNames[ name.toLowerCase() ] || name;
						requestHeaders[ name ] = value;
					}
					return this;
				},

				// Overrides response content-type header
				overrideMimeType: function( type ) {
					if ( completed == null ) {
						s.mimeType = type;
					}
					return this;
				},

				// Status-dependent callbacks
				statusCode: function( map ) {
					var code;
					if ( map ) {
						if ( completed ) {

							// Execute the appropriate callbacks
							jqXHR.always( map[ jqXHR.status ] );
						} else {

							// Lazy-add the new callbacks in a way that preserves old ones
							for ( code in map ) {
								statusCode[ code ] = [ statusCode[ code ], map[ code ] ];
							}
						}
					}
					return this;
				},

				// Cancel the request
				abort: function( statusText ) {
					var finalText = statusText || strAbort;
					if ( transport ) {
						transport.abort( finalText );
					}
					done( 0, finalText );
					return this;
				}
			};

		// Attach deferreds
		deferred.promise( jqXHR );

		// Add protocol if not provided (prefilters might expect it)
		// Handle falsy url in the settings object (#10093: consistency with old signature)
		// We also use the url parameter if available
		s.url = ( ( url || s.url || location.href ) + "" )
			.replace( rprotocol, location.protocol + "//" );

		// Alias method option to type as per ticket #12004
		s.type = options.method || options.type || s.method || s.type;

		// Extract dataTypes list
		s.dataTypes = ( s.dataType || "*" ).toLowerCase().match( rnothtmlwhite ) || [ "" ];

		// A cross-domain request is in order when the origin doesn't match the current origin.
		if ( s.crossDomain == null ) {
			urlAnchor = document.createElement( "a" );

			// Support: IE <=8 - 11, Edge 12 - 13
			// IE throws exception on accessing the href property if url is malformed,
			// e.g. http://example.com:80x/
			try {
				urlAnchor.href = s.url;

				// Support: IE <=8 - 11 only
				// Anchor's host property isn't correctly set when s.url is relative
				urlAnchor.href = urlAnchor.href;
				s.crossDomain = originAnchor.protocol + "//" + originAnchor.host !==
					urlAnchor.protocol + "//" + urlAnchor.host;
			} catch ( e ) {

				// If there is an error parsing the URL, assume it is crossDomain,
				// it can be rejected by the transport if it is invalid
				s.crossDomain = true;
			}
		}

		// Convert data if not already a string
		if ( s.data && s.processData && typeof s.data !== "string" ) {
			s.data = jQuery.param( s.data, s.traditional );
		}

		// Apply prefilters
		inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

		// If request was aborted inside a prefilter, stop there
		if ( completed ) {
			return jqXHR;
		}

		// We can fire global events as of now if asked to
		// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)
		fireGlobals = jQuery.event && s.global;

		// Watch for a new set of requests
		if ( fireGlobals && jQuery.active++ === 0 ) {
			jQuery.event.trigger( "ajaxStart" );
		}

		// Uppercase the type
		s.type = s.type.toUpperCase();

		// Determine if request has content
		s.hasContent = !rnoContent.test( s.type );

		// Save the URL in case we're toying with the If-Modified-Since
		// and/or If-None-Match header later on
		// Remove hash to simplify url manipulation
		cacheURL = s.url.replace( rhash, "" );

		// More options handling for requests with no content
		if ( !s.hasContent ) {

			// Remember the hash so we can put it back
			uncached = s.url.slice( cacheURL.length );

			// If data is available, append data to url
			if ( s.data ) {
				cacheURL += ( rquery.test( cacheURL ) ? "&" : "?" ) + s.data;

				// #9682: remove data so that it's not used in an eventual retry
				delete s.data;
			}

			// Add or update anti-cache param if needed
			if ( s.cache === false ) {
				cacheURL = cacheURL.replace( rantiCache, "$1" );
				uncached = ( rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + ( nonce++ ) + uncached;
			}

			// Put hash and anti-cache on the URL that will be requested (gh-1732)
			s.url = cacheURL + uncached;

		// Change '%20' to '+' if this is encoded form body content (gh-2658)
		} else if ( s.data && s.processData &&
			( s.contentType || "" ).indexOf( "application/x-www-form-urlencoded" ) === 0 ) {
			s.data = s.data.replace( r20, "+" );
		}

		// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
		if ( s.ifModified ) {
			if ( jQuery.lastModified[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );
			}
			if ( jQuery.etag[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );
			}
		}

		// Set the correct header, if data is being sent
		if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
			jqXHR.setRequestHeader( "Content-Type", s.contentType );
		}

		// Set the Accepts header for the server, depending on the dataType
		jqXHR.setRequestHeader(
			"Accept",
			s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?
				s.accepts[ s.dataTypes[ 0 ] ] +
					( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
				s.accepts[ "*" ]
		);

		// Check for headers option
		for ( i in s.headers ) {
			jqXHR.setRequestHeader( i, s.headers[ i ] );
		}

		// Allow custom headers/mimetypes and early abort
		if ( s.beforeSend &&
			( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {

			// Abort if not done already and return
			return jqXHR.abort();
		}

		// Aborting is no longer a cancellation
		strAbort = "abort";

		// Install callbacks on deferreds
		completeDeferred.add( s.complete );
		jqXHR.done( s.success );
		jqXHR.fail( s.error );

		// Get transport
		transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

		// If no transport, we auto-abort
		if ( !transport ) {
			done( -1, "No Transport" );
		} else {
			jqXHR.readyState = 1;

			// Send global event
			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
			}

			// If request was aborted inside ajaxSend, stop there
			if ( completed ) {
				return jqXHR;
			}

			// Timeout
			if ( s.async && s.timeout > 0 ) {
				timeoutTimer = window.setTimeout( function() {
					jqXHR.abort( "timeout" );
				}, s.timeout );
			}

			try {
				completed = false;
				transport.send( requestHeaders, done );
			} catch ( e ) {

				// Rethrow post-completion exceptions
				if ( completed ) {
					throw e;
				}

				// Propagate others as results
				done( -1, e );
			}
		}

		// Callback for when everything is done
		function done( status, nativeStatusText, responses, headers ) {
			var isSuccess, success, error, response, modified,
				statusText = nativeStatusText;

			// Ignore repeat invocations
			if ( completed ) {
				return;
			}

			completed = true;

			// Clear timeout if it exists
			if ( timeoutTimer ) {
				window.clearTimeout( timeoutTimer );
			}

			// Dereference transport for early garbage collection
			// (no matter how long the jqXHR object will be used)
			transport = undefined;

			// Cache response headers
			responseHeadersString = headers || "";

			// Set readyState
			jqXHR.readyState = status > 0 ? 4 : 0;

			// Determine if successful
			isSuccess = status >= 200 && status < 300 || status === 304;

			// Get response data
			if ( responses ) {
				response = ajaxHandleResponses( s, jqXHR, responses );
			}

			// Convert no matter what (that way responseXXX fields are always set)
			response = ajaxConvert( s, response, jqXHR, isSuccess );

			// If successful, handle type chaining
			if ( isSuccess ) {

				// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
				if ( s.ifModified ) {
					modified = jqXHR.getResponseHeader( "Last-Modified" );
					if ( modified ) {
						jQuery.lastModified[ cacheURL ] = modified;
					}
					modified = jqXHR.getResponseHeader( "etag" );
					if ( modified ) {
						jQuery.etag[ cacheURL ] = modified;
					}
				}

				// if no content
				if ( status === 204 || s.type === "HEAD" ) {
					statusText = "nocontent";

				// if not modified
				} else if ( status === 304 ) {
					statusText = "notmodified";

				// If we have data, let's convert it
				} else {
					statusText = response.state;
					success = response.data;
					error = response.error;
					isSuccess = !error;
				}
			} else {

				// Extract error from statusText and normalize for non-aborts
				error = statusText;
				if ( status || !statusText ) {
					statusText = "error";
					if ( status < 0 ) {
						status = 0;
					}
				}
			}

			// Set data for the fake xhr object
			jqXHR.status = status;
			jqXHR.statusText = ( nativeStatusText || statusText ) + "";

			// Success/Error
			if ( isSuccess ) {
				deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
			} else {
				deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
			}

			// Status-dependent callbacks
			jqXHR.statusCode( statusCode );
			statusCode = undefined;

			if ( fireGlobals ) {
				globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",
					[ jqXHR, s, isSuccess ? success : error ] );
			}

			// Complete
			completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );

			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );

				// Handle the global AJAX counter
				if ( !( --jQuery.active ) ) {
					jQuery.event.trigger( "ajaxStop" );
				}
			}
		}

		return jqXHR;
	},

	getJSON: function( url, data, callback ) {
		return jQuery.get( url, data, callback, "json" );
	},

	getScript: function( url, callback ) {
		return jQuery.get( url, undefined, callback, "script" );
	}
} );

jQuery.each( [ "get", "post" ], function( i, method ) {
	jQuery[ method ] = function( url, data, callback, type ) {

		// Shift arguments if data argument was omitted
		if ( jQuery.isFunction( data ) ) {
			type = type || callback;
			callback = data;
			data = undefined;
		}

		// The url can be an options object (which then must have .url)
		return jQuery.ajax( jQuery.extend( {
			url: url,
			type: method,
			dataType: type,
			data: data,
			success: callback
		}, jQuery.isPlainObject( url ) && url ) );
	};
} );


jQuery._evalUrl = function( url ) {
	return jQuery.ajax( {
		url: url,

		// Make this explicit, since user can override this through ajaxSetup (#11264)
		type: "GET",
		dataType: "script",
		cache: true,
		async: false,
		global: false,
		"throws": true
	} );
};


jQuery.fn.extend( {
	wrapAll: function( html ) {
		var wrap;

		if ( this[ 0 ] ) {
			if ( jQuery.isFunction( html ) ) {
				html = html.call( this[ 0 ] );
			}

			// The elements to wrap the target around
			wrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );

			if ( this[ 0 ].parentNode ) {
				wrap.insertBefore( this[ 0 ] );
			}

			wrap.map( function() {
				var elem = this;

				while ( elem.firstElementChild ) {
					elem = elem.firstElementChild;
				}

				return elem;
			} ).append( this );
		}

		return this;
	},

	wrapInner: function( html ) {
		if ( jQuery.isFunction( html ) ) {
			return this.each( function( i ) {
				jQuery( this ).wrapInner( html.call( this, i ) );
			} );
		}

		return this.each( function() {
			var self = jQuery( this ),
				contents = self.contents();

			if ( contents.length ) {
				contents.wrapAll( html );

			} else {
				self.append( html );
			}
		} );
	},

	wrap: function( html ) {
		var isFunction = jQuery.isFunction( html );

		return this.each( function( i ) {
			jQuery( this ).wrapAll( isFunction ? html.call( this, i ) : html );
		} );
	},

	unwrap: function( selector ) {
		this.parent( selector ).not( "body" ).each( function() {
			jQuery( this ).replaceWith( this.childNodes );
		} );
		return this;
	}
} );


jQuery.expr.pseudos.hidden = function( elem ) {
	return !jQuery.expr.pseudos.visible( elem );
};
jQuery.expr.pseudos.visible = function( elem ) {
	return !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );
};




jQuery.ajaxSettings.xhr = function() {
	try {
		return new window.XMLHttpRequest();
	} catch ( e ) {}
};

var xhrSuccessStatus = {

		// File protocol always yields status code 0, assume 200
		0: 200,

		// Support: IE <=9 only
		// #1450: sometimes IE returns 1223 when it should be 204
		1223: 204
	},
	xhrSupported = jQuery.ajaxSettings.xhr();

support.cors = !!xhrSupported && ( "withCredentials" in xhrSupported );
support.ajax = xhrSupported = !!xhrSupported;

jQuery.ajaxTransport( function( options ) {
	var callback, errorCallback;

	// Cross domain only allowed if supported through XMLHttpRequest
	if ( support.cors || xhrSupported && !options.crossDomain ) {
		return {
			send: function( headers, complete ) {
				var i,
					xhr = options.xhr();

				xhr.open(
					options.type,
					options.url,
					options.async,
					options.username,
					options.password
				);

				// Apply custom fields if provided
				if ( options.xhrFields ) {
					for ( i in options.xhrFields ) {
						xhr[ i ] = options.xhrFields[ i ];
					}
				}

				// Override mime type if needed
				if ( options.mimeType && xhr.overrideMimeType ) {
					xhr.overrideMimeType( options.mimeType );
				}

				// X-Requested-With header
				// For cross-domain requests, seeing as conditions for a preflight are
				// akin to a jigsaw puzzle, we simply never set it to be sure.
				// (it can always be set on a per-request basis or even using ajaxSetup)
				// For same-domain requests, won't change header if already provided.
				if ( !options.crossDomain && !headers[ "X-Requested-With" ] ) {
					headers[ "X-Requested-With" ] = "XMLHttpRequest";
				}

				// Set headers
				for ( i in headers ) {
					xhr.setRequestHeader( i, headers[ i ] );
				}

				// Callback
				callback = function( type ) {
					return function() {
						if ( callback ) {
							callback = errorCallback = xhr.onload =
								xhr.onerror = xhr.onabort = xhr.onreadystatechange = null;

							if ( type === "abort" ) {
								xhr.abort();
							} else if ( type === "error" ) {

								// Support: IE <=9 only
								// On a manual native abort, IE9 throws
								// errors on any property access that is not readyState
								if ( typeof xhr.status !== "number" ) {
									complete( 0, "error" );
								} else {
									complete(

										// File: protocol always yields status 0; see #8605, #14207
										xhr.status,
										xhr.statusText
									);
								}
							} else {
								complete(
									xhrSuccessStatus[ xhr.status ] || xhr.status,
									xhr.statusText,

									// Support: IE <=9 only
									// IE9 has no XHR2 but throws on binary (trac-11426)
									// For XHR2 non-text, let the caller handle it (gh-2498)
									( xhr.responseType || "text" ) !== "text"  ||
									typeof xhr.responseText !== "string" ?
										{ binary: xhr.response } :
										{ text: xhr.responseText },
									xhr.getAllResponseHeaders()
								);
							}
						}
					};
				};

				// Listen to events
				xhr.onload = callback();
				errorCallback = xhr.onerror = callback( "error" );

				// Support: IE 9 only
				// Use onreadystatechange to replace onabort
				// to handle uncaught aborts
				if ( xhr.onabort !== undefined ) {
					xhr.onabort = errorCallback;
				} else {
					xhr.onreadystatechange = function() {

						// Check readyState before timeout as it changes
						if ( xhr.readyState === 4 ) {

							// Allow onerror to be called first,
							// but that will not handle a native abort
							// Also, save errorCallback to a variable
							// as xhr.onerror cannot be accessed
							window.setTimeout( function() {
								if ( callback ) {
									errorCallback();
								}
							} );
						}
					};
				}

				// Create the abort callback
				callback = callback( "abort" );

				try {

					// Do send the request (this may raise an exception)
					xhr.send( options.hasContent && options.data || null );
				} catch ( e ) {

					// #14683: Only rethrow if this hasn't been notified as an error yet
					if ( callback ) {
						throw e;
					}
				}
			},

			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)
jQuery.ajaxPrefilter( function( s ) {
	if ( s.crossDomain ) {
		s.contents.script = false;
	}
} );

// Install script dataType
jQuery.ajaxSetup( {
	accepts: {
		script: "text/javascript, application/javascript, " +
			"application/ecmascript, application/x-ecmascript"
	},
	contents: {
		script: /\b(?:java|ecma)script\b/
	},
	converters: {
		"text script": function( text ) {
			jQuery.globalEval( text );
			return text;
		}
	}
} );

// Handle cache's special case and crossDomain
jQuery.ajaxPrefilter( "script", function( s ) {
	if ( s.cache === undefined ) {
		s.cache = false;
	}
	if ( s.crossDomain ) {
		s.type = "GET";
	}
} );

// Bind script tag hack transport
jQuery.ajaxTransport( "script", function( s ) {

	// This transport only deals with cross domain requests
	if ( s.crossDomain ) {
		var script, callback;
		return {
			send: function( _, complete ) {
				script = jQuery( "<script>" ).prop( {
					charset: s.scriptCharset,
					src: s.url
				} ).on(
					"load error",
					callback = function( evt ) {
						script.remove();
						callback = null;
						if ( evt ) {
							complete( evt.type === "error" ? 404 : 200, evt.type );
						}
					}
				);

				// Use native DOM manipulation to avoid our domManip AJAX trickery
				document.head.appendChild( script[ 0 ] );
			},
			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




var oldCallbacks = [],
	rjsonp = /(=)\?(?=&|$)|\?\?/;

// Default jsonp settings
jQuery.ajaxSetup( {
	jsonp: "callback",
	jsonpCallback: function() {
		var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( nonce++ ) );
		this[ callback ] = true;
		return callback;
	}
} );

// Detect, normalize options and install callbacks for jsonp requests
jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

	var callbackName, overwritten, responseContainer,
		jsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?
			"url" :
			typeof s.data === "string" &&
				( s.contentType || "" )
					.indexOf( "application/x-www-form-urlencoded" ) === 0 &&
				rjsonp.test( s.data ) && "data"
		);

	// Handle iff the expected data type is "jsonp" or we have a parameter to set
	if ( jsonProp || s.dataTypes[ 0 ] === "jsonp" ) {

		// Get callback name, remembering preexisting value associated with it
		callbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?
			s.jsonpCallback() :
			s.jsonpCallback;

		// Insert callback into url or form data
		if ( jsonProp ) {
			s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$1" + callbackName );
		} else if ( s.jsonp !== false ) {
			s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
		}

		// Use data converter to retrieve json after script execution
		s.converters[ "script json" ] = function() {
			if ( !responseContainer ) {
				jQuery.error( callbackName + " was not called" );
			}
			return responseContainer[ 0 ];
		};

		// Force json dataType
		s.dataTypes[ 0 ] = "json";

		// Install callback
		overwritten = window[ callbackName ];
		window[ callbackName ] = function() {
			responseContainer = arguments;
		};

		// Clean-up function (fires after converters)
		jqXHR.always( function() {

			// If previous value didn't exist - remove it
			if ( overwritten === undefined ) {
				jQuery( window ).removeProp( callbackName );

			// Otherwise restore preexisting value
			} else {
				window[ callbackName ] = overwritten;
			}

			// Save back as free
			if ( s[ callbackName ] ) {

				// Make sure that re-using the options doesn't screw things around
				s.jsonpCallback = originalSettings.jsonpCallback;

				// Save the callback name for future use
				oldCallbacks.push( callbackName );
			}

			// Call if it was a function and we have a response
			if ( responseContainer && jQuery.isFunction( overwritten ) ) {
				overwritten( responseContainer[ 0 ] );
			}

			responseContainer = overwritten = undefined;
		} );

		// Delegate to script
		return "script";
	}
} );




// Support: Safari 8 only
// In Safari 8 documents created via document.implementation.createHTMLDocument
// collapse sibling forms: the second one becomes a child of the first one.
// Because of that, this security measure has to be disabled in Safari 8.
// https://bugs.webkit.org/show_bug.cgi?id=137337
support.createHTMLDocument = ( function() {
	var body = document.implementation.createHTMLDocument( "" ).body;
	body.innerHTML = "<form></form><form></form>";
	return body.childNodes.length === 2;
} )();


// Argument "data" should be string of html
// context (optional): If specified, the fragment will be created in this context,
// defaults to document
// keepScripts (optional): If true, will include scripts passed in the html string
jQuery.parseHTML = function( data, context, keepScripts ) {
	if ( typeof data !== "string" ) {
		return [];
	}
	if ( typeof context === "boolean" ) {
		keepScripts = context;
		context = false;
	}

	var base, parsed, scripts;

	if ( !context ) {

		// Stop scripts or inline event handlers from being executed immediately
		// by using document.implementation
		if ( support.createHTMLDocument ) {
			context = document.implementation.createHTMLDocument( "" );

			// Set the base href for the created document
			// so any parsed elements with URLs
			// are based on the document's URL (gh-2965)
			base = context.createElement( "base" );
			base.href = document.location.href;
			context.head.appendChild( base );
		} else {
			context = document;
		}
	}

	parsed = rsingleTag.exec( data );
	scripts = !keepScripts && [];

	// Single tag
	if ( parsed ) {
		return [ context.createElement( parsed[ 1 ] ) ];
	}

	parsed = buildFragment( [ data ], context, scripts );

	if ( scripts && scripts.length ) {
		jQuery( scripts ).remove();
	}

	return jQuery.merge( [], parsed.childNodes );
};


/**
 * Load a url into a page
 */
jQuery.fn.load = function( url, params, callback ) {
	var selector, type, response,
		self = this,
		off = url.indexOf( " " );

	if ( off > -1 ) {
		selector = stripAndCollapse( url.slice( off ) );
		url = url.slice( 0, off );
	}

	// If it's a function
	if ( jQuery.isFunction( params ) ) {

		// We assume that it's the callback
		callback = params;
		params = undefined;

	// Otherwise, build a param string
	} else if ( params && typeof params === "object" ) {
		type = "POST";
	}

	// If we have elements to modify, make the request
	if ( self.length > 0 ) {
		jQuery.ajax( {
			url: url,

			// If "type" variable is undefined, then "GET" method will be used.
			// Make value of this field explicit since
			// user can override it through ajaxSetup method
			type: type || "GET",
			dataType: "html",
			data: params
		} ).done( function( responseText ) {

			// Save response for use in complete callback
			response = arguments;

			self.html( selector ?

				// If a selector was specified, locate the right elements in a dummy div
				// Exclude scripts to avoid IE 'Permission Denied' errors
				jQuery( "<div>" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :

				// Otherwise use the full result
				responseText );

		// If the request succeeds, this function gets "data", "status", "jqXHR"
		// but they are ignored because response was set above.
		// If it fails, this function gets "jqXHR", "status", "error"
		} ).always( callback && function( jqXHR, status ) {
			self.each( function() {
				callback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );
			} );
		} );
	}

	return this;
};




// Attach a bunch of functions for handling common AJAX events
jQuery.each( [
	"ajaxStart",
	"ajaxStop",
	"ajaxComplete",
	"ajaxError",
	"ajaxSuccess",
	"ajaxSend"
], function( i, type ) {
	jQuery.fn[ type ] = function( fn ) {
		return this.on( type, fn );
	};
} );




jQuery.expr.pseudos.animated = function( elem ) {
	return jQuery.grep( jQuery.timers, function( fn ) {
		return elem === fn.elem;
	} ).length;
};




/**
 * Gets a window from an element
 */
function getWindow( elem ) {
	return jQuery.isWindow( elem ) ? elem : elem.nodeType === 9 && elem.defaultView;
}

jQuery.offset = {
	setOffset: function( elem, options, i ) {
		var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,
			position = jQuery.css( elem, "position" ),
			curElem = jQuery( elem ),
			props = {};

		// Set position first, in-case top/left are set even on static elem
		if ( position === "static" ) {
			elem.style.position = "relative";
		}

		curOffset = curElem.offset();
		curCSSTop = jQuery.css( elem, "top" );
		curCSSLeft = jQuery.css( elem, "left" );
		calculatePosition = ( position === "absolute" || position === "fixed" ) &&
			( curCSSTop + curCSSLeft ).indexOf( "auto" ) > -1;

		// Need to be able to calculate position if either
		// top or left is auto and position is either absolute or fixed
		if ( calculatePosition ) {
			curPosition = curElem.position();
			curTop = curPosition.top;
			curLeft = curPosition.left;

		} else {
			curTop = parseFloat( curCSSTop ) || 0;
			curLeft = parseFloat( curCSSLeft ) || 0;
		}

		if ( jQuery.isFunction( options ) ) {

			// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)
			options = options.call( elem, i, jQuery.extend( {}, curOffset ) );
		}

		if ( options.top != null ) {
			props.top = ( options.top - curOffset.top ) + curTop;
		}
		if ( options.left != null ) {
			props.left = ( options.left - curOffset.left ) + curLeft;
		}

		if ( "using" in options ) {
			options.using.call( elem, props );

		} else {
			curElem.css( props );
		}
	}
};

jQuery.fn.extend( {
	offset: function( options ) {

		// Preserve chaining for setter
		if ( arguments.length ) {
			return options === undefined ?
				this :
				this.each( function( i ) {
					jQuery.offset.setOffset( this, options, i );
				} );
		}

		var docElem, win, rect, doc,
			elem = this[ 0 ];

		if ( !elem ) {
			return;
		}

		// Support: IE <=11 only
		// Running getBoundingClientRect on a
		// disconnected node in IE throws an error
		if ( !elem.getClientRects().length ) {
			return { top: 0, left: 0 };
		}

		rect = elem.getBoundingClientRect();

		// Make sure element is not hidden (display: none)
		if ( rect.width || rect.height ) {
			doc = elem.ownerDocument;
			win = getWindow( doc );
			docElem = doc.documentElement;

			return {
				top: rect.top + win.pageYOffset - docElem.clientTop,
				left: rect.left + win.pageXOffset - docElem.clientLeft
			};
		}

		// Return zeros for disconnected and hidden elements (gh-2310)
		return rect;
	},

	position: function() {
		if ( !this[ 0 ] ) {
			return;
		}

		var offsetParent, offset,
			elem = this[ 0 ],
			parentOffset = { top: 0, left: 0 };

		// Fixed elements are offset from window (parentOffset = {top:0, left: 0},
		// because it is its only offset parent
		if ( jQuery.css( elem, "position" ) === "fixed" ) {

			// Assume getBoundingClientRect is there when computed position is fixed
			offset = elem.getBoundingClientRect();

		} else {

			// Get *real* offsetParent
			offsetParent = this.offsetParent();

			// Get correct offsets
			offset = this.offset();
			if ( !jQuery.nodeName( offsetParent[ 0 ], "html" ) ) {
				parentOffset = offsetParent.offset();
			}

			// Add offsetParent borders
			parentOffset = {
				top: parentOffset.top + jQuery.css( offsetParent[ 0 ], "borderTopWidth", true ),
				left: parentOffset.left + jQuery.css( offsetParent[ 0 ], "borderLeftWidth", true )
			};
		}

		// Subtract parent offsets and element margins
		return {
			top: offset.top - parentOffset.top - jQuery.css( elem, "marginTop", true ),
			left: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true )
		};
	},

	// This method will return documentElement in the following cases:
	// 1) For the element inside the iframe without offsetParent, this method will return
	//    documentElement of the parent window
	// 2) For the hidden or detached element
	// 3) For body or html element, i.e. in case of the html node - it will return itself
	//
	// but those exceptions were never presented as a real life use-cases
	// and might be considered as more preferable results.
	//
	// This logic, however, is not guaranteed and can change at any point in the future
	offsetParent: function() {
		return this.map( function() {
			var offsetParent = this.offsetParent;

			while ( offsetParent && jQuery.css( offsetParent, "position" ) === "static" ) {
				offsetParent = offsetParent.offsetParent;
			}

			return offsetParent || documentElement;
		} );
	}
} );

// Create scrollLeft and scrollTop methods
jQuery.each( { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function( method, prop ) {
	var top = "pageYOffset" === prop;

	jQuery.fn[ method ] = function( val ) {
		return access( this, function( elem, method, val ) {
			var win = getWindow( elem );

			if ( val === undefined ) {
				return win ? win[ prop ] : elem[ method ];
			}

			if ( win ) {
				win.scrollTo(
					!top ? val : win.pageXOffset,
					top ? val : win.pageYOffset
				);

			} else {
				elem[ method ] = val;
			}
		}, method, val, arguments.length );
	};
} );

// Support: Safari <=7 - 9.1, Chrome <=37 - 49
// Add the top/left cssHooks using jQuery.fn.position
// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347
// getComputedStyle returns percent when specified for top/left/bottom/right;
// rather than make the css module depend on the offset module, just check for it here
jQuery.each( [ "top", "left" ], function( i, prop ) {
	jQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,
		function( elem, computed ) {
			if ( computed ) {
				computed = curCSS( elem, prop );

				// If curCSS returns percentage, fallback to offset
				return rnumnonpx.test( computed ) ?
					jQuery( elem ).position()[ prop ] + "px" :
					computed;
			}
		}
	);
} );


// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
	jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name },
		function( defaultExtra, funcName ) {

		// Margin is only for outerHeight, outerWidth
		jQuery.fn[ funcName ] = function( margin, value ) {
			var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
				extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );

			return access( this, function( elem, type, value ) {
				var doc;

				if ( jQuery.isWindow( elem ) ) {

					// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)
					return funcName.indexOf( "outer" ) === 0 ?
						elem[ "inner" + name ] :
						elem.document.documentElement[ "client" + name ];
				}

				// Get document width or height
				if ( elem.nodeType === 9 ) {
					doc = elem.documentElement;

					// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
					// whichever is greatest
					return Math.max(
						elem.body[ "scroll" + name ], doc[ "scroll" + name ],
						elem.body[ "offset" + name ], doc[ "offset" + name ],
						doc[ "client" + name ]
					);
				}

				return value === undefined ?

					// Get width or height on the element, requesting but not forcing parseFloat
					jQuery.css( elem, type, extra ) :

					// Set width or height on the element
					jQuery.style( elem, type, value, extra );
			}, type, chainable ? margin : undefined, chainable );
		};
	} );
} );


jQuery.fn.extend( {

	bind: function( types, data, fn ) {
		return this.on( types, null, data, fn );
	},
	unbind: function( types, fn ) {
		return this.off( types, null, fn );
	},

	delegate: function( selector, types, data, fn ) {
		return this.on( types, selector, data, fn );
	},
	undelegate: function( selector, types, fn ) {

		// ( namespace ) or ( selector, types [, fn] )
		return arguments.length === 1 ?
			this.off( selector, "**" ) :
			this.off( types, selector || "**", fn );
	}
} );

jQuery.parseJSON = JSON.parse;




// Register as a named AMD module, since jQuery can be concatenated with other
// files that may use define, but not via a proper concatenation script that
// understands anonymous AMD modules. A named AMD is safest and most robust
// way to register. Lowercase jquery is used because AMD module names are
// derived from file names, and jQuery is normally delivered in a lowercase
// file name. Do this after creating the global so that if an AMD module wants
// to call noConflict to hide this version of jQuery, it will work.

// Note that for maximum portability, libraries that are not jQuery should
// declare themselves as anonymous modules, and avoid setting a global if an
// AMD loader is present. jQuery is a special case. For more information, see
// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon

if ( typeof define === "function" && define.amd ) {
	define( "jquery", [], function() {
		return jQuery;
	} );
}




var

	// Map over jQuery in case of overwrite
	_jQuery = window.jQuery,

	// Map over the $ in case of overwrite
	_$ = window.$;

jQuery.noConflict = function( deep ) {
	if ( window.$ === jQuery ) {
		window.$ = _$;
	}

	if ( deep && window.jQuery === jQuery ) {
		window.jQuery = _jQuery;
	}

	return jQuery;
};

// Expose jQuery and $ identifiers, even in AMD
// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)
// and CommonJS for browser emulators (#13566)
if ( !noGlobal ) {
	window.jQuery = window.$ = jQuery;
}





return jQuery;
} );

},{}],27:[function(require,module,exports){
// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

},{}],28:[function(require,module,exports){
var template = require('../template')
var update = require('../update')

module.exports = {

        change: function(){  

          $('.fare').on('click', function(){

              console.log('click a Fahrenheit')
               jQuery(this).addClass('point')
               $(this).prev().removeClass('point')
               $(this).closest('.ChangeTemp').next().addClass('hide')
               $(this).closest('.ChangeTemp').nextAll('.tempsF').removeClass('hide')
                 
              $(this).closest('.ChangeTemp').prev().find('.Fahrenheit').removeClass('hide')
               $(this).closest('.ChangeTemp').prev().find('.centígrados').addClass('hide')
                 
            })



          $('.Celci').on('click', function(){
             jQuery(this).addClass('point')
             $(this).next().removeClass('point')
             $(this).closest('.ChangeTemp').next().removeClass('hide')
             $(this).closest('.ChangeTemp').nextAll('.tempsF').addClass('hide')

             $(this).closest('.ChangeTemp').prev().find('.centígrados').removeClass('hide')
             $(this).closest('.ChangeTemp').prev().find('.Fahrenheit').addClass('hide')
   
          })
      },  

     update: function(id) {

          $('.delete'+id).on('click', function(){
                   //var par = $(this).closest('.col-xs-1').prev().text()
             var cross = $(this)
             var place = cross.attr('id')
                   
                 
             if(localStorage.getItem('cities')){
                      
                var cities = JSON.parse(localStorage.cities)
                var index = cities.indexOf(place)
                cities.splice(index, 1)
                localStorage.setItem("cities", JSON.stringify(cities));
                cross.closest('.newClass').remove()

              }else{
                      
                console.Error('Error')
                    
              }
          })


       

        $('.update-c'+id).on('click', function(){
           var thi = $(this)
           var city = thi.attr('id')
           var id = thi.closest('.col-md-1').next().attr('id')
           var tipo = '1'
           update(id, city, tipo)


       })

       $('.update-co').on('click', function(){
         var id = $(this).closest('.col-md-1').next().attr('id')
         // console.log('click to fa-refresh '+id)
         var tipo = '2'
         update(id, null, tipo)

      })
          
     }

}




},{"../template":30,"../update":32}],29:[function(require,module,exports){
var template = require('./template')
var weatherCity = require('./weather.js') 



var cities =[]
module.exports = function localstorage(position, tipo){

  
   //  console.log('storage '+position.coords.latitude)

   
     
     
    if (tipo == '1'){


    
      localStorage.setItem('latitude',position.coords.latitude)
      localStorage.setItem('longitude',position.coords.longitude)

     }else if(tipo == '2' ){
       
     
           if(localStorage.getItem("cities")) {

                cities = JSON.parse(localStorage.cities);

            } else {
                console.log("Cities does not exist");
            }

            cities.push(position);
            localStorage.setItem("cities", JSON.stringify(cities));
     
    


     } else if(tipo == '3' && localStorage.length >= 3){

        citi = JSON.parse(localStorage.getItem("cities"))
        //$('#spiner').removeClass('hide')
        citi.forEach(function(oldData){

        weatherCity(oldData)

      })

      //function render(datas){

       

      //}
     //    var i;
     //    for (i = 0; i < localStorage.length; i++)   {
     //      var oldData =   localStorage.getItem(localStorage.key(i))
     //      weatherCity(oldData)
     //      console.log('old localStorage '+oldData)

     // }


     }




}
},{"./template":30,"./weather.js":33}],30:[function(require,module,exports){
var rf = require('./translate')

module.exports = function(data){

var el;
function render(data){


var tempInicial = data.main.temp
var FahreInit = tempInicial - parseInt(273.15) + parseInt(32) 
var Fahrenheit = parseFloat(FahreInit).toFixed(0)

var iconID = data.weather[0].icon
var humedad = data.main.humidity
icons(iconID)





 var template = '<row>'+
                '<div class="col-xs-12 col-sm-12 col-md-12"> <h3 style="margin-left: 15px; margin-bottom: 0px; margin-top: 0px;">'+data.weather[0].description+'</h3></div> '+
                '</row>'+
                '<div class="container-fluid" style="padding-left: 0px;">'+
                '<row>'+
                   '<div class="col-md-1 col-xs-3" style="padding-right: 0px; text-align: center"><i class="fa fa-'+icons(iconID)+' fa-3x" style="margin-top: 9px;" aria-hidden="true"></i></div>'+
                   '<div class="col-md-1 col-xs-2" style="padding-right: 0px; padding-left: 0px; display: table; text-align: center"><h1 style="margin: 0px;" class="centígrados" id="centígrados">'+cent(data.main.temp)+'</h1><h1  class="hide Fahrenheit"  style="margin: 0px;" id="Fahrenheit">'+Fahrenheit+'</h1></div>'+
                   '<div class="col-md-2 col-xs-4 ChangeTemp" style="padding-left: 8px;"><h4><a class="Celci point" style="color: whitesmoke;cursor: pointer;">ºC</a> | <a class="fare" style="color: whitesmoke;cursor: pointer;">ºF</a></h4></div>'+
                   '<div class="tempsC">'+
                   '<div class="col-md-9 col-xs-1 max-tC">Max '+cent(data.main.temp_max)+'</div>'+
                   '<div class="col-md-9 col-xs-1 min-tC">Min '+cent(data.main.temp_min)+'</div>'+
                   '</div>'+
                   '<div class="tempsF hide">'+
                   '<div class="col-md-9 col-xs-1 max-tF">Max '+farent(data.main.temp_max)+'</div>'+
                   '<div class="col-md-9 col-xs-1 min-tF">Min '+farent(data.main.temp_min)+'</div>'+
                   '</div>'+
                '</row>'+
                '</div>'+
                '<p style="color: whitesmoke; margin-left: 33px">Humidity '+humedad+' %</p>'+
                '<p style="color: whitesmoke; margin-left: 33px" class="time">Now</p>'
                          
      return template
  }



   

 

  
   

   var d  = new Date().getTime()
   setInterval(function(){
        var c = rf.date.format(d)
        $('.time').text(c)
       
     },90000)



   function cent(temperatura){
  
      var centInit = temperatura - parseInt(273.15) 
      var result   = parseFloat(centInit).toFixed(1)

      return result


   }

   function farent(temperatura){
      var FahreInit = temperatura - parseInt(273.15) + parseInt(32) 
      var Fahrenheit = parseFloat(FahreInit).toFixed(0)
      return Fahrenheit

   }

   function icons(iconID){

    switch (iconID) {
     case '01d':
       return 'sun-o'
     
     break;

     case '01n':
       return 'moon-o'
    
     break;

     case '02d':
     case '02n':
     case '03d':
     case '03n':
     case '04d':
     case '04n':
       return 'cloud'
    
     break;

     case '09d':
     case '09n':
     case '10d':
     case '10n':
       return 'tint'
     break;

     case '11d':
     case '11n':
       return 'bolt'
     break;

     case '13d':
     case '13n':
      return 'snowflake'
     break;

     case '50d':
     case '50n':
      return 'bars'
     break;

    }
	



   }


  el = render(data)
  
  return el;

}


},{"./translate":31}],31:[function(require,module,exports){
if (!window.Intl) {
    window.Intl = require('intl'); // polyfill for `Intl` voor safari
    require('intl/locale-data/jsonp/en-US.js')
    require('intl/locale-data/jsonp/es.js')
}
var IntlRelativeFormat = window.IntlRelativeFormat  = require('intl-relativeformat');


 
module.exports={ 

  date: new IntlRelativeFormat('en-US')

//date = new IntlRelativeFormat('en-US')

}



},{"intl":22,"intl-relativeformat":16,"intl/locale-data/jsonp/en-US.js":24,"intl/locale-data/jsonp/es.js":25}],32:[function(require,module,exports){
"use strict"

var config = require('./config');
var template = require('./template');
var changeTemplate = require('./changeTe.js')









var API_KEY = config.aws.accessKey
var API_WEATHER_URL = "http://api.openweathermap.org/data/2.5/weather?APPID="+API_KEY+"&";

 module.exports = function weatherCity(id, city, tipo){

    if(tipo == 1){

  	       $.getJSON(API_WEATHER_URL +"q="+city,  function getCurrentWeather(data){
        
                $('#'+id).html(template(data))
                changeTemplate()
                
  	    
  		
  	       })

   }else if(tipo == 2){

   	     var lat  = localStorage.getItem('latitude')
         var lon = localStorage.getItem('longitude')

         $.getJSON(API_WEATHER_URL + "lat=" + lat + "&lon=" + lon,  function getCurrentWeather(data){
                    
                $('#'+id).html(template(data))
              
                changeTemplate()
  	    
  		
  	      })
     //buttons()

   }
  
  
  }






},{"./changeTe.js":2,"./config":4,"./template":30}],33:[function(require,module,exports){
"use strict"

var config = require('./config')
var template = require('./template')
var buttons = require('./public/button.js')



var API_KEY = config.aws.accessKey
var API_KEY_TIME = config.aws.accessKeyTime



var API_WEATHER_URL = "http://api.openweathermap.org/data/2.5/weather?APPID="+API_KEY+"&";
//var API_ZONETIME  = "http://api.timezonedb.com/v2/list-time-zone?key="+API_KEY_TIME+"&"
var API_ZONETIME ="http://api.timezonedb.com/v2/list-time-zone?key=G8CRY6MRJHJQ&format=json&"


module.exports = function weatherCity(city){

 $.getJSON(API_WEATHER_URL +"q="+city, newCity  )
      
  
  

  function newCity(data){

  

    $.getJSON(API_ZONETIME +"country="+data.sys.country+"&zone=**",  function getCurrentWeather(time){
       // data.timeZone = time.zones[0].timestamp
        var theDate = new Date(time.zones[0].timestamp * 1000);
        var hora = theDate.getHours();
        var minutes = theDate.getMinutes()
        

        if(minutes < 9){


          var timeZone = hora+':0'+minutes

        }else{

          var timeZone = hora+':'+minutes

        }

      
        
        jQuery('#main-weather-city').append('<div class="newClass" style="border-top: 1px solid white;">'+
                                    '<row>'+
                                     '<div class="col-xs-11 col-sm-11 col-md-11"><h2 style="padding-left: 15px;">'+data.sys.country+'. '+data.name+'.      '+timeZone+'</h2></div>'+
                                     '</row>'+
                                    '<div class="col-xs-1 col-sm-1 col-md-1" style="margin-top: 15px"><i class="fa fa-times fa-2x delete'+data.id+'" id="'+city+'" aria-hidden="true"></i></div>'+
                                     '<div class="col-xs-1 col-sm-1 col-md-1" style="margin-top: 15px"><i class="fa fa-2x fa-refresh update-c'+data.id+'" id="'+city+'"  aria-hidden="true"></i></div>'+
                                     '<div id="'+data.id+'">'+template(data)+'</div>'+
                                    
                                     '</div>'
                                    )
        buttons.update(data.id)
        buttons.change()
        $('#spiner').addClass('hide')
        return data;

   })



  

  }
 





}

 
},{"./config":4,"./public/button.js":28,"./template":30}]},{},[1]);
